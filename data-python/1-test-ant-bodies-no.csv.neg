 begin_comment set to true if modifying java source files param javafiles whether modifying java files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set javafiles end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name javafiles end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filter end_name begin_operator DOT end_operator begin_name set javafiles end_name end_name begin_argument_list begin_argument begin_expr begin_name javafiles end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the from attribute param from the string to replace end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set from end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name from end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name from end_name end_name begin_operator EQ end_operator begin_name from end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this is an override point the message that indicates whether a build failed subclasses can change enhance the message return the classic build failed end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get build failed message end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment if true output from the rpm build command will only be logged to debug param value code false code if output should be logged otherwise code true code the default is code false code since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set quiet end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name quiet end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment copies all properties from the given table to the new project omitting those that have already been set in the new project as well as properties named basedir or ant file param props properties code hashtable code to copy to the new project since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add almost all end_name begin_parameter_list begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name props end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key end_name begin_init begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name project basedir end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant file end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment basedir and ant file get special treatment in execute end_comment begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment don t re set user properties avoid the warning message end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name new project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment no user property end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name new project end_name begin_operator DOT end_operator begin_name set new property end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while end_block 
 begin_comment returns the contains string return the contains string for this element end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name value end_name end_expr end_return end_block 
 begin_comment indicate whether this entry is a directory param dir flag if true this entry is a directory since 1 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set directory end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name dir flag end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dir flag end_name end_name begin_operator EQ end_operator begin_name dir flag end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name mode end_name begin_operator EQ end_operator begin_call begin_name get mode end_name begin_argument_list begin_argument begin_expr begin_name mode end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns a fully configured file name mapper implementation return a file name mapper object to be configured throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name file name mapper end_name end_type begin_name get implementation end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get implementation end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name type end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name classname end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name container end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name container end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name container end_name end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name type end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name classname end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name file name mapper end_name end_type begin_name m end_name begin_init begin_expr begin_call begin_name file name mapper end_name begin_argument_list begin_argument begin_expr begin_call begin_name get implementation class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name new instance end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name p end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set project reference end_name end_name begin_argument_list begin_argument begin_expr begin_name m end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set from end_name end_name begin_argument_list begin_argument begin_expr begin_name from end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr begin_name to end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name m end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_name be end_name end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name format error end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name type end_name end_decl end_param begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_synchronized begin_expr begin_name wri end_name end_expr begin_block begin_if begin_condition begin_expr begin_name test end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name end test end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name failed end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name wri end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name type end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name wri end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name strace end_name begin_init begin_expr begin_call begin_name begin_name j unit test runner end_name begin_operator DOT end_operator begin_name get filtered trace end_name end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name wri end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name strace end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name wri end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_synchronized end_block 
 begin_comment add the nested tokenizer to this tokens resource collection a line tokenizer will be used by default param tokenizer the tokenizer to add end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name tokenizer end_name end_type begin_name tokenizer end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name tokenizer end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name tokenizer end_name end_name begin_operator EQ end_operator begin_name tokenizer end_name end_expr end_expr_stmt end_block 
 begin_comment implement a tail filter on a stream of lines line null is the end of the stream return while reading in the lines line while outputting the lines null at the end of outputting the lines end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name tail filter end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name completed read ahead end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name line end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name line list end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name lines end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name line list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_name skip end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name line list end_name begin_operator DOT end_operator begin_name remove first end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name lines to keep end_name begin_init begin_expr begin_name lines end_name begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name skip end_name begin_operator GT end_operator begin_operator QM end_operator begin_name skip end_name begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name lines to keep end_name begin_operator LT end_operator begin_call begin_name begin_name line list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name line list end_name begin_operator DOT end_operator begin_name remove first end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if begin_return begin_expr end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name completed read ahead end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name skip end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name skip end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name line list end_name begin_operator DOT end_operator begin_name remove last end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_name lines end_name begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_while begin_condition begin_expr begin_call begin_name begin_name line list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_name lines end_name end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name line list end_name begin_operator DOT end_operator begin_name remove first end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name line list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name line list end_name begin_operator DOT end_operator begin_name remove first end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment execute task only if the lower case product name of the db matches this param rdbms the rdbms to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set rdbms end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name rdbms end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name rdbms end_name end_name begin_operator EQ end_operator begin_name rdbms end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test empty end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name parser supports end_name begin_operator DOT end_operator begin_name error no attributes end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name parser supports end_name begin_operator DOT end_operator begin_name error no attributes end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the regular expression this reference refers to in the given project check for circular references too param p project return resolved regular expression instance end_comment begin_type begin_specifier end_specifier begin_name regular expression end_name end_type begin_name get ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name regular expression end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment set the destination directory required param in dir the destination directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set destdir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name in dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dest dir end_name end_name begin_operator EQ end_operator begin_name in dir end_name end_expr end_expr_stmt end_block 
 begin_comment set the target count number for use as a condition param ell the long length to compare with end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set length end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name ell end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name length end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name long end_name begin_argument_list begin_argument begin_expr begin_name ell end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test uriroot end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute jsp compile end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment whether this task can deal with non file resources p lt copy gt can while lt move gt can t since we don t know how to remove non file resources p p this implementation returns true only if this task is lt copy gt any subclass of this class that also wants to support non file resources needs to override this method we need to do so for backwards compatibility reasons since we can t expect subclasses to support resources p return true if this task supports non file resources since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name supports non file resources end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name copy end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment finds the valid encoding values return a list of valid entries end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name auto end_name end_expr begin_operator UNP end_operator begin_expr begin_name mime end_name end_expr begin_operator UNP end_operator begin_expr begin_name uu end_name end_expr begin_operator UNP end_operator begin_expr begin_name plain end_name end_expr end_block end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name redirector element end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the extension directories that will be used during the compilation return the extension directories to be used end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name get extdirs end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name ext dirs end_name end_expr end_return end_block 
 begin_comment removes from a pattern all tokens to the right containing wildcards param input the input string return the leftmost part of the pattern without wildcards end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name rtrim wildcard tokens end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name input end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name tokens end_name begin_init begin_expr begin_call begin_name tokenize path as array end_name begin_argument_list begin_argument begin_expr begin_name input end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name tokens end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name has wildcards end_name begin_argument_list begin_argument begin_expr begin_name begin_name tokens end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_if begin_condition begin_expr begin_name i end_name begin_operator GT end_operator begin_operator UNP end_operator begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name tokens end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment construct an entry with a name an a link flag param name the entry name param link flag the entry link flag end_comment begin_specifier end_specifier begin_name tar entry end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name byte end_name end_type begin_name link flag end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name link flag end_name end_name begin_operator EQ end_operator begin_name link flag end_name end_expr end_expr_stmt end_block 
 begin_comment specify the user group and other modes in the standard unix fashion optional default 0755 p we use the strange name so this method doesn t appear in introspection helpers list of attribute setters p param mode a code int code value since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name integer set dir mode end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name mode end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name dir mode has been set end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dir mode end_name end_name begin_operator EQ end_operator begin_name begin_name unix stat end_name begin_operator DOT end_operator begin_name dir flag end_name end_name begin_operator UNP end_operator begin_name mode end_name end_expr end_expr_stmt end_block 
 begin_comment gets the name of the rcs file return name of the file end_comment begin_type begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_comment get the name of the root class return the name of the root class end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get classname end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name root class end_name end_expr end_return end_block 
 begin_comment get the size of this resource return the size as a long 0 if the resource does not exist for compatibility with java io file or unknown size if not known end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name long end_name end_type begin_name get size end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get size end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is exists end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name connect end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name contentlength end_name begin_init begin_expr begin_call begin_name begin_name conn end_name begin_operator DOT end_operator begin_name get content length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name close end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name contentlength end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_name unknown size end_name end_expr end_return end_block end_catch end_try end_block 
 begin_comment sets the initial site command attribute this attribute names a site command that will be executed immediately after connection param initial command the initial site command to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set initial site command end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name initial command end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name initial site command end_name end_name begin_operator EQ end_operator begin_name initial command end_name end_expr end_expr_stmt end_block 
 begin_comment test the code that validates the selector end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test validate end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name contains selector end_name end_type begin_name s end_name begin_init begin_expr begin_operator LPAR end_operator begin_name contains selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 1 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 1 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name contains selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name parameter end_name end_type begin_name param end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name parameter end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name parameter end_name begin_index end_index end_type begin_name params end_name begin_init begin_expr begin_block begin_expr begin_name param end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set parameters end_name end_name begin_argument_list begin_argument begin_expr begin_name params end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 2 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 2 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment get the properties used in the test return the properties end_comment begin_type begin_specifier end_specifier begin_name properties end_name end_type begin_name get properties end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name props end_name end_expr end_return end_block 
 begin_comment adds several file to be added into the output param files to add an array of files to add to the output end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add add files end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name files to add end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name files to add end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files to add end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name add add file end_name begin_argument_list begin_argument begin_expr begin_name begin_name files to add end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment do the strings all match the xml nmtoken production p otherwise they are not suitable as an enumerated attribute for example p param s the array of string to test return true if all the strings in the array math xml nmtoken end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name are nmtokens end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name dtd printer end_name begin_operator DOT end_operator begin_name are nmtokens end_name end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name string buffer end_name end_type begin_name create fifteen end_name begin_parameter_list end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name null pointer exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block 
 begin_comment set the alias in the keystore of the tsa to use param tsacert the cert alias end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set tsacert end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name tsacert end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name tsacert end_name end_name begin_operator EQ end_operator begin_name tsacert end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add cmp descriptor end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name descriptor end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmp descriptors end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name descriptor end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this is not allowed for chmod param skip ignored throws build exception always ant attribute ignore true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set skip empty filesets end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name skip end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task type end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment keep it simple stupid end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test transform end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name xsl end_name begin_init begin_expr begin_call begin_name get file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name liaison end_name begin_operator DOT end_operator begin_name set stylesheet end_name end_name begin_argument_list begin_argument begin_expr begin_name xsl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name liaison end_name begin_operator DOT end_operator begin_name add param end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name in end_name begin_init begin_expr begin_call begin_name get file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name out end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name delete on exit end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment just to be sure end_comment begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name liaison end_name begin_operator DOT end_operator begin_name transform end_name end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment declare global imports for namespaces in referenced metadata files param imports the imports string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set imports end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name imports end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name imports end_name end_name begin_operator EQ end_operator begin_name imports end_name end_expr end_expr_stmt end_block 
 begin_comment webapp test is currently broken because it picks up on the missing tld file and bails end_comment begin_comment public void test webapp throws exception execute target test webapp end_comment begin_comment run a target then verify the named file gets created param target description of parameter param javafile description of parameter exception exception trouble end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute jsp compile end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name javafile end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert java file created end_name begin_argument_list begin_argument begin_expr begin_name javafile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is tomcat 5 x end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name ant class loader end_name end_type begin_name l end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name l end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create class loader end_name begin_argument_list begin_argument begin_expr begin_call begin_name get classpath end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name l end_name begin_operator DOT end_operator begin_name load class end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name l end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name l end_name begin_operator DOT end_operator begin_name cleanup end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment similar method for this definition param obj another definition return true if the definitions are similar end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name similar end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name obj end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name same or similar end_name begin_argument_list begin_argument begin_expr begin_name obj end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment get the number of resources return the number of parts end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name parts end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_name begin_name parts end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_return end_block 
 begin_comment end of else end_comment begin_comment launch the generate client using java api throws build exception if there is an error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute java end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_if begin_condition begin_expr begin_name version end_name begin_operator EQT end_operator begin_name begin_name borland deployment tool end_name begin_operator DOT end_operator begin_name bes end_name end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name borland deployment tool end_name begin_operator DOT end_operator begin_name bas end_name end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name java end_name end_type begin_name exec task end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name exec task end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name java end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name set classname end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment classpath end_comment begin_comment add at the end of the classpath end_comment begin_comment the system classpath in order to find the tools jar file end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name set classpath end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name concat system classpath end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name set fork end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name debug end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment ejb jar file end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ejbjarfile end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment client jar file end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name clientjarfile end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment have to catch this because of the semantics of calling main end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment constructor which just delegates to the superconstructor param parent handler the handler which should be restored to the parser at the end of the element must not be code null code end_comment begin_specifier end_specifier begin_name description handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name project helper impl end_name end_type begin_name helper impl end_name end_decl end_param begin_param begin_decl begin_type begin_name document handler end_name end_type begin_name parent handler end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name helper impl end_name end_expr end_argument begin_argument begin_expr begin_name parent handler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor the unit enumerated type end_comment begin_specifier end_specifier begin_name unit end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name time table end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name millisecond end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name long end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name time table end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name second end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name long end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name time table end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name minute end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name long end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name time table end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name hour end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name long end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name time table end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name day end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name long end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator begin_operator STAR end_operator begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name time table end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name week end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name long end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator begin_operator STAR end_operator begin_operator STAR end_operator begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the destination directory to place converted files into param dest dir directory to place output file into end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dest end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dest dir end_name end_name begin_operator EQ end_operator begin_name dest dir end_name end_expr end_expr_stmt end_block 
 begin_comment collect the resources that are newer than the corresponding entries or missing in the original archive p if we are going to recreate the archive instead of updating it all resources should be considered as new if a single one is because of this subclasses overriding this method must call code super get resources to add code and indicate with the third arg if they already know that the archive is out of date p p this method first delegates to get non file set resource to add and then invokes the file set arg version all this to keep backwards compatibility for subclasses that don t know how to deal with non file set resource collections p param rcs the resource collections to grab resources from param zip file intended archive file may or may not exist param needs update whether we already know that the archive is out of date subclasses overriding this method are supposed to set this value correctly in their call to code super get resources to add code return an array of resources to add for each fileset passed in as well as a flag that indicates whether the archive is uptodate exception build exception if it likes since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name archive state end_name end_type begin_name get resources to add end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name resource collection end_name begin_index end_index end_name end_type begin_name rcs end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name zip file end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name needs update end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name array list end_name end_type begin_name filesets end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name array list end_name end_type begin_name rest end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name rcs end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name rcs end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator begin_name file set end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name rcs end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name rest end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name rcs end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for begin_decl_stmt begin_decl begin_type begin_name resource collection end_name begin_index end_index end_type begin_name rc end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name resource collection end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name rest end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name resource collection end_name begin_index begin_expr begin_call begin_name begin_name rest end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name archive state end_name end_type begin_name as end_name begin_init begin_expr begin_call begin_name get non file set resources to add end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument begin_argument begin_expr begin_name zip file end_name end_expr end_argument begin_argument begin_expr begin_name needs update end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file set end_name begin_index end_index end_type begin_name fs end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name file set end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name file set end_name begin_index begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name archive state end_name end_type begin_name as 2 end_name begin_init begin_expr begin_call begin_name get resources to add end_name begin_argument_list begin_argument begin_expr begin_name fs end_name end_expr end_argument begin_argument begin_expr begin_name zip file end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name as end_name begin_operator DOT end_operator begin_name is out of date end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name as end_name begin_operator DOT end_operator begin_name is out of date end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name as 2 end_name begin_operator DOT end_operator begin_name is out of date end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment bad luck there are resources in the filesets that make the archive out of date but not in the non fileset resources we need to rescan the non file sets to grab all of them now end_comment begin_expr_stmt begin_expr begin_name as end_name begin_operator EQ end_operator begin_call begin_name get non file set resources to add end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument begin_argument begin_expr begin_name zip file end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name resource end_name begin_index end_index begin_index end_index end_type begin_name to add end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name resource end_name begin_index begin_expr begin_name begin_name rcs end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_index begin_index end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name fs index end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name rest index end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name rcs end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name rcs end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator begin_name file set end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name to add end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name begin_name as 2 end_name begin_operator DOT end_operator begin_name get resources to add end_name end_name begin_argument_list end_argument_list end_call begin_index begin_expr begin_name fs index end_name begin_operator PPLUS end_operator end_expr end_index end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name begin_name to add end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name begin_name as end_name begin_operator DOT end_operator begin_name get resources to add end_name end_name begin_argument_list end_argument_list end_call begin_index begin_expr begin_name rest index end_name begin_operator PPLUS end_operator end_expr end_index end_expr end_expr_stmt end_block end_else end_if end_block end_for begin_return begin_expr begin_operator UNP end_operator begin_call begin_name archive state end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name as 2 end_name begin_operator DOT end_operator begin_name is out of date end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name to add end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_specifier end_specifier begin_name java 13 command launcher end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name no such method exception end_name end_expr end_argument end_throws begin_block begin_comment locate method runtime exec string cmdarray end_comment begin_comment string envp file dir end_comment begin_expr_stmt begin_expr begin_name my exec with cwd end_name begin_operator EQ end_operator begin_call begin_name begin_name runtime end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get method end_name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name string end_name begin_index end_index end_name begin_operator DOT end_operator end_expr begin_operator UNP end_operator begin_expr begin_name begin_name string end_name begin_index end_index end_name begin_operator DOT end_operator end_expr begin_operator UNP end_operator begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment see enumerated attribute get values end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name values end_name end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name planar image end_name end_type begin_name execute draw operation end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name buffered image end_name end_type begin_name bi end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered image end_name begin_argument_list begin_argument begin_expr begin_name width end_name begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name stroke width end_name begin_operator STAR end_operator begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr begin_name height end_name begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name stroke width end_name begin_operator STAR end_operator begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name buffered image end_name begin_operator DOT end_operator begin_name type 4 byte abgr pre end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name graphics 2 d end_name end_type begin_name graphics end_name begin_init begin_expr begin_operator LPAR end_operator begin_name graphics 2 d end_name begin_operator RPAR end_operator begin_call begin_name begin_name bi end_name begin_operator DOT end_operator begin_name get graphics end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name stroke end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name basic stroke end_name end_type begin_name b stroke end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name basic stroke end_name begin_argument_list begin_argument begin_expr begin_name stroke width end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name graphics end_name begin_operator DOT end_operator begin_name set color end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name color mapper end_name begin_operator DOT end_operator begin_name get color by name end_name end_name begin_argument_list begin_argument begin_expr begin_name stroke end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name graphics end_name begin_operator DOT end_operator begin_name set stroke end_name end_name begin_argument_list begin_argument begin_expr begin_name b stroke end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name graphics end_name begin_operator DOT end_operator begin_name draw end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name arc 2 d end_name begin_operator DOT end_operator begin_name double end_name end_name begin_argument_list begin_argument begin_expr begin_name stroke width end_name end_expr end_argument begin_argument begin_expr begin_name stroke width end_name end_expr end_argument begin_argument begin_expr begin_name width end_name end_expr end_argument begin_argument begin_expr begin_name height end_name end_expr end_argument begin_argument begin_expr begin_name start end_name end_expr end_argument begin_argument begin_expr begin_name stop end_name end_expr end_argument begin_argument begin_expr begin_name type end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name fill end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name graphics end_name begin_operator DOT end_operator begin_name set color end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name color mapper end_name begin_operator DOT end_operator begin_name get color by name end_name end_name begin_argument_list begin_argument begin_expr begin_name fill end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name graphics end_name begin_operator DOT end_operator begin_name fill end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name arc 2 d end_name begin_operator DOT end_operator begin_name double end_name end_name begin_argument_list begin_argument begin_expr begin_name stroke width end_name end_expr end_argument begin_argument begin_expr begin_name stroke width end_name end_expr end_argument begin_argument begin_expr begin_name width end_name end_expr end_argument begin_argument begin_expr begin_name height end_name end_expr end_argument begin_argument begin_expr begin_name start end_name end_expr end_argument begin_argument begin_expr begin_name stop end_name end_expr end_argument begin_argument begin_expr begin_name type end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name instructions end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name image operation end_name end_type begin_name instr end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name image operation end_name begin_operator RPAR end_operator begin_call begin_name begin_name instructions end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name instr end_name begin_operator UNP end_operator begin_name draw operation end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name planar image end_name end_type begin_name img end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name draw operation end_name begin_operator RPAR end_operator begin_name instr end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name execute draw operation end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name graphics end_name begin_operator DOT end_operator begin_name draw image end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name img end_name begin_operator DOT end_operator begin_name get as buffered image end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name instr end_name begin_operator UNP end_operator begin_name transform operation end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name graphics end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name graphics 2 d end_name begin_operator RPAR end_operator begin_call begin_name begin_name bi end_name begin_operator DOT end_operator begin_name get graphics end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name planar image end_name end_type begin_name image end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name transform operation end_name begin_operator RPAR end_operator begin_name instr end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name execute transform operation end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name planar image end_name begin_operator DOT end_operator begin_name wrap rendered image end_name end_name begin_argument_list begin_argument begin_expr begin_name bi end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name bi end_name begin_operator EQ end_operator begin_call begin_name begin_name image end_name begin_operator DOT end_operator begin_name get as buffered image end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_block end_for begin_return begin_expr begin_call begin_name begin_name planar image end_name begin_operator DOT end_operator begin_name wrap rendered image end_name end_name begin_argument_list begin_argument begin_expr begin_name bi end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name resource collection end_name end_type begin_name next rc end_name begin_parameter_list begin_param begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name resource collection end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment get the system properties object return the system properties object end_comment begin_type begin_specifier end_specifier begin_name sys properties end_name end_type begin_name get system properties end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name sys properties end_name end_expr end_return end_block 
 begin_comment the changelist to revert optional param revert change the change list to revert throws build exception if the change list is null or empty string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set change end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name revert change end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name revert change end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name revert change end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name revert change end_name end_name begin_operator EQ end_operator begin_name revert change end_name end_expr end_expr_stmt end_block 
 begin_comment set how to handle long files those with a path gt 100 chars optional default warn p allowable values are ul li truncate paths are truncated to the maximum length li fail paths greater than the maximum cause a build exception li warn paths greater than the maximum cause a warning and gnu is used li gnu gnu extensions are used for any paths greater than the maximum li omit paths greater than the maximum are omitted from the archive ul param mode the mode to handle long file names end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set longfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name tar long file mode end_name end_type begin_name mode end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name long file mode end_name end_name begin_operator EQ end_operator begin_name mode end_name end_expr end_expr_stmt end_block 
 begin_type begin_name void end_name end_type begin_name complete end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ps end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this method adds text which appears in the concat element param text the text to be concated end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add text end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name text buffer end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment initialize to the size of the first text fragment with end_comment begin_comment the hopes that it s the only one end_comment begin_expr_stmt begin_expr begin_name text buffer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name text end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment append the fragment we defer property replacement until end_comment begin_comment later just in case we get a partial property in a fragment end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name text buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the hashtable of targets the returned hashtable is quot live quot and so should not be modified return a map from name to target string to target end_comment begin_type begin_specifier end_specifier begin_name hashtable end_name end_type begin_name get targets end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name targets end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out end_name end_name begin_operator EQ end_operator begin_name out end_name end_expr end_expr_stmt end_block 
 begin_type begin_name string end_name end_type begin_name get errors end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte array output stream end_name end_type begin_name error end_name begin_init begin_expr begin_operator LPAR end_operator begin_name byte array output stream end_name begin_operator RPAR end_operator begin_call begin_name get err end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name error end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block end_catch end_try end_block 
 begin_comment where only an address is supplied end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name expect name address 3 end_name begin_parameter_list begin_param begin_decl begin_type begin_name email address end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get address end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for the empty enumeration end_comment begin_specifier end_specifier begin_name empty enumeration end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test clone end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name clone not supported exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name expected project end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name location end_name end_type begin_name expected location end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name location end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name expected description end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment use an anonymous subclass since project component is abstract end_comment begin_decl_stmt begin_decl begin_type begin_name project component end_name end_type begin_name pc end_name begin_init begin_expr begin_operator UNP end_operator begin_class begin_super begin_name project component end_name end_super begin_argument_list end_argument_list begin_block end_block end_class end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pc end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name expected project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pc end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_name expected location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pc end_name begin_operator DOT end_operator begin_name set description end_name end_name begin_argument_list begin_argument begin_expr begin_name expected description end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name project component end_name end_type begin_name cloned end_name begin_init begin_expr begin_operator LPAR end_operator begin_name project component end_name begin_operator RPAR end_operator begin_call begin_name begin_name pc end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not same end_name begin_argument_list begin_argument begin_expr begin_name pc end_name end_expr end_argument begin_argument begin_expr begin_name cloned end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert same end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cloned end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name expected project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert same end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cloned end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name expected location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert same end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cloned end_name begin_operator DOT end_operator begin_name get description end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name expected description end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment there is a better way to save the context this shouldn t end_comment begin_comment delegate to next it s for backward compatibility only end_comment begin_comment returns a copy of the user property hashtable return a hashtable containing just the user properties end_comment begin_type begin_specifier end_specifier begin_name hashtable end_name end_type begin_name get user properties end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list begin_argument begin_expr begin_name user properties end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment sets the number of lines to be skipped in the filtered stream param skip the number of lines to be skipped in the filtered stream end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set skip end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name skip end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name skip end_name end_name begin_operator EQ end_operator begin_name skip end_name end_expr end_expr_stmt end_block 
 begin_comment look if the file should be checked out don t check it out if it fits no include filters and it fits an exclude filter param p name the item name to look for being included return whether the file should be checked out or not end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name should checkout end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name p name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name include it end_name begin_init begin_expr begin_call begin_name match patterns end_name begin_argument_list begin_argument begin_expr begin_call begin_name get includes end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name p name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name exclude it end_name begin_init begin_expr begin_call begin_name match patterns end_name begin_argument_list begin_argument begin_expr begin_call begin_name get excludes end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name p name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator LPAR end_operator begin_name include it end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name exclude it end_name begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment set the title to be placed in the html lt title gt tag of the generated documentation param title the window title to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set windowtitle end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name title end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add arg if not empty end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name title end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set a multiline message param msg the cdata text to append to the output text end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add text end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name message end_name begin_operator UNP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace properties end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true and the file does not exist do not display a diagnostic message or modify the exit status to reflect an error this means that if a file or directory cannot be deleted then no error is reported this setting emulates the f option to the unix quot rm quot command default is false meaning things are quot noisy quot param quiet true or on end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set quiet end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name quiet end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name quiet end_name end_name begin_operator EQ end_operator begin_name quiet end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name quiet end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name failonerror end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment compare two resources param foo the first resource param bar the second resource return a negative integer zero or a positive integer as the first argument is less than equal to or greater than the second end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name resource compare end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name foo end_name end_decl end_param begin_param begin_decl begin_type begin_name resource end_name end_type begin_name bar end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name begin_name foo end_name begin_operator DOT end_operator begin_name is exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name f end_name begin_operator EQT end_operator begin_call begin_name begin_name bar end_name begin_operator DOT end_operator begin_name is exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_name f end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator MINUS end_operator end_expr end_return end_block 
 begin_comment returns the target that fired this event return the project that fired this event or code null code if this event is a project level event end_comment begin_type begin_specifier end_specifier begin_name target end_name end_type begin_name get target end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name target end_name end_expr end_return end_block 
 begin_comment adds a type selector to the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add type end_name begin_parameter_list begin_param begin_decl begin_type begin_name type selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment builds the arguments to pass to weblogic deploy for the list action return a string containing the full argument string for weblogic deploy end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name build list args end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name build args prefix end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 4 b end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr begin_name test build file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a name entry to the exclude list return code pattern set name entry code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name begin_name pattern set end_name begin_operator DOT end_operator begin_name name entry end_name end_name end_type begin_name create exclude end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name directory scanner end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name default patterns end_name begin_operator DOT end_operator begin_name create exclude end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment find out whether include exclude patterns are matched in a case sensitive way return whether or not the scanning is case sensitive since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is case sensitive end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name is case sensitive end_name end_expr end_return end_block 
 begin_comment sets the vector of words which must be contained within a line read from the original stream in order for it to match this filter param contains a vector of words which must be contained within a line in order for it to match in this filter must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set contains end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name contains end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_operator EQ end_operator begin_name contains end_name end_expr end_expr_stmt end_block 
 begin_comment set the end tag param s the end tag end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set end tag end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name myend tag end_name begin_operator EQ end_operator begin_name s end_name end_expr end_expr_stmt end_block 
 begin_comment fired when a task is started param event ignored see build event get task end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name create resource parameter end_name begin_parameter_list begin_param begin_decl begin_type begin_name net command end_name end_type begin_name command end_name end_decl end_param begin_param begin_decl begin_type begin_name dotnet resource end_name end_type begin_name resource end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name resource end_name begin_operator DOT end_operator begin_name get parameters end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name command end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test xmlns end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name fiddle name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name origin end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name icounter end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name icounter end_name begin_operator LT end_operator begin_call begin_name begin_name origin end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name icounter end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is lower case end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name origin end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name icounter end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name to upper case end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name origin end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name icounter end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is upper case end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name origin end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name icounter end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name origin end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name icounter end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name origin end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name icounter end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block end_for begin_return begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment convert a file path to an array of path components this uses file sepatator to split the file path string param the path the file path string to convert return an array of path components end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get path end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name the path end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name tokenizer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name the path end_name end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name path end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name count tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name begin_name path end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_name path end_name end_expr end_return end_block 
 begin_comment returns the buffer associated with the current thread return a buffer info for the current thread to write data to end_comment begin_type begin_specifier end_specifier begin_name buffer info end_name end_type begin_name get buffer info end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name current end_name begin_init begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name current thread end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name buffer info end_name end_type begin_name buffer info end_name begin_init begin_expr begin_operator LPAR end_operator begin_name buffer info end_name begin_operator RPAR end_operator begin_call begin_name begin_name buffers end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name current end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name buffer info end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name buffer info end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffer info end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name buffer info end_name begin_operator DOT end_operator begin_name buffer end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list begin_argument begin_expr begin_name intial size end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name buffer info end_name begin_operator DOT end_operator begin_name cr seen end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buffers end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name current end_name end_expr end_argument begin_argument begin_expr begin_name buffer info end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name buffer info end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns and initializes the classloader for this class return the classloader end_comment begin_type begin_specifier end_specifier begin_name class loader end_name end_type begin_name get class loader end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name my class loader end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name my class loader end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name classpath end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_comment the usual classloader end_comment begin_operator QM end_operator begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class loader end_name begin_argument_list end_argument_list end_call begin_comment additional use the provided classpath end_comment begin_operator DP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create class loader end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name my class loader end_name end_expr end_return end_block 
 begin_comment constructor used by ant s introspection mechanism the original filter reader is only used for chaining purposes never for filtering purposes and indeed it would be useless for filtering purposes as it has no real data to filter chained reader helper uses this placeholder instance to create a chain of real filters end_comment begin_specifier end_specifier begin_name base filter reader end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string reader end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment specify a branch to check out the file to param branch the name of the branch end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set branch end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name branch end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m branch end_name begin_operator EQ end_operator begin_name branch end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name basedir exists end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator end_expr end_return end_block 
 begin_comment indicates whether to attempt to resolve the executable to a file return the resolve executable flag since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get resolve executable end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name resolve executable end_name end_expr end_return end_block 
 begin_comment returns a file which references the class relative to the specified directory note that the class file may or may not exist param directory a file referencing the base directory containing class files return file referencing this class end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get class file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name directory end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path to file end_name begin_init begin_expr begin_call begin_name begin_name qualified name end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name directory end_name end_expr end_argument begin_argument begin_expr begin_name path to file end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment runs the task throws build exception if the task fails or is not configured correctly end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name ftp client end_name end_type begin_name ftp end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name server end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ftp end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name ftp client end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name is configuration set end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ftp end_name begin_operator EQ end_operator begin_call begin_name begin_name ftp configurator end_name begin_operator DOT end_operator begin_name configure end_name end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name connect end_name end_name begin_argument_list begin_argument begin_expr begin_name server end_name end_expr end_argument begin_argument begin_expr begin_name port end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name ftp reply end_name begin_operator DOT end_operator begin_name is positive completion end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name get reply code end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name get reply string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name account end_name end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name login end_name end_name begin_argument_list begin_argument begin_expr begin_name userid end_name end_expr end_argument begin_argument begin_expr begin_name password end_name end_expr end_argument begin_argument begin_expr begin_name account end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name account end_name end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name login end_name end_name begin_argument_list begin_argument begin_expr begin_name userid end_name end_expr end_argument begin_argument begin_expr begin_name password end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name binary end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name set file type end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name commons end_name begin_operator DOT end_operator begin_name net end_name begin_operator DOT end_operator begin_name ftp end_name begin_operator DOT end_operator begin_name ftp end_name begin_operator DOT end_operator begin_name image file type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name ftp reply end_name begin_operator DOT end_operator begin_name is positive completion end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name get reply code end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name get reply string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name set file type end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name commons end_name begin_operator DOT end_operator begin_name net end_name begin_operator DOT end_operator begin_name ftp end_name begin_operator DOT end_operator begin_name ftp end_name begin_operator DOT end_operator begin_name ascii file type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name ftp reply end_name begin_operator DOT end_operator begin_name is positive completion end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name get reply code end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name get reply string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_else end_if begin_if begin_condition begin_expr begin_name passive end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name enter local passive mode end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name ftp reply end_name begin_operator DOT end_operator begin_name is positive completion end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name get reply code end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name get reply string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_comment if an initial command was configured then send it end_comment begin_comment some ftp servers offer different modes of operation end_comment begin_comment e g switching between a unix file system mode and end_comment begin_comment a legacy file system end_comment begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name initial site command end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name retry handler end_name end_type begin_name h end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name retry handler end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name retries allowed end_name end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name ftp client end_name end_type begin_name lftp end_name begin_init begin_expr begin_name ftp end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name execute retryable end_name begin_argument_list begin_argument begin_expr begin_name h end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_class begin_super begin_name retryable end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name do site command end_name begin_argument_list begin_argument begin_expr begin_name lftp end_name end_expr end_argument begin_argument begin_expr begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name this end_name begin_operator DOT end_operator begin_name initial site command end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_function end_block end_class end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name initial site command end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment for a unix ftp server you can set the default mask for all files end_comment begin_comment created end_comment begin_if begin_condition begin_expr begin_name umask end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name retry handler end_name end_type begin_name h end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name retry handler end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name retries allowed end_name end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name ftp client end_name end_type begin_name lftp end_name begin_init begin_expr begin_name ftp end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name execute retryable end_name begin_argument_list begin_argument begin_expr begin_name h end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_class begin_super begin_name retryable end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name do site command end_name begin_argument_list begin_argument begin_expr begin_name lftp end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_name umask end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_function end_block end_class end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_name umask end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment if the action is mk dir then the specified remote end_comment begin_comment directory is the directory to create end_comment begin_if begin_condition begin_expr begin_name action end_name begin_operator EQT end_operator begin_name mk dir end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name retry handler end_name end_type begin_name h end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name retry handler end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name retries allowed end_name end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name ftp client end_name end_type begin_name lftp end_name begin_init begin_expr begin_name ftp end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name execute retryable end_name begin_argument_list begin_argument begin_expr begin_name h end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_class begin_super begin_name retryable end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name make remote dir end_name begin_argument_list begin_argument begin_expr begin_name lftp end_name end_expr end_argument begin_argument begin_expr begin_name remotedir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_function end_block end_class end_expr end_argument begin_argument begin_expr begin_name remotedir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name action end_name begin_operator EQT end_operator begin_name site cmd end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name retry handler end_name end_type begin_name h end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name retry handler end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name retries allowed end_name end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name ftp client end_name end_type begin_name lftp end_name begin_init begin_expr begin_name ftp end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name execute retryable end_name begin_argument_list begin_argument begin_expr begin_name h end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_class begin_super begin_name retryable end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name do site command end_name begin_argument_list begin_argument begin_expr begin_name lftp end_name end_expr end_argument begin_argument begin_expr begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name this end_name begin_operator DOT end_operator begin_name site command end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_function end_block end_class end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name site command end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name remotedir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name change working directory end_name end_name begin_argument_list begin_argument begin_expr begin_name remotedir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name ftp reply end_name begin_operator DOT end_operator begin_name is positive completion end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name get reply code end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name get reply string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name newer only end_name begin_operator UNP end_operator begin_name time diff auto end_name end_expr end_condition begin_then begin_block begin_comment in this case we want to find how much time span there is between local end_comment begin_comment and remote end_comment begin_expr_stmt begin_expr begin_name time diff millis end_name begin_operator EQ end_operator begin_call begin_name get time diff end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name begin_name action strs end_name begin_index begin_expr begin_name action end_name end_expr end_index end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name action target strs end_name begin_index begin_expr begin_name action end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name transfer files end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ex end_name end_expr end_argument begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name ftp end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name is connected end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name logout end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name disconnect end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_comment ignore it end_comment end_block end_catch end_try end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment add a classpath to the classpath being used by the analyzer the classpath contains the binary classfiles for the classes being analyzed the elements may either be the directories or jar files not all analyzers will use this information param class path the path instance specifying the classpath elements end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add class path end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name class path end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name class path end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name class path end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name class path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name class path end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name class path end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment executes the task throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name validate attributes end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name array list end_name end_type begin_name files list end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment deal with specified src dir end_comment begin_if begin_condition begin_expr begin_name src dir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ds end_name begin_operator EQ end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name src dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name files end_name begin_operator EQ end_operator begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name files list end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name src dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_comment deal with the filesets end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name ds end_name begin_operator EQ end_operator begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name files end_name begin_operator EQ end_operator begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name from dir end_name begin_init begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name files list end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name from dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_for begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name overwrite end_name end_expr end_condition begin_then begin_block begin_comment remove any files that shouldn t be overwritten end_comment begin_decl_stmt begin_decl begin_type begin_name array list end_name end_type begin_name files to remove end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name files list end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name new file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dest dir end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name new file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name files to remove end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name files list end_name begin_operator DOT end_operator begin_name remove all end_name end_name begin_argument_list begin_argument begin_expr begin_name files to remove end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment iterator through all the files and process them end_comment begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name files list end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name process file end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name garbage collect end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name gc end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name err end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name err end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name err end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment sets the filename of a win 32 resource res file to include this is not a net resource but what windows is used to param file name path to the file can be relative absolute whatever end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set win 32 res end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name win 32 res end_name begin_operator EQ end_operator begin_name file name end_name end_expr end_expr_stmt end_block 
 begin_comment cats the file created in test 3 three times end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 4 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test 3 end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name temp file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name orig size end_name begin_init begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name temp file 2 end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name new size end_name begin_init begin_expr begin_call begin_name begin_name file 2 end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name orig size end_name begin_operator STAR end_operator end_expr end_argument begin_argument begin_expr begin_name new size end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name class loader end_name end_type begin_name generate class loader end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name script loader end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name script loader end_name end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name cp delegate end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name script loader end_name begin_operator EQ end_operator begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class loader end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name script loader end_name end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name script loader end_name begin_operator EQ end_operator begin_call begin_name begin_name cp delegate end_name begin_operator DOT end_operator begin_name get class loader end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name script loader end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the href attribute return the href attribute end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get href end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name href end_name end_expr end_return end_block 
 begin_comment check style visibility modifier on end_comment begin_comment no arg constructor end_comment begin_specifier end_specifier begin_name j sharp end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set executable end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment determine root directory for a given file param file return file s root directory end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get root end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name root end_name begin_init begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute file end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name root end_name begin_operator DOT end_operator begin_name get parent end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name root end_name begin_operator EQ end_operator begin_call begin_name begin_name root end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_name root end_name end_expr end_return end_block 
 begin_comment the connection can be dropped after a specified number of milliseconds this is sometimes useful when a connection may be flaky default is 0 which means quot wait forever quot param timeout the new timeout value in seconds end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set timeout end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name timeout end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name maxwait end_name begin_operator EQ end_operator begin_name timeout end_name end_expr end_expr_stmt end_block 
 begin_comment process the descriptors in turn generating support classes for each and a manifest file for all of the beans end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name manifest end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name descriptors end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name descriptor name end_name begin_init begin_expr begin_name begin_name descriptors end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name descriptor file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name descriptor directory end_name end_expr end_argument begin_argument begin_expr begin_name descriptor name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name is regen required end_name begin_argument_list begin_argument begin_expr begin_name descriptor file end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name descriptor file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name regenerate support classes end_name begin_argument_list begin_argument begin_expr begin_name descriptor file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name descriptor file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name manifest end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_call begin_name begin_name descriptor name end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name file writer end_name end_type begin_name fw end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file writer end_name begin_argument_list begin_argument begin_expr begin_name manifest file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name print writer end_name end_type begin_name pw end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_name fw end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pw end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name manifest end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fw end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fw end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the filterchains being applied to this operation return a vector of filter chain objects end_comment begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name get filter chains end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name filter chains end_name end_expr end_return end_block 
 begin_name crc end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name initialise crc end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set up properties on the redirector that we needed to store locally end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name setup redirector end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set input end_name end_name begin_argument_list begin_argument begin_expr begin_name input end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set input string end_name end_name begin_argument_list begin_argument begin_expr begin_name input string end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set output end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set error end_name end_name begin_argument_list begin_argument begin_expr begin_name error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment classpath to be used when searching for classes and resources return an empty path instance to be configured by ant end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get class path delegate end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create classpath end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment test the code that validates the selector end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test validate end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name type selector end_name end_type begin_name s end_name begin_init begin_expr begin_operator LPAR end_operator begin_name type selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 1 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 1 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test type end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property unset end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property unset end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property set end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test that verifies that idl compiles throws exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test idl end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment compress on the fly using java util zip gzip out stream param out the stream to wrap return the wrapped stream throws io exception if there is a problem end_comment begin_type begin_specifier end_specifier begin_name output stream end_name end_type begin_name wrap stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name gzip output stream end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment check style visibility modifier on end_comment begin_comment simple constructor param parent a p 4 base instance end_comment begin_specifier end_specifier begin_name simple p 4 output handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name p 4 base end_name end_type begin_name parent end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name parent end_name end_name begin_operator EQ end_operator begin_name parent end_name end_expr end_expr_stmt end_block 
 begin_comment execute in a forked vm end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name run end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name command end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name pump stream handler end_name end_type begin_name psh end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name pump stream handler end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name log output stream end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name tee output stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name log output stream end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name bos end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name execute end_name end_type begin_name exe end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name execute end_name begin_argument_list begin_argument begin_expr begin_name psh end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set ant run end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name workingdir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set working directory end_name end_name begin_argument_list begin_argument begin_expr begin_name workingdir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set commandline end_name end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_return begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment sets the filter that one wants applied table tr th option th th meaning th tr tr td all td td all files under perforce control or not td tr tr td existing td td only files under perforce control td tr tr td non existing td td only files not under perforce control or not td tr table param filter should be one of all existing non existing end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set show filter end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name filter end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name filter end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name show end_name begin_operator EQ end_operator begin_name show all end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name filter end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name show end_name begin_operator EQ end_operator begin_name show existing end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name filter end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name show end_name begin_operator EQ end_operator begin_name show non existing end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_else end_if end_else end_if end_block 
 begin_comment date format with which as of date parameter to be parsed optional must be a simple date format compatible string if not specified and as of date param is specified parse will use iso 8601 datetime and date formats param as of date format the simple date format compatible format string since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set as of date format end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name as of date format end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set as of date format end_name begin_argument_list begin_argument begin_expr begin_name as of date format end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the current system property settings return current value null for none or no access end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get system proxy setting end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_return begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name use system proxies end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name security exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment if you cannot read it you won t be able to write it either end_comment begin_return begin_expr end_expr end_return end_block end_catch end_try end_block 
 begin_comment name of the property resource to load ant name classname pairs from param res the resource to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name res end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name definer set end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name too many definitions end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name definer set end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name resource end_name end_name begin_operator EQ end_operator begin_name res end_name end_expr end_expr_stmt end_block 
 begin_comment bugzilla report 19449 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test files only doesnt cause recreate end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name interrupted exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name l end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name last modified end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name sleep end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name l end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name last modified end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the text end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get text end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set the name param name a code string code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert valid end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment overrides the super version param r the reference to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set refid end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name encoding end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set up end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr begin_name build file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the attribute elements return the enumeration of attributes end_comment begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name get attributes end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment returns a newly created sax 2 xml reader using the default parser factory return a sax 2 xml reader throws build exception on error see get parser factory since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name xml reader end_name end_type begin_name get xml reader end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_return begin_expr begin_call begin_name new sax parser end_name begin_argument_list begin_argument begin_expr begin_call begin_name get parser factory end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get xml reader end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name sax exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_call begin_name convert to build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment get the project path return if it was set null if not end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get project path end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name project path end_name end_expr end_return end_block 
 begin_comment returns the resolved file param extension the extension param project the project return the file resolved throws build exception if no location is set end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name resolve end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name extension end_name end_type begin_name extension end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name location end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test delay update build finished end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name do delay update test end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the names of the class files on which base class depends return the names of the files end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get included files end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name get included files count end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name included end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name files end_name end_expr end_return end_block 
 begin_comment set the smtp port param port the smtp port end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set port end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name port end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name port end_name end_name begin_operator EQ end_operator begin_name port end_name end_expr end_expr_stmt end_block 
 begin_comment set the start of the arc param start the start of the arc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set start end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name start end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name start end_name end_name begin_operator EQ end_operator begin_name start end_name end_expr end_expr_stmt end_block 
 begin_comment adds a set of properties that will be used as system properties that tests can access this might be useful to tranfer ant properties to the testcases when jvm forking is not enabled param sysp set of properties to be added since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add syspropertyset end_name begin_parameter_list begin_param begin_decl begin_type begin_name property set end_name end_type begin_name sysp end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get commandline end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add syspropertyset end_name begin_argument_list begin_argument begin_expr begin_name sysp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set this flag to trigger validation that every named file exists optional default true param validate a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set validate end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name validate end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name validate end_name end_name begin_operator EQ end_operator begin_name validate end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name multi map test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds a deployment tool for weblogic server return the deployment tool instance to be configured end_comment begin_type begin_specifier end_specifier begin_name weblogic deployment tool end_name end_type begin_name create weblogic end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name weblogic deployment tool end_name end_type begin_name tool end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name weblogic deployment tool end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add deployment tool end_name begin_argument_list begin_argument begin_expr begin_name tool end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name tool end_name end_expr end_return end_block 
 begin_comment set the timeout in milliseconds after which the process will be killed param value timeout in milliseconds end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set timeout end_name begin_parameter_list begin_param begin_decl begin_type begin_name integer end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set timeout end_name begin_argument_list begin_argument begin_expr begin_call begin_name long end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name value end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name long end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name int value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return true if the lastchars buffer does not contain the lineseparator end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is missing end of line end_name begin_parameter_list end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name last chars end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name last chars end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator begin_call begin_name begin_name eol string end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test disp end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment instantiates the identified custom selector class end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name selector create end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name classname end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name classname end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name c end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name ant class loader end_name end_type begin_name al end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create class loader end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name al end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name dynselector end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name file selector end_name begin_operator RPAR end_operator begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name p end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set project reference end_name end_name begin_argument_list begin_argument begin_expr begin_name dynselector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name cnfexcept end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name classname end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name iexcept end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name classname end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name iaexcept end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name classname end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment if we got here all was well end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test assert not raised end_name begin_parameter_list end_parameter_list begin_block begin_assert begin_expr begin_operator LPAR end_operator begin_operator PLUS end_operator begin_operator EQT end_operator begin_operator RPAR end_operator end_expr end_assert end_block 
 begin_comment get comment string return string containing the comment end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get comment end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m comment end_name end_expr end_return end_block 
 begin_comment this method indicates the filename extension for c files return the file extension for c i e cs without the dot end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get file extension end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment go and delete the directory tree param d the directory to delete param delete files whether to delete files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name delete dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name d end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name delete files end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name list end_name begin_init begin_expr begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name list end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_comment on an io error list can return null end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name list end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name s end_name begin_init begin_expr begin_name begin_name list end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name d end_name end_expr end_argument begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name delete dir end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name delete files end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_else end_if end_block end_for begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name verbosity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment handles the start of an element within a target param uri the namespace uri for this element param name the name of the element being started will not be code null code param qname the qualified name for this element param attrs attributes of the element being started will not be code null code param context the current context return an element handler exception sax parse exception if an error occurs when initialising the appropriate child handler end_comment begin_type begin_specifier end_specifier begin_name ant handler end_name end_type begin_name on start child end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name qname end_name end_decl end_param begin_param begin_decl begin_type begin_name attributes end_name end_type begin_name attrs end_name end_decl end_param begin_param begin_decl begin_type begin_name ant xml context end_name end_type begin_name context end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax parse exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_name begin_name project helper 2 end_name begin_operator DOT end_operator begin_name element handler end_name end_name end_expr end_return end_block 
 begin_comment reset state to default end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name reset end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name append end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name force overwrite end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name destination file end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name encoding end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name output encoding end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name fix last line end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name filter chains end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name footer end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name header end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name binary end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name output writer end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text buffer end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name eol string end_name begin_operator EQ end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name rc end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment convenience constructor param r the resource selector to add end_comment begin_specifier end_specifier begin_name and end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name resource selector end_name begin_index end_index end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test keep going default end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name execute targets end_name begin_argument_list begin_argument begin_expr begin_name target names end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name target count end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test zip file set end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment see java lang object hash code return a hash value based on the attributes end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name hash code end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name hash code end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment the file resource return the file resource end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name file end_name end_expr end_return end_block 
 begin_comment set the behavior when link set fork fork fork has been enabled p possible values are once per test and per batch if set to once only a single java vm will be forked for all tests with per test the default each test will run in a fresh java vm and per batch will run all tests from the same lt batchtest gt in the same java vm p p this attribute will be ignored if tests run in the same vm as ant p p only tests with the same configuration of haltonerror haltonfailure errorproperty failureproperty and filtertrace can share a forked java vm so even if you set the value to once ant may need to fork mutliple v ms p param mode the mode to use since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fork mode end_name begin_parameter_list begin_param begin_decl begin_type begin_name fork mode end_name end_type begin_name mode end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name fork mode end_name end_name begin_operator EQ end_operator begin_name mode end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test keep going single check end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list begin_argument begin_expr begin_name single check end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name execute targets end_name begin_argument_list begin_argument begin_expr begin_name target names end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name target count end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name namespace uri end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name local name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name q name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block end_block 
 begin_specifier end_specifier begin_name nice test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name fix cr lf test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment fulfill the iterator contract return the next element throws no such element exception if no more elements end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name next end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name wrapped end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name wrapped end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name no such element exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name fail fast end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_return begin_expr begin_call begin_name begin_name wrapped end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_finally begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name wrapped end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name wrapped end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name remove end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set eightteen end_name begin_parameter_list begin_param begin_decl begin_type begin_name short end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name vector end_name end_type begin_name find element in target end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name target end_name end_type begin_name t end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name task end_name begin_index end_index end_type begin_name tasks end_name begin_init begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get tasks end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name elems end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name tasks end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name tasks end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name elems end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name tasks end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_return begin_expr begin_name elems end_name end_expr end_return end_block 
 begin_comment changes the file name to the given name while receiving it only useful if receiving a single file param a to uri a string representing the target of the copy since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set local tofile end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name a to uri end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set to uri end_name begin_argument_list begin_argument begin_expr begin_name a to uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name is to remote end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment sets whether to fail with a build exception on error or go on param fail on error the new value for this boolean flag end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set failonerror end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name fail on error end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name fail on error end_name end_name begin_operator EQ end_operator begin_name fail on error end_name end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add vm exit end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name j unit task mirror end_name begin_operator DOT end_operator begin_name j unit result formatter mirror end_name end_name end_type begin_name a formatter end_name end_decl end_param begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name test case end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name j unit result formatter end_name end_type begin_name formatter end_name begin_init begin_expr begin_operator LPAR end_operator begin_name j unit result formatter end_name begin_operator RPAR end_operator begin_name a formatter end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name formatter end_name begin_operator DOT end_operator begin_name set output end_name end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name formatter end_name begin_operator DOT end_operator begin_name start test suite end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment the trick to integrating test output to the formatter is to end_comment begin_comment create a special test class that asserts an error end_comment begin_comment and tell the formatter that it raised end_comment begin_decl_stmt begin_decl begin_type begin_name test case end_name end_type begin_name t end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vm exit error test end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name test case end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name formatter end_name begin_operator DOT end_operator begin_name start test end_name end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name formatter end_name begin_operator DOT end_operator begin_name add error end_name end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name assertion failed error end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name formatter end_name begin_operator DOT end_operator begin_name end test suite end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a reference to be configured by ant end_comment begin_specifier end_specifier begin_name reference end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment tick handler end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name on tick end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name dots end_name begin_operator PPLUS end_operator begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name dots end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test replace tokens end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name expected end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_name expected end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for unit enumerated type end_comment begin_specifier end_specifier begin_name unit end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name calendar fields end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name millisecond end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name millisecond end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name calendar fields end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name second end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name second end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name calendar fields end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name minute end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name minute end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name calendar fields end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name hour end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name hour of day end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name calendar fields end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name day end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name date end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name calendar fields end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name week end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name week of year end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name calendar fields end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name month end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name month end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name calendar fields end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name year end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name year end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment password to be added to the password file param password the password end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set password end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name password end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name password end_name end_name begin_operator EQ end_operator begin_name password end_name end_expr end_expr_stmt end_block 
 begin_comment for file based zipfilesets return the same as for normal filesets else just return the path of the zip return for file based archivefilesets included files as a list of semicolon separated filenames else just the name of the zip end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name has dir end_name begin_operator UNP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name src end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr end_expr end_return end_block end_else end_if end_else end_if end_block 
 begin_comment defines the manager param manager the scripting manager end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set manager end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name manager end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set manager end_name end_name begin_argument_list begin_argument begin_expr begin_name manager end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment writes next block of compressed data to the output stream throws io exception on error since 1 14 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name deflate end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name len end_name begin_init begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name deflate end_name end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name buf end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name len end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name len end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment add a nested code file name mapper code param file name mapper the code file name mapper code to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name file name mapper end_name end_type begin_name file name mapper end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name container end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name type end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name classname end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name container end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name composite mapper end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name file name mapper end_name end_type begin_name m end_name begin_init begin_expr begin_call begin_name get implementation end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name m end_name begin_operator UNP end_operator begin_name container mapper end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name container end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name container mapper end_name begin_operator RPAR end_operator begin_name m end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_name m end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_else end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name container end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name file name mapper end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create a path to be configured with the locations of the source files return a new path instance to be configured by the ant core end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create sourcepath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name source path end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name source path end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name source path end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment sets the static grammar option param static parser a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set static end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name static parser end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name static end_name end_expr end_argument begin_argument begin_expr begin_name static parser end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a regular expression you can use this element to refer to a previously defined regular expression datatype instance return the regular expression object to be configured as an element end_comment begin_type begin_specifier end_specifier begin_name regular expression end_name end_type begin_name create regexp end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name regex end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name regex end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name regular expression end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name regex end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name manifest test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment utility method that will throw a link build exception if link fail on error is true else it just displays a warning end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name missing extension end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name fail on error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test absolute 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name directory scanner end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name tmpdir end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name tmpdir end_name begin_operator PLUS end_operator end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name tmpdir end_name begin_operator PLUS end_operator end_expr begin_operator UNP end_operator begin_expr begin_name tmpdir end_name begin_operator PLUS end_operator end_expr begin_operator UNP end_operator begin_expr begin_name tmpdir end_name begin_operator PLUS end_operator end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name tmpdir end_name begin_operator PLUS end_operator end_expr begin_operator UNP end_operator begin_expr begin_name tmpdir end_name begin_operator PLUS end_operator end_expr begin_operator UNP end_operator begin_expr begin_name tmpdir end_name begin_operator PLUS end_operator end_expr begin_operator UNP end_operator begin_expr begin_name tmpdir end_name begin_operator PLUS end_operator end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment runs a test and expects an assertion thrown in forked code param target end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name expect assertion end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_name target end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the hash code for this resource return hash code as int end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name hash code end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name hash code end_name end_name begin_argument_list end_argument_list end_call begin_operator STAR end_operator begin_operator LPAR end_operator begin_call begin_name get archive end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator QM end_operator begin_name null archive end_name begin_operator DP end_operator begin_call begin_name get archive end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name hash code end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment gets the cmp version return cmp version since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get cmpversion end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name cmp version end_name end_name end_expr end_return end_block 
 begin_comment get the name of the class to be run return the name of the class to run or tt null tt if there is no class see get jar end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get classname end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name execute jar end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name java command end_name begin_operator DOT end_operator begin_name get executable end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment dump the constant pool to a string return the constant pool entries as strings end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name size end_name begin_init begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name size end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name i end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get entry end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment specifies the root namespace for all type declarations param root namespace a root namespace end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set root namespace end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name root namespace end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name root namespace end_name end_name begin_operator EQ end_operator begin_name root namespace end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name encode end end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name encode string end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a new tabs to spaces using the passed in reader for instantiation param rdr a reader object providing the underlying stream must not be code null code return a new filter based on this configuration but filtering the specified reader end_comment begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name chain end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name rdr end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name tabs to spaces end_name end_type begin_name new filter end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name tabs to spaces end_name begin_argument_list begin_argument begin_expr begin_name rdr end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new filter end_name begin_operator DOT end_operator begin_name set tablength end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get tablength end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new filter end_name begin_operator DOT end_operator begin_name set initialized end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name new filter end_name end_expr end_return end_block 
 begin_comment query the optimise flag return true if optimise is turned on end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get optimize end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name optimize end_name end_expr end_return end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test magic property end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name rmic adapter factory end_name begin_operator DOT end_operator begin_name error unknown compiler end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name copydir test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment retrieve a string from the given bytes using the encoding set for this zip file param bytes the byte array to transform return string obtained by using the given encoding throws zip exception if the encoding cannot be recognized end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get string end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name bytes end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name zip exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name encoding end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name bytes end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_try begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name bytes end_name end_expr end_argument begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unsupported encoding exception end_name end_type begin_name uee end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name zip exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name uee end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test normal recompile end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator MINUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get full log end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator MINUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get full log end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return true if the string matches the regular expression pattern exception build exception if the attributes are not set correctly end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name string end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name regular expression end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name options end_name begin_init begin_expr begin_name begin_name regexp matcher end_name begin_operator DOT end_operator begin_name match default end_name end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name case sensitive end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name options end_name begin_operator EQ end_operator begin_name options end_name begin_operator UNP end_operator begin_name begin_name regexp matcher end_name begin_operator DOT end_operator begin_name match case insensitive end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name multi line end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name options end_name begin_operator EQ end_operator begin_name options end_name begin_operator UNP end_operator begin_name begin_name regexp matcher end_name begin_operator DOT end_operator begin_name match multiline end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name single line end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name options end_name begin_operator EQ end_operator begin_name options end_name begin_operator UNP end_operator begin_name begin_name regexp matcher end_name begin_operator DOT end_operator begin_name match singleline end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name regexp end_name end_type begin_name regexp end_name begin_init begin_expr begin_call begin_name begin_name regular expression end_name begin_operator DOT end_operator begin_name get regexp end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name regexp end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr begin_name string end_name end_expr end_argument begin_argument begin_expr begin_name options end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment set the executable this is not allowed for chmod param e ignored throws build exception always ant attribute ignore true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set executable end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task type end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_specifier end_specifier begin_name rmic test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a new filtered reader param in a reader object providing the underlying stream must not be code null code end_comment begin_specifier end_specifier begin_name head filter end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name in end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name line tokenizer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name line tokenizer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name line tokenizer end_name begin_operator DOT end_operator begin_name set include delims end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment tests whether or not the if condition is satisfied return whether or not the if condition is satisfied if no condition or an empty condition has been set code true code is returned see set if string end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name test if condition end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name if condition end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name test end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name replace properties end_name end_name begin_argument_list begin_argument begin_expr begin_name if condition end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_return end_block 
 begin_comment delegates to the three arg version param b the bytearray to write throws io exception if there is a problem end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name write end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name b end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test unix line output end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect file contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this was originally an emulation of link file get parent file for jdk 1 1 but it is now implemented using that method ant 1 6 3 onwards param f the file whose parent is required return the given file s parent or null if the file does not have a parent since 1 10 deprecated since 1 7 just use link file get parent file directly end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get parent file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name f end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment sets the target vm that the classes will be compiled for valid values depend on the compiler for jdk 1 4 the valid values are 1 1 1 2 1 3 1 4 1 5 1 6 5 and 6 param target the target vm end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set target end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name target attribute end_name end_name begin_operator EQ end_operator begin_name target end_name end_expr end_expr_stmt end_block 
 begin_comment delete a symlink throws build exception on error since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name delete end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_if begin_condition begin_expr begin_name link end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name handle error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name link end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name delete symlink end_name begin_argument_list begin_argument begin_expr begin_name link end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name file not found exception end_name end_type begin_name fnfe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name handle error end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name fnfe end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name handle error end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name set defaults end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment test conversion to bytes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test to bytes end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name zip long end_name end_type begin_name zl end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name zip long end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name zl end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name result end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name result end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name result end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name result end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment n flag of p 4 labelsync display changes without actually doing them return n flag of p 4 labelsync end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is simulationmode end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name simulationmode end_name end_expr end_return end_block 
 begin_comment test we can handle jsharp if found end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test jsharp end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test the contract of the equals method end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test equals end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name zip short end_name end_type begin_name zs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name zip short end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name zip short end_name end_type begin_name zs 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name zip short end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name zip short end_name end_type begin_name zs 3 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name zip short end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name zs end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name zs end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name zs end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name zs 2 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name zs end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name zs 3 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name zs 2 end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name zs end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name zs end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name zs end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment called at the end of processing an antlib end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name exit ant lib end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ant lib stack end_name begin_operator DOT end_operator begin_name pop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ant lib current uri end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_call begin_name begin_name ant lib stack end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name ant lib stack end_name begin_operator DOT end_operator begin_name peek end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment write the attribute out to a print writer param writer the writer to which the attribute is written throws io exception if the attribute value cannot be written end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name print writer end_name end_type begin_name writer end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name get values end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name write value end_name begin_argument_list begin_argument begin_expr begin_name writer end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test depends on implementation end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name implementation specific argument end_name end_type begin_name ia end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name implementation specific argument end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ia end_name begin_operator DOT end_operator begin_name set line end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name parts end_name begin_init begin_expr begin_call begin_name begin_name ia end_name begin_operator DOT end_operator begin_name get parts end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name parts end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name parts end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name parts end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name parts end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name parts end_name begin_operator EQ end_operator begin_call begin_name begin_name ia end_name begin_operator DOT end_operator begin_name get parts end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name parts end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name parts end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name parts end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name parts end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ia end_name begin_operator DOT end_operator begin_name set implementation end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name parts end_name begin_operator EQ end_operator begin_call begin_name begin_name ia end_name begin_operator DOT end_operator begin_name get parts end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name parts end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name parts end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name parts end_name begin_operator EQ end_operator begin_call begin_name begin_name ia end_name begin_operator DOT end_operator begin_name get parts end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name parts end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name parts end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name parts end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name parts end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment constructor for regexp pattern mapper throws build exception on error end_comment begin_specifier end_specifier begin_name regexp pattern mapper end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name reg end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name regexp matcher factory end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name new regexp matcher end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name register known dt ds end_name begin_parameter_list begin_param begin_decl begin_type begin_name descriptor handler end_name end_type begin_name handler end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name register dtd end_name end_name begin_argument_list begin_argument begin_expr begin_name ejb jar 1 1 public id end_name end_expr end_argument begin_argument begin_expr begin_name jonasroot end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_name ejb jar 1 1 dtd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name register dtd end_name end_name begin_argument_list begin_argument begin_expr begin_name ejb jar 2 0 public id end_name end_expr end_argument begin_argument begin_expr begin_name jonasroot end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_name ejb jar 2 0 dtd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name register dtd end_name end_name begin_argument_list begin_argument begin_expr begin_name jonas ejb jar 2 4 public id end_name end_expr end_argument begin_argument begin_expr begin_name jonasroot end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_name jonas ejb jar 2 4 dtd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name register dtd end_name end_name begin_argument_list begin_argument begin_expr begin_name jonas ejb jar 2 5 public id end_name end_expr end_argument begin_argument begin_expr begin_name jonasroot end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_name jonas ejb jar 2 5 dtd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the incremental compilation flag on or off param incremental on off flag end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set incremental end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name incremental end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name incremental end_name end_name begin_operator EQ end_operator begin_name incremental end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name matches end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name input end_name end_decl end_param begin_param begin_decl begin_type begin_name re end_name end_type begin_name reg end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr begin_name input end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment normal constructor end_comment begin_specifier end_specifier begin_name java end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment return a dir set that has the same basedir and same patternsets as this one return the cloned dirset end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name clone end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name dir set end_name begin_operator RPAR end_operator begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name clone end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_comment retrieve the current input handler return the input handler instance currently in place for the project instance end_comment begin_type begin_specifier end_specifier begin_name input handler end_name end_type begin_name get input handler end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name input handler end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get lookahead end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name lookahead end_name end_expr end_return end_block 
 begin_comment the user with privileges to deploy applications to the server optional param user name a string representing the user name attribute end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set user name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name user name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name user name end_name end_name begin_operator EQ end_operator begin_name user name end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name log level end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the directory to write the generated files to if not set the files are written to the directory containing the grammar file param output directory the output directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set outputdirectory end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name output directory end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name output directory end_name end_name begin_operator EQ end_operator begin_name output directory end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test test uncompressed zip task end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert logo uncorrupted end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment encoding to use for input defaults to the platform s default encoding p for a list of possible values see a href http java sun com j 2 se 1 5 0 docs guide intl encoding doc html http java sun com j 2 se 1 5 0 docs guide intl encoding doc html a p param encoding the new encoding value end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name encoding end_name end_name begin_operator EQ end_operator begin_name encoding end_name end_expr end_expr_stmt end_block 
 begin_comment constructor using a tarfileset arguement param fileset the tarfileset to use end_comment begin_specifier end_specifier begin_name tar file set end_name begin_parameter_list begin_param begin_decl begin_type begin_name tar file set end_name end_type begin_name fileset end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name fileset end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the descriptions from all the targets of a project param project the project to get the descriptions for return a string containing the concatenated descriptions of the targets end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get description end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name targets end_name begin_init begin_expr begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name targets end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name description end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name targets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name target end_name end_type begin_name t end_name begin_init begin_expr begin_operator LPAR end_operator begin_name target end_name begin_operator RPAR end_operator begin_call begin_name begin_name targets end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name concat descriptions end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name t end_name end_expr end_argument begin_argument begin_expr begin_name description end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_call begin_name begin_name description end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set whether this formatter should be used it will be used if the property has been set otherwise it won t param if property name of property end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set if end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name if property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name if property end_name end_name begin_operator EQ end_operator begin_name if property end_name end_expr end_expr_stmt end_block 
 begin_comment defines the file name mapper to use nested mapper element return the mapper to use for file name translations throws build exception if more than one mapper is defined end_comment begin_type begin_specifier end_specifier begin_name mapper end_name end_type begin_name create mapper end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name mapper end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name mapper end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name mapper end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name mapper end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name mark supported end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name mark supported end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment unset the read only flag on local copies of files added to vss defaults to false param writable the boolean value for writable end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set writable end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name writable end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal writable end_name end_name begin_argument_list begin_argument begin_expr begin_name writable end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets whether the generated java source file should be kept after compilation the generated files will have an extension of java keep b not b java valid true values are on or true anything else sets the flag to false the default value is false param keep a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set keep end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name keep end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name keep end_name end_name begin_operator EQ end_operator begin_name keep end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name simple filter reader end_name begin_parameter_list begin_param begin_decl begin_type begin_name reader end_name end_type begin_name in end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name in end_name end_name begin_operator EQ end_operator begin_name in end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert valid end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name attr end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name value end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name attr end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator PPLUS end_operator begin_name count end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment this method will rethrow the exception that was possibly caught during the run of the process it will only remains valid once the process has been terminated either by error timeout or manual intervention information will be discarded once a new process is ran throws build exception a wrapped exception over the one that was silently swallowed and stored during the process run end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name check exception end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name caught end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name caught end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name caught end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment get the argument or null for no argument needed return the output file parameter to csc end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get file align parameter end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name file align end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name get executable end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator PLUS end_operator begin_name file align end_name end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr end_expr end_return end_block end_else end_if end_block 
 begin_comment tests ordering of sections end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test order 1 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name manifest exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name manifest end_name end_type begin_name manifest end_name begin_init begin_expr begin_call begin_name get manifest end_name begin_argument_list begin_argument begin_expr begin_name expanded manifest end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name get section names end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name section 1 end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name section 2 end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name section 1 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name section 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name section end_name end_name end_type begin_name section end_name begin_init begin_expr begin_call begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name get section end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name e end_name begin_operator EQ end_operator begin_call begin_name begin_name section end_name begin_operator DOT end_operator begin_name get attribute keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name attr 1 key end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name attr 2 key end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name attr 1 end_name begin_init begin_expr begin_call begin_name begin_name section end_name begin_operator DOT end_operator begin_name get attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name attr 1 key end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name attr 2 end_name begin_init begin_expr begin_call begin_name begin_name section end_name begin_operator DOT end_operator begin_name get attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name attr 2 key end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name attr 1 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name attr 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 4 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment initializes the properties exception build exception if an vital property could not be set since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init properties end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name set java version property end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set system properties end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set property internal end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant version end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name main end_name begin_operator DOT end_operator begin_name get ant version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set ant lib end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment ignore end_comment begin_comment set the source file param s the source file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name source end_name end_name begin_operator EQ end_operator begin_name s end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test simple end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test simple end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect output containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the element to configure param proxy the element to configure must not be code null code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set proxy end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name proxy end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name wrapped object end_name begin_operator EQ end_operator begin_name proxy end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name proxy configured end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment whether to require explicit declaration of variables param flag on off flag end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set option explicit end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name flag end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name option explicit end_name begin_operator EQ end_operator begin_name flag end_name end_expr end_expr_stmt end_block 
 begin_comment creates a new code size selector code instance end_comment begin_specifier end_specifier begin_name size selector end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test standalone cr end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name macro def test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment keystore location param keystore location end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set keystore end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name keystore end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name keystore end_name end_name begin_operator EQ end_operator begin_name keystore end_name end_expr end_expr_stmt end_block 
 begin_comment ensure we have a consistent and legal set of attributes and set any internal flags necessary based on different combinations of attributes throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate attributes end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name src dir end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name src dir end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name dest dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment accessor to a command line as string this should be deprecated antoine ll july 23 d 2003 return command line as string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get command end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name command end_name end_name end_expr end_return end_block 
 begin_comment set the comparator type to use param name an enumerated comparator type end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set comparator end_name begin_parameter_list begin_param begin_decl begin_type begin_name comparator name end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name comp name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment builds the arguments to pass to weblogic deploy for undeployment actions undeploy and delete return a string containing the full argument string for weblogic deploy end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name build undeploy args end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name build args prefix end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name application end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment create a magic number for use in hash code calculations param seed byte to seed with return a magic number as int end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name get magic number end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name seed end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name big integer end_name begin_argument_list begin_argument begin_expr begin_name seed end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name int value end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment indicates whether there are any selectors here return whether any selectors are in this container end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has selectors end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name has selectors end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name has selectors end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment provides a string showing from and to full paths for logging param remotefile the star team file being processed return a string showing from and to full paths end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name describe checkout end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name com end_name begin_operator DOT end_operator begin_name starbase end_name begin_operator DOT end_operator begin_name starteam end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name remotefile end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name local file end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get full repository path end_name begin_argument_list begin_argument begin_expr begin_name remotefile end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name local file end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name remotefile end_name begin_operator DOT end_operator begin_name get full name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name local file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_return begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment ignored param to ignored end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set to end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name to end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment param location the location of the resource associated with the public id end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set location end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name location end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name location end_name end_name begin_operator EQ end_operator begin_name location end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment method present for bc purposes param name not used return nothing deprecated since 1 6 x throws build exception always end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name create dynamic element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment system out println task finished event get task get task name end_comment begin_comment fired whenever a message is logged see build event get message see build event get priority end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name message logged end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get priority end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_name log level end_name end_expr end_condition begin_then begin_block begin_comment ignore event end_comment begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get priority end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name begin_operator UNP end_operator begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get priority end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name begin_operator UNP end_operator begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get priority end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name full log buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the classpath to be used with the java virtual machine that runs the weblogic server required prior to weblogic 6 0 this is typically set to the weblogic boot classpath under weblogic 6 0 this should include all the weblogic jars param classpath the classpath to use when executing the weblogic server end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_name classpath end_name end_expr end_expr_stmt end_block 
 begin_comment a no arg constructor end_comment begin_specifier end_specifier begin_name g zip resource end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment constructor for a filter set collection end_comment begin_specifier end_specifier begin_name filter set collection end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment sets the ant file param antfile the ant file to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set antfile end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name antfile end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name antfile end_name end_name begin_operator EQ end_operator begin_name antfile end_name end_expr end_expr_stmt end_block 
 begin_comment return the xml catalog as the entityresolver end_comment begin_type begin_specifier end_specifier begin_name entity resolver end_name end_type begin_name get entity resolver end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name xml catalog end_name end_expr end_return end_block 
 begin_comment set the operating system that this exec is to run in param os a code string code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set os end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name os end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name os end_name end_name begin_operator EQ end_operator begin_name os end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name description test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment tests a regular expression against each line of text in the file param basedir the base directory the scan is being done from param filename is the name of the file to check param file is a java io file object the selector can use return whether the file should be selected or not end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name basedir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name is selected end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name bsf manager end_name end_type begin_name create manager end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name bsf exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name manager end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name manager end_name end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name bsf manager end_name end_type begin_name m end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name bsf manager end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set class loader end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get script class loader end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get keep engine end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name bsf engine end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name manager end_name begin_operator DOT end_operator begin_name load scripting engine end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get language end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name manager end_name end_name begin_operator EQ end_operator begin_name m end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name engine end_name end_name begin_operator EQ end_operator begin_name e end_name end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name m end_name end_expr end_return end_block 
 begin_comment the classpath to use when looking up a resource given as reference to a lt path gt defined elsewhere param r a reference to a classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set refid end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name sub ant test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name project test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment specifies the algorithm to be used to compute the checksum defaults to md 5 other popular algorithms like sha may be used as well param algorithm a code string code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set algorithm end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name algorithm end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name algorithm end_name end_name begin_operator EQ end_operator begin_name algorithm end_name end_expr end_expr_stmt end_block 
 begin_comment set verbose mode used to force listing of all names of copied files param verbose whether to output the names of copied files default is false end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set verbose end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name verbose end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name verbosity end_name end_name begin_operator EQ end_operator begin_name verbose end_name begin_operator QM end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name begin_operator DP end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_expr_stmt end_block 
 begin_comment log a warning param e the exception to log end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name warning end_name begin_parameter_list begin_param begin_decl begin_type begin_name transformer exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log error end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds a class name in slash format for example org apache tools ant main param classname the class name in slash format end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add slash class end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add class end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name classname end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set this entry s user id param user id this entry s new user id end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set user id end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name user id end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name user id end_name end_name begin_operator EQ end_operator begin_name user id end_name end_expr end_expr_stmt end_block 
 begin_comment see org apache tools ant build listener task finished build event end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get task end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name flush end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_name bft end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_name void end_name end_type begin_name send rcpt end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name rcpt end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name begin_index end_index end_type begin_name ok end_name begin_init begin_expr begin_block begin_expr begin_name ok rcpt 1 end_name end_expr begin_expr begin_name ok rcpt 2 end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name send end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name sanitize address end_name begin_argument_list begin_argument begin_expr begin_name rcpt end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name ok end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment pass additional arguments for idl compile param idl opts additional idl arguments end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set idlopts end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name idl opts end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name idl opts end_name end_name begin_operator EQ end_operator begin_name idl opts end_name end_expr end_expr_stmt end_block 
 begin_comment sets the classpath for loading the driver param classpath the classpath to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_name classpath end_name end_expr end_expr_stmt end_block 
 begin_comment test vss check in required attributes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test checkin exceptions end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the type of the field return the field s type in string format end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get field type end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name field type end_name end_expr end_return end_block 
 begin_comment password for the basic authentication param p password for authentication end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set password end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name pword end_name end_name begin_operator EQ end_operator begin_name p end_name end_expr end_expr_stmt end_block 
 begin_comment get an constant pool entry at a particular index param index the index into the constant pool return the constant pool entry at that index end_comment begin_type begin_specifier end_specifier begin_name constant pool entry end_name end_type begin_name get entry end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name index end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name constant pool entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name index end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment sets attributes port client user from properties if these properties are defined called automatically by unknown element see org apache tools ant unknown element table tr th property th th attribute th tr tr td p 4 port td td port td tr tr td p 4 client td td client td tr tr td p 4 user td td user td tr table end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name util end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name perl 5 util end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment get default p 4 settings from environment mark would have done something cool with end_comment begin_comment introspection here end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name tmpprop end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name tmpprop end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set port end_name begin_argument_list begin_argument begin_expr begin_name tmpprop end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name tmpprop end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set client end_name begin_argument_list begin_argument begin_expr begin_name tmpprop end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name tmpprop end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set user end_name begin_argument_list begin_argument begin_expr begin_name tmpprop end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment check style constant name check on end_comment begin_comment encode a string into base 64 encoding param s the string to encode return the encoded string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name encode end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name encode end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment core class that exists in system classpath is not ignored with default ignoresystemclasses value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 23 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment allow properties whose names match a regex in the set param regex the regular expression to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name append regex end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name regex end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name property ref end_name end_type begin_name r end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name property ref end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name set regex end_name end_name begin_argument_list begin_argument begin_expr begin_name regex end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add propertyref end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator PLUS end_operator begin_call begin_name hash code end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set the classpath to use when looking up a resource given as reference to a lt path gt defined elsewhere param r the reference value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert src is java resource end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name java resource end_name begin_operator RPAR end_operator begin_name src end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set classpath ref end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init end_name begin_parameter_list begin_param begin_decl begin_type begin_name image icon end_name end_type begin_name img end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name j panel end_name end_type begin_name pan end_name begin_init begin_expr begin_operator LPAR end_operator begin_name j panel end_name begin_operator RPAR end_operator begin_call begin_name get content pane end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name j label end_name end_type begin_name piccy end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name img end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name piccy end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name j label end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name piccy end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name j label end_name begin_argument_list begin_argument begin_expr begin_name img end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name piccy end_name begin_operator DOT end_operator begin_name set border end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name border factory end_name begin_operator DOT end_operator begin_name create line border end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name color end_name begin_operator DOT end_operator begin_name black end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name j label end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name j label end_name begin_operator DOT end_operator begin_name center end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name text end_name begin_operator DOT end_operator begin_name set font end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name font end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name font end_name begin_operator DOT end_operator begin_name bold end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name text end_name begin_operator DOT end_operator begin_name set border end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name border factory end_name begin_operator DOT end_operator begin_name create etched border end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name pb end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name j progress bar end_name begin_argument_list begin_argument begin_expr begin_name min end_name end_expr end_argument begin_argument begin_expr begin_name max end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pb end_name begin_operator DOT end_operator begin_name set border end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name border factory end_name begin_operator DOT end_operator begin_name create bevel border end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name javax end_name begin_operator DOT end_operator begin_name swing end_name begin_operator DOT end_operator begin_name border end_name begin_operator DOT end_operator begin_name bevel border end_name begin_operator DOT end_operator begin_name lowered end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name j panel end_name end_type begin_name pan 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name j panel end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pan 2 end_name begin_operator DOT end_operator begin_name set layout end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name border layout end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pan 2 end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument begin_argument begin_expr begin_name begin_name border layout end_name begin_operator DOT end_operator begin_name north end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pan 2 end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name pb end_name end_expr end_argument begin_argument begin_expr begin_name begin_name border layout end_name begin_operator DOT end_operator begin_name south end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pan end_name begin_operator DOT end_operator begin_name set layout end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name border layout end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pan end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name piccy end_name end_expr end_argument begin_argument begin_expr begin_name begin_name border layout end_name begin_operator DOT end_operator begin_name center end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pan end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name pan 2 end_name end_expr end_argument begin_argument begin_expr begin_name begin_name border layout end_name begin_operator DOT end_operator begin_name south end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pan end_name begin_operator DOT end_operator begin_name set border end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name border factory end_name begin_operator DOT end_operator begin_name create bevel border end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name javax end_name begin_operator DOT end_operator begin_name swing end_name begin_operator DOT end_operator begin_name border end_name begin_operator DOT end_operator begin_name bevel border end_name begin_operator DOT end_operator begin_name raised end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name pack end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name dimension end_name end_type begin_name size end_name begin_init begin_expr begin_call begin_name get size end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name dimension end_name end_type begin_name scr end_name begin_init begin_expr begin_call begin_name begin_name toolkit end_name begin_operator DOT end_operator begin_name get default toolkit end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get screen size end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name x end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name scr end_name begin_operator DOT end_operator begin_name width end_name end_name begin_operator MINUS end_operator begin_name begin_name size end_name begin_operator DOT end_operator begin_name width end_name end_name begin_operator RPAR end_operator begin_operator SLASH end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name y end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name scr end_name begin_operator DOT end_operator begin_name height end_name end_name begin_operator MINUS end_operator begin_name begin_name size end_name begin_operator DOT end_operator begin_name height end_name end_name begin_operator RPAR end_operator begin_operator SLASH end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name set bounds end_name begin_argument_list begin_argument begin_expr begin_name x end_name end_expr end_argument begin_argument begin_expr begin_name y end_name end_expr end_argument begin_argument begin_expr begin_name begin_name size end_name begin_operator DOT end_operator begin_name width end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name size end_name begin_operator DOT end_operator begin_name height end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add an and selector entry on the selector list param selector the selector to be added end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add and end_name begin_parameter_list begin_param begin_decl begin_type begin_name and selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name used matching task end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name add and end_name end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test implicit not optional end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the restoredeletedrevisions flag param setrest value chosen for restoredeletedrevisions end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set restore deleted revisions end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name setrest end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name restoredeletedrevisions end_name end_name begin_operator EQ end_operator begin_name setrest end_name end_expr end_expr_stmt end_block 
 begin_comment get the text of this element may be null return text or null for no nested text since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get text end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name text end_name end_expr end_return end_block 
 begin_comment tick handler end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name on tick end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test end test fired end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name pass test target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name has event message end_name begin_argument_list begin_argument begin_expr begin_name begin_name j unit task end_name begin_operator DOT end_operator begin_name testlistener prefix end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name pass test end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment pr 38370 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filelist path end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment constructor of filter param baseclass the class to filter inner classes on end_comment begin_name inner class filename filter end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name baseclass end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name extidx end_name begin_init begin_expr begin_call begin_name begin_name baseclass end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name extidx end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name extidx end_name begin_operator EQ end_operator begin_call begin_name begin_name baseclass end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name base class name end_name begin_operator EQ end_operator begin_call begin_name begin_name baseclass end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name extidx end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the date time in ms return long number of millis since 1970 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name long end_name end_type begin_name get millis end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name millis end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator MINUS end_operator begin_operator DP end_operator begin_call begin_name begin_name millis end_name begin_operator DOT end_operator begin_name long value end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment add the resource collection to count param r the resource collection to count throws build exception if already set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name rc end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name one nested message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name rc end_name begin_operator EQ end_operator begin_name r end_name end_expr end_expr_stmt end_block 
 begin_type begin_name object end_name end_type begin_name create end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name ignore end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invocation target exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get method end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get method end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name invoke end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name real object end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name nested object end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirector 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name length end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment the package module to operate upon param p package or module to operate upon end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set package end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name cvs package end_name end_name begin_operator EQ end_operator begin_name p end_name end_expr end_expr_stmt end_block 
 begin_comment reads a line of text ending with n or until the end of the stream the returned string retains the n return the line read or code null code if the end of the stream has already been reached exception io exception if the underlying reader throws one during reading end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name read line end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ch end_name begin_init begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name ch end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator begin_name ch end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test file resource with filter end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file 1 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file 1 end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file 1 content end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name read fully end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file reader end_name begin_argument_list begin_argument begin_expr begin_name file 1 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name file 1 content end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment no op not a real business error end_comment end_block end_catch end_try end_block 
 begin_comment builds a command line to execute ss return the constructed commandline end_comment begin_type begin_name commandline end_name end_type begin_name build cmd line end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name command line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment first off make sure that we ve got a command and a vssdir and a label end_comment begin_if begin_condition begin_expr begin_call begin_name get vsspath end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment build the command line from what we got the format is end_comment begin_comment ss history elements h l n o v y end_comment begin_comment as specified in the ss exe help end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get ss command end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name command history end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment vss items end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get vsspath end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment i end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag autoresponse def end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment ignore all errors end_comment begin_comment vd end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get version date end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment vl end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get version label end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment r end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get recursive end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment b d f end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get style end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment y end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get login end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment o end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get output end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name command line end_name end_expr end_return end_block 
 begin_comment sets the if attribute this attribute and the unless attribute are used to validate the name based in the existence of the property param cond a property name if this property is not present the name is invalid end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set if end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name cond end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name if cond end_name begin_operator EQ end_operator begin_name cond end_name end_expr end_expr_stmt end_block 
 begin_comment logs a line if the line starts with junit framework test listener set the level to msg verbose param line the line to log param level the logging level to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process line end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name level end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name testlistener prefix end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name process line end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument begin_argument begin_expr begin_name level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment sets the extension directories that will be used during the compilation param extdirs a path end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set extdirs end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name extdirs end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name extdirs end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name extdirs end_name end_name begin_operator EQ end_operator begin_name extdirs end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name extdirs end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name extdirs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment set the timeout for this execute java param timeout timeout as long since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set timeout end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name timeout end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name timeout end_name end_name begin_operator EQ end_operator begin_name timeout end_name end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment name of sf dsa file optional param sigfile the name of the sf dsa file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set sigfile end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name sigfile end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name sigfile end_name end_name begin_operator EQ end_operator begin_name sigfile end_name end_expr end_expr_stmt end_block 
 begin_comment set the classpath to be used when searching for component being defined param classpath an ant path object containing the classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_name classpath end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name project end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name init end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set user property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name basedir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment evaluate a code boolean code array param b the code boolean code to evaluate return true if the argument fell within the parameters of this quantifier end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name evaluate end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name boolean end_name begin_index end_index end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name t end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name b end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name b end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name t end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_return begin_expr begin_call begin_name evaluate end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument begin_argument begin_expr begin_name begin_name b end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment get the constructor of the definition and invoke it return the instantiated code object code end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name create and set end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name class end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name inner create and set end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name o end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name invocation target exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name begin_init begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name get target exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name t end_name end_expr end_argument begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name ncdfe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name c end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ncdfe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name ncdfe end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no such method exception end_name end_type begin_name nsme end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name c end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name nsme end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name c end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name c end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name t end_name end_expr end_argument begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment sets the version string execute task only if rdbms version match optional param version the version to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set version end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name version end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name version end_name end_name begin_operator EQ end_operator begin_name version end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test properties end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the num days attribute param num days the value to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set internal num days end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name num days end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name num days end_name end_name begin_operator EQ end_operator begin_name num days end_name end_expr end_expr_stmt end_block 
 begin_comment specifies a file containing a comment param cfile the path to the comment file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set comment file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name cfile end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m cfile end_name begin_operator EQ end_operator begin_name cfile end_name end_expr end_expr_stmt end_block 
 begin_comment get the resource attribute return the resource attribute end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get resource end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name resource end_name end_expr end_return end_block 
 begin_comment adds class to process return a code class argument code to be configured end_comment begin_type begin_specifier end_specifier begin_name class argument end_name end_type begin_name create class end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name class argument end_name end_type begin_name ga end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name class argument end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name classes end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name ga end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name ga end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test real test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment process the file s one line at a time executing the replacement on one line at a time this is useful if you want to only replace the first occurrence of a regular expression on each line which is not easy to do when processing the file as a whole defaults to i false i td param byline the byline attribute as a string deprecated since 1 6 x use set by line boolean end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set by line end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name byline end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name res end_name begin_init begin_expr begin_call begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_name byline end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name res end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name res end_name begin_operator EQ end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name byline end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name boolean value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 14 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment open an ssh seession return the opened session throws j sch exception on error end_comment begin_type begin_specifier end_specifier begin_name session end_name end_type begin_name open session end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name j sch exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name j sch end_name end_type begin_name jsch end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name j sch end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name user info end_name begin_operator DOT end_operator begin_name get keyfile end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name jsch end_name begin_operator DOT end_operator begin_name add identity end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name user info end_name begin_operator DOT end_operator begin_name get keyfile end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name user info end_name begin_operator DOT end_operator begin_name get trust end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name known hosts end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name known hosts end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name jsch end_name begin_operator DOT end_operator begin_name set known hosts end_name end_name begin_argument_list begin_argument begin_expr begin_name known hosts end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name session end_name end_type begin_name session end_name begin_init begin_expr begin_call begin_name begin_name jsch end_name begin_operator DOT end_operator begin_name get session end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name user info end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name host end_name end_expr end_argument begin_argument begin_expr begin_name port end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name session end_name begin_operator DOT end_operator begin_name set user info end_name end_name begin_argument_list begin_argument begin_expr begin_name user info end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name host end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name port end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name session end_name begin_operator DOT end_operator begin_name connect end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name session end_name end_expr end_return end_block 
 begin_comment set the fork attribute param value a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fork end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name fork end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment controls whether error output of exec is logged this is only useful when output is being redirected and error output is desired in the ant log param log error if true the standard error is sent to the ant log system and not sent to output end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set log error end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name log error end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name log error end_name end_name begin_operator EQ end_operator begin_name log error end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr begin_name project path end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment read in templates from the stylesheet end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name read templates end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name transformer configuration exception end_name end_expr end_argument begin_argument begin_expr begin_name parser configuration exception end_name end_expr end_argument begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block begin_comment use a stream so that you can close it yourself quickly end_comment begin_comment and avoid keeping the handle until the object is garbaged end_comment begin_comment always keep control otherwise you won t be able to delete end_comment begin_comment the file quickly on windows end_comment begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name xsl stream end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name xsl stream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name stylesheet end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name templates mod time end_name begin_operator EQ end_operator begin_call begin_name begin_name stylesheet end_name begin_operator DOT end_operator begin_name get last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name source end_name end_type begin_name src end_name begin_init begin_expr begin_call begin_name get source end_name begin_argument_list begin_argument begin_expr begin_name xsl stream end_name end_expr end_argument begin_argument begin_expr begin_name stylesheet end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name templates end_name begin_operator EQ end_operator begin_call begin_name get factory end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name new templates end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name xsl stream end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name xsl stream end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment fetch all included and not excluded resources from the collections p included directories will precede included files p param rcs an array of resource collections return the resources included since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name resource end_name begin_index end_index begin_index end_index end_type begin_name grab non file set resources end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name resource collection end_name begin_index end_index end_name end_type begin_name rcs end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name resource end_name begin_index end_index begin_index end_index end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name resource end_name begin_index begin_expr begin_name begin_name rcs end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_index begin_index end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name rcs end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_name begin_name rcs end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name array list end_name end_type begin_name rs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name last dir end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name resource end_name end_type begin_name r end_name begin_init begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name is exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name rs end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name last dir end_name begin_operator PPLUS end_operator end_expr end_argument begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name rs end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block end_while begin_expr_stmt begin_expr begin_name begin_name result end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name begin_name resource end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name rs end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name resource end_name begin_index begin_expr begin_call begin_name begin_name rs end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name start project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment default end_comment begin_comment create a task bound to its creator param owner owning task end_comment begin_specifier end_specifier begin_name ant end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name owner end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name bind to owner end_name begin_argument_list begin_argument begin_expr begin_name owner end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name remove this end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name remove this end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name remove this end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment action taken when local files are writable defaults to code fail code p due to ss exe returning with an exit code of 100 for both errors and when a file has been skipped code failonerror code is set to false when using the code skip code option param files the action to take end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set writable files end_name begin_parameter_list begin_param begin_decl begin_type begin_name writable files end_name end_type begin_name files end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal writable files end_name end_name begin_argument_list begin_argument begin_expr begin_name files end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the java command to be used return the java command not a clone end_comment begin_type begin_specifier end_specifier begin_name commandline end_name end_type begin_name get java command end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name java command end_name end_expr end_return end_block 
 begin_comment the to attribute param to the string to replace from with end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set to end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name to end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name to end_name end_name begin_operator EQ end_operator begin_name to end_name end_expr end_expr_stmt end_block 
 begin_comment pass output sent to system err to the new project param output the error output to log should not be code null code since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle error flush end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name ant end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ant end_name begin_operator DOT end_operator begin_name handle error flush end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name handle error flush end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test map end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment print result sets from the statements optional default false param print if true print result sets end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set print end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name print end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name print end_name end_name begin_operator EQ end_operator begin_name print end_name end_expr end_expr_stmt end_block 
 begin_comment username for basic auth param u username for authentication end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set username end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name u end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name uname end_name end_name begin_operator EQ end_operator begin_name u end_name end_expr end_expr_stmt end_block 
 begin_comment override the project working directory param local path the path on disk end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set localpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name local path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal local path end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name local path end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment see that the different combinations work and that the autogenerated text contains information about which condition was not met end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test if and unless end_name begin_parameter_list end_parameter_list begin_block begin_comment neither end_comment begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment this call should succeed as unless overrides if end_comment begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return true if the http request succeeds exception build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name spec end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name spec end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name url end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_name spec end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name url connection end_name end_type begin_name conn end_name begin_init begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name open connection end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name conn end_name begin_operator UNP end_operator begin_name http url connection end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name http url connection end_name end_type begin_name http end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http url connection end_name begin_operator RPAR end_operator begin_name conn end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name code end_name begin_init begin_expr begin_call begin_name begin_name http end_name begin_operator DOT end_operator begin_name get response code end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name spec end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name code end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name code end_name begin_operator GT end_operator begin_operator UNP end_operator begin_name code end_name begin_operator LT end_operator begin_name errors begin at end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr end_expr end_return end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block end_catch end_try end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name malformed url exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name spec end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_return begin_expr end_expr end_return end_block 
 begin_comment retrieve manifest for specified file param file the file return the manifest throws build exception if errror occurs file doesn t exist file not a jar manifest doesn t exist in file end_comment begin_type begin_specifier end_specifier begin_name manifest end_name end_type begin_name get manifest end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name jar file end_name end_type begin_name jar file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name jar file end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name manifest end_name end_type begin_name m end_name begin_init begin_expr begin_call begin_name begin_name jar file end_name begin_operator DOT end_operator begin_name get manifest end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name m end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name file end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_name m end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment adds a set of files that can be read from an archive and be given a prefix fullpath param set the zipfileset to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add zipfileset end_name begin_parameter_list begin_param begin_decl begin_type begin_name zip file set end_name end_type begin_name set end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create a reference deprecated since 1 7 please use link reference reference project string instead end_comment begin_specifier end_specifier begin_name reference end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment convert this enumerated type to a code message format code return a code message format code object end_comment begin_type begin_specifier end_specifier begin_name message format end_name end_type begin_name get format end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name message format end_name begin_operator RPAR end_operator begin_call begin_name begin_name format map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment return a string that describes the arguments suitable for verbose output before a call to code runtime exec string code param args the command line to describe as an array of strings return a string that describes the arguments since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name describe arguments end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name describe arguments end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment initialise the project this involves setting the default task definitions and loading the system properties exception build exception if the default task list cannot be loaded end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name init properties end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name component helper end_name begin_operator DOT end_operator begin_name get component helper end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name init default definitions end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name junit end_name begin_operator DOT end_operator begin_name textui end_name begin_operator DOT end_operator begin_name test runner end_name begin_operator DOT end_operator begin_name run end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name j unit test runner test end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the setbeans attribute if this is true lt script gt will create variables in the script instance for all properties targets and references of the current project it this is false only the project and self variables will be set the default is true param set beans the value to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set set beans end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name set beans end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name set beans end_name end_name begin_operator EQ end_operator begin_name set beans end_name end_expr end_expr_stmt end_block 
 begin_comment returns true the file is selected only if all other selectors agree that the file should be selected param basedir the base directory the scan is being done from param filename the name of the file to check param file a java io file object for the filename that the selector can use return whether the file should be selected or not end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name basedir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name selector elements end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name result end_name end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name file selector end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name is selected end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name filename end_name end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name result end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_while begin_return begin_expr end_expr end_return end_block 
 begin_comment get the value of this string resource return the represented string end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name classname end_name end_type begin_name get remote end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name remote end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test zipfileset end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file 1 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file 3 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file 1 end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file 2 end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file 3 end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the target param target the target end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set target end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name target end_name end_name begin_operator EQ end_operator begin_name target end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test simple scale end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name create relative file end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name largeimage end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 bis but case insensitive end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name login suceeded end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name change remote dir end_name begin_argument_list begin_argument begin_expr begin_name remote tmp dir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name ftp directory scanner end_name end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name my ftp task end_name begin_operator DOT end_operator begin_name new scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set case sensitive end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block 
 begin_comment builds an array of class names which represent the stubs and skeletons which need to be generated for a given ejb the class names are fully qualified nine classes are generated for all ej bs while an additional six classes are generated for beans requiring rmi iiop access return an array of strings representing the fully qualified class names for the stubs and skeletons to be generated end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name classes to generate end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name classnames end_name begin_init begin_expr begin_operator LPAR end_operator begin_name iiop end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_name num classes with iiop end_name end_expr end_index end_name begin_operator DP end_operator begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_name num classes without iiop end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name remote pkg end_name begin_init begin_expr begin_call begin_name begin_name remote end_name begin_operator DOT end_operator begin_name get package name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name remote class end_name begin_init begin_expr begin_call begin_name begin_name remote end_name begin_operator DOT end_operator begin_name get class name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name home pkg end_name begin_init begin_expr begin_call begin_name begin_name home end_name begin_operator DOT end_operator begin_name get package name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name home class end_name begin_init begin_expr begin_call begin_name begin_name home end_name begin_operator DOT end_operator begin_name get class name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name impl pkg end_name begin_init begin_expr begin_call begin_name begin_name implementation end_name begin_operator DOT end_operator begin_name get package name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name impl full class end_name begin_init begin_expr begin_call begin_name begin_name implementation end_name begin_operator DOT end_operator begin_name get qualified with underscores end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name classnames end_name begin_index begin_expr begin_name index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name impl pkg end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name impl full class end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name classnames end_name begin_index begin_expr begin_name index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name impl pkg end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name impl full class end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name classnames end_name begin_index begin_expr begin_name index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name impl pkg end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name impl full class end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name classnames end_name begin_index begin_expr begin_name index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name remote pkg end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name remote class end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name classnames end_name begin_index begin_expr begin_name index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name home pkg end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name home class end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name classnames end_name begin_index begin_expr begin_name index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name remote pkg end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name remote class end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name classnames end_name begin_index begin_expr begin_name index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name home pkg end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name home class end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name classnames end_name begin_index begin_expr begin_name index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name remote pkg end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name remote class end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name classnames end_name begin_index begin_expr begin_name index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name home pkg end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name home class end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name iiop end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_name classnames end_name end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name classnames end_name begin_index begin_expr begin_name index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name remote pkg end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name remote class end_name begin_operator PLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name classnames end_name begin_index begin_expr begin_name index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name home pkg end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name home class end_name begin_operator PLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name classnames end_name begin_index begin_expr begin_name index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name remote pkg end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name remote class end_name begin_operator PLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name classnames end_name begin_index begin_expr begin_name index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name home pkg end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name home class end_name begin_operator PLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name classnames end_name begin_index begin_expr begin_name index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name remote pkg end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name remote class end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name classnames end_name begin_index begin_expr begin_name index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name home pkg end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name home class end_name end_expr end_expr_stmt begin_return begin_expr begin_name classnames end_name end_expr end_return end_block 
 begin_comment add the filter chain element param filter the filter to add end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add filter chain end_name begin_parameter_list begin_param begin_decl begin_type begin_name filter chain end_name end_type begin_name filter end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filter chains end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name filter end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test xerces handles schema end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name xml reader end_name end_type begin_name xerces end_name end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name xerces end_name begin_operator EQ end_operator begin_call begin_name begin_name xml reader factory end_name begin_operator DOT end_operator begin_name create xml reader end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name xerces end_name begin_operator DOT end_operator begin_name set feature end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if set to true puts in markers for all changes conflicting or not return flag markersforall value end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is markersforall end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name markersforall end_name end_expr end_return end_block 
 begin_name bft end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name buildfile end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name buildfile end_name end_name begin_operator EQ end_operator begin_name buildfile end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set up end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test to see if this filter set has filters return return true if there are filters in this set end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name has filters end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get filters end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_return end_block 
 begin_comment check attributes values load resource map and translate throws build exception if the required attributes are not set required ul li bundle li li starttoken li li endtoken li ul end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name bundle end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name start token end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name end token end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name bundle language end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name locale end_name end_type begin_name l end_name begin_init begin_expr begin_call begin_name begin_name locale end_name begin_operator DOT end_operator begin_name get default end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name bundle language end_name begin_operator EQ end_operator begin_call begin_name begin_name l end_name begin_operator DOT end_operator begin_name get language end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name bundle country end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name bundle country end_name begin_operator EQ end_operator begin_call begin_name begin_name locale end_name begin_operator DOT end_operator begin_name get default end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get country end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name bundle variant end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name locale end_name end_type begin_name l end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name locale end_name begin_argument_list begin_argument begin_expr begin_name bundle language end_name end_expr end_argument begin_argument begin_expr begin_name bundle country end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name bundle variant end_name begin_operator EQ end_operator begin_call begin_name begin_name l end_name begin_operator DOT end_operator begin_name get variant end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name to dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name to dir end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to dir end_name begin_operator DOT end_operator begin_name mkdirs end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name to dir end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name to dir end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_else end_if begin_if begin_condition begin_expr begin_name src encoding end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name src encoding end_name begin_operator EQ end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name dest encoding end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dest encoding end_name begin_operator EQ end_operator begin_name src encoding end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name bundle encoding end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name bundle encoding end_name begin_operator EQ end_operator begin_name src encoding end_name end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name load resource maps end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name translate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get rename hijacked files status return boolean containing status of rename flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get rename end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m rename end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test localhost url end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get next char end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name queue index end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name ch end_name begin_init begin_expr begin_call begin_name begin_name queued data end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name queue index end_name begin_operator PPLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name queue index end_name begin_operator GE end_operator begin_call begin_name begin_name queued data end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name queue index end_name begin_operator EQ end_operator begin_operator MINUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name ch end_name end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set the value to be given to the property if the desired resource is available param value the value to be given end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment date format with which as of date parameter to be parsed optional must be a simple date format compatible string if not specified and as of date param is specified parse will use iso 8601 datetime and date formats param as of date format the simple date format compatible format string since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set as of date format end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name as of date format end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set as of date format end_name begin_argument_list begin_argument begin_expr begin_name as of date format end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the port number of the star team connection required if tt url tt is not set param serverport port number to be set see set url string end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set serverport end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name serverport end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name serverport end_name end_name begin_operator EQ end_operator begin_name serverport end_name end_expr end_expr_stmt end_block 
 begin_comment if true the java source files which are generated by the ejbc process are retained param retain source a boolean indicating if the java source files for the stubs and skeletons should be retained todo this is not documented in the html on purpose end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set retain source end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name retain source end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name retain source end_name end_name begin_operator EQ end_operator begin_name retain source end_name end_expr end_expr_stmt end_block 
 begin_comment get the list of files to compile return the list of files end_comment begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name get compile list end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name compile list end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test run end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment demand creation of the package list when you add a new package add a new test below end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name build jre packages end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name jre packages end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_switch begin_condition begin_expr begin_name java version number end_name end_expr end_condition begin_block begin_case begin_expr end_expr end_case begin_case begin_expr end_expr begin_comment in java 1 5 the apache stuff moved end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name jre packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment fall through end_comment end_case begin_case begin_expr end_expr begin_if begin_condition begin_expr begin_name java version number end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name jre packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name jre packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name jre packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name jre packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name jre packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name jre packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name jre packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment fall through end_comment end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name jre packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name jre packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name jre packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name jre packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name jre packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name jre packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name jre packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name jre packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name jre packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment fall through end_comment end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name jre packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name jre packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment are there any here that we forgot end_comment begin_comment fall through end_comment end_case begin_case begin_expr end_expr end_case begin_default begin_comment things like sun reflection sun misc sun net end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name jre packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name jre packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name jre packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_default end_block end_switch end_block 
 begin_comment sets the token value param value the value for this token must not be code null code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment set the file comment param comment the comment since 1 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set comment end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name comment end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name comment end_name end_name begin_operator EQ end_operator begin_name comment end_name end_expr end_expr_stmt end_block 
 begin_comment creates a new execute object using code pump stream handler code for stream handling end_comment begin_specifier end_specifier begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name pump stream handler end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a nested lt file gt nested element param name a configured file element with a name since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file name end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name filenames end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name is configured end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name buildfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name is configured end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment allows access to the parameters gathered and set within the lt custom gt tag return the set of parameters defined for this selector end_comment begin_type begin_specifier end_specifier begin_name parameter end_name begin_index end_index end_type begin_name get parameters end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name parameters end_name end_expr end_return end_block 
 begin_comment sets the password required param password the password to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set password end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name password end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name password end_name end_name begin_operator EQ end_operator begin_name password end_name end_expr end_expr_stmt end_block 
 begin_comment flag to set to include files in subfolders in the operation optional default true param v value to assign to recursive end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set recursive end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name recursive end_name end_name begin_operator EQ end_operator begin_name v end_name end_expr end_expr_stmt end_block 
 begin_comment set up the i o redirector end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name setup redirector end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name setup redirector end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set append properties end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment extenders should emit to the log an entry describing the parameters that will be used by this operation param starteamroot folder root folder in star team for the operation param targetroot folder root local folder for the operation whether specified by the user or not end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log operation description end_name begin_parameter_list begin_param begin_decl begin_type begin_name folder end_name end_type begin_name starteamroot folder end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name targetroot folder end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name is recursive end_name end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name starteamroot folder end_name begin_operator DOT end_operator begin_name get folder hierarchy end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_operator EQT end_operator begin_call begin_name get root local folder end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_call begin_name begin_name targetroot folder end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log label end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log as of date end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log includes end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log excludes end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name ccm checkout end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set ccm action end_name begin_argument_list begin_argument begin_expr begin_name command checkout end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the optimise flag or null for no argument needed return the optimize parameter to csc end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get optimize parameter end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name optimize end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment constructor for process destroyer test param arg 0 end_comment begin_specifier end_specifier begin_name process destroyer test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name arg 0 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name arg 0 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true pass all references to the new ant project defaults to false param value if true pass all references to the new ant project end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set inherit refs end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name inherit refs end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment get the hash code for this resource return hash code as int end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name hash code end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name hash code end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name hash code end_name end_name begin_argument_list end_argument_list end_call begin_operator STAR end_operator begin_name string magic end_name end_expr end_return end_block 
 begin_comment creates a new filtered reader param in a reader object providing the underlying stream must not be code null code end_comment begin_specifier end_specifier begin_name token filter end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name in end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the character encoding for outputting param output encoding the encoding for the output file since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output encoding end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name output encoding end_name end_name begin_operator EQ end_operator begin_name output encoding end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test compiler adapter end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 2 end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 3 end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name set compiler end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name set compiler end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name set depend end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name compiler adapter end_name end_type begin_name adapter end_name begin_init begin_expr begin_call begin_name begin_name compiler adapter factory end_name begin_operator DOT end_operator begin_name get compiler end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name get compiler end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name javac end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 2 end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 3 end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name adapter end_name begin_operator UNP end_operator begin_name javac 12 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name adapter end_name begin_operator UNP end_operator begin_name javac 13 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name set fork end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name adapter end_name begin_operator EQ end_operator begin_call begin_name begin_name compiler adapter factory end_name begin_operator DOT end_operator begin_name get compiler end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name get compiler end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name javac end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name adapter end_name begin_operator UNP end_operator begin_name javac external end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment set the width param width the width of the elipse end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set width end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name width end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name width end_name end_name begin_operator EQ end_operator begin_name width end_name end_expr end_expr_stmt end_block 
 begin_comment special setters for the sub classes end_comment begin_comment set the internal comment attribute param comment the value to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set internal comment end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name comment end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name comment end_name end_name begin_operator EQ end_operator begin_name comment end_name end_expr end_expr_stmt end_block 
 begin_name win nt command launcher end_name begin_parameter_list begin_param begin_decl begin_type begin_name command launcher end_name end_type begin_name launcher end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name launcher end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test mapper fileset end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment topologically sort a set of targets equivalent to calling code topo sort new string root targets true code param root the name of the root target the sort is created in such a way that the sequence of targets up to the root target is the minimum possible such sequence must not be code null code param target table a hashtable mapping names to targets must not be code null code return a vector of all target objects in sorted order exception build exception if there is a cyclic dependency among the targets or if a named target does not exist end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name vector end_name end_type begin_name topo sort end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name root end_name end_decl end_param begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name target table end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_call begin_name topo sort end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name root end_name end_expr end_block end_expr end_argument begin_argument begin_expr begin_name target table end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment a string to wait for from the server a sub task lt read gt tag was found create the object save it in our list and return it return a read sub task end_comment begin_type begin_specifier end_specifier begin_name r exec sub task end_name end_type begin_name create read end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name r exec sub task end_name end_type begin_name task end_name begin_init begin_expr begin_operator LPAR end_operator begin_name r exec sub task end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name r exec read end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name rexec tasks end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name task end_name end_expr end_return end_block 
 begin_comment get the valid values return the list of valid system types end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name valid system types end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name reply to end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name reply to end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name reply to list end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name reply to end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a contains selector entry on the selector list param selector the code contains selector code to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add contains end_name begin_parameter_list begin_param begin_decl begin_type begin_name contains selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the list of jar files existing in ant home lib and that must have been picked up by ant script return the list of jar files existing in ant home lib or tt null tt if an error occurs end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name file end_name begin_index end_index end_type begin_name list libraries end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name home end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant home end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name home end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name lib dir end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name home end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name list jar files end_name begin_argument_list begin_argument begin_expr begin_name lib dir end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment on vms platform we need to create a special java options file containing the arguments and classpath for the java command the special file is supported by the v switch on the vms jvm param exe the execute instance to alter param command the command line end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name setup command line for vms end_name begin_parameter_list begin_param begin_decl begin_type begin_name execute end_name end_type begin_name exe end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name command end_name end_decl end_param end_parameter_list begin_block begin_comment use the vm launcher instead of shell launcher on vms end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set vm launcher end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name vms java option file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name args end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_name begin_name command end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name args end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name command end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name vms java option file end_name begin_operator EQ end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name create vms java option file end_name end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment we mark the file to be deleted on exit end_comment begin_comment the alternative would be to cache the filename and delete end_comment begin_comment after execution finished which is much better for long lived runtimes end_comment begin_comment though spawning complicates things end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name vms java option file end_name begin_operator DOT end_operator begin_name delete on exit end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name vms cmd end_name begin_init begin_expr begin_block begin_expr begin_name begin_name command end_name begin_index begin_expr end_expr end_index end_name end_expr begin_expr end_expr begin_expr begin_call begin_name begin_name vms java option file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_block end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set commandline end_name end_name begin_argument_list begin_argument begin_expr begin_name vms cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name do site command end_name begin_argument_list begin_argument begin_expr begin_name lftp end_name end_expr end_argument begin_argument begin_expr begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name this end_name begin_operator DOT end_operator begin_name site command end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test iso 8859 1 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name in end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name out end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file utils end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name content equals end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment visit a java class param java class the class being visited end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name visit java class end_name begin_parameter_list begin_param begin_decl begin_type begin_name java class end_name end_type begin_name java class end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add class end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name java class end_name begin_operator DOT end_operator begin_name get class name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has build listener events end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name log end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name j unit task end_name begin_operator DOT end_operator begin_name testlistener prefix end_name end_name end_expr end_argument end_argument_list end_call begin_operator GE end_operator end_expr end_return end_block 
 begin_comment print a readable version of the constant pool entry return the string representation of this constant pool entry end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator PLUS end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment read in a source file to a property exception build exception if something goes wrong with the build end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment validation end_comment begin_if begin_condition begin_expr begin_name src end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name property end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name quiet end_name begin_operator UNP end_operator begin_name fail on error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name is exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_name src end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name fail on error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name quiet end_name begin_operator QM end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name begin_operator DP end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_else end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name buffered input stream end_name end_type begin_name bis end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name reader end_name end_type begin_name instream end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name src end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name property end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name len end_name begin_init begin_expr begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name get size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name len end_name begin_operator UNP end_operator begin_name begin_name resource end_name begin_operator DOT end_operator begin_name unknown size end_name end_name begin_operator QM end_operator begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_name len end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment discard most of really big resources end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_init begin_expr begin_operator LPAR end_operator begin_name int end_name begin_operator RPAR end_operator begin_name len end_name end_expr end_init end_decl end_decl_stmt begin_comment open up the resource end_comment begin_expr_stmt begin_expr begin_name is end_name begin_operator EQ end_operator begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bis end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name encoding end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name instream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name bis end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name instream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name bis end_name end_expr end_argument begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name text end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name size end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name chain reader helper end_name end_type begin_name crh end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name chain reader helper end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name len end_name begin_operator UNP end_operator begin_name begin_name resource end_name begin_operator DOT end_operator begin_name unknown size end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name crh end_name begin_operator DOT end_operator begin_name set buffer size end_name end_name begin_argument_list begin_argument begin_expr begin_name size end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name crh end_name begin_operator DOT end_operator begin_name set primary reader end_name end_name begin_argument_list begin_argument begin_expr begin_name instream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name crh end_name begin_operator DOT end_operator begin_name set filter chains end_name end_name begin_argument_list begin_argument begin_expr begin_name filter chains end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name crh end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name instream end_name begin_operator EQ end_operator begin_call begin_name begin_name crh end_name begin_operator DOT end_operator begin_name get assembled reader end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_call begin_name begin_name crh end_name begin_operator DOT end_operator begin_name read fully end_name end_name begin_argument_list begin_argument begin_expr begin_name instream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name text end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name text end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set new property end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name text end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name property end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name text end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name fail on error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name quiet end_name begin_operator QM end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name begin_operator DP end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name fail on error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_name be end_name end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name quiet end_name begin_operator QM end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name begin_operator DP end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment add a selector size entry on the selector list param selector the code size selector code to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add size end_name begin_parameter_list begin_param begin_decl begin_type begin_name size selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this is a helper method that takes a selector and calls its is selected method on each file in the testbed it returns a string of t s amd f s end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name selection string end_name begin_parameter_list begin_param begin_decl begin_type begin_name file selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name beddir end_name end_expr end_argument begin_argument begin_expr begin_name files end_name end_expr end_argument begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_specifier end_specifier begin_name gzip test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment allows previously resolved files to be resolved again return flag indicating whether one wants to allow previously resolved files to be resolved again end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is redoall end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name redoall end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name which resource test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns code true code if the file exists and is signed with the signature specified or if code name code wasn t specified if the file contains a signature param zip file the zipfile to check param name the signature to check may be killed return true if the file is signed throws io exception on error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is signed end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name zip file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name zip file end_name end_type begin_name jar file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name jar file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name zip file end_name begin_argument_list begin_argument begin_expr begin_name zip file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name name end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name entries end_name begin_init begin_expr begin_call begin_name begin_name jar file end_name begin_operator DOT end_operator begin_name get entries end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name e name end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name zip entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name e name end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name sig start end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name e name end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr begin_name sig end end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_while begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name short sig end_name begin_init begin_expr begin_call begin_name begin_name jar file end_name begin_operator DOT end_operator begin_name get entry end_name end_name begin_argument_list begin_argument begin_expr begin_name sig start end_name begin_operator PLUS end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name to upper case end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_name sig end end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name long sig end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_name short sig limit end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name long sig end_name begin_operator EQ end_operator begin_call begin_name begin_name jar file end_name begin_operator DOT end_operator begin_name get entry end_name end_name begin_argument_list begin_argument begin_expr begin_name sig start end_name begin_operator PLUS end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name short sig limit end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to upper case end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_name sig end end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name short sig end_name begin_operator UNP end_operator begin_name long sig end_name end_expr end_return end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name close quietly end_name end_name begin_argument_list begin_argument begin_expr begin_name jar file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment get the value attribute return the value attribute end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name value end_name end_expr end_return end_block 
 begin_comment set the source file param src the source file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name src file end_name begin_operator EQ end_operator begin_name src end_name end_expr end_expr_stmt end_block 
 begin_comment sets the bcc address does not set any header since it s a blind copy this method may be called multiple times param bcc the bcc address exception io exception if there s any problem reported by the mail server end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name bcc end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name bcc end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name send rcpt end_name begin_argument_list begin_argument begin_expr begin_name bcc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment no need to keep track of bcc d addresses end_comment end_block 
 begin_comment constructor end_comment begin_specifier end_specifier begin_name environment end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name variables end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment where ant should place temporary files since ant 1 6 return the temporary directory end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get tempdir end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name tmp dir end_name end_expr end_return end_block 
 begin_comment parses the parameters to set the line breaking characters end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name initialize end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name user defined line breaks end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name parameter end_name begin_index end_index end_type begin_name params end_name begin_init begin_expr begin_call begin_name get parameters end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name params end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name params end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name line breaks key end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name params end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name user defined line breaks end_name begin_operator EQ end_operator begin_name begin_name params end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_name user defined line breaks end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name line breaks end_name begin_operator EQ end_operator begin_name user defined line breaks end_name end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test transfer parameter set end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect file contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_comment target end_comment begin_argument begin_expr end_expr end_argument begin_comment file end_comment begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment exptected string end_comment end_block 
 begin_comment set a reference to this project on the parameterized object need to set the project before other set add elements are called param obj the object to invoke set project this on end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set project reference end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name obj end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name obj end_name begin_operator UNP end_operator begin_name project component end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name project component end_name begin_operator RPAR end_operator begin_name obj end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set project end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name method end_name end_type begin_name method end_name begin_init begin_expr begin_call begin_name begin_name obj end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get method end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name method end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name obj end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name this end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore this if the object does not have end_comment begin_comment a set project method or the method end_comment begin_comment is private protected end_comment end_block end_catch end_try end_block 
 begin_comment set whether to check dependencies or always generate optional default is false param force true if always generate end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set force end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name force end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name force end_name end_name begin_operator EQ end_operator begin_name force end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test non existent entry end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name resource location end_name end_type begin_name dtd end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name resource location end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dtd end_name begin_operator DOT end_operator begin_name set public id end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dtd end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name input source end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name catalog end_name begin_operator DOT end_operator begin_name resolve entity end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name source end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name catalog end_name begin_operator DOT end_operator begin_name resolve end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name expected end_name begin_init begin_expr begin_call begin_name to url string end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to url end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name result str end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name sax source end_name begin_operator RPAR end_operator begin_name result end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get input source end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get system id end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get file end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name expected end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr begin_name result str end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment sets the error message param error message line of error output end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set error message end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name error message end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name error message end_name end_name begin_operator EQ end_operator begin_name error message end_name end_expr end_expr_stmt end_block 
 begin_comment the bootclasspath to use return the bootclass path since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name get bootclasspath end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name bootclasspath end_name end_expr end_return end_block 
 begin_comment run the compilation return true if the compilation succeeded exception build exception if the compilation has problems end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name begin_init begin_expr begin_call begin_name setup kjc command end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name execute java end_name end_type begin_name ej end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name execute java end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ej end_name begin_operator DOT end_operator begin_name set java command end_name end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name ej end_name begin_operator DOT end_operator begin_name fork end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get javac end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_return end_block 
 begin_comment adds characters from pcdata areas to the wrapped element param data text to add to the wrapped element should not be code null code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add text end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name data end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name data end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name characters end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name characters end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_name data end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_call begin_name begin_name characters end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name data end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return an array containing sections to which specification applies or null if relevent to no sections return an array containing sections to which specification applies or null if relevent to no sections end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get sections end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name sections end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name new sections end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_name begin_name sections end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name sections end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name new sections end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name sections end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name new sections end_name end_expr end_return end_block 
 begin_comment sets the handler param handler a handler able of processing the output and error streams from the cvs exe end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set execute stream handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name execute stream handler end_name end_type begin_name handler end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name execute stream handler end_name end_name begin_operator EQ end_operator begin_name handler end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name external resolver end_name begin_parameter_list begin_param begin_decl begin_type begin_name class end_name end_type begin_name resolver impl class end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name resolver impl end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name resolver impl end_name end_name begin_operator EQ end_operator begin_name resolver impl end_name end_expr end_expr_stmt begin_comment end_comment begin_comment get method instances for each of the methods we need to end_comment begin_comment call on the resolver impl using reflection we can t end_comment begin_comment call them directly because they require on the end_comment begin_comment xml commons resolver library which may not be available end_comment begin_comment in the classpath end_comment begin_comment end_comment begin_try begin_block begin_expr_stmt begin_expr begin_name set xml catalog end_name begin_operator EQ end_operator begin_call begin_name begin_name resolver impl class end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name xml catalog end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name parse catalog end_name begin_operator EQ end_operator begin_call begin_name begin_name resolver impl class end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name string end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name resolve entity end_name begin_operator EQ end_operator begin_call begin_name begin_name resolver impl class end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name string end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr begin_operator UNP end_operator begin_expr begin_name begin_name string end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name resolve end_name begin_operator EQ end_operator begin_call begin_name begin_name resolver impl class end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name string end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr begin_operator UNP end_operator begin_expr begin_name begin_name string end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no such method exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name b unzip 2 test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set remote end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name remote end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set remote end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name classname end_name begin_argument_list begin_argument begin_expr begin_name remote end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment fired when the build finishes this adds the time taken and any error stacktrace to the build element and writes the document to disk param event an event with any relevant extra information will not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name total time end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name begin_name build element end_name begin_operator DOT end_operator begin_name start time end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name build element end_name begin_operator DOT end_operator begin_name element end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name time attr end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name default logger end_name begin_operator DOT end_operator begin_name format time end_name end_name begin_argument_list begin_argument begin_expr begin_name total time end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name build element end_name begin_operator DOT end_operator begin_name element end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name error attr end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment print the stacktrace in the build file it is always useful end_comment begin_comment better have too much info than not enough end_comment begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name text end_name end_type begin_name err text end_name begin_init begin_expr begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create cdata section end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name get stack trace end_name end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name stacktrace end_name begin_init begin_expr begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create element end_name end_name begin_argument_list begin_argument begin_expr begin_name stacktrace tag end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stacktrace end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_name err text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name build element end_name begin_operator DOT end_operator begin_name element end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_name stacktrace end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name out filename end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name out filename end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name out filename end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name xsl uri end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name xsl uri end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name xsl uri end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name writer end_name end_type begin_name out end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_comment specify output in utf 8 otherwise accented characters will blow end_comment begin_comment up everything end_comment begin_decl_stmt begin_decl begin_type begin_name output stream end_name end_type begin_name stream end_name begin_init begin_expr begin_name out stream end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name stream end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name stream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name out filename end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name output stream writer end_name begin_argument_list begin_argument begin_expr begin_name stream end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name xsl uri end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name xsl uri end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name dom element writer end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name write end_name begin_argument_list begin_argument begin_expr begin_name begin_name build element end_name begin_operator DOT end_operator begin_name element end_name end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name exc end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name exc end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name out end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_then end_if end_block end_finally end_try begin_expr_stmt begin_expr begin_name build element end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test full path matches case sensitive end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name directory scanner end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test to string end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a test caused an error param test a test param error the error thrown by the test end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add error end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name error end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name format error end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get eol length end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name eol str end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment defines wether errors are machine parseable optional default true since ant 1 7 param ide errors a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set ide errors end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name ide errors end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ide errors end_name end_name begin_operator EQ end_operator begin_name ide errors end_name end_expr end_expr_stmt end_block 
 begin_comment gets the password return returns a string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get password end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name password end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test head skip end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name expected end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_name expected end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment jdk 1 1 compatible access to set the context class loader return the class loader instance being used as the context classloader on the current thread returns null on jdk 1 1 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name class loader end_name end_type begin_name get context class loader end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name current thread end_name begin_init begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name current thread end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name current thread end_name begin_operator DOT end_operator begin_name get context class loader end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment converts an array of characters representing hexadecimal values into an array of bytes of those same values the returned array will be half the length of the passed array as it takes two characters to represent any given byte an exception is thrown if the passed char array has an odd number of elements note this code is copied from jakarta commons codec param data an array of characters representing hexadecimal values return the converted array of bytes throws build exception on error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name decode hex end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name char end_name begin_index end_index end_name end_type begin_name data end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name l end_name begin_init begin_expr begin_name begin_name data end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name l end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name out end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_name l end_name begin_operator UNP end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_comment two characters form the hex value end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init begin_operator UNP end_operator begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name l end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name digit end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name data end_name begin_index begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name f end_name begin_operator EQ end_operator begin_name f end_name begin_operator UNP end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name digit end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name data end_name begin_index begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name out end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name byte end_name begin_argument_list begin_argument begin_expr begin_name f end_name begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name out end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name look ahead 2 end_name begin_init begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment if source at eof and look ahead is ctrl z return eof not ctrl z end_comment begin_if begin_condition begin_expr begin_name look ahead 2 end_name begin_operator EQT end_operator begin_operator MINUS end_operator begin_operator UNP end_operator begin_name look ahead end_name begin_operator EQT end_operator begin_name ctrlz end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator MINUS end_operator end_expr end_return end_block end_then end_if begin_comment return current look ahead end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name look ahead end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name look ahead end_name begin_operator EQ end_operator begin_name look ahead 2 end_name end_expr end_expr_stmt begin_return begin_expr begin_name i end_name end_expr end_return end_block 
 begin_comment empty implementation required by sub build listener interface param event ignored since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name sub build started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment add a line contains filter param line contains a code line contains code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add line contains end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name line contains end_name end_type begin_name line contains end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filter readers end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name line contains end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the prefix for this type of line comment param comment the prefix for a line comment of this type must not be code null code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name comment end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_name comment end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init test prop file end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name test props end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name fname key end_name end_expr end_argument begin_argument begin_expr begin_name fname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name lname key end_name end_expr end_argument begin_argument begin_expr begin_name lname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name email key end_name end_expr end_argument begin_argument begin_expr begin_name email end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file output stream end_name end_type begin_name fos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name test props file path end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test props end_name begin_operator DOT end_operator begin_name store end_name end_name begin_argument_list begin_argument begin_expr begin_name fos end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the command line arguments for the jvm param s jvmargs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set jvmargs end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get command line end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create vm argument end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set line end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no append end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name rec in end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name rec dir end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set a custom attribute for the jaxp factory implementation param name the attribute name param value the value of the attribute usually a boolean string or object since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set attribute end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name object end_name begin_index end_index end_type begin_name pair end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name name end_name end_expr begin_expr begin_name value end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name pair end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test mac lines end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test flex integer end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment defines how many times to retry executing ftp command before giving up default is 0 try once and if failure then give up param retries allowed number of retries to allow 1 means keep trying forever forever may also be specified as a synonym for 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set retries allowed end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name retries allowed end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name retries allowed end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name retries allowed end_name end_name begin_operator EQ end_operator begin_name begin_name retryable end_name begin_operator DOT end_operator begin_name retry forever end_name end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name retries end_name begin_init begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name retries allowed end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name retries end_name begin_operator LT end_operator begin_name begin_name retryable end_name begin_operator DOT end_operator begin_name retry forever end_name end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name retries allowed end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name retries allowed end_name end_name begin_operator EQ end_operator begin_name retries end_name end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name number format exception end_name end_type begin_name px end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name retries allowed end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_else end_if end_block 
 begin_comment set the filename to write the output to this is relative to the value of the dir attribute if it has been set or to the base directory of the current project otherwise param output file the name of the file to which the output should go end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name output end_name end_name begin_operator EQ end_operator begin_name output file end_name end_expr end_expr_stmt end_block 
 begin_comment flushes this output stream and forces any buffered output bytes to be written out to the stream exception io exception if an i o error occurs since 1 14 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name flush end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name out end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment get the named resource param name path name of the file relative to the dir attribute return the resource with the given name since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name resource end_name end_type begin_name get resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment replaces code xxx code style constructions in the given value with the string value of the corresponding data types param project the container project this is used solely for logging purposes must not be code null code param value the string to be scanned for property references may be code null code in which case this method returns immediately with no effect param keys mapping string to string of property names to their values must not be code null code exception build exception if the string contains an opening code code without a closing code code return the original string with the properties replaced or code null code if the original string is code null code deprecated since 1 6 x use property helper end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name replace properties end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name keys end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name property helper end_name end_type begin_name ph end_name begin_init begin_expr begin_call begin_name begin_name property helper end_name begin_operator DOT end_operator begin_name get property helper end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name ph end_name begin_operator DOT end_operator begin_name replace properties end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr begin_name keys end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name prop name end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name value end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name task project end_name begin_operator DOT end_operator begin_name set new property end_name end_name begin_argument_list begin_argument begin_expr begin_name prop name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment indicate whether only protected and public classes and members are to be included in the scope processed param b true if scope is to be protected end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set protected end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add arg if end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the name of the test class return the name of the test end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_comment tests whether or not a string matches against a pattern the pattern may contain two special characters br means zero or more characters br means one and only one character param pattern the pattern to match against must not be code null code param str the string which must be matched against the pattern must not be code null code return code true code if the string matches against the pattern or code false code otherwise end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name match end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name pattern end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name str end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name match end_name begin_argument_list begin_argument begin_expr begin_name pattern end_name end_expr end_argument begin_argument begin_expr begin_name str end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment methods end_comment begin_comment default constructor end_comment begin_specifier end_specifier begin_name xml catalog end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set checked end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the labeled version to operate on in source safe param label the new label value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set label end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name label end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal label end_name end_name begin_argument_list begin_argument begin_expr begin_name label end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test antcall end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment if true enables optimization flag param f on off flag end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set optimize end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name optimize end_name begin_operator EQ end_operator begin_name f end_name end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment constructs a new jikes object param jop parser to send jike s output to param command name of jikes executable param project the current project end_comment begin_specifier end_specifier begin_name jikes end_name begin_parameter_list begin_param begin_decl begin_type begin_name jikes output parser end_name end_type begin_name jop end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name command end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name jop end_name end_name begin_operator EQ end_operator begin_name jop end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name command end_name end_name begin_operator EQ end_operator begin_name command end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name project end_name end_name begin_operator EQ end_operator begin_name project end_name end_expr end_expr_stmt end_block 
 begin_comment see enumerated attribute get values end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test contains incomplete 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name make remote dir end_name begin_argument_list begin_argument begin_expr begin_name lftp end_name end_expr end_argument begin_argument begin_expr begin_name remotedir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name error end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name expected basedirs end_name begin_index begin_expr begin_name calls end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name assertion failed error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name error end_name begin_operator EQ end_operator begin_name e end_name end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if end_block 
 begin_comment dissect the specified absolute path param path the path to dissect return string root remaining path throws java lang null pointer exception if path is null since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name dissect end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name sep end_name begin_init begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name path end_name begin_operator EQ end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name sep end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name sep end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment make sure we are dealing with an absolute path end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is absolute path end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name path end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name root end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name colon end_name begin_init begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name colon end_name begin_operator GT end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name on dos end_name begin_operator UNP end_operator begin_name on net ware end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name next end_name begin_init begin_expr begin_name colon end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name root end_name begin_operator EQ end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name next end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name char end_name begin_index end_index end_type begin_name ca end_name begin_init begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name to char array end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name root end_name begin_operator UNP end_operator begin_name sep end_name end_expr end_expr_stmt begin_comment remove the initial separator the root has it end_comment begin_expr_stmt begin_expr begin_name next end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name begin_name ca end_name begin_index begin_expr begin_name next end_name end_expr end_index end_name begin_operator EQT end_operator begin_name sep end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_name next end_name begin_operator PLUS end_operator begin_operator DP end_operator begin_name next end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb path end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment eliminate consecutive slashes after the drive spec end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name next end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name ca end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name ca end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator begin_name sep end_name begin_operator UNP end_operator begin_name begin_name ca end_name begin_index begin_expr begin_name i end_name begin_operator MINUS end_operator end_expr end_index end_name begin_operator UNP end_operator begin_name sep end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb path end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name ca end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_expr_stmt begin_expr begin_name path end_name begin_operator EQ end_operator begin_call begin_name begin_name sb path end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator UNP end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_name sep end_name end_expr end_condition begin_then begin_block begin_comment unc drive end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name nextsep end_name begin_init begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name sep end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name nextsep end_name begin_operator EQ end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name sep end_name end_expr end_argument begin_argument begin_expr begin_name nextsep end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name root end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name nextsep end_name begin_operator GT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name nextsep end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_name path end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name path end_name begin_operator EQ end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name root end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name root end_name begin_operator EQ end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name path end_name begin_operator EQ end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name root end_name end_expr begin_operator UNP end_operator begin_expr begin_name path end_name end_expr end_block end_expr end_return end_block 
 begin_comment additional end_comment begin_comment override object to string return information about this cache end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name cachefile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment this comment extract from j unit task may also apply here end_comment begin_comment in vm is not very nice since it could probably hang the end_comment begin_comment whole build imho this method should be avoided and it would be best end_comment begin_comment to remove it in future versions tbd s ba end_comment begin_comment execute inside vm param commandline the command line return the return value of the mvm exception build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name execute in vm end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline java end_name end_type begin_name commandline end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name jdepend end_name begin_operator DOT end_operator begin_name textui end_name begin_operator DOT end_operator begin_name j depend end_name end_name end_type begin_name jdepend end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name format end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name jdepend end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name begin_name jdepend end_name begin_operator DOT end_operator begin_name xmlui end_name begin_operator DOT end_operator begin_name j depend end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name jdepend end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name begin_name jdepend end_name begin_operator DOT end_operator begin_name textui end_name begin_operator DOT end_operator begin_name j depend end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name file writer end_name end_type begin_name fw end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name get output file end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name fw end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file writer end_name begin_argument_list begin_argument begin_expr begin_call begin_name get output file end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name jdepend end_name begin_operator DOT end_operator begin_name set writer end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_name fw end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get output file end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_if begin_condition begin_expr begin_call begin_name get classespath end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment this is the new better way use classespath instead end_comment begin_comment of sourcespath the code is currently the same you end_comment begin_comment need class files in a directory to use this or jar files end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name c p end_name begin_init begin_expr begin_call begin_name get classespath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name c p end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name c p end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment not necessary as j depend would fail but why loose end_comment begin_comment some time end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name jdepend end_name begin_operator DOT end_operator begin_name add directory end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_for end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name get sourcespath end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment this is the old way and is deprecated classespath is end_comment begin_comment the right way to do this and is above end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s p end_name begin_init begin_expr begin_call begin_name get sourcespath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name s p end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name s p end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment not necessary as j depend would fail but why loose end_comment begin_comment some time end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name jdepend end_name begin_operator DOT end_operator begin_name add directory end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_for end_block end_then end_if end_else end_if begin_comment this bit turns exclude child tags into patters to ignore end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name patterns end_name begin_init begin_expr begin_call begin_name begin_name default patterns end_name begin_operator DOT end_operator begin_name get exclude patterns end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name patterns end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name begin_name patterns end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name set filter end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name v end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name patterns end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name patterns end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name package filter c end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name v end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name set filter end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name jdepend end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name o end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name jdepend end_name begin_operator DOT end_operator begin_name analyze end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name fw end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try begin_return begin_expr begin_name success end_name end_expr end_return end_block 
 begin_comment test to make sure that one can define a not present optional type twice and then have a valid definition end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test double not present end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add an extended selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add custom end_name begin_parameter_list begin_param begin_decl begin_type begin_name extend selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 7 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment ejbc will fail if the serialized descriptor file does not match the bean classes you can test for this by trying to load the deployment descriptor if it fails the serialized file needs to be regenerated because the associated class files don t match end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name regenerate serialized file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name ser file end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name file input stream end_name end_type begin_name fis end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name ser file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object input stream end_name end_type begin_name ois end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name object input stream end_name begin_argument_list begin_argument begin_expr begin_name fis end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name deployment descriptor end_name end_type begin_name dd end_name begin_init begin_expr begin_operator LPAR end_operator begin_name deployment descriptor end_name begin_operator RPAR end_operator begin_call begin_name begin_name ois end_name begin_operator DOT end_operator begin_name read object end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fis end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment since the descriptor read properly everything should be o k end_comment begin_return begin_expr end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment weblogic will throw an error if the deployment descriptor does end_comment begin_comment not match the class files end_comment begin_return begin_expr end_expr end_return end_block end_catch end_try end_block 
 begin_comment semicolon separated list of dl ls to refer to param s the new references value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set references end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name references end_name begin_operator EQ end_operator begin_name s end_name end_expr end_expr_stmt end_block 
 begin_comment output style valid options are ul li brief b display a brief history li codediff d display line by line file changes li nofile f do not display individual file updates in the project history li default no option specified display in source safe s default format ul param attr the history style end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set style end_name begin_parameter_list begin_param begin_decl begin_type begin_name brief codediff nofile end_name end_type begin_name attr end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name option end_name begin_init begin_expr begin_call begin_name begin_name attr end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name option end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name style brief end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal style end_name end_name begin_argument_list begin_argument begin_expr begin_name flag brief end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name option end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name style codediff end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal style end_name end_name begin_argument_list begin_argument begin_expr begin_name flag codediff end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name option end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name style default end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal style end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name option end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name style nofile end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal style end_name end_name begin_argument_list begin_argument begin_expr begin_name flag no file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name attr end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_else end_if end_else end_if end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert index created end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment no usages found for this method runs a perforce command without a handler param command the command that one wants to execute throws build exception if failonerror is set and the command fails end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name exec p 4 command end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name command end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name exec p 4 command end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment pass output sent to system out to the test runner so it can collect ot for the formatters param output output coming from system out since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle flush end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name runner end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name runner end_name begin_operator DOT end_operator begin_name handle flush end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name show output end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name handle flush end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name handle flush end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment set the packetlist location attribute param src a code file code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set packagelist loc end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name packagelist loc end_name begin_operator EQ end_operator begin_name src end_name end_expr end_expr_stmt end_block 
 begin_comment interpret the filename as a file relative to the given file unless the filename already represents an absolute filename differs from code new file file filename code in that the resulting file s path will always be a normalized absolute pathname also if it is determined that code filename code is context relative code file code will be discarded and the reference will be resolved using available context state information about the filesystem param file the reference file for relative paths this instance must be an absolute file and must not contain quot quot or quot quot sequences same for instead of if it is null this call is equivalent to code new java io file filename get absolute file code param filename a file name return an absolute file throws java lang null pointer exception if filename is null end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name resolve file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is absolute path end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name sep end_name begin_init begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name filename end_name begin_operator EQ end_operator begin_call begin_name begin_name filename end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name sep end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name sep end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name is context relative path end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name file end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment on cygwin our current directory can be a unc end_comment begin_comment assume user dir is absolute or all hell breaks loose end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name udir end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name filename end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_name sep end_name begin_operator UNP end_operator begin_call begin_name begin_name udir end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_name sep end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name filename end_name begin_operator EQ end_operator begin_call begin_name dissect end_name begin_argument_list begin_argument begin_expr begin_name udir end_name end_expr end_argument end_argument_list end_call begin_index begin_expr end_expr end_index begin_operator PLUS end_operator begin_call begin_name begin_name filename end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_name filename end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name normalize end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment set the exists attribute param exists if true this resource exists end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set exists end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name exists end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment deletes uncontrolled items from the local tree it is assumed that this method will not be called until all the items in the corresponding folder have been processed and that the internal map will contain only uncontrolled items end_comment begin_type begin_name void end_name end_type begin_name process uncontrolled items end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name is active end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name local end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name delete end_name begin_argument_list begin_argument begin_expr begin_name local end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_then end_if end_block 
 begin_comment tests cp commandline generation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test cp command line end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s test cmd line end_name begin_init begin_expr begin_block begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name ss exe end_name end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name command cp end_name end_name end_expr begin_expr begin_name ds vss project path end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag autoresponse def end_name end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag login end_name end_name begin_operator PLUS end_operator begin_name vss username end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_comment set up a vss cp task end_comment begin_decl_stmt begin_decl begin_type begin_name msvsscp end_name end_type begin_name vss cp end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name msvsscp end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss cp end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss cp end_name begin_operator DOT end_operator begin_name set login end_name end_name begin_argument_list begin_argument begin_expr begin_name vss username end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss cp end_name begin_operator DOT end_operator begin_name set vsspath end_name end_name begin_argument_list begin_argument begin_expr begin_name ds vss project path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name commandline end_name begin_operator EQ end_operator begin_call begin_name begin_name vss cp end_name begin_operator DOT end_operator begin_name build cmd line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check command lines end_name begin_argument_list begin_argument begin_expr begin_name s test cmd line end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the component at specified index param index the index of components return the value of component at index end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name index end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_name begin_name components end_name begin_index begin_expr begin_name index end_name end_expr end_index end_name end_expr end_return end_block 
 begin_comment return false if end of file else true end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name read block end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name debug end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr blk idx end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name in stream end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr rec idx end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name offset end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name bytes needed end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name block size end_name end_name end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name bytes needed end_name begin_operator GT end_operator end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name num bytes end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name in stream end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name block buffer end_name end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name bytes needed end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment end_comment begin_comment note end_comment begin_comment we have fit eof and the block is not full end_comment begin_comment end_comment begin_comment this is a broken archive it does not follow the standard end_comment begin_comment blocking algorithm however because we are generous and end_comment begin_comment it requires little effort we will simply ignore the error end_comment begin_comment and continue as if the entire block were read this does end_comment begin_comment not appear to break anything upstream we used to return end_comment begin_comment false in this case end_comment begin_comment end_comment begin_comment thanks to yohann roussel alcatel fr for this fix end_comment begin_comment end_comment begin_if begin_condition begin_expr begin_name num bytes end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name offset end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment ensure that we do not read gigabytes of zeros end_comment begin_comment for a corrupt tar file end_comment begin_comment see http issues apache org bugzilla show bug cgi id 39924 end_comment begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment however just leaving the unread portion of the buffer dirty does end_comment begin_comment cause problems in some cases this problem is described in end_comment begin_comment http issues apache org bugzilla show bug cgi id 29877 end_comment begin_comment end_comment begin_comment the solution is to fill the unused portion of the buffer with zeros end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name arrays end_name begin_operator DOT end_operator begin_name fill end_name end_name begin_argument_list begin_argument begin_expr begin_name block buffer end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name begin_operator PLUS end_operator begin_name bytes needed end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_block end_then end_if begin_expr_stmt begin_expr begin_name offset end_name begin_operator UNP end_operator begin_name num bytes end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bytes needed end_name begin_operator UNP end_operator begin_name num bytes end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name num bytes end_name begin_operator UNP end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name block size end_name end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name debug end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name num bytes end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name block size end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_while begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr blk idx end_name end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block 
 begin_comment returns the nested exception if any return the nested exception or code null code if no exception is associated with this one end_comment begin_type begin_specifier end_specifier begin_name throwable end_name end_type begin_name get exception end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name cause end_name end_expr end_return end_block 
 begin_comment no op end_comment begin_comment signals that a task is starting param event recieved build event end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_comment no op end_comment end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this method sets what namespace the typelib is to be in this is an operation which is required to have been performed param namespace the namespace to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set namespace end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name namespace end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name namespace end_name end_name begin_operator EQ end_operator begin_name namespace end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment classpath to be used when searching for classes and resources return an empty path instance to be configured by ant end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment check style visibility modifier on end_comment begin_comment execute the subtask param telnet the client throws build exception always as it is not allowed to instantiate this object end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list begin_param begin_decl begin_type begin_name ant telnet client end_name end_type begin_name telnet end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name have merge files end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name have entries end_name begin_argument_list begin_argument begin_expr begin_name mergefiles end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment gets whether or not the java runtime should be included in this task s classpath return the includejavaruntime attribute end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get includejavaruntime end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name include java runtime end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name map file name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_return end_block 
 begin_comment check if a given class can be loaded end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name check class end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_if begin_condition begin_expr begin_name ignore systemclasses end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name loader end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create class loader end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name set parent first end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name add java libraries end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name loader end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name find class end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name security exception end_name end_type begin_name se end_name end_decl end_param end_parameter_list begin_block begin_comment class found but restricted name this is end_comment begin_comment actually the case we re looking for in jdk 1 3 end_comment begin_comment so catch the exception and return end_comment begin_return begin_expr end_expr end_return end_block end_catch end_try end_block end_then begin_else begin_block begin_return begin_expr end_expr end_return end_block end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_name loader end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name load class end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name l end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class loader end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment can return null to represent the bootstrap class loader end_comment begin_comment see api docs of class get class loader end_comment begin_if begin_condition begin_expr begin_name l end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name l end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if end_else end_if begin_return begin_expr end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name classname end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name classname end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirector 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds an environment variable used when forking p will be ignored if we are not forking a new vm p param var environment variable to be added since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add env end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name environment end_name begin_operator DOT end_operator begin_name variable end_name end_name end_type begin_name var end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name env end_name begin_operator DOT end_operator begin_name add variable end_name end_name begin_argument_list begin_argument begin_expr begin_name var end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set system output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment validate our settings return either the url or the full file path end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name evaluate end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name url end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get url end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name make url end_name end_expr end_condition begin_then begin_block begin_try begin_block begin_return begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name to url end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to external form end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name malformed url exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error no url convert end_name begin_operator PLUS end_operator begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment test vss label required attributes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test label exceptions end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr begin_name taskdefs dir end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment executes a target we have set up pre configure project has been called param target name target to run end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute target end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name print stream end_name end_type begin_name sys out end_name begin_init begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name print stream end_name end_type begin_name sys err end_name begin_init begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name end_name end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sys out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sys err end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name out buffer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name print stream end_name end_type begin_name out end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name ant output stream end_name begin_argument_list begin_argument begin_expr begin_name out buffer end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set out end_name end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name err buffer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name print stream end_name end_type begin_name err end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name ant output stream end_name begin_argument_list begin_argument begin_expr begin_name err buffer end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set err end_name end_name begin_argument_list begin_argument begin_expr begin_name err end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name log buffer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name full log buffer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name build exception end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name execute target end_name end_name begin_argument_list begin_argument begin_expr begin_name target name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set out end_name end_name begin_argument_list begin_argument begin_expr begin_name sys out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set err end_name end_name begin_argument_list begin_argument begin_expr begin_name sys err end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test scenario core selector defaults end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name do scenario test end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test run adapter end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment j unit stuff end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_comment project reference is set in super set up end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set up end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment init the testclasses path object end_comment begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name prj end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name prj end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name testclasses end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name prj end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name prj end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment this method gets the value of this definition will be null if a condition was declared and not met param owner owning task return the value of the definition throws build exception if there is an error end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get value end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name owner end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name owner end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is set end_name begin_argument_list begin_argument begin_expr begin_name owner end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add text end_name begin_parameter_list begin_param begin_decl begin_type begin_name text end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name instructions end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment whether diagnostic information about the compile is generated param diag a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set diag end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name diag end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name diag end_name end_name begin_operator EQ end_operator begin_name diag end_name end_expr end_expr_stmt end_block 
 begin_comment swallow as this simply doesn t seem to be kaffe end_comment begin_comment returns the version of java this class is running under return the version of java as a string e g 1 1 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get java version end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name java version end_name end_expr end_return end_block 
 begin_comment return the canonical form of a filename p if the specified file name is relative it is resolved with respect to the project s base directory param file name the name of the file to resolve must not be code null code return the resolved file end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name resolve file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name file name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument begin_argument begin_expr begin_name file name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test double def end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name log end_name begin_init begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test default bad class end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name rmic end_name begin_operator DOT end_operator begin_name error rmic failed end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment dont look for much text here as it is vendor and version dependent end_comment begin_expr_stmt begin_expr begin_call begin_name assert log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the class path id of the class path delegate return the class path id end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get classpath id end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get delegate end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class load id end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set the destination file param dest the destination file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dest end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name dest file end_name begin_operator EQ end_operator begin_name dest end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name dirs end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_return end_block 
 begin_comment handles text within an element this base implementation just throws an exception param buf a character array of the text within the element will not be code null code param start the start element in the array param count the number of characters to read from the array exception sax parse exception if this method is not overridden or in case of error in an overridden version end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name characters end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name char end_name begin_index end_index end_name end_type begin_name buf end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name start end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name count end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax parse exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name s end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr begin_name start end_name end_expr end_argument begin_argument begin_expr begin_name count end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name sax parse exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name s end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name helper impl end_name begin_operator DOT end_operator begin_name locator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment add the text element param text the nested text element to add since ant 1 6 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured text end_name begin_parameter_list begin_param begin_decl begin_type begin_name text end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name text end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name text end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment check if used by attributes end_comment begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name attribute end_name end_type begin_name attribute end_name begin_init begin_expr begin_operator LPAR end_operator begin_name attribute end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name text end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name text end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_for begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name text end_name end_name begin_operator EQ end_operator begin_name text end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name text name end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name text end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment styles all existing resources since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process resources end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name stylesheet end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name resource end_name end_type begin_name r end_name begin_init begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name is exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name base end_name begin_init begin_expr begin_name base dir end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name r end_name begin_operator UNP end_operator begin_name file resource end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file resource end_name end_type begin_name f end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file resource end_name begin_operator RPAR end_operator begin_name r end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name base end_name begin_operator EQ end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name base end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get file end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name process end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name dest dir end_name end_expr end_argument begin_argument begin_expr begin_name stylesheet end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_comment set the classpath to be used for this compilation param classpath the classpath to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name compile classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name compile classpath end_name begin_operator EQ end_operator begin_name classpath end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name compile classpath end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment the output file this is identical to the dest file attribute param params the new output file value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name params end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set dest file end_name begin_argument_list begin_argument begin_expr begin_name params end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name t stamp test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name char end_name end_type begin_name get next char end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get char end_name begin_argument_list begin_argument begin_expr begin_name next end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process element end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment add a list of source files param fl the file list to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add srcfilelist end_name begin_parameter_list begin_param begin_decl begin_type begin_name file list end_name end_type begin_name fl end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create sources end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name fl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name fire start test suite end_name begin_parameter_list end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name formatters end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name j unit result formatter end_name begin_operator RPAR end_operator begin_call begin_name begin_name formatters end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name start test suite end_name begin_argument_list begin_argument begin_expr begin_name junit test end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the id under which this reference will be stored in the new project return the id of the reference in the new project end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get to refid end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name targetid end_name end_expr end_return end_block 
 begin_comment add a none selector entry on the selector list param selector the code none selector code to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add none end_name begin_parameter_list begin_param begin_decl begin_type begin_name none selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test nested compiler args end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test compiler arg end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name args end_name begin_init begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name get current compiler args end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name javac end_name begin_operator DOT end_operator begin_name implementation specific argument end_name end_name end_type begin_name arg end_name begin_init begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name create compiler arg end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name ford end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name prefect end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name test arg end_name begin_init begin_expr begin_name ford end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name prefect end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name test arg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name args end_name begin_operator EQ end_operator begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name get current compiler args end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name test arg end_name end_expr end_argument begin_argument begin_expr begin_name begin_name args end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name set compiler end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name args end_name begin_operator EQ end_operator begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name get current compiler args end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name args end_name begin_operator EQ end_operator begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name get current compiler args end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name args end_name begin_operator EQ end_operator begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name get current compiler args end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name test arg end_name end_expr end_argument begin_argument begin_expr begin_name begin_name args end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name set line end_name end_name begin_argument_list begin_argument begin_expr begin_name test arg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name args end_name begin_operator EQ end_operator begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name get current compiler args end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name ford end_name end_expr end_argument begin_argument begin_expr begin_name begin_name args end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name prefect end_name end_expr end_argument begin_argument begin_expr begin_name begin_name args end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is path end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test time iso date end_name begin_parameter_list end_parameter_list begin_block begin_comment make sure that elapsed time in set via date works end_comment begin_decl_stmt begin_decl begin_type begin_name time zone end_name end_type begin_name time zone end_name begin_init begin_expr begin_call begin_name begin_name time zone end_name begin_operator DOT end_operator begin_name get time zone end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name calendar end_name end_type begin_name cal end_name begin_init begin_expr begin_call begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list begin_argument begin_expr begin_name time zone end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name set end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name text end_name begin_init begin_expr begin_call begin_name begin_name date utils end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name get time end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name date utils end_name begin_operator DOT end_operator begin_name iso 8601 time pattern end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the uid for the tar entry end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get uid end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name tar file set end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get uid end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_name uid end_name end_expr end_return end_block 
 begin_comment set the classname of the ejbc compiler optional normally ejbjar determines the appropriate class based on the dtd used for the ejb the ejb 2 0 compiler featured in weblogic 6 has however been deprecated in version 7 when using with version 7 this attribute should be set to quot weblogic ejbc quot to avoid the deprecation warning param ejbc class the name of the class to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set ejbc class end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name ejbc class end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ejbc class end_name end_name begin_operator EQ end_operator begin_name ejbc class end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test greedy inline handler refid end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name stdin end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment assert that a property ends with param property param ending end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert property ends with end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name property end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name ending end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name substring end_name begin_init begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_call begin_name begin_name ending end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name ending end_name end_expr end_argument begin_argument begin_expr begin_name substring end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a name entry on the include files list return an name entry object to be configured end_comment begin_type begin_specifier end_specifier begin_name begin_name pattern set end_name begin_operator DOT end_operator begin_name name entry end_name end_name end_type begin_name create includes file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name create includes file end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment get the argument or null for no argument needed return the target type parameter to csc end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get target type parameter end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name not empty end_name begin_argument_list begin_argument begin_expr begin_name target type end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator PLUS end_operator begin_name target type end_name end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr end_expr end_return end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test parse human sizes end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name kilobyte end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name megabyte end_name begin_init begin_expr begin_name kilobyte end_name begin_operator STAR end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name gigabyte end_name begin_init begin_expr begin_name megabyte end_name begin_operator STAR end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name terabyte end_name begin_init begin_expr begin_name gigabyte end_name begin_operator STAR end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name petabyte end_name begin_init begin_expr begin_name terabyte end_name begin_operator STAR end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name parse human sizes end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name kilobyte end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name parse human sizes end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name megabyte end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name parse human sizes end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name gigabyte end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name parse human sizes end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name terabyte end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name parse human sizes end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name petabyte end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name parse human sizes end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the manifest file to use this can be either the location of a manifest or the name of a jar added through a fileset if its the name of an added jar the task expects the manifest to be in the jar at meta inf manifest mf param manifest file the manifest file to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set manifest end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name manifest file end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name manifest file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name manifest file end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name manifest file end_name end_name begin_operator EQ end_operator begin_name manifest file end_name end_expr end_expr_stmt end_block 
 begin_comment clone this path return path with shallowly cloned resource children end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name clone end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name result end_name begin_init begin_expr begin_operator LPAR end_operator begin_name path end_name begin_operator RPAR end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name result end_name begin_operator DOT end_operator begin_name union end_name end_name begin_operator EQ end_operator begin_name union end_name begin_operator EQT end_operator begin_operator QM end_operator begin_name union end_name begin_operator DP end_operator begin_operator LPAR end_operator begin_name union end_name begin_operator RPAR end_operator begin_call begin_name begin_name union end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name result end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name clone not supported exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment adds contents of a directory to the output end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add dir contents end_name begin_parameter_list begin_param begin_decl begin_type begin_name zip output stream end_name end_type begin_name output end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name compress end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name contents end_name begin_init begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name contents end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_name begin_name contents end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add dir contents end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name prefix end_name begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name compress end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name add file end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name prefix end_name end_expr end_argument begin_argument begin_expr begin_name compress end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for end_block 
 begin_comment get an input stream for the resource return an input stream containing this resource s content throws io exception if unable to provide the content of this resource as a stream throws unsupported operation exception if input streams are not supported for this resource type end_comment begin_type begin_specifier end_specifier begin_name input stream end_name end_type begin_name get input stream end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get input stream end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name is exists end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name byte array input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name get value end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_name unset end_name end_expr end_return end_block 
 begin_comment add a path to the bootclasspath since ant 1 6 return created bootclasspath end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create bootclasspath end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get command line end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create bootclasspath end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create path end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test dont add newline 1 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name project path end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name project path end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test time zone end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name tstamp end_name begin_operator DOT end_operator begin_name custom format end_name end_name end_type begin_name format end_name begin_init begin_expr begin_call begin_name begin_name tstamp end_name begin_operator DOT end_operator begin_name create format end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name format end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name format end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name format end_name begin_operator DOT end_operator begin_name set timezone end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name date end_name end_type begin_name date end_name begin_init begin_expr begin_call begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get time end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name format end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name date end_name end_expr end_argument begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name today end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name simple date format end_name end_type begin_name sdf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name simple date format end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sdf end_name begin_operator DOT end_operator begin_name set time zone end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name time zone end_name begin_operator DOT end_operator begin_name get time zone end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name expected end_name begin_init begin_expr begin_call begin_name begin_name sdf end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_name date end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name expected end_name end_expr end_argument begin_argument begin_expr begin_name today end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates the nested code lt entity gt code element not allowed if this catalog is itself a reference to another catalog that is a catalog cannot both refer to another em and em contain elements or other attributes param entity the information about the uri resource mapping to be added to the catalog exception build exception if this is a reference and no nested elements are allowed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add entity end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource location end_name end_type begin_name entity end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name add dtd end_name begin_argument_list begin_argument begin_expr begin_name entity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the code folder name code attribute to the given value to search the root folder use a slash or backslash or simply don t set a folder at all param folder name the subfolder from which to check out files see get folder name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set folder name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name folder name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name folder name end_name end_name begin_operator EQ end_operator begin_name folder name end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name doit end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name end_decl end_param begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name os end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name uu encoder end_name begin_argument_list begin_argument begin_expr begin_call begin_name get in file end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name encode end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument begin_argument begin_expr begin_name os end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment debugging method to print the properties in the given hashtable end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name print properties end_name begin_parameter_list begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name xmlproperties end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name key enum end_name begin_init begin_expr begin_call begin_name begin_name xmlproperties end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name key enum end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name current key end_name begin_init begin_expr begin_call begin_name begin_name key enum end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name current key end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name xmlproperties end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name current key end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_comment return the file mode deprecated since 1 7 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get file mode end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name file mode end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test duplicate targets import end_name begin_parameter_list end_parameter_list begin_block begin_comment overriding target from imported buildfile is allowed end_comment begin_decl_stmt begin_decl begin_type begin_name bft end_name end_type begin_name bft end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name bft end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bft end_name begin_operator DOT end_operator begin_name expect log end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test the code that validates the selector end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test validate end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name size selector end_name end_type begin_name s end_name begin_init begin_expr begin_operator LPAR end_operator begin_name size selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 1 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 1 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name size selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 2 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 2 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name size selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name parameter end_name end_type begin_name param end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name parameter end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name parameter end_name begin_index end_index end_type begin_name params end_name begin_init begin_expr begin_block begin_expr begin_name param end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set parameters end_name end_name begin_argument_list begin_argument begin_expr begin_name params end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 3 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 3 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name size selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name param end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name parameter end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name params end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_name param end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set parameters end_name end_name begin_argument_list begin_argument begin_expr begin_name params end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 4 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 4 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name size selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name parameter end_name end_type begin_name param 1 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name parameter end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name parameter end_name end_type begin_name param 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name parameter end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param 1 end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param 1 end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param 2 end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param 2 end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name params end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name parameter end_name begin_index begin_expr end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name params end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_name param 1 end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name params end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_name param 2 end_name end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set parameters end_name end_name begin_argument_list begin_argument begin_expr begin_name params end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 5 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 5 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment logs a message to say that the target has started if this logger allows information level messages param event an event with any relevant extra information must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name begin_operator LE end_operator begin_name msg output level end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name begin_operator PLUS end_operator begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name print message end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get priority end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name compare end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name o 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name o 2 end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key 1 end_name begin_init begin_expr begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name map end_name begin_operator DOT end_operator begin_name entry end_name end_name begin_operator RPAR end_operator begin_name o 1 end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get key end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key 2 end_name begin_init begin_expr begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name map end_name begin_operator DOT end_operator begin_name entry end_name end_name begin_operator RPAR end_operator begin_name o 2 end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get key end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name key 1 end_name begin_operator DOT end_operator begin_name compare to end_name end_name begin_argument_list begin_argument begin_expr begin_name key 2 end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment overrides the base resource collection container version to check the nested tokenizer param stk the stack of data types to use recursively param p the project to use to dereference the references throws build exception on error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name die on circular reference end_name begin_parameter_list begin_param begin_decl begin_type begin_name stack end_name end_type begin_name stk end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is checked end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name die on circular reference end_name end_name begin_argument_list begin_argument begin_expr begin_name stk end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name tokenizer end_name begin_operator UNP end_operator begin_name data type end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name stk end_name begin_operator DOT end_operator begin_name push end_name end_name begin_argument_list begin_argument begin_expr begin_name tokenizer end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name invoke circular reference check end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name data type end_name begin_operator RPAR end_operator begin_name tokenizer end_name end_expr end_argument begin_argument begin_expr begin_name stk end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name set checked end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment sets the ftp action to be taken currently accepts put get del mkdir chmod list and site param action the ftp action to be performed throws build exception if the action is not a valid action end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set action end_name begin_parameter_list begin_param begin_decl begin_type begin_name action end_name end_type begin_name action end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name action end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name action end_name begin_operator DOT end_operator begin_name get action end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment reads bytes from the current tar archive entry this method is aware of the boundaries of the current entry in the archive and will deal with them as if they were this stream s start and eof param buf the buffer into which to place bytes read param offset the offset at which to place bytes read param num to read the number of bytes to read return the number of bytes read or 1 at eof throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name buf end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name offset end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name num to read end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name total read end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name entry offset end_name end_name begin_operator GE end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name entry size end_name end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator MINUS end_operator end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name num to read end_name begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name entry offset end_name end_name begin_operator RPAR end_operator begin_operator GT end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name entry size end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name num to read end_name begin_operator EQ end_operator begin_call begin_name int end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name entry size end_name end_name begin_operator MINUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name entry offset end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name read buf end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name sz end_name begin_init begin_expr begin_operator LPAR end_operator begin_name num to read end_name begin_operator GT end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name read buf end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name read buf end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator DP end_operator begin_name num to read end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name read buf end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name sz end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name sz end_name begin_operator GE end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name read buf end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name read buf end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name new len end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name read buf end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator begin_name sz end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name new buf end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_name new len end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name read buf end_name end_name end_expr end_argument begin_argument begin_expr begin_name sz end_name end_expr end_argument begin_argument begin_expr begin_name new buf end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name new len end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name read buf end_name end_name begin_operator EQ end_operator begin_name new buf end_name end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name total read end_name begin_operator UNP end_operator begin_name sz end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name num to read end_name begin_operator UNP end_operator begin_name sz end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator UNP end_operator begin_name sz end_name end_expr end_expr_stmt end_block end_then end_if begin_while begin_condition begin_expr begin_name num to read end_name begin_operator GT end_operator end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name rec end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name buffer end_name begin_operator DOT end_operator begin_name read record end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name rec end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment unexpected eof end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name num to read end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name sz end_name begin_init begin_expr begin_name num to read end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name rec len end_name begin_init begin_expr begin_name begin_name rec end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name rec len end_name begin_operator GT end_operator begin_name sz end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name rec end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name sz end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name read buf end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_name rec len end_name begin_operator MINUS end_operator begin_name sz end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name rec end_name end_expr end_argument begin_argument begin_expr begin_name sz end_name end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name read buf end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name rec len end_name begin_operator MINUS end_operator begin_name sz end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name sz end_name begin_operator EQ end_operator begin_name rec len end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name rec end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name rec len end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name total read end_name begin_operator UNP end_operator begin_name sz end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name num to read end_name begin_operator UNP end_operator begin_name sz end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator UNP end_operator begin_name sz end_name end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name entry offset end_name end_name begin_operator UNP end_operator begin_name total read end_name end_expr end_expr_stmt begin_return begin_expr begin_name total read end_name end_expr end_return end_block 
 begin_comment interface test listener p a test is finished param test the test end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end test end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name test name end_name begin_init begin_expr begin_call begin_name begin_name j unit version helper end_name begin_operator DOT end_operator begin_name get test case name end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log test listener event end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name test name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_return end_block 
 begin_comment cleans up the testbed by calling a target in the code src etc testcases types selectors xml code file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name cleanup bed end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name tbed end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tbed end_name begin_operator DOT end_operator begin_name tear down end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name tbed end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment configure a commandline element for things like cvs root quiet etc param c the command line which will be configured if the commandline is initially null the function is a noop otherwise the function append to the commandline arguments concerning ul li cvs package li li compression li li quiet or reallyquiet li li cvsroot li li noexec li ul end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name configure commandline end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name cvs package end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set line end_name begin_argument_list begin_argument begin_expr begin_name cvs package end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name compression end_name end_name begin_operator GT end_operator begin_operator UNP end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name compression end_name end_name begin_operator LE end_operator begin_name maximum comression level end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name compression end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name quiet end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name reallyquiet end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name reallyquiet end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name noexec end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name cvs root end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set line end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name cvs root end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment do the work to run the script param exec name the name that will be passed to the scripting engine for this script execution exception build exception if someting goes wrong exectuing the script end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute script end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name exec name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name evaluate script end_name begin_argument_list begin_argument begin_expr begin_name exec name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the target type to one of exe library param target type the enumerated value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set target type end_name begin_parameter_list begin_param begin_decl begin_type begin_name target types end_name end_type begin_name target type end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name target type end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name target type end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dynamic attribute end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set new property end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment move to the next line throws build exception if there is an error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name next line end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ch end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name eolcount end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name eol str end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_name ch end_name begin_operator UNP end_operator begin_operator MINUS end_operator begin_operator UNP end_operator begin_name ch end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name ch end_name begin_operator UNP end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator begin_name ch end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator begin_operator MINUS end_operator begin_operator UNP end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment eof has been reached end_comment begin_expr_stmt begin_expr begin_name reached eof end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_switch begin_condition begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator begin_name ch end_name end_expr end_condition begin_block begin_case begin_expr end_expr begin_comment check for r r n and r r n end_comment begin_comment regard r r not followed by n as two lines end_comment begin_expr_stmt begin_expr begin_operator PPLUS end_operator begin_name eolcount end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name eol str end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name mark end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_switch begin_condition begin_expr begin_name ch end_name end_expr end_condition begin_block begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name char end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name eolcount end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name eol str end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name reset end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_break end_break end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_operator PPLUS end_operator begin_name eolcount end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name eol str end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_operator MINUS end_operator end_expr begin_comment don t reposition when we ve reached the end end_comment begin_comment of the stream end_comment begin_break end_break end_case begin_default begin_expr_stmt begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name reset end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_default end_block end_switch begin_comment end of switch char ch reader read end_comment begin_break end_break end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_operator PPLUS end_operator begin_name eolcount end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name eol str end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_default begin_comment fall tru end_comment end_default end_block end_switch begin_comment end of switch char ch end_comment begin_comment if at eolcount 0 and trailing characters of string end_comment begin_comment are ctrl zs set eof str end_comment begin_if begin_condition begin_expr begin_name eolcount end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator MMINUS end_operator begin_name i end_name begin_operator GE end_operator begin_operator UNP end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_name ctrlz end_name end_expr end_condition begin_block begin_comment keep searching for the first z end_comment end_block end_while begin_if begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_comment trailing characters are zs end_comment begin_comment construct new line and eof str end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name eof str end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name substring end_name begin_argument_list begin_argument begin_expr begin_name i end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name i end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name set length end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name reached eof end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name set length end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block end_then end_if begin_comment end of if eolcount 0 end_comment end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name src file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_type begin_name void end_name end_type begin_name complete end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get ps end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name print end_name begin_argument_list begin_argument begin_expr begin_name accum end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name complete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the base directory optional default is the project s basedir param dir the base directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set basedir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name base dir end_name begin_operator EQ end_operator begin_name dir end_name end_expr end_expr_stmt end_block 
 begin_comment set the source dir to find the source java files param src dir name the source directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src dir name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name src dir end_name begin_operator EQ end_operator begin_name src dir name end_name end_expr end_expr_stmt end_block 
 begin_comment return a string that describes the java command and arguments for in vm executions p the class name is the executable in this context p return the description string since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name describe java command end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name describe command end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get java command end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment add a bcc address element param address the email address end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add bcc end_name begin_parameter_list begin_param begin_decl begin_type begin_name email address end_name end_type begin_name address end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name bcc list end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name address end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds a reference to a classpath defined elsewhere param r a reference to a classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set refid end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the simulationmode flag return simulation mode flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is simulation mode end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name simulationmode end_name end_expr end_return end_block 
 begin_comment the output file for this run of jlink usually a jar or zip file param outfile the output file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set outfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name outfile end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name outfile end_name end_name begin_operator EQ end_operator begin_name outfile end_name end_expr end_expr_stmt end_block 
 begin_comment get the classloader for this definition return the classloader for this definition end_comment begin_type begin_specifier end_specifier begin_name class loader end_name end_type begin_name get class loader end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name class loader end_name end_expr end_return end_block 
 begin_comment read a constant pool entry from a class stream param cp stream the data input stream which contains the constant pool entry to be read exception io exception if there is a problem reading the entry from the stream end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name read end_name begin_parameter_list begin_param begin_decl begin_type begin_name data input stream end_name end_type begin_name cp stream end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name index end_name begin_operator EQ end_operator begin_call begin_name begin_name cp stream end_name begin_operator DOT end_operator begin_name read unsigned short end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the name of extension param extension name the name of extension end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set extension name end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name extension name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name verify not a reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name extension name end_name end_name begin_operator EQ end_operator begin_name extension name end_name end_expr end_expr_stmt end_block 
 begin_comment flag to include the xml root tag as a first value in the property name optional default is true param keep root if true default include the xml root tag end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set keeproot end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name keep root end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name keep root end_name end_name begin_operator EQ end_operator begin_name keep root end_name end_expr end_expr_stmt end_block 
 begin_comment determine if the two entries are equal equality is determined by the header names being equal param it entry to be checked for equality return true if the entries are equal end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name tar entry end_name end_type begin_name it end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment set the desired file extension to be used for the target optional default is html param name the extension to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set extension end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name target extension end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment indicates whether there are more elements in the enumeration to return return code true code if there are more elements in the enumeration code false code otherwise end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has more elements end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name next resource end_name end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment keystore location required param keystore the keystore location end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set keystore end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name keystore end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name keystore end_name end_name begin_operator EQ end_operator begin_name keystore end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the name lastmodified flag exists flag and directory flag param name relative path of the resource expects quot quot to be used as the directory separator param exists if true the resource exists param lastmodified the last modification time of the resource param directory if true this resource is a directory end_comment begin_specifier end_specifier begin_name resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name exists end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name lastmodified end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name directory end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name exists end_name end_expr end_argument begin_argument begin_expr begin_name lastmodified end_name end_expr end_argument begin_argument begin_expr begin_name directory end_name end_expr end_argument begin_argument begin_expr begin_name unknown size end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create a dynamically discovered condition built in conditions can be discovered from the org apache tools ant taskdefs condition antlib param name the condition to create return the dynamic condition if found null otherwise end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name create dynamic element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name cond end_name begin_init begin_expr begin_call begin_name begin_name component helper end_name begin_operator DOT end_operator begin_name get component helper end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create component end_name begin_argument_list begin_argument begin_expr begin_name condition antlib end_name begin_operator PLUS end_operator begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name cond end_name begin_operator UNP end_operator begin_name condition end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name cond end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name condition end_name begin_operator RPAR end_operator begin_name cond end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name cond end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name accept end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment name of the stylesheet to use given either relative to the project s basedir or as an absolute path required param xsl file the stylesheet to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set style end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name xsl file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name xsl file end_name end_name begin_operator EQ end_operator begin_name xsl file end_name end_expr end_expr_stmt end_block 
 begin_comment get the debug switch argument return the debug parameter to csc end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get debug parameter end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name debug end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment get the next property helper in the chain return the next property helper end_comment begin_type begin_specifier end_specifier begin_name property helper end_name end_type begin_name get next end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name next end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end document end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test complete directory move end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment path swallows the basedir it seems end_comment begin_comment assert true get project resolve file a exists end_comment end_block 
 begin_comment convert ant regexp substitution option to apache regex options param options the ant regexp options return the apache regex substition options end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get subs options end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name options end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name subs options end_name begin_init begin_expr begin_name begin_name re end_name begin_operator DOT end_operator begin_name replace firstonly end_name end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name regexp util end_name begin_operator DOT end_operator begin_name has flag end_name end_name begin_argument_list begin_argument begin_expr begin_name options end_name end_expr end_argument begin_argument begin_expr begin_name replace all end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name subs options end_name begin_operator EQ end_operator begin_name begin_name re end_name begin_operator DOT end_operator begin_name replace all end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name subs options end_name end_expr end_return end_block 
 begin_comment handle output sent to system err and flush the stream param output string of stderr since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle error flush end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name get error stream end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name handle error flush end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name handle error output end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test recursion end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name x end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name m end_name begin_init begin_expr begin_call begin_name begin_name x end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name m end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment constructs an exit exception param status the status code returned via system exit end_comment begin_specifier end_specifier begin_name exit exception end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name status end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name status end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name status end_name end_name begin_operator EQ end_operator begin_name status end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test multiple targets one doesnt exist fo efalse end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment implement resource selector inherit doc end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource selector end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name is selected end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name control end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name one control end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name t end_name begin_init begin_expr end_expr end_init begin_operator UNP end_operator begin_name f end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name it end_name begin_init begin_expr begin_call begin_name begin_name control end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name when end_name begin_operator DOT end_operator begin_name evaluate end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name compare end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name t end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name f end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_else end_if end_block end_for begin_return begin_expr begin_call begin_name begin_name against end_name begin_operator DOT end_operator begin_name evaluate end_name end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment the line start attribute is used to parse the output of the pcli command it defaults to code quot p code the parser already knows about and this property is useful in cases where the repository is accessed on a windows platform via a drive letter mapping return the line start attribute end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get line start end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name line start end_name end_expr end_return end_block 
 begin_comment add a scale to the operation param instr the scale to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add scale end_name begin_parameter_list begin_param begin_decl begin_type begin_name scale end_name end_type begin_name instr end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name instructions end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name instr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment performs the check for circular references and returns the referenced file list param p the current project return the file list represented by a referenced filelist end_comment begin_type begin_specifier end_specifier begin_name file list end_name end_type begin_name get ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name file list end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment set the name of the file to which links will be written used when action quot record quot param lf the name of the file to write links to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set linkfilename end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name lf end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name link file name end_name end_name begin_operator EQ end_operator begin_name lf end_name end_expr end_expr_stmt end_block 
 begin_comment ensure pathconvert follows the immutability rule end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 7 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment these are options common to signing and verifying param cmd command to configure end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set common options end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name exec task end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name max memory end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add value end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_name max memory end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name verbose end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add value end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment now patch in all system properties end_comment begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name props end_name begin_init begin_expr begin_call begin_name begin_name sys properties end_name begin_operator DOT end_operator begin_name get variables vector end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name environment end_name begin_operator DOT end_operator begin_name variable end_name end_name end_type begin_name variable end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name environment end_name begin_operator DOT end_operator begin_name variable end_name end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name declare sys property end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr begin_name variable end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_comment is this value included in the enumeration param value the code string code value to look up return true if the value is valid end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name contains value end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_call begin_name index of value end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment create a reader if the use of the class did not specify another one if a build exception is thrown the caller may revert to an alternate reader return a new reader throws build exception if something went wrong end_comment begin_type begin_specifier end_specifier begin_name xml reader end_name end_type begin_name create default reader end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name jaxp utils end_name begin_operator DOT end_operator begin_name get xml reader end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment tests whether or not a given path matches the start of a given pattern up to the first p this is not a general purpose test and should only be used if you can live with false positives for example code pattern a code and code str b code will yield code true code param pattern the pattern to match against must not be code null code param str the path to match as a string must not be code null code param is case sensitive whether or not matching should be performed case sensitively return whether or not a given path matches the start of a given pattern up to the first end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name match pattern start end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name pattern end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name str end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name is case sensitive end_name end_decl end_param end_parameter_list begin_block begin_comment when str starts with a file separator pattern has to start with a end_comment begin_comment file separator end_comment begin_comment when pattern starts with a file separator str has to start with a end_comment begin_comment file separator end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name str end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name pattern end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name pat dirs end_name begin_init begin_expr begin_call begin_name tokenize path as array end_name begin_argument_list begin_argument begin_expr begin_name pattern end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name str dirs end_name begin_init begin_expr begin_call begin_name tokenize path as array end_name begin_argument_list begin_argument begin_expr begin_name str end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pat idx start end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pat idx end end_name begin_init begin_expr begin_name begin_name pat dirs end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name str idx start end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name str idx end end_name begin_init begin_expr begin_name begin_name str dirs end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_comment up to first end_comment begin_while begin_condition begin_expr begin_name pat idx start end_name begin_operator LE end_operator begin_name pat idx end end_name begin_operator UNP end_operator begin_name str idx start end_name begin_operator LE end_operator begin_name str idx end end_name end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name pat dir end_name begin_init begin_expr begin_name begin_name pat dirs end_name begin_index begin_expr begin_name pat idx start end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name pat dir end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name match end_name begin_argument_list begin_argument begin_expr begin_name pat dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name str dirs end_name begin_index begin_expr begin_name str idx start end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name is case sensitive end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name pat idx start end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name str idx start end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_while begin_if begin_condition begin_expr begin_name str idx start end_name begin_operator GT end_operator begin_name str idx end end_name end_expr end_condition begin_then begin_block begin_comment string is exhausted end_comment begin_return begin_expr end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name pat idx start end_name begin_operator GT end_operator begin_name pat idx end end_name end_expr end_condition begin_then begin_block begin_comment string not exhausted but pattern is failure end_comment begin_return begin_expr end_expr end_return end_block end_then begin_else begin_block begin_comment pattern now holds while string is not exhausted end_comment begin_comment this will generate false positives but we can live with that end_comment begin_return begin_expr end_expr end_return end_block end_else end_if end_else end_if end_block 
 begin_comment load ant s datatypes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init types end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name class loader end_name begin_init begin_expr begin_call begin_name get class loader end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name props end_name begin_init begin_expr begin_call begin_name get default definitions end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name property names end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name class name end_name begin_init begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name ant type definition end_name end_type begin_name def end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name ant type definition end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name set class name end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name set class loader end_name end_name begin_argument_list begin_argument begin_expr begin_name class loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ant type table end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name def end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_comment set the classpath by reference param r a reference to a path instance to be used as the classpath value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set refid end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle error output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name random err value end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_name line end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name random err value end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name error received end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment get vob name return string containing vob name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get vob end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m vob end_name end_expr end_return end_block 
 begin_comment tell if a file is a symbolic link return code true code for symbolic links end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is symbolic link end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name ftp file end_name begin_operator DOT end_operator begin_name is symbolic link end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment get the commentfile command param cmd containing the command line string with or without the commentfile flag and file appended end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get comment file command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get comment file end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes this breaks clearcase end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag commentfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get comment file end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get implementation end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_call begin_name begin_name tfactory end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment see build listener target started end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name initialized end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name logger end_name end_type begin_name log end_name begin_init begin_expr begin_call begin_name begin_name logger end_name begin_operator DOT end_operator begin_name get logger end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get name end_name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name info end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add thirteen end_name begin_parameter_list begin_param begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return a string that describes the command and arguments suitable for verbose output before a call to code runtime exec string code param line the commandline to describe return a string that describes the command and arguments since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name describe command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name describe command end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test select signed end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the regular expression to use to filter the properties param regex a regular expression end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set regex end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name regex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert valid end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name regex end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name regex end_name end_name begin_operator EQ end_operator begin_name regex end_name end_expr end_expr_stmt end_block 
 begin_comment cmp descriptor list end_comment begin_comment construct a new ejb info object with the given name param name the display name for the ejb end_comment begin_specifier end_specifier begin_name ejb info end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment set a logger param l a logger end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set logger end_name begin_parameter_list begin_param begin_decl begin_type begin_name xslt logger end_name end_type begin_name l end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name logger end_name begin_operator EQ end_operator begin_name l end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test record end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name supports symlinks end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name dir 3 rec end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name dir 3 rec end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_name dir 3 rec end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block 
 begin_comment specified file is invalid files do not exist end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 13 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert null end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test empty element if is reference end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name resource location end_name end_type begin_name dtd end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name resource location end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dtd end_name begin_operator DOT end_operator begin_name set public id end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dtd end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name catalog end_name begin_operator DOT end_operator begin_name add dtd end_name end_name begin_argument_list begin_argument begin_expr begin_name dtd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name catalog end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name catalog end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_decl_stmt begin_decl begin_type begin_name xml catalog end_name end_type begin_name catalog 2 end_name begin_init begin_expr begin_call begin_name new catalog end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name catalog 2 end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name catalog 2 end_name begin_operator DOT end_operator begin_name add configured xml catalog end_name end_name begin_argument_list begin_argument begin_expr begin_name catalog end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment append all files found by a directory scanner to a vector param files the vector to append the files to param ds the scanner to get the files from end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name append files end_name begin_parameter_list begin_param begin_decl begin_type begin_name vector end_name end_type begin_name files end_name end_decl end_param begin_param begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name dsfiles end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name dsfiles end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name dsfiles end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment return code true code if this code dewey decimal code is less than or equal to the other code dewey decimal code param other the other dewey decimal return true if less than or equal to other dewey decimal false otherwise end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is less than or equal end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name dewey decimal end_name end_type begin_name other end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name is greater than end_name begin_argument_list begin_argument begin_expr begin_name other end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test abstract cvs task end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set column end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name col end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name column end_name begin_operator EQ end_operator begin_name col end_name end_expr end_expr_stmt end_block 
 begin_comment sets the trust param trust whether to trust or not end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set trust end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name trust end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name trust all certificates end_name end_name begin_operator EQ end_operator begin_name trust end_name end_expr end_expr_stmt end_block 
 begin_comment add a majority selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add majority end_name begin_parameter_list begin_param begin_decl begin_type begin_name majority selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructs a new mail message to send an email use the given host as the mail server with port 25 param host the mail server to use exception io exception if there s any problem contacting the mail server end_comment begin_specifier end_specifier begin_name mail message end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name host end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name host end_name end_expr end_argument begin_argument begin_expr begin_name default port end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test create new file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test create new file end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name remove this end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name remove this end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name create new file end_name end_name begin_argument_list begin_argument begin_expr begin_name remove this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name remove this end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the file timestamp return the timestamp of a file or 1 for a url meaning we do not know its age end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name get timestamp end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_operator MINUS end_operator end_expr end_return end_block end_else end_if end_block 
 begin_comment add a target to this ant invocation param t the code target element code to add since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured target end_name begin_parameter_list begin_param begin_decl begin_type begin_name target element end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name targets end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the debugging flag param debug f true to turn on debugging end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set debug end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name debug f end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_operator EQ end_operator begin_name debug f end_name end_expr end_expr_stmt end_block 
 begin_comment setting this to true to use sftp protocol param yes or no if true sftp protocol will be used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set sftp end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name yes or no end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name is sftp end_name begin_operator EQ end_operator begin_name yes or no end_name end_expr end_expr_stmt end_block 
 begin_comment add a resource collection param rc the resource collection to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name rc end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name rc end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name resources end_name begin_operator EQ end_operator begin_name resources end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name union end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name resources end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment read in the file file reader fr new file reader f try buffered reader br new buffered reader fr string read null while read br read line null if read index of test property test value 0 found the property we set it s good return fail did not encounter set property in generated file finally try fr close catch io exception e end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to absolute end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name create relative file end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment adds text to the using the wrapper param buf a character array of the text within the element will not be code null code param start the start element in the array param count the number of characters to read from the array see project helper add text project object char int int end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name characters end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name char end_name begin_index end_index end_name end_type begin_name buf end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name start end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name count end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name wrapper end_name begin_operator DOT end_operator begin_name add text end_name end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr begin_name start end_name end_expr end_argument begin_argument begin_expr begin_name count end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the destination directory param dest dir the destination directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set todir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dest dir end_name end_name begin_operator EQ end_operator begin_name dest dir end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test empty file end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect report with text end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name xml result aggregator end_name begin_operator DOT end_operator begin_name warning empty file end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment choose your orb rmi jeremie david optional if omitted it defaults to the one present in classpath the corresponding j on as jar is automatically added to the classpath if your orb is david rmi iiop you must specify davidhost and davidport properties param in value rmi jeremie david end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set orb end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name in value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name orb end_name begin_operator EQ end_operator begin_name in value end_name end_expr end_expr_stmt end_block 
 begin_comment set the classpath to be used for this compilation param classpath the classpath used for this compilation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name compile classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name compile classpath end_name begin_operator EQ end_operator begin_name classpath end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name compile classpath end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment sets whether this classloader should run in isolated mode in isolated mode classes not found on the given classpath will not be referred to the parent class loader but will cause a class not found exception param isolated whether or not this classloader should run in isolated mode end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set isolated end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name isolated end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name ignore base end_name begin_operator EQ end_operator begin_name isolated end_name end_expr end_expr_stmt end_block 
 begin_comment return the set of code extension code objects representing optional packages that are required by the application contained in the jar file associated with the specified code manifest code if there are no such optional packages a zero length list is returned param manifest manifest to be parsed return the dependencies that are specified in manifes end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name extension end_name begin_index end_index end_type begin_name get required end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name manifest end_name end_type begin_name manifest end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name get listed end_name begin_argument_list begin_argument begin_expr begin_name manifest end_name end_expr end_argument begin_argument begin_expr begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name name end_name begin_operator DOT end_operator begin_name extension list end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment check style visibility modifier on end_comment begin_comment sets the primary reader param rdr the reader object end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set primary reader end_name begin_parameter_list begin_param begin_decl begin_type begin_name reader end_name end_type begin_name rdr end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name primary reader end_name begin_operator EQ end_operator begin_name rdr end_name end_expr end_expr_stmt end_block 
 begin_comment construct a new code mapper code element param p the owning ant code project code end_comment begin_specifier end_specifier begin_name mapper end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set project end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the value attribute of the filter object param value the new value value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment creates a classloader for the given project using the classpath given param project the project to which this classloader is to belong must not be code null code param classpath the classpath to use to load the classes may be code null code in which case no path elements are set up to start with param parent first if code true code indicates that the parent classloader should be consulted before trying to load the a class through this loader end_comment begin_specifier end_specifier begin_name ant class loader end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name parent first end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name classpath end_name end_expr end_argument begin_argument begin_expr begin_name parent first end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment defines the script manager defaults to auto param manager the scripting manager bsf or javax or auto end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set manager end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name manager end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name manager end_name end_name begin_operator EQ end_operator begin_name manager end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filter reader tail lines skip end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name expected end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_name expected end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment end_comment begin_comment gen ic options setter end_comment begin_comment end_comment begin_comment sets the code keepgenerated code flag param a boolean code true code if the flag must be set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set keepgenerated end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name a boolean end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name keepgenerated end_name begin_operator EQ end_operator begin_name a boolean end_name end_expr end_expr_stmt end_block 
 begin_comment creates a location consisting of a file name but no line number or column number param file name the name of the file may be code null code in which case the location is equivalent to link unknown location unknown location end_comment begin_specifier end_specifier begin_name location end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name file name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name file name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment no arg constructor end_comment begin_specifier end_specifier begin_name generic deployment tool end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment expose members for extensibility end_comment begin_comment return the file attribute end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get file end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name src end_name begin_operator UNP end_operator begin_name file resource end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name file resource end_name begin_operator RPAR end_operator begin_name src end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get file end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr end_expr end_return end_block end_else end_if end_block 
 begin_comment bugzilla report 39708 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test with style from dir end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name report file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment tests one the file object end_comment begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report file end_name begin_operator DOT end_operator begin_name can read end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report file end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment conversion to url via file utils like in xml result aggregator not as suggested in the bug report end_comment begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name report url end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file utils end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to uri end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name report file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name report stream end_name begin_init begin_expr begin_call begin_name begin_name report url end_name begin_operator DOT end_operator begin_name open stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report stream end_name begin_operator DOT end_operator begin_name available end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the style attribute param style the value to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set internal style end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name style end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name style end_name end_name begin_operator EQ end_operator begin_name style end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process line end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name line oriented output stream test end_name begin_operator DOT end_operator begin_name this end_name begin_operator DOT end_operator begin_name assert false end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name invoked end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name line oriented output stream test end_name begin_operator DOT end_operator begin_name this end_name begin_operator DOT end_operator begin_name assert equals end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name invoked end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment initialize this task throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name init end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name to uri end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name from uri end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file sets end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test istrue false end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property unset end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment logs the compilation parameters adds the files to compile and logs the quot nice source list quot param cmd the command line end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log and add files end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log and add files to compile end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructs a file path from a code file code uri p will be an absolute path if the given uri is absolute p p swallows that are not followed by two characters doesn t deal with non ascii characters p param uri the uri designating a file in the local filesystem return the local file system path for the file since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name from uri end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param end_parameter_list begin_block begin_synchronized begin_expr begin_name cache from uri lock end_name end_expr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name cache from uri request end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name cache from uri response end_name end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path end_name begin_init begin_expr begin_call begin_name begin_name locator end_name begin_operator DOT end_operator begin_name from uri end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name ret end_name begin_init begin_expr begin_call begin_name is absolute path end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call begin_operator QM end_operator begin_call begin_name normalize end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name path end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name cache from uri request end_name begin_operator EQ end_operator begin_name uri end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name cache from uri response end_name begin_operator EQ end_operator begin_name ret end_name end_expr end_expr_stmt begin_return begin_expr begin_name ret end_name end_expr end_return end_block end_synchronized end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 6 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get filtered file end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the jdk version option param jdk version the version to use since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set jd kversion end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name jdk version end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name jdk version end_name end_expr end_argument begin_argument begin_expr begin_name jdk version end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment reads source file line by line using the source encoding and searches for keys that are sandwiched between the start token and end token the values for these keys are looked up from the hashtable and substituted if the hashtable doesn t contain the key they key itself is used as the value detination files and directories are created as needed the destination file is overwritten only if the forceoverwritten attribute is set to true if the source file or any associated bundle resource file is newer than the destination file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name translate end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name files processed end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name src files end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name src files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dest end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name to dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name src files end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment make sure parent dirs exist else create them end_comment begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dest dir end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name dest end_name begin_operator DOT end_operator begin_name get parent end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dest dir end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name dest dir end_name begin_operator DOT end_operator begin_name mkdirs end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name dest last modified end_name begin_operator EQ end_operator begin_call begin_name begin_name dest end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name src end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get basedir end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name src files end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name src last modified end_name begin_operator EQ end_operator begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment check to see if dest file has to be recreated end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name needs work end_name begin_init begin_expr begin_name force overwrite end_name begin_operator UNP end_operator begin_name dest last modified end_name begin_operator LT end_operator begin_name src last modified end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name needs work end_name end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name icounter end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name icounter end_name begin_operator LT end_operator begin_name bundle max alternatives end_name end_expr end_condition begin_incr begin_expr begin_name icounter end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name needs work end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name dest last modified end_name begin_operator LT end_operator begin_name begin_name bundle last modified end_name begin_index begin_expr begin_name icounter end_name end_expr end_index end_name begin_operator RPAR end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name needs work end_name end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_name needs work end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name src files end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file output stream end_name end_type begin_name fos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name dest end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name buffered writer end_name end_type begin_name out end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name output stream writer end_name begin_argument_list begin_argument begin_expr begin_name fos end_name end_expr end_argument begin_argument begin_expr begin_name dest encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file input stream end_name end_type begin_name fis end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name in end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name fis end_name end_expr end_argument begin_argument begin_expr begin_name src encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name line tokenizer end_name end_type begin_name line tokenizer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name line tokenizer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name line tokenizer end_name begin_operator DOT end_operator begin_name set include delims end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name line tokenizer end_name begin_operator DOT end_operator begin_name get token end_name end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name line end_name begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_block begin_comment 2003 02 21 new replace algorithm by tbee tbee tbee org end_comment begin_comment because it wasn t able to replace something like aaa bbb end_comment begin_comment is there a start token end_comment begin_comment and there is still stuff following the start token end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name start index end_name begin_init begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name start token end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name start index end_name begin_operator GE end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name start index end_name begin_operator PLUS end_operator begin_call begin_name begin_name start token end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator LE end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_comment the new value this needs to be here end_comment begin_comment because it is required to calculate the next position to end_comment begin_comment search from at the end of the loop end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name replace end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment we found a starttoken is there an endtoken following end_comment begin_comment start at token tokenlength because start and end end_comment begin_comment token may be indentical end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name end index end_name begin_init begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name end token end_name end_expr end_argument begin_argument begin_expr begin_name start index end_name begin_operator PLUS end_operator begin_call begin_name begin_name start token end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name end index end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name start index end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment grab the token end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name token end_name begin_init begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name start index end_name begin_operator PLUS end_operator begin_call begin_name begin_name start token end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name end index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment if there is a white space or or then end_comment begin_comment it isn t to be treated as a valid key end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name valid token end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name k end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name k end_name begin_operator LT end_operator begin_call begin_name begin_name token end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name valid token end_name end_expr end_condition begin_incr begin_expr begin_name k end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name token end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name k end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name c end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is space char end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name valid token end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name valid token end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name start index end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment find the replace string end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name resource map end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_name token end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name replace end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name resource map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name token end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name token end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name replace end_name begin_operator EQ end_operator begin_name start token end_name begin_operator PLUS end_operator begin_name token end_name begin_operator PLUS end_operator begin_name end token end_name end_expr end_expr_stmt end_block end_else end_if begin_comment generate the new line end_comment begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name start index end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_name replace end_name begin_operator PLUS end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name end index end_name begin_operator PLUS end_operator begin_call begin_name begin_name end token end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment set start position for next search end_comment begin_expr_stmt begin_expr begin_name start index end_name begin_operator UNP end_operator begin_call begin_name begin_name replace end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if begin_comment find next starttoken end_comment begin_expr_stmt begin_expr begin_name start index end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name start token end_name end_expr end_argument begin_argument begin_expr begin_name start index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name line tokenizer end_name begin_operator DOT end_operator begin_name get token end_name end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_if begin_condition begin_expr begin_name in end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name out end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_operator PPLUS end_operator begin_name files processed end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name src files end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_for end_block end_for begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name files processed end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this operation is expected to call link system exit int which is what the base version does however it is possible to do something else param exit code code to exit with end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name exit end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name exit code end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name exit end_name end_name begin_argument_list begin_argument begin_expr begin_name exit code end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment checks to see that all required parameters are set throws build exception if the configuration is not valid end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check attributes end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name server end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name userid end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name password end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name action end_name begin_operator EQT end_operator begin_name list files end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name listing end_name begin_operator EQT end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name action end_name begin_operator EQT end_operator begin_name mk dir end_name begin_operator UNP end_operator begin_name remotedir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name action end_name begin_operator EQT end_operator begin_name chmod end_name begin_operator UNP end_operator begin_name chmod end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name action end_name begin_operator EQT end_operator begin_name site cmd end_name begin_operator UNP end_operator begin_name site command end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name is configuration set end_name end_name end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if end_block 
 begin_comment get the name of the compression method return the string g zip end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get compression name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test ns current end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name execute end_name end_type begin_name get execute end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name to execute end_name end_decl end_param begin_param begin_decl begin_type begin_name execute stream handler end_name end_type begin_name streamhandler end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_class begin_super begin_name execute end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_comment 2 is 0 and even so it is considered end_comment begin_comment failure on any platform currently supported end_comment begin_comment by execute is failure end_comment begin_return begin_expr end_expr end_return end_block end_function end_block end_class end_expr end_return end_block 
 begin_comment resolves an external entity found during xml processing if a public id is found that has been registered with the handler an code input source code will be returned which refers to the local copy if the public id hasn t been registered or if an error occurs the superclass implementation is used param public id the dtd s public identifier param system id the location of the dtd as found in the xml document end_comment begin_type begin_specifier end_specifier begin_name input source end_name end_type begin_name resolve entity end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name public id end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name system id end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name input stream end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_comment search the resource map and if not found file map end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name location end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name resource dtds end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name public id end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name location end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name input stream end_name begin_operator EQ end_operator begin_call begin_name begin_name class loader end_name begin_operator DOT end_operator begin_name get system resource end_name end_name begin_argument_list begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name open stream end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name location end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name file dtds end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name public id end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name location end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name input stream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name resolve entity end_name end_name begin_argument_list begin_argument begin_expr begin_name public id end_name end_expr end_argument begin_argument begin_expr begin_name system id end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_catch end_try begin_if begin_condition begin_expr begin_name input stream end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name resolve entity end_name end_name begin_argument_list begin_argument begin_expr begin_name public id end_name end_expr end_argument begin_argument begin_expr begin_name system id end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name input source end_name begin_argument_list begin_argument begin_expr begin_name input stream end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_comment return the embed attribute return the embed value end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is embed end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name embed end_name end_expr end_return end_block 
 begin_type begin_name void end_name end_type begin_name set global crc end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name new crc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name global crc end_name begin_operator EQ end_operator begin_name new crc end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test mapper end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment picks up the input from a property using the prompt as the name of the property param request an input request exception build exception if no property of that name can be found end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle input end_name begin_parameter_list begin_param begin_decl begin_type begin_name input request end_name end_type begin_name request end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name read props end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get prompt end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get prompt end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name set input end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name o end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name is input valid end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name o end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get prompt end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test single copy end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for the war task end_comment begin_specifier end_specifier begin_name war end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name archive type end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name empty behavior end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment generate a string rep of this distinguished name the format is each of the parameters name value separated by this is used on the command line return a string rep of this name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_init begin_expr begin_call begin_name begin_name params end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name first pass end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name first pass end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name first pass end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name dname param end_name end_type begin_name param end_name begin_init begin_expr begin_operator LPAR end_operator begin_name dname param end_name begin_operator RPAR end_operator begin_call begin_name begin_name params end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name encode end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name encode end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment helper method to retrieve main class which is different from versions param path classpath to search in param type the taskdef throws build exception thrown if the home directory is invalid or if the archive could not be found despite attempts to do so return the main class for the taskdef since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get main class end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name path end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name type end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name package prefix end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name main class end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name ant class loader end_name end_type begin_name l end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name ant class loader end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name l end_name begin_operator DOT end_operator begin_name set class path end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name concat system classpath end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name javacc class end_name begin_init begin_expr begin_name com package end_name begin_operator PLUS end_operator begin_name com javacc class end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name begin_init begin_expr begin_call begin_name begin_name l end_name begin_operator DOT end_operator begin_name get resource as stream end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name javacc class end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name is end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name package prefix end_name begin_operator EQ end_operator begin_name com package end_name end_expr end_expr_stmt begin_switch begin_condition begin_expr begin_name type end_name end_expr end_condition begin_block begin_case begin_expr begin_name taskdef type javacc end_name end_expr begin_expr_stmt begin_expr begin_name main class end_name begin_operator EQ end_operator begin_name com javacc class end_name end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name taskdef type jjtree end_name end_expr begin_expr_stmt begin_expr begin_name main class end_name begin_operator EQ end_operator begin_name com jjtree class end_name end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name taskdef type jjdoc end_name end_expr begin_expr_stmt begin_expr begin_name main class end_name begin_operator EQ end_operator begin_name com jjdoc class end_name end_expr end_expr_stmt begin_break end_break end_case begin_default begin_comment fall through end_comment end_default end_block end_switch end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name javacc class end_name begin_operator EQ end_operator begin_name org package 3 1 end_name begin_operator PLUS end_operator begin_name org javacc class end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name is end_name begin_operator EQ end_operator begin_call begin_name begin_name l end_name begin_operator DOT end_operator begin_name get resource as stream end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name javacc class end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name is end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name package prefix end_name begin_operator EQ end_operator begin_name org package 3 1 end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name javacc class end_name begin_operator EQ end_operator begin_name org package 3 0 end_name begin_operator PLUS end_operator begin_name org javacc class end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name is end_name begin_operator EQ end_operator begin_call begin_name begin_name l end_name begin_operator DOT end_operator begin_name get resource as stream end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name javacc class end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name is end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name package prefix end_name begin_operator EQ end_operator begin_name org package 3 0 end_name end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if begin_if begin_condition begin_expr begin_name is end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_switch begin_condition begin_expr begin_name type end_name end_expr end_condition begin_block begin_case begin_expr begin_name taskdef type javacc end_name end_expr begin_expr_stmt begin_expr begin_name main class end_name begin_operator EQ end_operator begin_name org javacc class end_name end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name taskdef type jjtree end_name end_expr begin_expr_stmt begin_expr begin_name main class end_name begin_operator EQ end_operator begin_name org jjtree class end_name end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name taskdef type jjdoc end_name end_expr begin_expr_stmt begin_expr begin_name main class end_name begin_operator EQ end_operator begin_name org jjdoc class end_name end_expr end_expr_stmt begin_break end_break end_case begin_default begin_comment fall through end_comment end_default end_block end_switch end_block end_then end_if end_block end_else end_if begin_if begin_condition begin_expr begin_name package prefix end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name main class end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name type end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_name package prefix end_name begin_operator PLUS end_operator begin_name main class end_name end_expr end_return end_block 
 begin_comment gets the code server port code attribute return a string containing the port on the star team server to use see set server port int end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get server port end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name server port end_name end_expr end_return end_block 
 begin_comment create a string to replace the token as the text of a nested element return replacement value code nested string code to configure end_comment begin_type begin_specifier end_specifier begin_name nested string end_name end_type begin_name create replace value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name value end_name end_expr end_return end_block 
 begin_comment validate that all our parameters have been properly initialized throws build exception if something is not set up properly end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate setup end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name path end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment determine the separator strings the dirsep and pathsep attributes end_comment begin_comment override the target os settings end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name dsep end_name begin_init begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name psep end_name begin_init begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name path separator end_name end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name target os end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name psep end_name begin_operator EQ end_operator begin_name target windows end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name dsep end_name begin_operator EQ end_operator begin_name target windows end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name path sep end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment override with pathsep end_comment begin_expr_stmt begin_expr begin_name psep end_name begin_operator EQ end_operator begin_name path sep end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name dir sep end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment override with dirsep end_comment begin_expr_stmt begin_expr begin_name dsep end_name begin_operator EQ end_operator begin_name dir sep end_name end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name path sep end_name begin_operator EQ end_operator begin_name psep end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name dir sep end_name begin_operator EQ end_operator begin_name dsep end_name end_expr end_expr_stmt end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name on missing end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment set the handler type param type a handler type end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set type end_name begin_parameter_list begin_param begin_decl begin_type begin_name handler type end_name end_type begin_name type end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name type end_name end_name begin_operator EQ end_operator begin_name type end_name end_expr end_expr_stmt end_block 
 begin_comment tests to make sure that the selector is selecting files correctly end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test selection behaviour end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name date selector end_name end_type begin_name s end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name results end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name date selector end_name begin_operator DOT end_operator begin_name time comparisons end_name end_name end_type begin_name before end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name date selector end_name begin_operator DOT end_operator begin_name time comparisons end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name before end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name date selector end_name begin_operator DOT end_operator begin_name time comparisons end_name end_name end_type begin_name equal end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name date selector end_name begin_operator DOT end_operator begin_name time comparisons end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name equal end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name date selector end_name begin_operator DOT end_operator begin_name time comparisons end_name end_name end_type begin_name after end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name date selector end_name begin_operator DOT end_operator begin_name time comparisons end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name after end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name make bed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name date selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set datetime end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set when end_name end_name begin_argument_list begin_argument begin_expr begin_name before end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name date selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set datetime end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set when end_name end_name begin_argument_list begin_argument begin_expr begin_name before end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set checkdirs end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name date selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set datetime end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set when end_name end_name begin_argument_list begin_argument begin_expr begin_name after end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name date selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set datetime end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set when end_name end_name begin_argument_list begin_argument begin_expr begin_name before end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name date selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set datetime end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name simple date format end_name end_type begin_name formatter end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name simple date format end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name date end_name end_type begin_name d end_name begin_init begin_expr begin_call begin_name begin_name formatter end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name parse position end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name milliseconds end_name begin_init begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name get millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set when end_name end_name begin_argument_list begin_argument begin_expr begin_name equal end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name date selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set millis end_name end_name begin_argument_list begin_argument begin_expr begin_name milliseconds end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set when end_name end_name begin_argument_list begin_argument begin_expr begin_name equal end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name date selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set datetime end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set when end_name end_name begin_argument_list begin_argument begin_expr begin_name after end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name date selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name parameter end_name end_type begin_name param 1 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name parameter end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name parameter end_name end_type begin_name param 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name parameter end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param 1 end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param 1 end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param 2 end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param 2 end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name parameter end_name begin_index end_index end_type begin_name params end_name begin_init begin_expr begin_block begin_expr begin_name param 1 end_name end_expr begin_expr begin_name param 2 end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set parameters end_name end_name begin_argument_list begin_argument begin_expr begin_name params end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name make mirror end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name date selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name testtime end_name begin_init begin_expr begin_name begin_name mirrorfiles end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name last modified end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set millis end_name end_name begin_argument_list begin_argument begin_expr begin_name testtime end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set when end_name end_name begin_argument_list begin_argument begin_expr begin_name after end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set granularity end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name mirror selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name date selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name testtime end_name begin_operator EQ end_operator begin_name begin_name mirrorfiles end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name last modified end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set millis end_name end_name begin_argument_list begin_argument begin_expr begin_name testtime end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set when end_name end_name begin_argument_list begin_argument begin_expr begin_name before end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set granularity end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name mirror selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name cleanup mirror end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name cleanup bed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test use timestamp end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 but case insensitive end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name directory scanner end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set case sensitive end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for abstract ssh message param verbose if true do verbose logging param session the ssh session to use since ant 1 6 2 end_comment begin_specifier end_specifier begin_name abstract ssh message end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name verbose end_name end_decl end_param begin_param begin_decl begin_type begin_name session end_name end_type begin_name session end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name verbose end_name end_name begin_operator EQ end_operator begin_name verbose end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name session end_name end_name begin_operator EQ end_operator begin_name session end_name end_expr end_expr_stmt end_block 
 begin_comment adds the content of pcdata sections to an element param project the project containing the target must not be code null code param target the target object to be configured must not be code null code param buf a character array of the text within the element will not be code null code param start the start element in the array param count the number of characters to read from the array exception build exception if the target object doesn t accept text end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add text end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name char end_name begin_index end_index end_name end_type begin_name buf end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name start end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name count end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name add text end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name target end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr begin_name start end_name end_expr end_argument begin_argument begin_expr begin_name count end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns a new parser factory instance return the parser factory throws build exception on error since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name sax parser factory end_name end_type begin_name new parser factory end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_return begin_expr begin_call begin_name begin_name sax parser factory end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name factory configuration error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment get the value of the constant return the value of the constant untyped end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name value end_name end_expr end_return end_block 
 begin_comment return whether or not the scanner has included all the files or directories it has come across so far return code true code if all files and directories which have been found so far have been included end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is everything included end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name everything included end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment tests to make sure that the selector is selecting files correctly end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test selection behaviour end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name size selector end_name end_type begin_name s end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name results end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name size selector end_name begin_operator DOT end_operator begin_name byte units end_name end_name end_type begin_name kilo end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name size selector end_name begin_operator DOT end_operator begin_name byte units end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name kilo end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name size selector end_name begin_operator DOT end_operator begin_name byte units end_name end_name end_type begin_name kibi end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name size selector end_name begin_operator DOT end_operator begin_name byte units end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name kibi end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name size selector end_name begin_operator DOT end_operator begin_name byte units end_name end_name end_type begin_name tibi end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name size selector end_name begin_operator DOT end_operator begin_name byte units end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tibi end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name size selector end_name begin_operator DOT end_operator begin_name size comparisons end_name end_name end_type begin_name less end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name size selector end_name begin_operator DOT end_operator begin_name size comparisons end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name less end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name size selector end_name begin_operator DOT end_operator begin_name size comparisons end_name end_name end_type begin_name equal end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name size selector end_name begin_operator DOT end_operator begin_name size comparisons end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name equal end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name size selector end_name begin_operator DOT end_operator begin_name size comparisons end_name end_name end_type begin_name more end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name size selector end_name begin_operator DOT end_operator begin_name size comparisons end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name more end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name make bed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name size selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set when end_name end_name begin_argument_list begin_argument begin_expr begin_name less end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name size selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set when end_name end_name begin_argument_list begin_argument begin_expr begin_name more end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name size selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set when end_name end_name begin_argument_list begin_argument begin_expr begin_name equal end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name size selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set when end_name end_name begin_argument_list begin_argument begin_expr begin_name more end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set units end_name end_name begin_argument_list begin_argument begin_expr begin_name kilo end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name size selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set when end_name end_name begin_argument_list begin_argument begin_expr begin_name more end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set units end_name end_name begin_argument_list begin_argument begin_expr begin_name kibi end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name size selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set when end_name end_name begin_argument_list begin_argument begin_expr begin_name more end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set units end_name end_name begin_argument_list begin_argument begin_expr begin_name tibi end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name size selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name parameter end_name end_type begin_name param 1 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name parameter end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name parameter end_name end_type begin_name param 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name parameter end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name parameter end_name end_type begin_name param 3 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name parameter end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param 1 end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param 1 end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param 2 end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param 2 end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param 3 end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param 3 end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name parameter end_name begin_index end_index end_type begin_name params end_name begin_init begin_expr begin_block begin_expr begin_name param 1 end_name end_expr begin_expr begin_name param 2 end_name end_expr begin_expr begin_name param 3 end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set parameters end_name end_name begin_argument_list begin_argument begin_expr begin_name params end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name cleanup bed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment set whether to cache collections param b boolean cache flag end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set cache end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name set cache end_name end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filters file attribute end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment is the archive up to date in relationship to a list of files param files the files to check param dir the base directory for the files return true if the archive is up to date since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name archive is up to date end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name files end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name source file scanner end_name end_type begin_name sfs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name source file scanner end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name merging mapper end_name end_type begin_name mm end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name merging mapper end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mm end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name tar file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name sfs end_name begin_operator DOT end_operator begin_name restrict end_name end_name begin_argument_list begin_argument begin_expr begin_name files end_name end_expr end_argument begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name mm end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_name length end_name begin_operator EQT end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test delay update target finished end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name do delay update test end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this is a test that all selectors derived from base selector can use it calls the set error method and checks to ensure that a build exception is thrown as a result end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test responds to error end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name base selector end_name end_type begin_name s end_name begin_init begin_expr begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name s end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name beddir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_specifier end_specifier begin_name tuple end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name key end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name key end_name end_name begin_operator EQ end_operator begin_name key end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name find resources end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name test resource end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name collections end_name begin_operator DOT end_operator begin_name enumeration end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name collections end_name begin_operator DOT end_operator begin_name singleton end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_call begin_name begin_name collections end_name begin_operator DOT end_operator begin_name enumeration end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name collections end_name begin_operator DOT end_operator begin_name empty set end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_comment setter used to store the suffix for the generated weblogic jar file param in string the string to use as the suffix end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set suffix end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name in string end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name jar suffix end_name end_name begin_operator EQ end_operator begin_name in string end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test line with cariagereturn linefeed single bytes end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name write single bytes end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stream end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stream end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stream end_name begin_operator DOT end_operator begin_name assert invoked end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name date format end_name end_type begin_name get fallback format end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name debug end_name end_expr end_condition begin_then begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name begin_operator PLUS end_operator begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_then end_if end_block 
 begin_comment returns the project this target belongs to return the project this target belongs to or code null code if the project has not been set yet end_comment begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name get project end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name project end_name end_expr end_return end_block 
 begin_comment set the optional classpath to the xsl processor return a path instance to be configured by the ant core end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name classpath end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment add an expand properties filter param expand properties an code expand properties code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add expand properties end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name expand properties end_name end_type begin_name expand properties end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filter readers end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name expand properties end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test single end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name supports symlinks end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment get the full destination file where to write the result it is made of the tt todir tt and tt tofile tt attributes return the destination file where should be written the result file end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get destination file end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name to file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name to file end_name begin_operator EQ end_operator begin_name default filename end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name to dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name to dir end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name default dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name to dir end_name end_expr end_argument begin_argument begin_expr begin_name to file end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment param default value the default value for the implementation must not be null param magic value the value of a magic property that may hold a user choice may be null end_comment begin_specifier end_specifier begin_name facade task helper end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name default value end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name magic value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name default value end_name end_name begin_operator EQ end_operator begin_name default value end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name magic value end_name end_name begin_operator EQ end_operator begin_name magic value end_name end_expr end_expr_stmt end_block 
 begin_comment add a collection of resources to archive param res a resource collection to archive since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name res end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name resource collections end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name system id end_name begin_init begin_expr begin_call begin_name begin_name caller end_name begin_operator DOT end_operator begin_name get stylesheet system id end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name source end_name end_type begin_name xsl src end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name stream source end_name begin_argument_list begin_argument begin_expr begin_name system id end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name transformer end_name end_type begin_name tformer end_name begin_init begin_expr begin_call begin_name begin_name tfactory end_name begin_operator DOT end_operator begin_name new transformer end_name end_name begin_argument_list begin_argument begin_expr begin_name xsl src end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name source end_name end_type begin_name xml src end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name dom source end_name begin_argument_list begin_argument begin_expr begin_name begin_name caller end_name begin_operator DOT end_operator begin_name document end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name output stream end_name end_type begin_name os end_name begin_init begin_expr begin_call begin_name get output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tformer end_name begin_operator DOT end_operator begin_name set parameter end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name caller end_name begin_operator DOT end_operator begin_name to dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name result end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name stream result end_name begin_argument_list begin_argument begin_expr begin_name os end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tformer end_name begin_operator DOT end_operator begin_name transform end_name end_name begin_argument_list begin_argument begin_expr begin_name xml src end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment asks the net rexx compiler to print compilation times to the console valid true values are on or true anything else sets the flag to false the default value is false param time a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set time end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name time end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name time end_name end_name begin_operator EQ end_operator begin_name time end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test class not found end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier off bc end_comment begin_comment the file that will be created by this instance of jlink param outfile the file to create end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set outfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name outfile end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name outfile end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name outfile end_name end_name begin_operator EQ end_operator begin_name outfile end_name end_expr end_expr_stmt end_block 
 begin_comment test a mail message with no subject line subject is an optional field rfc 822 s 4 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no subject end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name server thread end_name end_type begin_name test mail server end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name server thread end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name server end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_name test mail server end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name server end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name client thread end_name end_type begin_name test mail client end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name client thread end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name from end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name to end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name set message end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name client end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_name test mail client end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name client end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name server end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment 60 s end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name client end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment a further 30 s end_comment end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ie end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name test mail server end_name begin_operator DOT end_operator begin_name get result end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name expected result end_name begin_init begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name local end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name local end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name local end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name expected result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name expected result end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name is failed end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name get fail message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment convenience method to expand properties param content the string to expand return the converted string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name expand end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name content end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace properties end_name begin_argument_list begin_argument begin_expr begin_name content end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name equals string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name a end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name a end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator LPAR end_operator begin_name b end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator DP end_operator begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment get the include default references flag or null for no argument needed return the parameter to csc end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get include default references parameter end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name include default references end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment tests check out commandline generation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test checkout command line end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s test cmd line end_name begin_init begin_expr begin_block begin_expr begin_name ss dir end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name ss exe end_name end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name command checkout end_name end_name end_expr begin_expr begin_name ds vss project path end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag autoresponse def end_name end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag recursion end_name end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag version date end_name end_name begin_operator PLUS end_operator begin_name date end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag login end_name end_name begin_operator PLUS end_operator begin_name vss username end_name end_expr begin_expr begin_name flag filetime modified end_name end_expr begin_expr begin_name flag no get end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_comment set up a vss check out task end_comment begin_decl_stmt begin_decl begin_type begin_name msvsscheckout end_name end_type begin_name vss checkout end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name msvsscheckout end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss checkout end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss checkout end_name begin_operator DOT end_operator begin_name set login end_name end_name begin_argument_list begin_argument begin_expr begin_name vss username end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss checkout end_name begin_operator DOT end_operator begin_name set vsspath end_name end_name begin_argument_list begin_argument begin_expr begin_name ds vss project path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss checkout end_name begin_operator DOT end_operator begin_name set recursive end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss checkout end_name begin_operator DOT end_operator begin_name set date end_name end_name begin_argument_list begin_argument begin_expr begin_name date end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss checkout end_name begin_operator DOT end_operator begin_name set label end_name end_name begin_argument_list begin_argument begin_expr begin_name src label end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss checkout end_name begin_operator DOT end_operator begin_name set ssdir end_name end_name begin_argument_list begin_argument begin_expr begin_name ss dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name current mod updated end_name end_name end_type begin_name cmu end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name current mod updated end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmu end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name time modified end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss checkout end_name begin_operator DOT end_operator begin_name set file time stamp end_name end_name begin_argument_list begin_argument begin_expr begin_name cmu end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss checkout end_name begin_operator DOT end_operator begin_name set get local copy end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name commandline end_name begin_operator EQ end_operator begin_call begin_name begin_name vss checkout end_name begin_operator DOT end_operator begin_name build cmd line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check command lines end_name begin_argument_list begin_argument begin_expr begin_name s test cmd line end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment pr 11100 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test pattern set exclude only end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert file missing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert file exists end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the name to use in logging messages return the name to use in logging messages since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get task name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name task name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the status code returned by system exit return the status code returned by system exit end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get status end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name status end_name end_expr end_return end_block 
 begin_comment bugzilla report 11732 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test directory removal end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name clean up list end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test junit end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the code list code of code file name mapper code s return code list code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name list end_name end_type begin_name get mappers end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name collections end_name begin_operator DOT end_operator begin_name unmodifiable list end_name end_name begin_argument_list begin_argument begin_expr begin_name mappers end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test property no value end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name parser supports end_name begin_operator DOT end_operator begin_name error no value end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name parser supports end_name begin_operator DOT end_operator begin_name error no value end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment empty implementation required by sub build listener interface param event ignored since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment return the possible values end_comment begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name get choices end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name choices end_name end_expr end_return end_block 
 begin_comment sets the extension directories that will be used during the compilation optional param ext dirs the extension directories to be used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set extdirs end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name ext dirs end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ext dirs end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ext dirs end_name end_name begin_operator EQ end_operator begin_name ext dirs end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name ext dirs end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name ext dirs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment the string to search for param sub string the string to search for since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set substring end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name sub string end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name sub string end_name end_name begin_operator EQ end_operator begin_name sub string end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filter 5 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test excepting fork end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 5 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment pretty useful data xalan version information to display end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get xalan version end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name proc version class name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name class not found exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name proc version end_name begin_init begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name proc version class name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name pkg end_name begin_init begin_expr begin_call begin_name begin_name proc version end_name begin_operator DOT end_operator begin_name get package end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name field end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name begin_name proc version end_name begin_operator DOT end_operator begin_name get field end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name pkg end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_name pkg end_name begin_operator PLUS end_operator end_expr end_return end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name buf end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name offs end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name len end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name offs end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name index out of bounds exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name offs end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name len end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name index out of bounds exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name len end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name offs end_name begin_operator PLUS end_operator begin_name len end_name begin_operator GT end_operator begin_name begin_name buf end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name index out of bounds exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name offs end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name len end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name buf end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name hi end_name begin_init begin_expr begin_name offs end_name begin_operator PLUS end_operator begin_name len end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name offs end_name begin_operator LT end_operator begin_name hi end_name end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name write 0 end_name begin_argument_list begin_argument begin_expr begin_name begin_name buf end_name begin_index begin_expr begin_name offs end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment sets the build token manager grammar option param build token manager a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set buildtokenmanager end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name build token manager end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name build token manager end_name end_expr end_argument begin_argument begin_expr begin_name build token manager end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set to do an unlocked checkout default is false param v true to do an unlocked checkout false to checkout without changing status exception build exception if both locked and unlocked are set true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set unlocked end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name set lock status end_name begin_argument_list begin_argument begin_expr begin_name v end_name end_expr end_argument begin_argument begin_expr begin_name begin_name item end_name begin_operator DOT end_operator begin_name lock type end_name begin_operator DOT end_operator begin_name unlocked end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test empy path end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name l end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set path end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name l end_name begin_operator EQ end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name l end_name begin_operator EQ end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name l end_name begin_operator EQ end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get an array of ur ls representing all of the files of a given set of extensions in the given location if the location is a file it is returned as the only element of the array if the location is a directory it is scanned for matching files param location the location to scan for files param extensions an array of extension that are to match in the directory search return an array of ur ls of matching files exception malformed url exception if the ur ls for the files cannot be formed end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name url end_name begin_index end_index end_type begin_name get location ur ls end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name location end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name begin_name string end_name begin_index end_index end_name end_type begin_name extensions end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name malformed url exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name url end_name begin_index end_index end_type begin_name urls end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name url end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name location end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name urls end_name end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name location end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name urls end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name url end_name begin_index begin_expr end_expr end_index end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path end_name begin_init begin_expr begin_call begin_name begin_name location end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name extensions end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr begin_name begin_name extensions end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name urls end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name file to url end_name begin_argument_list begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_for begin_return begin_expr begin_name urls end_name end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name begin_index end_index end_type begin_name matches end_name begin_init begin_expr begin_call begin_name begin_name location end_name begin_operator DOT end_operator begin_name list files end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_class begin_super begin_name filename filter end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name accept end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name extensions end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr begin_name begin_name extensions end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block end_function end_block end_class end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name urls end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name url end_name begin_index begin_expr begin_name begin_name matches end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_index end_name end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name matches end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name urls end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name file to url end_name begin_argument_list begin_argument begin_expr begin_name begin_name matches end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name urls end_name end_expr end_return end_block 
 begin_comment directory from which to archive files optional param base dir the base directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set basedir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name base dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name base dir end_name end_name begin_operator EQ end_operator begin_name base dir end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name f stat p 4 output handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name p 4 fstat end_name end_type begin_name parent end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name parent end_name end_name begin_operator EQ end_operator begin_name parent end_name end_expr end_expr_stmt end_block 
 begin_comment get valid enumeration values return valid values end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name none end_name end_expr begin_operator UNP end_operator begin_expr begin_name gzip end_name end_expr begin_operator UNP end_operator begin_expr begin_name bzip 2 end_name end_expr end_block end_expr end_return end_block 
 begin_comment dictionary does not know the put all method please use map put all param m 1 the to directory param m 2 the from directory since ant 1 6 deprecated since 1 6 x end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name put all end_name begin_parameter_list begin_param begin_decl begin_type begin_name dictionary end_name end_type begin_name m 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name dictionary end_name end_type begin_name m 2 end_name end_decl end_param end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name it end_name begin_init begin_expr begin_call begin_name begin_name m 2 end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name key end_name begin_init begin_expr begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m 1 end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name m 2 end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment set the name of the property into which the converted path will be placed param p the property name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name property end_name begin_operator EQ end_operator begin_name p end_name end_expr end_expr_stmt end_block 
 begin_comment the task or other type to look for param name the name of the type end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment cvs task now implemented by the abstract cvs task base class end_comment begin_specifier end_specifier begin_name cvs end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment port used by cvs to communicate with the server param port port of cvs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set port end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name port end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name port end_name end_name begin_operator EQ end_operator begin_name port end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test patterns differ in case scanning insensitive end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name directory scanner end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set case sensitive end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the destination file param jar file the destination file deprecated since 1 5 x use set dest file file instead end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set jarfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name jar file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set dest file end_name begin_argument_list begin_argument begin_expr begin_name jar file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the element type command param cmd containing the command line string with or without the comment flag and string appended end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get eltype command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get eltype end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes this breaks clearcase end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag eltype end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get eltype end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment get the string return the string contents of the resource since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get content end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment add a system property param sysp system property end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add sysproperty end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name environment end_name begin_operator DOT end_operator begin_name variable end_name end_name end_type begin_name sysp end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sys properties end_name begin_operator DOT end_operator begin_name add variable end_name end_name begin_argument_list begin_argument begin_expr begin_name sysp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get whether the process was killed return code true code if the process was killed false otherwise since 1 19 ant 1 5 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name killed process end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name timed out end_name end_expr end_return end_block 
 begin_comment param prompt the prompt to show to the user must not be null param choices holds all input values that are allowed must not be null end_comment begin_specifier end_specifier begin_name multiple choice input request end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name prompt end_name end_decl end_param begin_param begin_decl begin_type begin_name vector end_name end_type begin_name choices end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name prompt end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name choices end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal argument exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name choices end_name end_name begin_operator EQ end_operator begin_name choices end_name end_expr end_expr_stmt end_block 
 begin_comment get the url for a file taking into account characters param file the file whose url representation is required return the file url value throws malformed url exception if the url representation cannot be formed end_comment begin_type begin_specifier end_specifier begin_name url end_name end_type begin_name get file url end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name malformed url exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_call begin_name to uri end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment recreate src return a nested src element end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name recreate src end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name src end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr begin_call begin_name create src end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test verify total rc end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment initialisation routine called after handler creation with the element name and attributes the attributes which this handler can deal with are code name code code depends code code if code code unless code code id code and code description code param uri the namespace uri for this element param tag name of the element which caused this handler to be created should not be code null code ignored in this implementation param qname the qualified name for this element param attrs attributes of the element which caused this handler to be created must not be code null code param context the current context exception sax parse exception if an unexpected attribute is encountered or if the code name code attribute is missing end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name on start element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name tag end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name qname end_name end_decl end_param begin_param begin_decl begin_type begin_name attributes end_name end_type begin_name attrs end_name end_decl end_param begin_param begin_decl begin_type begin_name ant xml context end_name end_type begin_name context end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax parse exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name depends end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name project end_name begin_init begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name target end_name end_type begin_name target end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name target end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name location end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get locator end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name add target end_name end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name attrs end_name begin_operator DOT end_operator begin_name get length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name attr uri end_name begin_init begin_expr begin_call begin_name begin_name attrs end_name begin_operator DOT end_operator begin_name get uri end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name attr uri end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name attr uri end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name attr uri end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue begin_comment ignore attributes from unknown uris end_comment end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key end_name begin_init begin_expr begin_call begin_name begin_name attrs end_name begin_operator DOT end_operator begin_name get local name end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name begin_name attrs end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name depends end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name set if end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name set unless end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name value end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add reference end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name set description end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name sax parse exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name key end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get locator end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_block end_for begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name sax parse exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get locator end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment check if this target is in the current build file end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get current targets end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name project targets end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get targets end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name used target end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment if the name has not already been defined define it end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name project targets end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get current targets end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name put end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add or replace target end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name used target end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name begin_name depends end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name set depends end_name end_name begin_argument_list begin_argument begin_expr begin_name depends end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name is ignoring project tag end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get current project name end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get current project name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment in an impored file and not completely end_comment begin_comment ignoring the project tag end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name new name end_name begin_init begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get current project name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name target end_name end_type begin_name new target end_name begin_init begin_expr begin_name used target end_name begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name target end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_name target end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new target end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr begin_name new name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get current targets end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name put end_name begin_argument_list begin_argument begin_expr begin_name new name end_name end_expr end_argument begin_argument begin_expr begin_name new target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add or replace target end_name end_name begin_argument_list begin_argument begin_expr begin_name new name end_name end_expr end_argument begin_argument begin_expr begin_name new target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name substring end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name begin end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name begin end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment add an attribute nested element this is used for setting arbitrary features of the sax parser valid attributes a href http www saxproject org apidoc org xml sax package summary html package description include a return attribute created since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name attribute end_name end_type begin_name create attribute end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name attribute end_name end_type begin_name feature end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name attribute end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attribute list end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name feature end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name feature end_name end_expr end_return end_block 
 begin_comment tests to make sure that the selector is selecting files correctly end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test selection behaviour end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name present selector end_name end_type begin_name s end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name results end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name mapper end_name end_type begin_name m end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name mapper type end_name end_name end_type begin_name identity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name mapper type end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name identity end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name mapper type end_name end_name end_type begin_name glob end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name mapper type end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name glob end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name mapper type end_name end_name end_type begin_name merge end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name mapper type end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name merge end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name mapper type end_name end_name end_type begin_name flatten end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name mapper type end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name flatten end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name make bed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name present selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set targetdir end_name end_name begin_argument_list begin_argument begin_expr begin_name beddir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name present selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set targetdir end_name end_name begin_argument_list begin_argument begin_expr begin_name beddir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name m end_name begin_operator EQ end_operator begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name create mapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set type end_name end_name begin_argument_list begin_argument begin_expr begin_name identity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name present selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name subdir end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set targetdir end_name end_name begin_argument_list begin_argument begin_expr begin_name subdir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name m end_name begin_operator EQ end_operator begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name create mapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set type end_name end_name begin_argument_list begin_argument begin_expr begin_name flatten end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name present selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set targetdir end_name end_name begin_argument_list begin_argument begin_expr begin_name beddir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name m end_name begin_operator EQ end_operator begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name create mapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set type end_name end_name begin_argument_list begin_argument begin_expr begin_name merge end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name present selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name subdir end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name beddir end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set targetdir end_name end_name begin_argument_list begin_argument begin_expr begin_name subdir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name m end_name begin_operator EQ end_operator begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name create mapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set type end_name end_name begin_argument_list begin_argument begin_expr begin_name glob end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set from end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name make mirror end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name present selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name subdir end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set targetdir end_name end_name begin_argument_list begin_argument begin_expr begin_name subdir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name mirror selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name cleanup mirror end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name cleanup bed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name close end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name z end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start test suite end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name suite end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block end_block 
 begin_comment configure this tool for use in the ejbjar task param config the configuration from the surrounding ejbjar task end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name configure end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name ejb jar end_name begin_operator DOT end_operator begin_name config end_name end_name end_type begin_name config end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name config end_name end_name begin_operator EQ end_operator begin_name config end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name create analyzer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name classpath loader end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment set the location of the extensions directories param path a path containing the extension directories end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set extdirs end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set path end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get replace flag status return boolean containing status of replace flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get replace end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m replace end_name end_expr end_return end_block 
 begin_comment returns a helper for the given class either from the cache or by creating a new instance param c the class for which a helper is required must not be code null code return a helper for the specified class end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name introspection helper end_name end_type begin_name get helper end_name begin_parameter_list begin_param begin_decl begin_type begin_name class end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name get helper end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test cleanup end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name path end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name ant class loader end_name end_type begin_name loader end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name create class loader end_name end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_comment we don t expect to find this end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name find class end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore expected end_comment end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name cleanup end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_comment we don t expect to find this end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name find class end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore expected end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name null pointer exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_comment tell the build it is finished end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name fire build finished end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_comment we don t expect to find this end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name find class end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore expected end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name null pointer exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get file end_name begin_parameter_list begin_param begin_decl begin_type begin_name channel sftp end_name end_type begin_name channel end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name channel sftp end_name begin_operator DOT end_operator begin_name ls entry end_name end_name end_type begin_name le end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name local file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name sftp exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name remote file end_name begin_init begin_expr begin_call begin_name begin_name le end_name begin_operator DOT end_operator begin_name get filename end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name local file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path end_name begin_init begin_expr begin_call begin_name begin_name local file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name i end_name begin_operator EQ end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name path separator end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name path separator end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name mkdirs end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name local file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name local file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name local file end_name end_expr end_argument begin_argument begin_expr begin_name remote file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name start time end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name total length end_name begin_init begin_expr begin_call begin_name begin_name le end_name begin_operator DOT end_operator begin_name get attrs end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get size end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name sftp progress monitor end_name end_type begin_name monitor end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name track progress end_name begin_init begin_expr begin_call begin_name get verbose end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name total length end_name begin_operator GT end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name track progress end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name monitor end_name begin_operator EQ end_operator begin_call begin_name get progress monitor end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name remote file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name le end_name begin_operator DOT end_operator begin_name get attrs end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get size end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name remote file end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name local file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name monitor end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name end time end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log stats end_name begin_argument_list begin_argument begin_expr begin_name start time end_name end_expr end_argument begin_argument begin_expr begin_name end time end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name int end_name begin_operator RPAR end_operator begin_name total length end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment returns an url string useful for interacting with many star team finder methods return the url string for this task end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get view url end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get user name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get password end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get url end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no additional white space for text end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name document end_name end_type begin_name d end_name begin_init begin_expr begin_call begin_name begin_name dom utils end_name begin_operator DOT end_operator begin_name new document end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name root end_name begin_init begin_expr begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name create element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dom utils end_name begin_operator DOT end_operator begin_name append text element end_name end_name begin_argument_list begin_argument begin_expr begin_name root end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string writer end_name end_type begin_name sw end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string writer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name dom element writer end_name end_type begin_name w end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name dom element writer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name root end_name end_expr end_argument begin_argument begin_expr begin_name sw end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name sw end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment read from reader till eof param rdr the reader from which to read param buffer size the buffer size to use when reading return the contents read out of the given reader throws io exception if the contents could not be read out from the reader end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name read fully end_name begin_parameter_list begin_param begin_decl begin_type begin_name reader end_name end_type begin_name rdr end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name buffer size end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name buffer size end_name begin_operator LE end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal argument exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name char end_name begin_index end_index end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name char end_name begin_index begin_expr begin_name buffer size end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name buffer length end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name text buffer end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name buffer length end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name buffer length end_name begin_operator EQ end_operator begin_call begin_name begin_name rdr end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name buffer length end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name text buffer end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name text buffer end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name text buffer end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name text buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name buffer length end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while begin_return begin_expr begin_operator LPAR end_operator begin_name text buffer end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_call begin_name begin_name text buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment handle operations for type code string code param old value the current value read from the property file or code null code if the code key code was not contained in the property file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name old value end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name new v end_name begin_init begin_expr begin_name default string value end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name current value end_name begin_init begin_expr begin_call begin_name get current value end_name begin_argument_list begin_argument begin_expr begin_name old value end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name current value end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name current value end_name begin_operator EQ end_operator begin_name default string value end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name operation end_name begin_operator EQT end_operator begin_name begin_name operation end_name begin_operator DOT end_operator begin_name equals oper end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name new v end_name begin_operator EQ end_operator begin_name current value end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name operation end_name begin_operator EQT end_operator begin_name begin_name operation end_name begin_operator DOT end_operator begin_name increment oper end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name new v end_name begin_operator EQ end_operator begin_name current value end_name begin_operator PLUS end_operator begin_name value end_name end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name new value end_name end_name begin_operator EQ end_operator begin_name new v end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name handle end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name size end_name begin_init begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name size end_name begin_operator EQT end_operator begin_name begin_name resource end_name begin_operator DOT end_operator begin_name unknown size end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name accum end_name begin_operator UNP end_operator begin_name size end_name end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment finalize the zip output stream this creates an index list if the index attribute is true param z out the zip output stream throws io exception on i o errors throws build exception on other errors end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name finalize zip output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name zip output stream end_name end_type begin_name z out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name index end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name create index list end_name begin_argument_list begin_argument begin_expr begin_name z out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment this method maps from an encoding enum to an encoding option param enum value the value to use return the encoding option indicated by the enum value end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get encoding option end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name enum value end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name unicode end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name enum value end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name utf 8 end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name enum value end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment set whether to negate results if true all properties not selected by nested elements will be returned default is false param negate if true negate the selection criteria end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set negate end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name negate end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert not reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name negate end_name end_name begin_operator EQ end_operator begin_name negate end_name end_expr end_expr_stmt end_block 
 begin_comment set the project param project the project that this def belows to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set project end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set project component end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set set beans end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment prevent the user from specifying a different command ant attribute ignore true param cmdl a user supplied command line that we won t accept end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmdl end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task type end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment get the from file specification return the from file specification end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get fromfile end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name fromfile end_name end_expr end_return end_block 
 begin_comment get the basename terminator return an ejbjar task configuration end_comment begin_type begin_specifier end_specifier begin_name begin_name ejb jar end_name begin_operator DOT end_operator begin_name config end_name end_name end_type begin_name get config end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name config end_name end_expr end_return end_block 
 begin_comment feature to probe for param feature the feature to probe for end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set feature end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name feature end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name feature end_name end_name begin_operator EQ end_operator begin_name feature end_name end_expr end_expr_stmt end_block 
 begin_comment get allowed values for the mode attribute return a string array of the allowed values end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_return end_block 
 begin_comment sets up the initial command line p only the encoding argument and nested arg elements get handled here p param cmd command line to add to param args provides the user setting and access to ant s logging system throws build exception if there was a problem end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name setup end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param begin_param begin_decl begin_type begin_name native 2 ascii end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name get encoding end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name get encoding end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name add arguments end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name get current args end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the user name for the connection required param user id the user id to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set userid end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name user id end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name user id end_name end_name begin_operator EQ end_operator begin_name user id end_name end_expr end_expr_stmt end_block 
 begin_comment add a selector filename entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add filename end_name begin_parameter_list begin_param begin_decl begin_type begin_name filename selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for substitution end_comment begin_specifier end_specifier begin_name substitution end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name expression end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test echo prefix as negated propertyset end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name test echo prefix various end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the list of lib enties and cp entry into a url array param cp string the classpath string param lib paths the list of lib entries return an array of ur ls end_comment begin_type begin_specifier end_specifier begin_name url end_name begin_index end_index end_type begin_name get lib path ur ls end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name cp string end_name end_decl end_param begin_param begin_decl begin_type begin_name list end_name end_type begin_name lib paths end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name malformed url exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name lib path ur ls end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name cp string end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add path end_name begin_argument_list begin_argument begin_expr begin_name cp string end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name lib path ur ls end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name lib paths end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name lib path end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add path end_name begin_argument_list begin_argument begin_expr begin_name lib path end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name lib path ur ls end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_operator LPAR end_operator begin_name begin_name url end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name lib path ur ls end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name url end_name begin_index begin_expr begin_call begin_name begin_name lib path ur ls end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_specifier end_specifier begin_name echo properties test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set comment file param cfile the path to the comment file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set comment file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name cfile end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m cfile end_name begin_operator EQ end_operator begin_name cfile end_name end_expr end_expr_stmt end_block 
 begin_comment add an attribute definition to this script param attribute the attribute definition end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add attribute end_name begin_parameter_list begin_param begin_decl begin_type begin_name attribute end_name end_type begin_name attribute end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name attribute end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment declare files to exclude using standard tt excludes tt patterns optional when filtering files ant star team check out uses an unmodified version of code directory scanner code s code match code method so here are the patterns straight from the ant source code br matches a string against a pattern the pattern contains two special characters br which means zero or more characters br which means one and only one character br for example if you want to check out all files except xml and html files you would put the following line in your program code set excludes xml html code finally note that filters have no effect on the b directories b that are scanned you could not skip over all files in directories whose names begin with project for instance br treatment of overlapping inlcudes and excludes to give a simplistic example suppose that you set your include filter to htm html and your exclude filter to index what happens to index html ant star team check out will not check out index html as it matches an exclude filter index even though it matches the include filter as well br please also read the following sections before using filters param excludes a string of filter patterns to exclude separate the patterns by spaces see set includes string includes see get includes see get excludes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set excludes end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name excludes end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name excludes end_name end_name begin_operator EQ end_operator begin_name excludes end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get namespace parser name end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name xml reader end_name end_type begin_name reader end_name begin_init begin_expr begin_call begin_name begin_name jaxp utils end_name begin_operator DOT end_operator begin_name get namespace xml reader end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment begin_expr_stmt begin_expr begin_call begin_name ignore throwable end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_catch end_try end_block 
 begin_comment build the c style parameter which has no public private option param p the current project param command the command param csharp style a code boolean code attribute end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get parameters end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name net command end_name end_type begin_name command end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name csharp style end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check parameters end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name has filesets end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name list iter end_name begin_init begin_expr begin_call begin_name begin_name file sets end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name list iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name list iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name base directory end_name begin_init begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name namespace end_name begin_init begin_expr begin_call begin_name get namespace end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment ends with or null end_comment begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get parameter end_name begin_argument_list begin_argument begin_expr begin_name base directory end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name begin_operator PLUS end_operator begin_name file end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name namespace end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_name namespace end_name begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr begin_name csharp style end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_for end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get parameter end_name begin_argument_list begin_argument begin_expr begin_call begin_name get file end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name csharp style end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f 1 end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f 2 end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds an ordered file list to the implicit build path p em note that contrary to file and directory sets file lists can reference non existent files or directories em param list the file list to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add filelist end_name begin_parameter_list begin_param begin_decl begin_type begin_name file list end_name end_type begin_name list end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name list end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the set of exclude patterns patterns may be separated by a comma or a space param excludes the string containing the exclude patterns end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set excludes end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name excludes end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name default set defined end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name default set end_name begin_operator DOT end_operator begin_name set excludes end_name end_name begin_argument_list begin_argument begin_expr begin_name excludes end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name exec p 4 fstat end_name begin_parameter_list begin_param begin_decl begin_type begin_name string buffer end_name end_type begin_name list end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name l end_name begin_init begin_expr begin_call begin_name begin_name list end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name debug end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name p 4 cmd opts end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name add cmd end_name begin_operator PLUS end_operator begin_name l end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name exec p 4 command end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name p 4 cmd opts end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name add cmd end_name begin_operator PLUS end_operator begin_name l end_name end_expr end_argument begin_argument begin_expr begin_name handler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the teardown method for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the name of the property in which the return code of the command should be stored only of interest if failonerror false param result property name of property since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set result property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name result property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name result property end_name end_name begin_operator EQ end_operator begin_name result property end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name incompatible with spawn end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment the encoding to use for filenames and the file comment p for a list of possible values see a href http java sun com j 2 se 1 5 0 docs guide intl encoding doc html http java sun com j 2 se 1 5 0 docs guide intl encoding doc html a defaults to the platform s default character encoding p param encoding the encoding value since 1 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name encoding end_name end_name begin_operator EQ end_operator begin_name encoding end_name end_expr end_expr_stmt end_block 
 begin_comment visit a class reference param constant class the constant class entry for the class reference end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name visit constant class end_name begin_parameter_list begin_param begin_decl begin_type begin_name constant class end_name end_type begin_name constant class end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name classname end_name begin_init begin_expr begin_call begin_name begin_name constant class end_name begin_operator DOT end_operator begin_name get constant value end_name end_name begin_argument_list begin_argument begin_expr begin_name constant pool end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add slash class end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment delegate to real thing if present and if it as task see task handle input byte int int param buffer the buffer into which data is to be read param offset the offset into the buffer at which data is stored param length the amount of data to read return the number of bytes read exception io exception if the data cannot be read since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name handle input end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name buffer end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name offset end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name length end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name real thing end_name begin_operator UNP end_operator begin_name task end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_name real thing end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name handle input end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name handle input end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_comment see copy scan resource file end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name map end_name end_type begin_name scan end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name resource end_name begin_index end_index end_name end_type begin_name resources end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name to dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name mapper element end_name begin_operator EQT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name map end_name end_type begin_name m end_name begin_init begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list begin_argument begin_expr begin_name resources end_name end_expr end_argument begin_argument begin_expr begin_name to dir end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name key set end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name non orphans end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_name m end_name end_expr end_return end_block 
 begin_comment the teardown method for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator end_block end_expr end_return end_block 
 begin_comment set the unless attribute if this property is present in project the test will not be run param property name the name of the property to look for end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set unless end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name property name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name unless property end_name begin_operator EQ end_operator begin_name property name end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test spawn end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name log file end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name create temp file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment this is guaranteed by file utils create temp file end_comment begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name log file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name log file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name time to wait end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name execute target end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name sleep end_name end_name begin_argument_list begin_argument begin_expr begin_name time to wait end_name begin_operator STAR end_operator begin_operator PLUS end_operator begin_name security margin end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_comment let s be nice with the next generation of developers end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name log file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name log file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a name entry to the excludes files list return code pattern set name entry code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name begin_name pattern set end_name begin_operator DOT end_operator begin_name name entry end_name end_name end_type begin_name create excludes file end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name directory scanner end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name default patterns end_name begin_operator DOT end_operator begin_name create excludes file end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test path end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test 3 end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name temp file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name orig size end_name begin_init begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name temp file 2 end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name new size end_name begin_init begin_expr begin_call begin_name begin_name file 2 end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name orig size end_name end_expr end_argument begin_argument begin_expr begin_name new size end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the name of the failure property param failure property the name of the property to set if the test fails end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set failure property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name failure property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name failure property end_name end_name begin_operator EQ end_operator begin_name failure property end_name end_expr end_expr_stmt end_block 
 begin_comment sets the exclude filter when filtering files ant star team check out uses an unmodified version of code directory scanner code s code match code method so here are the patterns straight from the ant source code br br matches a string against a pattern the pattern contains two special characters br which means zero or more characters br which means one and only one character br br separate multiple exlcude filters by i spaces i not commas as ant uses for example if you want to check out all files except xml and html files you would put the following line in your program code set excludes xml html code finally note that filters have no effect on the b directories b that are scanned you could not skip over all files in directories whose names begin with project for instance br br treatment of overlapping inlcudes and excludes to give a simplistic example suppose that you set your include filter to htm html and your exclude filter to index what happens to index html ant star team check out will not check out index html as it matches an exclude filter index even though it matches the include filter as well br br please also read the following sections before using filters param excludes a string of filter patterns to exclude separate the patterns by spaces see set includes string includes see get includes see get excludes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set excludes end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name excludes end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name excludes end_name end_name begin_operator EQ end_operator begin_name excludes end_name end_expr end_expr_stmt end_block 
 begin_comment sets the from file specification param fromf the from file specification end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fromfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name fromf end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name fromfile end_name end_name begin_operator EQ end_operator begin_name fromf end_name end_expr end_expr_stmt end_block 
 begin_comment append code includes code to the current list of include patterns p patterns may be separated by a comma or a space p param includes the code string code containing the include patterns end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set includes end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name includes end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name default patterns end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_name includes end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ds end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name msg level end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment restore the cached system properties throws build exception if security prevented this operation or there was no system properties to restore end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name restore system properties end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sys properties end_name begin_operator DOT end_operator begin_name restore system end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test resourcesmatch binary end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test csc resources end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_specifier end_specifier begin_name permissions test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the delimiter that the compiler uses between references for example c will return vb net will return return the string delimiter for the reference string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get reference delimiter end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 6 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the destination file param ear file the destination file deprecated since 1 5 x use set dest file destfile instead end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set earfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name ear file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set dest file end_name begin_argument_list begin_argument begin_expr begin_name ear file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the to part of the transformation rule param to a string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set to end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name to end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment executes the task p builds a command line to execute cleartool and then calls exec s run method to execute the command line throws build exception if the command fails and failonerr is set to true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name command line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name a proj end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment default the viewpath to basedir if it is not specified end_comment begin_if begin_condition begin_expr begin_call begin_name get view path end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set view path end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name a proj end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment build the command line from what we got the format is end_comment begin_comment cleartool mkelem options viewpath end_comment begin_comment as specified in the cleartool exe help end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get clear tool command end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name command mkdir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check options end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get fail on err end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get view path basename end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name run end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name is failure end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get fail on err end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment empty param t not used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start test end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment whether to ignore whitespace in the string being searched param ignorewhitespace whether to ignore any whitespace spaces tabs etc in the searchstring end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set ignorewhitespace end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name ignorewhitespace end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ignorewhitespace end_name end_name begin_operator EQ end_operator begin_name ignorewhitespace end_name end_expr end_expr_stmt end_block 
 begin_comment override task execute end_comment begin_comment execute the sync task throws build exception if there is an error see task execute end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment the destination of the files to copy end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name to dir end_name begin_init begin_expr begin_call begin_name begin_name my copy end_name begin_operator DOT end_operator begin_name get to dir end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment the complete list of files to copy end_comment begin_decl_stmt begin_decl begin_type begin_name set end_name end_type begin_name all files end_name begin_init begin_expr begin_name begin_name my copy end_name begin_operator DOT end_operator begin_name non orphans end_name end_name end_expr end_init end_decl end_decl_stmt begin_comment if the destination directory didn t already exist end_comment begin_comment or was empty then no previous file removal is necessary end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name no removal necessary end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name to dir end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name to dir end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name length end_name begin_operator LT end_operator end_expr end_init end_decl end_decl_stmt begin_comment copy all the necessary out of date files end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name to dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name my copy end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment do we need to perform further processing end_comment begin_if begin_condition begin_expr begin_name no removal necessary end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name to dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return begin_comment nope end_comment end_block end_then end_if begin_comment get rid of all files not listed in the source filesets end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name to dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name begin_index end_index end_type begin_name removed file count end_name begin_init begin_expr begin_call begin_name remove orphan files end_name begin_argument_list begin_argument begin_expr begin_name all files end_name end_expr end_argument begin_argument begin_expr begin_name to dir end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log removed count end_name begin_argument_list begin_argument begin_expr begin_name begin_name removed file count end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log removed count end_name begin_argument_list begin_argument begin_expr begin_name begin_name removed file count end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment get rid of empty directories on the destination side end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name my copy end_name begin_operator DOT end_operator begin_name get include empty dirs end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name to dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name removed dir count end_name begin_init begin_expr begin_call begin_name remove empty directories end_name begin_argument_list begin_argument begin_expr begin_name to dir end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log removed count end_name begin_argument_list begin_argument begin_expr begin_name removed dir count end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment gets the debug flag return debug end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get debug end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name debug end_name end_expr end_return end_block 
 begin_comment dynamically generates the number of threads to execute based on the number of available processors via code java lang runtime available processors code requires a j 2 se 1 4 vm and it will overwrite the value set in thread count if used in a 1 1 1 2 or 1 3 vm then the task will defer to code thread count code optional param num threads per processor number of threads to create per available processor end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set threads per processor end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name num threads per processor end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name num threads per processor end_name end_name begin_operator EQ end_operator begin_name num threads per processor end_name end_expr end_expr_stmt end_block 
 begin_comment get state of selected flag return the selected flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name selected end_name end_expr end_return end_block 
 begin_comment returns the next character in the filtered stream not including java comments return the next character in the resulting stream or 1 if the end of the resulting stream has been reached exception io exception if the underlying stream throws an io exception during reading end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ch end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name read ahead ch end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_name read ahead ch end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name read ahead ch end_name begin_operator EQ end_operator begin_operator MINUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_name quoted end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name in string end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name in string end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name quoted end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name quoted end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name quoted end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name quoted end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name in string end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_while begin_condition begin_expr begin_name ch end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name ch end_name begin_operator UNP end_operator begin_operator MINUS end_operator begin_operator UNP end_operator begin_name ch end_name begin_operator UNP end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_then begin_else begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_while begin_condition begin_expr begin_name ch end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name ch end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_call begin_name read end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_then end_if end_block end_while end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name read ahead ch end_name begin_operator EQ end_operator begin_name ch end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block end_then end_if end_block end_then end_if end_block end_else end_if end_else end_if end_block end_else end_if begin_return begin_expr begin_name ch end_name end_expr end_return end_block 
 begin_comment specifies the resolver param v value to assign to resolver end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set resolver end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name resolver end_name end_name begin_operator EQ end_operator begin_name v end_name end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_return end_block 
 begin_comment whether the generated java code is formatted nicely or left to match net rexx line numbers for call stack debugging param format a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set format end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name format end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name format end_name end_name begin_operator EQ end_operator begin_name format end_name end_expr end_expr_stmt end_block 
 begin_comment build listener interface methods end_comment begin_comment signals that the last target has finished param event recieved build event end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get delay update end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name save cache end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment used to copy empty directories param include empty if true copy empty directories end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set include empty dirs end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name include empty end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name my copy end_name begin_operator DOT end_operator begin_name set include empty dirs end_name end_name begin_argument_list begin_argument begin_expr begin_name include empty end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name find label end_name begin_parameter_list begin_param begin_decl begin_type begin_name view end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name label end_name begin_index end_index end_type begin_name all labels end_name begin_init begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name get labels end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name all labels end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name label end_name end_type begin_name st label end_name begin_init begin_expr begin_name begin_name all labels end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name st label end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name st label end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name st label end_name begin_operator DOT end_operator begin_name is deleted end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name st label end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name label end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name st label end_name begin_operator DOT end_operator begin_name is revision label end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name st label end_name begin_operator DOT end_operator begin_name is view label end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name st label end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name label in use end_name end_name begin_operator EQ end_operator begin_name st label end_name end_expr end_expr_stmt begin_return end_return end_block end_then end_if end_block end_for begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name label end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name get full name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment get the named resource param name path name of the file sought in the archive return the resource since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_name resource end_name end_type begin_name get resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name src end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get resource end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment special case in zi ps we do not want this thing included end_comment begin_return begin_expr begin_operator UNP end_operator begin_call begin_name resource end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name long end_name begin_operator DOT end_operator begin_name max value end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_comment first check if the archive needs to be scanned again end_comment begin_expr_stmt begin_expr begin_call begin_name scanme end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name file entries end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name file entries end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_call begin_name trim separator end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name dir entries end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name dir entries end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_operator UNP end_operator begin_call begin_name resource end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment add an attribute to the section param attribute the attribute to be added return the value of the attribute if it is a name attribute null other wise exception manifest exception if the attribute already exists in this section end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name add attribute and check end_name begin_parameter_list begin_param begin_decl begin_type begin_name attribute end_name end_type begin_name attribute end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name manifest exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get key end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name attribute name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name warnings end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name attribute name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get key end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name starts with end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attribute from end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name warnings end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name error from forbidden end_name begin_operator PLUS end_operator begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment classpath attributes go into a vector end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name attribute key end_name begin_init begin_expr begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get key end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name attribute key end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name attribute classpath end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name attribute end_name end_type begin_name classpath attribute end_name begin_init begin_expr begin_operator LPAR end_operator begin_name attribute end_name begin_operator RPAR end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name attribute key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name classpath attribute end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name store attribute end_name begin_argument_list begin_argument begin_expr begin_name attribute end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name warnings end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get values end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name classpath attribute end_name begin_operator DOT end_operator begin_name add value end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_name attribute key end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name manifest exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name store attribute end_name begin_argument_list begin_argument begin_expr begin_name attribute end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block end_else end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment add a nested task to execute in parallel param nested task nested task to be executed in parallel end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add task end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name nested task end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name nested tasks end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name nested task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out end_name end_name begin_operator EQ end_operator begin_name out end_name end_expr end_expr_stmt end_block 
 begin_comment get the name component of this entry return the name of this name and type entry end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_comment adds the jars or directories containing antlr this should make the forked jvm work without having to specify it directly throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name add classpath entry end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this is a best attempt to provide a url to external form from a file url some parsers like crimson choke on uri that are made of backslashed paths ie windows as it is does not conform uri specifications param file the file to create the system id from return the systemid corresponding to the given file since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get system id end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name to uri end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment return returns the short month names config end_comment begin_type begin_name string end_name end_type begin_name get short month names config end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name short month names config end_name end_expr end_return end_block 
 begin_comment is the user input valid return true if it is end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is input valid end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment set the name of a property to fill with the url param property the name of the property end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name property end_name end_name begin_operator EQ end_operator begin_name property end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test clear end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this test is our selection test that compared the file with the destfile param srcfile the source file param destfile the destination file return true if the files are different end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name selection test end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name srcfile end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name destfile end_name end_decl end_param end_parameter_list begin_block begin_comment if either of them is missing they are different end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name srcfile end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name destfile end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name srcfile end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name destfile end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment different size different files end_comment begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name ignore file times end_name end_expr end_condition begin_then begin_block begin_comment same date if dest timestamp is within granularity of the srcfile end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name same date end_name end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name same date end_name begin_operator EQ end_operator begin_call begin_name begin_name destfile end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator GE end_operator begin_call begin_name begin_name srcfile end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name granularity end_name begin_operator UNP end_operator begin_call begin_name begin_name destfile end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator LE end_operator begin_call begin_name begin_name srcfile end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_name granularity end_name end_expr end_expr_stmt begin_comment different dates different files end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name same date end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name ignore contents end_name end_expr end_condition begin_then begin_block begin_comment here do a bulk comparison end_comment begin_try begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_name srcfile end_name end_expr end_argument begin_argument begin_expr begin_name destfile end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name srcfile end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name destfile end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then begin_else begin_block begin_return begin_expr end_expr end_return end_block end_else end_if end_block 
 begin_comment add a command line argument return created argument end_comment begin_type begin_specifier end_specifier begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name argument end_name end_name end_type begin_name create arg end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get command line end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create argument end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment interface test listener p a new test is started param t the test end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start test end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name test starts end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name long end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment flag to enable verification so that the classes found by the directory match are checked to see if they implement java rmi remote optional this defaults to false if not set param verify turn on verification for classes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set verify end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name verify end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name verify end_name end_name begin_operator EQ end_operator begin_name verify end_name end_expr end_expr_stmt end_block 
 begin_comment set the group id param gid the group id since 1 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set group id end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name gid end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name gid end_name end_name begin_operator EQ end_operator begin_name gid end_name end_expr end_expr_stmt end_block 
 begin_comment create a new ant type based on the embedded tasks and types end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name nested sequential end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name gen component name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get uri end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name my ant type definition end_name end_type begin_name def end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name my ant type definition end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name set class end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name macro instance end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name component helper end_name end_type begin_name helper end_name begin_init begin_expr begin_call begin_name begin_name component helper end_name begin_operator DOT end_operator begin_name get component helper end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name add data type definition end_name end_name begin_argument_list begin_argument begin_expr begin_name def end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment throws a build exception if the destination directory hasn t been specified since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check dest end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name dest dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment set the executor instance for this project param e the executor to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set executor end_name begin_parameter_list begin_param begin_decl begin_type begin_name executor end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add reference end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant executor reference end_name end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment p add a public catalog entry to the controlling xml catalog instance apache catalog calls this for each public entry found in an external catalog file p param publicid the public id of the resource param systemid the system id aka location of the resource param base the base url of the resource if the systemid specifies a relative url pathname it is resolved using the base the default base for an external catalog file is the directory in which the catalog is located end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add public entry end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name publicid end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name systemid end_name end_decl end_param begin_param begin_decl begin_type begin_name url end_name end_type begin_name base end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name resource location end_name end_type begin_name dtd end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name resource location end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dtd end_name begin_operator DOT end_operator begin_name set base end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dtd end_name begin_operator DOT end_operator begin_name set public id end_name end_name begin_argument_list begin_argument begin_expr begin_name publicid end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dtd end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_name systemid end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name xml catalog end_name begin_operator DOT end_operator begin_name add dtd end_name end_name begin_argument_list begin_argument begin_expr begin_name dtd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test copy with empty end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets whether or not debugging output will be generated when ejbc is executed param debug a boolean indicating if debugging output should be generated end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set debug end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name debug end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_operator EQ end_operator begin_name debug end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no recreate with update end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test no recreate end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the file return the file used end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name file end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment getter for the delay update return true if we should delay for performance end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get delay update end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name delay update end_name end_expr end_return end_block 
 begin_comment defines the manager param manager the scripting manager end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set manager end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name manager end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set manager end_name end_name begin_argument_list begin_argument begin_expr begin_name manager end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment call a method on the object with one argument param method name the name of the method to call param arg type the type of argument param arg the value of the argument return the object returned by the method end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name invoke end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name method name end_name end_decl end_param begin_param begin_decl begin_type begin_name class end_name end_type begin_name arg type end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name arg end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name reflect util end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name obj end_name end_expr end_argument begin_argument begin_expr begin_name method name end_name end_expr end_argument begin_argument begin_expr begin_name arg type end_name end_expr end_argument begin_argument begin_expr begin_name arg end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test pseudo tahoe nested end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment executes the p 4 delete task throws build exception if there is no view specified end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name change end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name p 4 cmd opts end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name change end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name p 4 view end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name exec p 4 command end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name p 4 cmd opts end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name p 4 view end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name simple p 4 output handler end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment equality method based on the vector of resources or if a reference the referredto object param o the object to check against return true if there is equality end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name o end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name o end_name begin_operator EQT end_operator begin_name this end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name o end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name o end_name begin_operator UNP end_operator begin_name delegated resource comparator end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name ov end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name delegated resource comparator end_name begin_operator RPAR end_operator begin_name o end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_name v end_name end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name v end_name begin_operator EQT end_operator begin_operator QM end_operator begin_name ov end_name begin_operator EQT end_operator begin_operator DP end_operator begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name ov end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_name void end_name end_type begin_name complete end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment set whether or not to create an index list for classes this may speed up classloading in some cases param flag a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set index end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name flag end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name index end_name begin_operator EQ end_operator begin_name flag end_name end_expr end_expr_stmt end_block 
 begin_comment the jar file to contain the classpath attribute in its manifest param jarfile the jar file need not exist yet but its parent directory must exist on the other hand end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set jar file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name jarfile end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name parent end_name begin_init begin_expr begin_call begin_name begin_name jarfile end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name parent end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dir end_name end_name begin_operator EQ end_operator begin_name parent end_name end_expr end_expr_stmt end_block 
 begin_comment get value of ignorereturncode return string end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get ignore return code end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name ignorerc end_name end_expr end_return end_block 
 begin_comment return the back trace attribute since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get back trace end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name back trace end_name end_expr end_return end_block 
 begin_comment get an input stream for the resource return an input stream containing this resource s content throws io exception if unable to provide the content of this resource as a stream throws unsupported operation exception if input streams are not supported for this resource type since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name input stream end_name end_type begin_name get input stream end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get input stream end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name unsupported operation exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block 
 begin_comment set to true to receive notification about each file as it is transferred param verbose true if verbose notifications are required end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set verbose end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name verbose end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name verbose end_name end_name begin_operator EQ end_operator begin_name verbose end_name end_expr end_expr_stmt end_block 
 begin_comment classloader for the user specified classpath return the classloader end_comment begin_type begin_specifier end_specifier begin_name class loader end_name end_type begin_name get loader end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name loader end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test initial command end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name perform command test end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name int end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the simulationmode flag param setrest value chosen for simulationmode end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set simulation mode end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name setrest end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name simulationmode end_name end_name begin_operator EQ end_operator begin_name setrest end_name end_expr end_expr_stmt end_block 
 begin_comment create a placeholder indicating where on the command line the name of the source file should be inserted return code commandline marker code end_comment begin_type begin_specifier end_specifier begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name marker end_name end_name end_type begin_name create srcfile end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name src file pos end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task type end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name src file pos end_name begin_operator EQ end_operator begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name create marker end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name src file pos end_name end_expr end_return end_block 
 begin_comment creates a new filtered reader param in a reader object providing the underlying stream must not be code null code end_comment begin_specifier end_specifier begin_name strip java comments end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name in end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment no real test simply checks whether the dateformat with seconds is accepted by erroring out otherwise end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test seconds end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name time end_name begin_init begin_expr begin_call begin_name get target time end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt end_block 
 begin_comment add a pattern to the default excludes unless it is already a default exclude param s a string to add as an exclude pattern return code true code if the string was added code false code if it already existed since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name add default exclude end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name default excludes end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name default excludes end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test update is necessary end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns dependency information on these two files if src has been modified later than target it returns true if target doesn t exist it likewise returns true otherwise target is newer than src and is not out of date thus the method returns false it also returns false if the src file doesn t even exist since how could the target then be out of date param src the original file param target the file being compared against param granularity the amount in seconds of slack we will give in determining out of dateness return whether the target is out of date end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is out of date end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name granularity end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name granularity end_name begin_operator RPAR end_operator begin_operator GT end_operator begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_specifier end_specifier begin_name property expansion test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment end_comment begin_comment protected and private methods end_comment begin_comment end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name handle end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment writes the data to the buffer and flushes the buffer if a line separator is detected or if the buffer has reached its maximum size param cc data to log byte exception io exception if the data cannot be written to the stream end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name cc end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte end_name end_type begin_name c end_name begin_init begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator begin_name cc end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name buffer info end_name end_type begin_name buffer info end_name begin_init begin_expr begin_call begin_name get buffer info end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment lf is always end of line i e crlf or single lf end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name buffer info end_name begin_operator DOT end_operator begin_name buffer end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name cc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name process buffer end_name begin_argument_list begin_argument begin_expr begin_name begin_name buffer info end_name begin_operator DOT end_operator begin_name buffer end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name begin_name buffer info end_name begin_operator DOT end_operator begin_name cr seen end_name end_name end_expr end_condition begin_then begin_block begin_comment cr without lf send buffer then add char end_comment begin_expr_stmt begin_expr begin_call begin_name process buffer end_name begin_argument_list begin_argument begin_expr begin_name begin_name buffer info end_name begin_operator DOT end_operator begin_name buffer end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment add into buffer end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name buffer info end_name begin_operator DOT end_operator begin_name buffer end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name cc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name begin_name buffer info end_name begin_operator DOT end_operator begin_name cr seen end_name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name c end_name begin_operator EQT end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name begin_name buffer info end_name begin_operator DOT end_operator begin_name cr seen end_name end_name begin_operator UNP end_operator begin_call begin_name begin_name buffer info end_name begin_operator DOT end_operator begin_name buffer end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_name max size end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name process buffer end_name begin_argument_list begin_argument begin_expr begin_name begin_name buffer info end_name begin_operator DOT end_operator begin_name buffer end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment throw a code build exception code to exit fail the build if specified evaluate conditions a single nested condition is accepted but requires that the code if code code unless code attributes be omitted if the nested condition evaluates to true or the if condition is true or unless condition is false the build will exit the error message is constructed from the text fields from the nested condition if specified or finally from the if and unless parameters if present throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name fail end_name begin_init begin_expr begin_operator LPAR end_operator begin_call begin_name nested condition present end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name test nested condition end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_operator LPAR end_operator begin_call begin_name test if condition end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name test unless condition end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name fail end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name text end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name message end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name if condition end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name if condition end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator UNP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name if condition end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name if condition end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name unless condition end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name unless condition end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator UNP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name unless condition end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name text end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name text end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name text end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_name unless condition end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name nested condition present end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name text end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name text end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name status end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name exit status exception end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name status end_name begin_operator DOT end_operator begin_name int value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_throw end_block end_then end_if end_block 
 begin_comment get the environment attribute return the environment attribute since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get environment end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name env end_name end_expr end_return end_block 
 begin_comment set the output file param f the output file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name file end_name begin_operator EQ end_operator begin_name f end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test sys property end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment reads some data from the file return true when the end of the file has not been reached throws io exception when the file cannot be read from end_comment begin_type begin_name boolean end_name end_type begin_name read chunk end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name buffer length end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name buffer length end_name begin_operator EQ end_operator begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name buffer length end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name output buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name buffer length end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block 
 begin_comment gets additional arguments for iiop return iiop opts end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get iiopopts end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name iiop opts end_name end_expr end_return end_block 
 begin_comment sets the build node files grammar option param build node files a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set buildnodefiles end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name build node files end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name build node files end_name end_expr end_argument begin_argument begin_expr begin_name build node files end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment getter for the modified count return modified count end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get modified end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name modified end_name end_expr end_return end_block 
 begin_comment fulfill the resource collection contract return whether this is a filesystem only resource collection end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is filesystem only end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name path end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name is filesystem only end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name die on circular reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert filesystem only end_name begin_argument_list begin_argument begin_expr begin_name union end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block 
 begin_comment get the hash code for this resource return hash code as int end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name hash code end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name hash code end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_name magic end_name begin_operator STAR end_operator begin_operator LPAR end_operator begin_call begin_name get file end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator QM end_operator begin_name null file end_name begin_operator DP end_operator begin_call begin_name get file end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name hash code end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment specified dir is taskdefs should exist since it s the end_comment begin_comment location of the buildfile used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 17 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get reserved flag status return boolean containing status of reserved flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get reserved end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m reserved end_name end_expr end_return end_block 
 begin_comment determines if the os on which ant is executing matches the given os version param version the os version to check for return true if the os matches since 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is version end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name version end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name is os end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name version end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test method end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set whether this formatter should not be used it will not be used if the property has been set orthwise it will be used param unless property name of property end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set unless end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name unless property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name unless property end_name end_name begin_operator EQ end_operator begin_name unless property end_name end_expr end_expr_stmt end_block 
 begin_comment tries to resolve the given classname into a compiler adapter throws a fit if it can t param class name the fully qualified classname to be created throws build exception this is the fit that is thrown if class name isn t an instance of compiler adapter end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name compiler adapter end_name end_type begin_name resolve class name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name class name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name compiler adapter end_name begin_operator RPAR end_operator begin_call begin_name begin_name classpath utils end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name compiler adapter factory end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get class loader end_name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name compiler adapter end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment filter strings that contain the contains attribute param string the string to be filtered return null if the string does not contain contains string otherwise end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name filter end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name string end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name contains end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name contains end_name end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name string end_name end_expr end_return end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment construct a new instance of the path convert task end_comment begin_specifier end_specifier begin_name path convert end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment here is a comment with an embedded tab end_comment begin_if begin_condition begin_expr begin_name mybool end_name end_expr end_condition begin_then begin_block begin_comment here is a multi line with embedded tab comment end_comment begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name mychar end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment tab end_comment end_block end_then end_if begin_comment end of if mybool end_comment end_block 
 begin_comment handles text within an element this base implementation just throws an exception you must override it if you expect content param buf a character array of the text within the element will not be code null code param start the start element in the array param count the number of characters to read from the array param context the current context exception sax parse exception if this method is not overridden or in case of error in an overridden version end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name characters end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name char end_name begin_index end_index end_name end_type begin_name buf end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name start end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name count end_name end_decl end_param begin_param begin_decl begin_type begin_name ant xml context end_name end_type begin_name context end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax parse exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name s end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr begin_name start end_name end_expr end_argument begin_argument begin_expr begin_name count end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name sax parse exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name s end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get locator end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment path to the source off site home directory param sos home the new sos home value end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set sos home end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name sos home end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name sos home end_name end_name begin_operator EQ end_operator begin_name sos home end_name end_expr end_expr_stmt end_block 
 begin_comment create an instance of the definition the instance may be wrapped in a proxy class param project the current project return the created object end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name create end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name create end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name macro instance end_name begin_operator RPAR end_operator begin_name o end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set macro def end_name begin_argument_list begin_argument begin_expr begin_name macro def end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name o end_name end_expr end_return end_block 
 begin_comment returns the desired number that results from parsing the log message return the number of files indicated in the desired message or 1 if a matching log message was never found end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get count end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name last match groups end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator MINUS end_operator end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name last match groups end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment utility method to lookup a resource location in url space return an input source for reading the resource or code null code if the resource does not identify a valid url or is not readable end_comment begin_type begin_specifier end_specifier begin_name input source end_name end_type begin_name url lookup end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource location end_name end_type begin_name matching entry end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name uri end_name begin_init begin_expr begin_call begin_name begin_name matching entry end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name base url end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment end_comment begin_comment the resource location may specify a relative url for its end_comment begin_comment location attribute this is resolved using the appropriate end_comment begin_comment base end_comment begin_comment end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name matching entry end_name begin_operator DOT end_operator begin_name get base end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name base url end_name begin_operator EQ end_operator begin_call begin_name begin_name matching entry end_name begin_operator DOT end_operator begin_name get base end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name base url end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file url end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name malformed url exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name input source end_name end_type begin_name source end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name url end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name url end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_name base url end_name end_expr end_argument begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name malformed url exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try begin_if begin_condition begin_expr begin_name url end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name begin_init begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name open stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name is end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name source end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name input source end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name sysid end_name begin_init begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name to external form end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name source end_name begin_operator DOT end_operator begin_name set system id end_name end_name begin_argument_list begin_argument begin_expr begin_name sysid end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name sysid end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_then end_if begin_return begin_expr begin_name source end_name end_expr end_return end_block 
 begin_comment specified resource is can such a thing exist end_comment begin_comment returns non null ibm jdk 1 3 linux end_comment begin_comment public void test 14 end_comment begin_comment execute target test 14 end_comment begin_comment assert equals project get property test null end_comment begin_comment end_comment begin_comment specified class is can not exist end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 15 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert null end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a classpath or lib to lib path urls param path the classpath or lib path to add to the lib path ulr ls param get jars if true and a path is a directory add the jars in the directory to the path urls param lib path ur ls the list of paths to add to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add path end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name path end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name get jars end_name end_decl end_param begin_param begin_decl begin_type begin_name list end_name end_type begin_name lib path ur ls end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name malformed url exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name tokenizer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name path separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name element name end_name begin_init begin_expr begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name element end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name element name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name element name end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_if begin_condition begin_expr begin_name get jars end_name begin_operator UNP end_operator begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment add any jars in the directory end_comment begin_decl_stmt begin_decl begin_type begin_name url end_name begin_index end_index end_type begin_name dir ur ls end_name begin_init begin_expr begin_call begin_name begin_name locator end_name begin_operator DOT end_operator begin_name get location ur ls end_name end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name dir ur ls end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name j end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name lib path ur ls end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name dir ur ls end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name lib path ur ls end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name locator end_name begin_operator DOT end_operator begin_name file to url end_name end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test else end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get valid language codes end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name collection end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name ftp client config end_name begin_operator DOT end_operator begin_name get supported language codes end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name ret end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name ret end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name it end_name begin_init begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name ret end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name ret end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name execute target end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the colors to use from a property file specified by the special ant property ant logger defaults end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set colors end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name user color file end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name system color file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name in end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name prop end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name user color file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name in end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name user color file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name in end_name begin_operator EQ end_operator begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get resource as stream end_name begin_argument_list begin_argument begin_expr begin_name system color file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name in end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name prop end_name begin_operator DOT end_operator begin_name load end_name end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name err c end_name begin_init begin_expr begin_call begin_name begin_name prop end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name warn end_name begin_init begin_expr begin_call begin_name begin_name prop end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name info end_name begin_init begin_expr begin_call begin_name begin_name prop end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name verbose end_name begin_init begin_expr begin_call begin_name begin_name prop end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name debug end_name begin_init begin_expr begin_call begin_name begin_name prop end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name err c end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name err color end_name begin_operator EQ end_operator begin_name prefix end_name begin_operator PLUS end_operator begin_name err c end_name begin_operator PLUS end_operator begin_name suffix end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name warn end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name warn color end_name begin_operator EQ end_operator begin_name prefix end_name begin_operator PLUS end_operator begin_name warn end_name begin_operator PLUS end_operator begin_name suffix end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name info end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name info color end_name begin_operator EQ end_operator begin_name prefix end_name begin_operator PLUS end_operator begin_name info end_name begin_operator PLUS end_operator begin_name suffix end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name verbose end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name verbose color end_name begin_operator EQ end_operator begin_name prefix end_name begin_operator PLUS end_operator begin_name verbose end_name begin_operator PLUS end_operator begin_name suffix end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name debug end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name debug color end_name begin_operator EQ end_operator begin_name prefix end_name begin_operator PLUS end_operator begin_name debug end_name begin_operator PLUS end_operator begin_name suffix end_name end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_comment ignore we will use the defaults end_comment end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name in end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore we do not want this to stop the build end_comment end_block end_catch end_try end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment add a filterset to this filter set param filter set the filterset to be added to this filterset end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add configured filter set end_name begin_parameter_list begin_param begin_decl begin_type begin_name filter set end_name end_type begin_name filter set end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name filter set end_name begin_operator DOT end_operator begin_name get filters end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name elements end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name add filter end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name filter end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_specifier end_specifier begin_name jdk 14 regexp regexp test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment getter return the cachefile end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get cachefile end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name cachefile end_name end_expr end_return end_block 
 begin_comment set the server attribute param server the server name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set server end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name server end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name server end_name end_name begin_operator EQ end_operator begin_name server end_name end_expr end_expr_stmt end_block 
 begin_comment fill in the common information param command the net command end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name fill in shared parameters end_name begin_parameter_list begin_param begin_decl begin_type begin_name net command end_name end_type begin_name command end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name set fail on error end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get fail on error end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment fill in args end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get additional modules parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get debug parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get definitions parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add arguments end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get extra options parameters end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get main class parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get optimize parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get dest file parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get references parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get target type parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get utf 8 output parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get win 32 icon parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get win 32 res parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment ignore end_comment begin_comment determine the dependencies of the configured root classes param files a vector to be populated with the files which contain the dependency classes param classes a vector to be populated with the names of the depencency classes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name determine dependencies end_name begin_parameter_list begin_param begin_decl begin_type begin_name vector end_name end_type begin_name files end_name end_decl end_param begin_param begin_decl begin_type begin_name vector end_name end_type begin_name classes end_name end_decl end_param end_parameter_list begin_block begin_comment we get the root classes and build up a set of end_comment begin_comment classes upon which they depend end_comment begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name dependencies end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name containers end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name to analyze end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name next analyze end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name get root classes end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name classname end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to analyze end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name max count end_name begin_init begin_expr begin_call begin_name is closure required end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_name max loops end_name begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name to analyze end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_name count end_name begin_operator PPLUS end_operator begin_operator LT end_operator begin_name max count end_name end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name next analyze end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name to analyze end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name classname end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dependencies end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name container end_name begin_init begin_expr begin_call begin_name get class container end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name container end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name containers end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name container end_name end_expr end_argument begin_argument begin_expr begin_name container end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name class parser end_name end_type begin_name parser end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name container end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parser end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name class parser end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name container end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name parser end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name class parser end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name container end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name classname end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name java class end_name end_type begin_name java class end_name begin_init begin_expr begin_call begin_name begin_name parser end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name interfaces end_name begin_init begin_expr begin_call begin_name begin_name java class end_name begin_operator DOT end_operator begin_name get interface names end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name interfaces end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name interface name end_name begin_init begin_expr begin_name begin_name interfaces end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dependencies end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_name interface name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name next analyze end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name interface name end_name end_expr end_argument begin_argument begin_expr begin_name interface name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_call begin_name begin_name java class end_name begin_operator DOT end_operator begin_name is class end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name super class end_name begin_init begin_expr begin_call begin_name begin_name java class end_name begin_operator DOT end_operator begin_name get superclass name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dependencies end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_name super class end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name next analyze end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name super class end_name end_expr end_argument begin_argument begin_expr begin_name super class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_for begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name temp end_name begin_init begin_expr begin_name to analyze end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name to analyze end_name begin_operator EQ end_operator begin_name next analyze end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name next analyze end_name begin_operator EQ end_operator begin_name temp end_name end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name remove all elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name containers end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name classes end_name begin_operator DOT end_operator begin_name remove all elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name dependencies end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name classes end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment constructor for ccm reconfigure end_comment begin_specifier end_specifier begin_name ccm reconfigure end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set ccm action end_name begin_argument_list begin_argument begin_expr begin_name command reconfigure end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return number of components in code dewey decimal code return the number of components in dewey decimal end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get size end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name components end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_return end_block 
 begin_comment set the destination directory into which the xsl result files should be copied to required unless tt in tt and tt out tt are specified param dir the name of the destination directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set destdir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name dest dir end_name begin_operator EQ end_operator begin_name dir end_name end_expr end_expr_stmt end_block 
 begin_comment what is the class name return classname or null see set class end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get class name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name class name end_name end_expr end_return end_block 
 begin_comment end a download end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end download end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment test strip java comments filterreader functionality end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name test strip java comments end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name expected end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name generated end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name expected end_name end_expr end_argument begin_argument begin_expr begin_name generated end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment query the exit value of the process return the exit value or execute invalid if no exit value has been received end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get exit value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name exit value end_name end_expr end_return end_block 
 begin_comment trim the supplied string if the string is non null param value the string to trim or null return the trimmed string or null end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get trimmed string end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_name value end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment a set of files to upload or download param set the set of files to be added to the list of files to be transferred end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add fileset end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name set end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set twelve end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name b end_name begin_operator DOT end_operator begin_name boolean value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the classpath to use when looking up a resource param classpath to add to any existing classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert src is java resource end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name java resource end_name begin_operator RPAR end_operator begin_name src end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set classpath end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment begin writing next entry param ze the entry to write since 1 1 throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name put next entry end_name begin_parameter_list begin_param begin_decl begin_type begin_name zip entry end_name end_type begin_name ze end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name close entry end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name entry end_name begin_operator EQ end_operator begin_name ze end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name entry end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_comment not specified end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name set method end_name end_name begin_argument_list begin_argument begin_expr begin_name method end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get time end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_comment not specified end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name set time end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment size crc not required if random access file is used end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name stored end_name begin_operator UNP end_operator begin_name raf end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name zip exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get crc end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name zip exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name set compressed size end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name deflated end_name begin_operator UNP end_operator begin_name has compression level changed end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name set level end_name end_name begin_argument_list begin_argument begin_expr begin_name level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name has compression level changed end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name write local file header end_name begin_argument_list begin_argument begin_expr begin_name entry end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment trim the supplied string if the string is non null param value the string to trim or null return the trimmed string or null end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get trimmed string end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator EQT end_operator begin_name value end_name begin_operator QM end_operator begin_operator DP end_operator begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment creates a list file this temporary file contains a list of all files to be included in the cab one file per line p this method expects to only be called on windows and thus quotes the file names p param files the list of files to use return the list file created throws io exception if there is an error end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name create list file end_name begin_parameter_list begin_param begin_decl begin_type begin_name vector end_name end_type begin_name files end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name list file end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name create temp file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name list file end_name begin_operator DOT end_operator begin_name delete on exit end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name print writer end_name end_type begin_name writer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name list file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name size end_name begin_init begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name list file end_name end_expr end_return end_block 
 begin_comment get a vector of strings of packages built into that platforms runtime jar s return list of packages end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name vector end_name end_type begin_name get jre packages end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name jre packages end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name build jre packages end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name jre packages end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name tar round trip test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the static grammar option param static parser a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set static end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name static parser end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name static end_name end_expr end_argument begin_argument begin_expr begin_name static parser end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds zipfileset param fs zipfileset to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add archives end_name begin_parameter_list begin_param begin_decl begin_type begin_name zip file set end_name end_type begin_name fs end_name end_decl end_param end_parameter_list begin_block begin_comment we just set the prefix for this fileset and pass it up end_comment begin_comment do we need to do this lh end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name set prefix end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name add fileset end_name end_name begin_argument_list begin_argument begin_expr begin_name fs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test real test with resource end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name test real test end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a build listener to the list this listener will be notified of build events for this project param listener the listener to add to the list must not be code null code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add build listener end_name begin_parameter_list begin_param begin_decl begin_type begin_name build listener end_name end_type begin_name listener end_name end_decl end_param end_parameter_list begin_block begin_comment if the listeners already has this listener do nothing end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name listeners end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name listener end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_comment create a new vector to avoid concurrent modification exc when end_comment begin_comment the listeners get added removed while we are in fire end_comment begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name new listeners end_name begin_init begin_expr begin_call begin_name get build listeners end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new listeners end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name listener end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name listeners end_name begin_operator EQ end_operator begin_name new listeners end_name end_expr end_expr_stmt end_block 
 begin_comment utility method to lookup a resource location in the classpath return an input source for reading the resource or code null code if the resource does not exist in the classpath or is not readable end_comment begin_type begin_specifier end_specifier begin_name input source end_name end_type begin_name classpath lookup end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource location end_name end_type begin_name matching entry end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name input source end_name end_type begin_name source end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name ant class loader end_name end_type begin_name loader end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name cp end_name begin_init begin_expr begin_name classpath end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name cp end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name cp end_name begin_operator EQ end_operator begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name concat system classpath end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name cp end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name concat system classpath end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name loader end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create class loader end_name begin_argument_list begin_argument begin_expr begin_name cp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment end_comment begin_comment for classpath lookup we ignore the base directory end_comment begin_comment end_comment begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name begin_init begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name get resource as stream end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name matching entry end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name is end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name source end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name input source end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name entry url end_name begin_init begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name get resource end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name matching entry end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name sysid end_name begin_init begin_expr begin_call begin_name begin_name entry url end_name begin_operator DOT end_operator begin_name to external form end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name source end_name begin_operator DOT end_operator begin_name set system id end_name end_name begin_argument_list begin_argument begin_expr begin_name sysid end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name sysid end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name source end_name end_expr end_return end_block 
 begin_comment the file or single directory of which the permissions must be changed param src the source file or directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name set file end_name end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add fileset end_name begin_argument_list begin_argument begin_expr begin_name fs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add an lt and gt condition container param a an and condition since 1 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add and end_name begin_parameter_list begin_param begin_decl begin_type begin_name and end_name end_type begin_name a end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name conditions end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name a end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test both src end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name wsdl to dotnet end_name begin_operator DOT end_operator begin_name schema end_name begin_operator DOT end_operator begin_name error both declared end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set type name string param tn the type name string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set type name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name tn end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m type name end_name begin_operator EQ end_operator begin_name tn end_name end_expr end_expr_stmt end_block 
 begin_comment determine the number of processors only effective on later v ms return the number of processors available or 0 if not determinable end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get num processors end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name begin_index end_index end_type begin_name param types end_name begin_init begin_expr begin_block end_block end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name method end_name end_type begin_name available processors end_name begin_init begin_expr begin_call begin_name begin_name runtime end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get method end_name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name param types end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name begin_index end_index end_type begin_name args end_name begin_init begin_expr begin_block end_block end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name integer end_name end_type begin_name ret end_name begin_init begin_expr begin_operator LPAR end_operator begin_name integer end_name begin_operator RPAR end_operator begin_call begin_name begin_name available processors end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name runtime end_name begin_operator DOT end_operator begin_name get runtime end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name int value end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment return a bogus number end_comment begin_return begin_expr end_expr end_return end_block end_catch end_try end_block 
 begin_comment determines if the action supplied is valid p valid actions are contained in the static array valid actions return true if the action attribute is valid false if not end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is action valid end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name valid end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name action end_name begin_init begin_expr begin_call begin_name get task end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get action end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name valid actions end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name action end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name valid actions end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name valid end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_for begin_return begin_expr begin_name valid end_name end_expr end_return end_block 
 begin_comment writes all remaining data in the buffer associated with the current thread to the project exception io exception if there is a problem flushing the stream end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name flush end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name buffer info end_name end_type begin_name buffer info end_name begin_init begin_expr begin_call begin_name get buffer info end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name buffer info end_name begin_operator DOT end_operator begin_name buffer end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name process flush end_name begin_argument_list begin_argument begin_expr begin_name begin_name buffer info end_name begin_operator DOT end_operator begin_name buffer end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment empty implementation which allows subclasses to receive the same output that is generated here param message message being logged should not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment test the nested condition return true if there is none or it evaluates to true end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name test nested condition end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name nested condition present end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name result end_name begin_operator UNP end_operator begin_name if condition end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name unless condition end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_name result end_name begin_operator UNP end_operator begin_call begin_name begin_name nested condition end_name begin_operator DOT end_operator begin_name eval end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment ensure tstamp follows the immutability rule end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out end_name end_name begin_operator EQ end_operator begin_name out end_name end_expr end_expr_stmt end_block 
 begin_comment sets the content type for the message param mime type a mime type e g text plain end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set mime type end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name mime type end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name mime type end_name end_name begin_operator EQ end_operator begin_name mime type end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name specified end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment adds the given strings to a list contained in the given map the file is the key into the map end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name base dir end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name names end_name end_decl end_param begin_param begin_decl begin_type begin_name map end_name end_type begin_name m end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name names end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name base dir end_name begin_operator EQ end_operator begin_call begin_name get key file end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name l end_name begin_init begin_expr begin_operator LPAR end_operator begin_name list end_name begin_operator RPAR end_operator begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name l end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name l end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list begin_argument begin_expr begin_name begin_name names end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument begin_argument begin_expr begin_name l end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name l end_name begin_operator DOT end_operator begin_name add all end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name util end_name begin_operator DOT end_operator begin_name arrays end_name begin_operator DOT end_operator begin_name as list end_name end_name begin_argument_list begin_argument begin_expr begin_name names end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filter 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment indicates whether or not the watchdog is still monitoring the process return tt true tt if the process is still running otherwise tt false tt end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is watching end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name watch end_name end_expr end_return end_block 
 begin_comment set the encoding to be used for this string resource param s the encoding name end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name encoding end_name begin_operator EQ end_operator begin_name s end_name end_expr end_expr_stmt end_block 
 begin_comment sets the comment string param comment the comment string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set comment end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name comment end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m comment end_name begin_operator EQ end_operator begin_name comment end_name end_expr end_expr_stmt end_block 
 begin_comment retrieve a list of xml files in the specified folder and below end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name enumeration end_name end_type begin_name get files end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name starting dir end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name get files end_name begin_argument_list begin_argument begin_expr begin_name starting dir end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test resourcesmatch empty end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets a reference to an ant datatype declared elsewhere only yields reasonable results for references path like structures or properties param ref reference ant attribute group name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set refid end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name ref end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ref end_name end_name begin_operator EQ end_operator begin_name ref end_name end_expr end_expr_stmt end_block 
 begin_comment get ignore flag status return boolean containing status of ignore flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get ignore end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m ignore end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name printer end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the file to expand required param src file to expand end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set src resource end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name contains value end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name contains end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test format prefix end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name tstamp end_name begin_operator DOT end_operator begin_name custom format end_name end_name end_type begin_name format end_name begin_init begin_expr begin_call begin_name begin_name tstamp end_name begin_operator DOT end_operator begin_name create format end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name format end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name format end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name format end_name begin_operator DOT end_operator begin_name set timezone end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tstamp end_name begin_operator DOT end_operator begin_name set prefix end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tstamp end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name prop end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name prop end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convert the selectors within this container to a string this will just be a helper class for the subclasses that put their own name around the contents listed here return comma separated list of selectors contained in this one end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name selector elements end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment what protocol to use soap soap 1 2 http post and http get are the base options different version and implementations may offer different options since ant 1 7 param protocol the protocol to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set protocol end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name protocol end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name protocol end_name end_name begin_operator EQ end_operator begin_name protocol end_name end_expr end_expr_stmt end_block 
 begin_comment ignore end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write external args end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name to execute end_name end_decl end_param end_parameter_list begin_block begin_comment if using an external file write the command line options to it end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name options tmp file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name print writer end_name end_type begin_name options list writer end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name options tmp file end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name create temp file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options tmp file end_name begin_operator DOT end_operator begin_name delete on exit end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name list opt end_name begin_init begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name get arguments end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name clear args end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name options tmp file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name options list writer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file writer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name options tmp file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name list opt end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name string end_name begin_init begin_expr begin_name begin_name list opt end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name string end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name options list writer end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name string end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options list writer end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name options list writer end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name quote string end_name begin_argument_list begin_argument begin_expr begin_name string end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name options list writer end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name options tmp file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name options tmp file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name ex end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name options list writer end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is field found end_name begin_parameter_list begin_param begin_decl begin_type begin_name class end_name end_type begin_name clazz end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name field end_name begin_index end_index end_type begin_name fields end_name begin_init begin_expr begin_call begin_name begin_name clazz end_name begin_operator DOT end_operator begin_name get declared fields end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name fields end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name field end_name end_type begin_name field entry end_name begin_init begin_expr begin_name begin_name fields end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name field entry end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name field end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test assertions end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 2 end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 3 end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name commandline java end_name end_type begin_name c end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline java end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name set classname end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name create vm argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name assertions end_name end_type begin_name a end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name assertions end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name assertions end_name begin_operator DOT end_operator begin_name enabled assertion end_name end_name end_type begin_name ea end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name assertions end_name begin_operator DOT end_operator begin_name enabled assertion end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ea end_name begin_operator DOT end_operator begin_name set class end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name add enable end_name end_name begin_argument_list begin_argument begin_expr begin_name ea end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name set assertions end_name end_name begin_argument_list begin_argument begin_expr begin_name a end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name expected end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr end_block end_expr end_init end_decl end_decl_stmt begin_comment only the second iteration would pass because of pr 27218 end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s end_name begin_init begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name expected end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name s end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name expected end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name expected end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name s end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_for begin_decl_stmt begin_decl begin_type begin_name commandline java end_name end_type begin_name c 2 end_name begin_init begin_expr begin_operator LPAR end_operator begin_name commandline java end_name begin_operator RPAR end_operator begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s end_name begin_init begin_expr begin_call begin_name begin_name c 2 end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name expected end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name s end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name expected end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name expected end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name s end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is remote uri end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name is remote end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index of at end_name begin_init begin_expr begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name index of at end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name is remote end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name is remote end_name end_expr end_return end_block 
 begin_comment add a name entry to the include files list return code pattern set name entry code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name begin_name pattern set end_name begin_operator DOT end_operator begin_name name entry end_name end_name end_type begin_name create includes file end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name directory scanner end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name default patterns end_name begin_operator DOT end_operator begin_name create includes file end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test checksum algorithm crc end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name checksum algorithm end_name end_type begin_name algo end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name checksum algorithm end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name algo end_name begin_operator DOT end_operator begin_name set algorithm end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name do test end_name begin_argument_list begin_argument begin_expr begin_name algo end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the location of the bea home implicitly selects weblogic 6 0 shutdown optional param bea home the bea home directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set bea home end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name bea home end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bea home end_name end_name begin_operator EQ end_operator begin_name bea home end_name end_expr end_expr_stmt end_block 
 begin_comment flush both output streams throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name flush end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name left end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name right end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test magic property is empty string end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the script text param text a component of the script text to be added end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add text end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name script end_name end_name begin_operator UNP end_operator begin_name text end_name end_expr end_expr_stmt end_block 
 begin_comment subclasses can use this to throw the requisite exception in is selected in the case of an error condition end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get error end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name verify settings end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get error end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name errmsg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment flag to recursively apply the action defaults to false param recursive true for recursive operation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set recursive end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name recursive end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal recursive end_name end_name begin_argument_list begin_argument begin_expr begin_name recursive end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment send a quot task finished quot event to the build listeners for this project param task the task which has finished executing must not be code null code param exception an exception indicating a reason for a build failure may be code null code indicating a successful build end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name fire task finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name task end_name end_decl end_param begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name exception end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name register thread task end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name current thread end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name build event end_name end_type begin_name event end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name build event end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name set exception end_name end_name begin_argument_list begin_argument begin_expr begin_name exception end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name listeners end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name build listener end_name end_type begin_name listener end_name begin_init begin_expr begin_operator LPAR end_operator begin_name build listener end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name listener end_name begin_operator DOT end_operator begin_name task finished end_name end_name begin_argument_list begin_argument begin_expr begin_name event end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is valid end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment convert a file to a url file to url does not encode characters like file to uri has been introduced in java 1 4 so ant cannot use it except by reflection file utils to uri cannot be used by locator java implemented this way file to url adds file and changes to for dos o ses encode uri converts characters like and to dd param file the file to convert return url the converted file throws malformed url exception on error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name url end_name end_type begin_name file to url end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name malformed url exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_call begin_name encode uri end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name to url end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unsupported encoding exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name malformed url exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment validate and build throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name double file pass end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name skip writing end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute main end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name skip writing end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute main end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name execute main end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment adds a classpath to be used for this dependency check return a path object to be configured by ant end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name depend classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name depend classpath end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name depend classpath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 6 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the actions param actions the actions of the permission end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set actions end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name actions end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name action string end_name begin_operator EQ end_operator begin_name actions end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name actions end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name actions end_name end_name begin_operator EQ end_operator begin_call begin_name parse actions end_name begin_argument_list begin_argument begin_expr begin_name actions end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment the file that must be older than the target file if the property is to be set param file the file we are checking against the target file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set srcfile end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name source file end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block 
 begin_comment set the text to be placed at the bottom of each output file param bottom the bottom text end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set bottom end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name bottom end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name html end_name end_type begin_name h end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name html end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name h end_name begin_operator DOT end_operator begin_name add text end_name end_name begin_argument_list begin_argument begin_expr begin_name bottom end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add bottom end_name begin_argument_list begin_argument begin_expr begin_name h end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment validate the tasks parameters throws build exception if invalid parameters found end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name dest file end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name dest file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name dest file end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_name dest file end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment set whether to copy empty directories param include empty if true copy empty directories default is true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set include empty dirs end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name include empty end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name include empty end_name end_name begin_operator EQ end_operator begin_name include empty end_name end_expr end_expr_stmt end_block 
 begin_comment set the zipfile that holds this zip resource param z the zipfile as a file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set zipfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name z end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set archive end_name begin_argument_list begin_argument begin_expr begin_name z end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment called to validate that the tool parameters have been configured throws build exception if the deployment tool s configuration isn t valid end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate configured end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name dest dir end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name dest dir end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment constructs the output component opens the file for writing param out the file to read to throws io exception when the file cannot be read from end_comment begin_name file output end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name encoding end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name writer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file writer end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name writer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name output stream writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment simple test to ensure that the caching does work end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test driver caching end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name sql exec end_name end_type begin_name sql end_name begin_init begin_expr begin_call begin_name create task end_name begin_argument_list begin_argument begin_expr begin_call begin_name get properties end_name begin_argument_list begin_argument begin_expr begin_name null end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name sql exec end_name begin_operator DOT end_operator begin_name get loader map end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name contains key end_name begin_argument_list begin_argument begin_expr begin_name null driver end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sql end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get message end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sql exec end_name begin_operator DOT end_operator begin_name get loader map end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name contains key end_name begin_argument_list begin_argument begin_expr begin_name null driver end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert same end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sql end_name begin_operator DOT end_operator begin_name get loader end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name jdbc task end_name begin_operator DOT end_operator begin_name get loader map end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get end_name begin_argument_list begin_argument begin_expr begin_name null driver end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name loader 1 end_name begin_init begin_expr begin_call begin_name begin_name sql end_name begin_operator DOT end_operator begin_name get loader end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment 2 nd run end_comment begin_expr_stmt begin_expr begin_name sql end_name begin_operator EQ end_operator begin_call begin_name create task end_name begin_argument_list begin_argument begin_expr begin_call begin_name get properties end_name begin_argument_list begin_argument begin_expr begin_name null end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment the driver must still be cached end_comment begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name jdbc task end_name begin_operator DOT end_operator begin_name get loader map end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name contains key end_name begin_argument_list begin_argument begin_expr begin_name null driver end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sql end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get message end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name jdbc task end_name begin_operator DOT end_operator begin_name get loader map end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name contains key end_name begin_argument_list begin_argument begin_expr begin_name null driver end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert same end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sql end_name begin_operator DOT end_operator begin_name get loader end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name jdbc task end_name begin_operator DOT end_operator begin_name get loader map end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get end_name begin_argument_list begin_argument begin_expr begin_name null driver end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert same end_name begin_argument_list begin_argument begin_expr begin_name loader 1 end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name sql end_name begin_operator DOT end_operator begin_name get loader end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name j unit task mirror end_name end_type begin_name create mirror end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit task end_name end_type begin_name task end_name end_decl end_param begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name loader end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name load class end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment sanity check end_comment end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name load class end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name j unit task mirror end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get name end_name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name get class loader end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name loader end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name constructor end_name end_type begin_name cons end_name begin_init begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name get constructor end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name j unit task end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator LPAR end_operator begin_name j unit task mirror end_name begin_operator RPAR end_operator begin_call begin_name begin_name cons end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name task end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment get the url return the url of the resource end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get url end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name url end_name end_expr end_return end_block 
 begin_comment get full flag status return boolean containing status of full flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get full end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m full end_name end_expr end_return end_block 
 begin_comment check style visibility modifier on end_comment begin_comment constructor inits everything and set up the search pattern end_comment begin_specifier end_specifier begin_name dotnet compile end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name clear end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set includes end_name begin_argument_list begin_argument begin_expr begin_call begin_name get file pattern end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets destination directory required param to dir destination directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set to dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name to dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name to dir end_name end_name begin_operator EQ end_operator begin_name to dir end_name end_expr end_expr_stmt end_block 
 begin_comment adds a resource file set param fileset file set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add fileset end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name fileset end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file sets end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name fileset end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write 0 end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name current char end_name end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name b end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name current char end_name end_name begin_operator EQT end_operator begin_name b end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator PPLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name run length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name write run end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name current char end_name end_name begin_operator EQ end_operator begin_operator MINUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name run length end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_comment else nothing to do end_comment end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name write run end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name run length end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name current char end_name end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name current char end_name end_name begin_operator EQ end_operator begin_name b end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name run length end_name end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment is this entry a symbolic link return true if this is a symbolic link since 1 1 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is link end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get linked file end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_return end_block 
 begin_comment turns off or on this recorder param state true for on false for off null for no change end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set record state end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name state end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name state end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name flush end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name record end_name begin_operator EQ end_operator begin_call begin_name begin_name state end_name begin_operator DOT end_operator begin_name boolean value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 5 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_specifier end_specifier begin_name suite test case end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convert a class name from java source file dot notation to class file slash notation param dot name the class name in dot notation eg java lang object return the class name in slash notation eg java lang object end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name convert dot name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name dot name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name dot name end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment builds a command line to execute ss return the constructed commandline end_comment begin_type begin_name commandline end_name end_type begin_name build cmd line end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name command line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment build the command line from what we got the format is end_comment begin_comment ss get vss items g h i n o r v w y end_comment begin_comment as specified in the ss exe help end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get ss command end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name command get end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get vsspath end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get vsspath end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment gl end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get localpath end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment i or i y or i n end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get autoresponse end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment o end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get quiet end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment r end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get recursive end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment v end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get version date label end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment w end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get writable end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment y end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get login end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment g end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get file time stamp end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment gws or gwr end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get writable files end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name command line end_name end_expr end_return end_block 
 begin_comment not significant for the class loader end_comment begin_comment empty implementation to satisfy the build listener interface param event the task finished event end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_comment not significant for the class loader end_comment end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name or selector end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment add a directory to the zip stream param dir the directort to add to the archive param z out the stream to write to param v path the name this entry shall have in the archive param mode the unix permissions to set throws io exception on error since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name zip dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir end_name end_decl end_param begin_param begin_decl begin_type begin_name zip output stream end_name end_type begin_name z out end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name v path end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name mode end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name zip dir end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr begin_name z out end_name end_expr end_argument begin_argument begin_expr begin_name v path end_name end_expr end_argument begin_argument begin_expr begin_name mode end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name char end_name begin_index end_index end_name end_type begin_name buf end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_call begin_name read end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name buf end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment the flattening attribute default is false param flatten if true use flattening end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set flatten end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name flatten end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name flatten end_name end_name begin_operator EQ end_operator begin_name flatten end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name initialize end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name initialized end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name options end_name begin_operator EQ end_operator begin_call begin_name convert regex options end_name begin_argument_list begin_argument begin_expr begin_name flags end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name from end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name regular expression end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name regular expression end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name regular expression end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr begin_name from end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name regexp end_name begin_operator EQ end_operator begin_call begin_name begin_name regular expression end_name begin_operator DOT end_operator begin_name get regexp end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name to end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name to end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name substitution end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name substitution end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name substitution end_name begin_operator DOT end_operator begin_name set expression end_name end_name begin_argument_list begin_argument begin_expr begin_name to end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test test bzip 2 tar task end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name test logo extraction end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the names of the directories which matched none of the include patterns the names are relative to the base directory this involves performing a slow scan if one has not already been completed return the names of the directories which matched none of the include patterns see slow scan end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get not included directories end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name slow scan end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name directories end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name dirs not included end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dirs not included end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name directories end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name directories end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name abstract xslt liaison test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a from address element param address the address to send from end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add from end_name begin_parameter_list begin_param begin_decl begin_type begin_name email address end_name end_type begin_name address end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name from end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name from end_name end_name begin_operator EQ end_operator begin_name address end_name end_expr end_expr_stmt end_block 
 begin_comment get the sub project instance currently in use return project since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name get new project end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name new project end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name reinit end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name new project end_name end_expr end_return end_block 
 begin_comment get the string to search for return current code string code token end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get token end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name token end_name end_expr end_return end_block 
 begin_comment if the prefix is set then only properties which start with this prefix string will be recorded if regex is not set and if this is never set or it is set to an empty string or tt null tt then all properties will be recorded p for example if the attribute is set as pre lt echoproperties prefix ant gt pre then the property ant home will be recorded but ant example will not param prefix the new prefix value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set prefix end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name prefix end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name prefix end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name prefix end_name end_name begin_operator EQ end_operator begin_name prefix end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name property set end_name end_type begin_name ps end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name property set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ps end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ps end_name begin_operator DOT end_operator begin_name append prefix end_name end_name begin_argument_list begin_argument begin_expr begin_name prefix end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add propertyset end_name begin_argument_list begin_argument begin_expr begin_name ps end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment see enumerated attribute get values end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_return end_block 
 begin_comment pass output sent to system out to the test runner so it can collect ot for the formatters param output output coming from system out since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name testlistener prefix end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name runner end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name output to formatters end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name runner end_name begin_operator DOT end_operator begin_name handle output end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name show output end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name handle output end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name handle output end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name setup rand part c end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su j 2 end_name end_name begin_operator LT end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name su z end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name current char end_name end_name begin_operator EQ end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name su ch 2 end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name crc end_name begin_operator DOT end_operator begin_name update crc end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su ch 2 end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su j 2 end_name end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name current state end_name end_name begin_operator EQ end_operator begin_name rand part a state end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su i 2 end_name end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su count end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name setup rand part a end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment processes the buffer as far as possible takes into account that appended data may make it possible to replace the end of the already received data when the token is split over the old and the new part return true if some data has been made available in the output buffer end_comment begin_type begin_name boolean end_name end_type begin_name process end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name input buffer end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_call begin_name begin_name token end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pos end_name begin_init begin_expr begin_call begin_name replace end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name pos end_name begin_operator EQ end_operator begin_call begin_name begin_name math end_name begin_operator DOT end_operator begin_name max end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name input buffer end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_call begin_name begin_name token end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr begin_name pos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name output buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name input buffer end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name pos end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name input buffer end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name pos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the recursive string r return an empty string if recursive is not set or is false end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get recursive end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name recursive end_name begin_operator QM end_operator begin_name flag recursion end_name begin_operator DP end_operator end_expr end_return end_block 
 begin_comment get an enumeration of the root classes return an enumeration of strings each of which is a class name for a root class end_comment begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name get root classes end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name root classes end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment access the package or module to operate upon return package module end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get package end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name cvs package end_name end_name end_expr end_return end_block 
 begin_comment tests check in commandline generation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test checkin command line end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s test cmd line end_name begin_init begin_expr begin_block begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name ss exe end_name end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name command checkin end_name end_name end_expr begin_expr begin_name ds vss project path end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag autoresponse no end_name end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag writable end_name end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag login end_name end_name begin_operator PLUS end_operator begin_name vss username end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag comment end_name end_name begin_operator PLUS end_operator begin_name src comment end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_comment set up a vss check in task end_comment begin_decl_stmt begin_decl begin_type begin_name msvsscheckin end_name end_type begin_name vss checkin end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name msvsscheckin end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss checkin end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss checkin end_name begin_operator DOT end_operator begin_name set comment end_name end_name begin_argument_list begin_argument begin_expr begin_name src comment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss checkin end_name begin_operator DOT end_operator begin_name set login end_name end_name begin_argument_list begin_argument begin_expr begin_name vss username end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss checkin end_name begin_operator DOT end_operator begin_name set autoresponse end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss checkin end_name begin_operator DOT end_operator begin_name set vsspath end_name end_name begin_argument_list begin_argument begin_expr begin_name vss project path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss checkin end_name begin_operator DOT end_operator begin_name set writable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name commandline end_name begin_operator EQ end_operator begin_call begin_name begin_name vss checkin end_name begin_operator DOT end_operator begin_name build cmd line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check command lines end_name begin_argument_list begin_argument begin_expr begin_name s test cmd line end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set replace end_name begin_parameter_list begin_param begin_decl begin_type begin_name char end_name end_type begin_name replace end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_operator EQ end_operator begin_name replace end_name end_expr end_expr_stmt end_block 
 begin_comment opens the given file for reading assuming the platform s native encoding for file names param name name of the archive throws io exception if an error occurs while reading the file end_comment begin_specifier end_specifier begin_name zip file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the output file name end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get output file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name output file end_name end_expr end_return end_block 
 begin_comment add an lt uptodate gt condition param u an up to date condition since 1 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add uptodate end_name begin_parameter_list begin_param begin_decl begin_type begin_name up to date end_name end_type begin_name u end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name conditions end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name u end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add an image operation to chain param instr the image operation to append to the chain end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add image operation end_name begin_parameter_list begin_param begin_decl begin_type begin_name image operation end_name end_type begin_name instr end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name instructions end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name instr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment demonstrates bug 18105 on o ses with os name shorter than 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test file constructor end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name tar entry end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create an instance of this enumerated value based on the string value param value the value to use return an enumerated instance end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name add asis remove end_name end_type begin_name new instance end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name add asis remove end_name end_type begin_name a end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name add asis remove end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name a end_name end_expr end_return end_block 
 begin_comment flag to disable the validation steps optional default false param novalidate option end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set novalidate end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name novalidate end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name novalidate end_name end_name begin_operator EQ end_operator begin_name novalidate end_name end_expr end_expr_stmt end_block 
 begin_comment param reverse loader if true a delegated loader will take precedence over the parent deprecated since 1 6 x stop using this attribute ant attribute ignore true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set reverse loader end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name reverse loader end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get delegate end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set reverse loader end_name begin_argument_list begin_argument begin_expr begin_name reverse loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment tests whether or not the unless condition is satisfied return whether or not the unless condition is satisfied if no condition or an empty condition has been set code true code is returned see set unless string end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name test unless condition end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name unless condition end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name test end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name replace properties end_name end_name begin_argument_list begin_argument begin_expr begin_name unless condition end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment here is a comment with an embedded tab end_comment begin_if begin_condition begin_expr begin_name mybool end_name end_expr end_condition begin_then begin_block begin_comment here is a multi line with embedded tab comment end_comment begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name mychar end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment tab end_comment end_block end_then end_if begin_comment end of if mybool end_comment end_block 
 begin_comment resolve the entries in the constant pool resolution of the constant pool involves transforming indexes to other constant pool entries into the actual data for that entry end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name resolve end_name begin_parameter_list end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name constant pool entry end_name end_type begin_name pool info end_name begin_init begin_expr begin_operator LPAR end_operator begin_name constant pool entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name pool info end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name pool info end_name begin_operator DOT end_operator begin_name is resolved end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name pool info end_name begin_operator DOT end_operator begin_name resolve end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block 
 begin_comment get version flag status return boolean containing status of version flag end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get version end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m version end_name end_expr end_return end_block 
 begin_comment indicates if this element supports a nested element of the given name param element name the name of the nested element being checked return true if the given nested element is supported end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name supports nested element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name element name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name nested creators end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name element name end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name is dynamic end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name add type methods end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_return end_block 
 begin_comment add a code file name mapper code param file name mapper the code file name mapper code to add since ant 1 6 3 throws build exception if multiple mappers are added end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name file name mapper end_name end_type begin_name file name mapper end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file name mapper end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file name mapper end_name end_name begin_operator EQ end_operator begin_name file name mapper end_name end_expr end_expr_stmt end_block 
 begin_comment a timeout value that overrides any task wide timeout param i an code integer code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set timeout end_name begin_parameter_list begin_param begin_decl begin_type begin_name integer end_name end_type begin_name i end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name timeout end_name end_name begin_operator EQ end_operator begin_name i end_name end_expr end_expr_stmt end_block 
 begin_comment get the size in bytes of the read buffer return the int size of the read buffer end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name get buffer size end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name buffer size end_name end_expr end_return end_block 
 begin_comment if true suppress warning messages param nwarn the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set no warn end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name nwarn end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m nwarn end_name begin_operator EQ end_operator begin_name nwarn end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test get with selector end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fs destination end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds destination end_name begin_init begin_expr begin_call begin_name begin_name fs destination end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds destination end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name sorted destination directories end_name begin_init begin_expr begin_call begin_name begin_name ds destination end_name begin_operator DOT end_operator begin_name get included directories end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name sorted destination files end_name begin_init begin_expr begin_call begin_name begin_name ds destination end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name counter end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name counter end_name begin_operator LT end_operator begin_name begin_name sorted destination directories end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name counter end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name sorted destination directories end_name begin_index begin_expr begin_name counter end_name end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name sorted destination directories end_name begin_index begin_expr begin_name counter end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name counter end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name counter end_name begin_operator LT end_operator begin_name begin_name sorted destination files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name counter end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name sorted destination files end_name begin_index begin_expr begin_name counter end_name end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name sorted destination files end_name begin_index begin_expr begin_name counter end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fs source end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds source end_name begin_init begin_expr begin_call begin_name begin_name fs source end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds source end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds source end_name end_expr end_argument begin_argument begin_expr begin_name sorted destination files end_name end_expr end_argument begin_argument begin_expr begin_name sorted destination directories end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name line contains test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment end of finally end_comment begin_comment validate attributes provided for this task in xml build file exception build exception if any supplied attribute is invalid or any mandatory attribute is missing end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate attributes end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name src end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name property file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name property file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name property file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name token end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name replacefilters end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name token end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name token end_name begin_operator DOT end_operator begin_name get text end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name message end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test echo to bad file no fail end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true enables debugging output when ejbc is executed param debug output a boolean indicating if debugging output should be generated end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set debug output end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name debug output end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name debug output end_name end_name begin_operator EQ end_operator begin_name debug output end_name end_expr end_expr_stmt end_block 
 begin_comment creates a new line contains reg exp using the passed in reader for instantiation param rdr a reader object providing the underlying stream must not be code null code return a new filter based on this configuration but filtering the specified reader end_comment begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name chain end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name rdr end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name line contains reg exp end_name end_type begin_name new filter end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name line contains reg exp end_name begin_argument_list begin_argument begin_expr begin_name rdr end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new filter end_name begin_operator DOT end_operator begin_name set regexps end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get regexps end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new filter end_name begin_operator DOT end_operator begin_name set negate end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name is negated end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name new filter end_name end_expr end_return end_block 
 begin_comment run the script using the helper object exception build exception if something goes wrong with the build end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name get script runner end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name execute script end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment construct a new identity stack with the specified object as the bottom element param o the bottom element end_comment begin_specifier end_specifier begin_name identity stack end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name o end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name push end_name begin_argument_list begin_argument begin_expr begin_name o end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment set whether ties are allowed param b whether a tie is a pass end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set allowtie end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name tie end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment splits a path with or as separators into its parts param project the project to use param source a code string code value return an array of strings one for each path element end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name translate path end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name source end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name source end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr end_expr end_index end_name end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name path tokenizer end_name end_type begin_name tok end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path tokenizer end_name begin_argument_list begin_argument begin_expr begin_name source end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name element end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path element end_name begin_init begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name path element end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name path element end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name translate file sep end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name element end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name res end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name res end_name end_expr end_return end_block 
 begin_comment handle the end of the project sets the current target of the context to be the implicit target param uri the namespace uri of the element param tag the name of the element param context the current context end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name on end element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name tag end_name end_decl end_param begin_param begin_decl begin_type begin_name ant xml context end_name end_type begin_name context end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name set current target end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get implicit target end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true this is the same as compressionlevel 3 param usecomp if true turns on compression using default level abstract cvs task default compression level end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set compression end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name usecomp end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set compression level end_name begin_argument_list begin_argument begin_expr begin_name usecomp end_name begin_operator QM end_operator begin_name begin_name abstract cvs task end_name begin_operator DOT end_operator begin_name default compression level end_name end_name begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment store an attribute and update the index param attribute the attribute to be stored end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name store attribute end_name begin_parameter_list begin_param begin_decl begin_type begin_name attribute end_name end_type begin_name attribute end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name attribute end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name attribute key end_name begin_init begin_expr begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get key end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name attribute key end_name end_expr end_argument begin_argument begin_expr begin_name attribute end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name attribute index end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name attribute key end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name attribute index end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name attribute key end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment shall we assume jdk 1 6 command line switches return true if jdk 1 6 since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name assume java 16 end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get compiler version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get compiler version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 6 end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get compiler version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 6 end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get compiler version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 6 end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_return end_block 
 begin_comment clear internal caches since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name clear caches end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file list map end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name scanned dirs end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment executes the task throws build exception is there is a problem in the task execution end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment first off make sure that we ve got a from and to extension end_comment begin_if begin_condition begin_expr begin_name from extension end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name to extension end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name src dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name src dir end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name replace end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name src dir end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name from extension end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name to extension end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name move end_name end_type begin_name move end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name move end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name move end_name begin_operator DOT end_operator begin_name bind to owner end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name move end_name begin_operator DOT end_operator begin_name set owning target end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get owning target end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name move end_name begin_operator DOT end_operator begin_name set task name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name move end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name move end_name begin_operator DOT end_operator begin_name set todir end_name end_name begin_argument_list begin_argument begin_expr begin_name src dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name move end_name begin_operator DOT end_operator begin_name set overwrite end_name end_name begin_argument_list begin_argument begin_expr begin_name replace end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_name src dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name move end_name begin_operator DOT end_operator begin_name add fileset end_name end_name begin_argument_list begin_argument begin_expr begin_name fileset end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name mapper end_name end_type begin_name me end_name begin_init begin_expr begin_call begin_name begin_name move end_name begin_operator DOT end_operator begin_name create mapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name me end_name begin_operator DOT end_operator begin_name set type end_name end_name begin_argument_list begin_argument begin_expr begin_name glob type end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name me end_name begin_operator DOT end_operator begin_name set from end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name from extension end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name me end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name to extension end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name move end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment writes the command into a temporary dcl script and returns the corresponding file object the script will be deleted on exit param cmd the command line to execute as an array of strings param env the environment to set as an array of strings return the command file throws io exception if errors are encountered creating the file end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name create command file end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name cmd end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name env end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name script end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name create temp file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name script end_name begin_operator DOT end_operator begin_name delete on exit end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name print writer end_name end_type begin_name out end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file writer end_name begin_argument_list begin_argument begin_expr begin_name script end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment add the environment as logicals to the dcl script end_comment begin_if begin_condition begin_expr begin_name env end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name eq index end_name end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name env end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name eq index end_name begin_operator EQ end_operator begin_name begin_name env end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name eq index end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name env end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name substring end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name eq index end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name env end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name substring end_name begin_argument_list begin_argument begin_expr begin_name eq index end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name cmd end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name cmd end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name out end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try begin_return begin_expr begin_name script end_name end_expr end_return end_block 
 begin_comment merge all individual tests from the batchtest with all individual tests and return an enumeration over all tt j unit test tt return enumeration over individual tests since ant 1 3 end_comment begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name get individual tests end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name count end_name begin_init begin_expr begin_call begin_name begin_name batch tests end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name enumeration end_name begin_index end_index end_type begin_name enums end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name enumeration end_name begin_index begin_expr begin_name count end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name count end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name batch test end_name end_type begin_name batchtest end_name begin_init begin_expr begin_operator LPAR end_operator begin_name batch test end_name begin_operator RPAR end_operator begin_call begin_name begin_name batch tests end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name enums end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name begin_name batchtest end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_name begin_name enums end_name begin_index begin_expr begin_name begin_name enums end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name enumerations end_name begin_operator DOT end_operator begin_name from compound end_name end_name begin_argument_list begin_argument begin_expr begin_name enums end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name map file name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name source file name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name inputs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name results end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name source file name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file name mapper end_name end_type begin_name mapper end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name m iter end_name begin_init begin_expr begin_call begin_name get mappers end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name m iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_name mapper end_name begin_operator EQ end_operator begin_call begin_name file name mapper end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name m iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name mapper end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name inputs end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name inputs end_name begin_operator DOT end_operator begin_name add all end_name end_name begin_argument_list begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name it end_name begin_init begin_expr begin_call begin_name begin_name inputs end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name mapped end_name begin_init begin_expr begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name map file name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name mapped end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name add all end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arrays end_name begin_operator DOT end_operator begin_name as list end_name end_name begin_argument_list begin_argument begin_expr begin_name mapped end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block end_then end_if end_block end_for begin_return begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator LPAR end_operator begin_name begin_name string end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment create a normal command line then with xnew at the front return a command line that hands off to thw end_comment begin_type begin_specifier end_specifier begin_name commandline end_name end_type begin_name setup rmic command end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name options end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name commandline end_name begin_init begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name setup rmic command end_name end_name begin_argument_list begin_argument begin_expr begin_name options end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name commandline end_name end_expr end_return end_block 
 begin_comment closes the underlying stream throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name close end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set all the parameters for this custom selector collected by the extend selector class param parameters the complete set of parameters for this selector end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set parameters end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name parameter end_name begin_index end_index end_name end_type begin_name parameters end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name parameters end_name end_name begin_operator EQ end_operator begin_name parameters end_name end_expr end_expr_stmt end_block 
 begin_comment adds a classpath to be set because a directory might be given for antlr debug return a path to be configured end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create classpath end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create path end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment creates a new code my ant type definition code instance param macro def a code macro def code value end_comment begin_specifier end_specifier begin_name my ant type definition end_name begin_parameter_list begin_param begin_decl begin_type begin_name macro def end_name end_type begin_name macro def end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name macro def end_name end_name begin_operator EQ end_operator begin_name macro def end_name end_expr end_expr_stmt end_block 
 begin_comment bugzilla report 34963 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test stack trace line breaks end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect report with text end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file reader end_name end_type begin_name r end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name r end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name report end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name read fully end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment factory method from base class this is overriden in child classes to return a specific selector class end_comment begin_type begin_specifier end_specifier begin_name base selector end_name end_type begin_name get instance end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name type selector end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set the directory where the ccm executable is located param dir the directory containing the ccm executable end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set ccm dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name ccm dir end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name translate path end_name end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a attribute to specify what will happen if number of yes votes is the same as the number of no votes defaults to true param tiebreaker the value to give if there is a tie end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set allowtie end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name tiebreaker end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name allowtie end_name begin_operator EQ end_operator begin_name tiebreaker end_name end_expr end_expr_stmt end_block 
 begin_comment searches for the correct place to insert a name into a list so as to keep the list sorted alphabetically param names the current list of names must not be code null code param name the name to find a place for must not be code null code return the correct place in the list for the given name end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name find target position end_name begin_parameter_list begin_param begin_decl begin_type begin_name vector end_name end_type begin_name names end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name res end_name begin_init begin_expr begin_call begin_name begin_name names end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name names end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name res end_name begin_operator EQT end_operator begin_call begin_name begin_name names end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name compare to end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name names end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name res end_name begin_operator EQ end_operator begin_name i end_name end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_return begin_expr begin_name res end_name end_expr end_return end_block 
 begin_comment this method names the output file this is an operation which is required to have been performed param dest file the output file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dest file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dest file end_name end_name begin_operator EQ end_operator begin_name dest file end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment write magic done by caller who created this stream end_comment begin_comment this out write b end_comment begin_comment this out write z end_comment begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name data end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name block size 100 k end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment write magic bytes h indicating file format huffmanised followed by a digit indicating block size 100 k end_comment begin_expr_stmt begin_expr begin_call begin_name bs put u byte end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name bs put u byte end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name block size 100 k end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name combined crc end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name init block end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment set the owner param owner the owner jsp c compiler end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set jspc end_name begin_parameter_list begin_param begin_decl begin_type begin_name jsp c end_name end_type begin_name owner end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name owner end_name end_name begin_operator EQ end_operator begin_name owner end_name end_expr end_expr_stmt end_block 
 begin_comment specify the classpath to be searched to load the parser optional param classpath the classpath to load the parser end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_name classpath end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment tests whether or not a given path matches a given pattern param pattern the pattern to match against must not be code null code param str the path to match as a string must not be code null code param is case sensitive whether or not matching should be performed case sensitively return code true code if the pattern matches against the string or code false code otherwise end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name match path end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name pattern end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name str end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name is case sensitive end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name pat dirs end_name begin_init begin_expr begin_call begin_name tokenize path as array end_name begin_argument_list begin_argument begin_expr begin_name pattern end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name str dirs end_name begin_init begin_expr begin_call begin_name tokenize path as array end_name begin_argument_list begin_argument begin_expr begin_name str end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pat idx start end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pat idx end end_name begin_init begin_expr begin_name begin_name pat dirs end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name str idx start end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name str idx end end_name begin_init begin_expr begin_name begin_name str dirs end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_comment up to first end_comment begin_while begin_condition begin_expr begin_name pat idx start end_name begin_operator LE end_operator begin_name pat idx end end_name begin_operator UNP end_operator begin_name str idx start end_name begin_operator LE end_operator begin_name str idx end end_name end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name pat dir end_name begin_init begin_expr begin_name begin_name pat dirs end_name begin_index begin_expr begin_name pat idx start end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name pat dir end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name match end_name begin_argument_list begin_argument begin_expr begin_name pat dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name str dirs end_name begin_index begin_expr begin_name str idx start end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name is case sensitive end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name pat dirs end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name str dirs end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name pat idx start end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name str idx start end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_while begin_if begin_condition begin_expr begin_name str idx start end_name begin_operator GT end_operator begin_name str idx end end_name end_expr end_condition begin_then begin_block begin_comment string is exhausted end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name pat idx start end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LE end_operator begin_name pat idx end end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name begin_name pat dirs end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name pat dirs end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name str dirs end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name pat idx start end_name begin_operator GT end_operator begin_name pat idx end end_name end_expr end_condition begin_then begin_block begin_comment string not exhausted but pattern is failure end_comment begin_expr_stmt begin_expr begin_name pat dirs end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name str dirs end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_else end_if begin_comment up to last end_comment begin_while begin_condition begin_expr begin_name pat idx start end_name begin_operator LE end_operator begin_name pat idx end end_name begin_operator UNP end_operator begin_name str idx start end_name begin_operator LE end_operator begin_name str idx end end_name end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name pat dir end_name begin_init begin_expr begin_name begin_name pat dirs end_name begin_index begin_expr begin_name pat idx end end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name pat dir end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name match end_name begin_argument_list begin_argument begin_expr begin_name pat dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name str dirs end_name begin_index begin_expr begin_name str idx end end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name is case sensitive end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name pat dirs end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name str dirs end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name pat idx end end_name begin_operator MMINUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name str idx end end_name begin_operator MMINUS end_operator end_expr end_expr_stmt end_block end_while begin_if begin_condition begin_expr begin_name str idx start end_name begin_operator GT end_operator begin_name str idx end end_name end_expr end_condition begin_then begin_block begin_comment string is exhausted end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name pat idx start end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LE end_operator begin_name pat idx end end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name begin_name pat dirs end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name pat dirs end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name str dirs end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block end_then end_if begin_while begin_condition begin_expr begin_name pat idx start end_name begin_operator UNP end_operator begin_name pat idx end end_name begin_operator UNP end_operator begin_name str idx start end_name begin_operator LE end_operator begin_name str idx end end_name end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pat idx tmp end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name pat idx start end_name begin_operator PLUS end_operator end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LE end_operator begin_name pat idx end end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name pat dirs end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name pat idx tmp end_name begin_operator EQ end_operator begin_name i end_name end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_name pat idx tmp end_name begin_operator EQT end_operator begin_name pat idx start end_name begin_operator PLUS end_operator end_expr end_condition begin_then begin_block begin_comment situation so skip one end_comment begin_expr_stmt begin_expr begin_name pat idx start end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_continue end_continue end_block end_then end_if begin_comment find the pattern between pad idx start pad idx tmp in str between end_comment begin_comment str idx start str idx end end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pat length end_name begin_init begin_expr begin_operator LPAR end_operator begin_name pat idx tmp end_name begin_operator MINUS end_operator begin_name pat idx start end_name begin_operator MINUS end_operator begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name str length end_name begin_init begin_expr begin_operator LPAR end_operator begin_name str idx end end_name begin_operator MINUS end_operator begin_name str idx start end_name begin_operator PLUS end_operator begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name found idx end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_label begin_name str loop end_name end_label begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LE end_operator begin_name str length end_name begin_operator MINUS end_operator begin_name pat length end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name pat length end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name sub pat end_name begin_init begin_expr begin_name begin_name pat dirs end_name begin_index begin_expr begin_name pat idx start end_name begin_operator PLUS end_operator begin_name j end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name sub str end_name begin_init begin_expr begin_name begin_name str dirs end_name begin_index begin_expr begin_name str idx start end_name begin_operator PLUS end_operator begin_name i end_name begin_operator PLUS end_operator begin_name j end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name match end_name begin_argument_list begin_argument begin_expr begin_name sub pat end_name end_expr end_argument begin_argument begin_expr begin_name sub str end_name end_expr end_argument begin_argument begin_expr begin_name is case sensitive end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if end_block end_for begin_expr_stmt begin_expr begin_name found idx end_name begin_operator EQ end_operator begin_name str idx start end_name begin_operator PLUS end_operator begin_name i end_name end_expr end_expr_stmt begin_break end_break end_block end_for begin_if begin_condition begin_expr begin_name found idx end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name pat dirs end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name str dirs end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name pat idx start end_name begin_operator EQ end_operator begin_name pat idx tmp end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name str idx start end_name begin_operator EQ end_operator begin_name found idx end_name begin_operator PLUS end_operator begin_name pat length end_name end_expr end_expr_stmt end_block end_while begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name pat idx start end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LE end_operator begin_name pat idx end end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name begin_name pat dirs end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name pat dirs end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name str dirs end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_comment flushes all filters end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name flush filter chain end_name begin_parameter_list end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name replacefilters end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name replacefilter end_name end_type begin_name filter end_name begin_init begin_expr begin_operator LPAR end_operator begin_name replacefilter end_name begin_operator RPAR end_operator begin_call begin_name begin_name replacefilters end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name filter end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirector 12 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name test redirector 9 thru 12 end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name write 0 end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name accept end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block end_else end_if end_block 
 begin_comment name a package param package name a package name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set package end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name package name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name package name end_name end_name begin_operator EQ end_operator begin_name package name end_name end_expr end_expr_stmt end_block 
 begin_comment sets encoding of file names param encoding the encoding format since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name encoding end_name end_name begin_operator EQ end_operator begin_name encoding end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test propertyfile cache end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name propertiesfile cache end_name end_type begin_name cache end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name propertiesfile cache end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name cachefile end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name set cachefile end_name end_name begin_argument_list begin_argument begin_expr begin_name cachefile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name do test end_name begin_argument_list begin_argument begin_expr begin_name cache end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert false end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name cachefile end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name beta end_name end_type begin_name my beta end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name beta end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name my beta end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the timeout for this code output stream funneler code this is the maximum time that may elapse between the closure of the last quot funnel quot and the next call to code get output stream code without closing the underlying stream param timeout millis code long code timeout value end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set timeout end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name timeout millis end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name timeout millis end_name end_name begin_operator EQ end_operator begin_name timeout millis end_name end_expr end_expr_stmt end_block 
 begin_comment how long to show the splash screen in milliseconds optional default 5000 ms param duration the spash duration in milliseconds end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set showduration end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name duration end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name show duration end_name end_name begin_operator EQ end_operator begin_name duration end_name end_expr end_expr_stmt end_block 
 begin_comment populate data from this array as if it was in local file data param data an array of bytes param offset the start offset param length the number of bytes in the array from offset throws zip exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name parse from local file data end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name data end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name offset end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name length end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name zip exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name length end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name zip exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment logs a message with the given priority param msg the message to be logged should not be code null code param msg level the message priority at which this message is to be logged end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name msg level end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name msg level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment reasonable default if the component is used without end_comment begin_comment a project for example as a standalone bean end_comment begin_comment most ant components can be used this way end_comment begin_if begin_condition begin_expr begin_name msg level end_name begin_operator LE end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_block 
 begin_comment label representing the start of the range param from label the start label end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set from label end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name from label end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal from label end_name end_name begin_argument_list begin_argument begin_expr begin_name from label end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the directory to be deleted param dir the root of the tree to be removed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dir end_name end_name begin_operator EQ end_operator begin_name dir end_name end_expr end_expr_stmt end_block 
 begin_comment verify the specified resource collection is filesystem only param rc the resource collection to check throws build exception if code rc code is not filesystem only return the passed in resource collection end_comment begin_type begin_specifier end_specifier begin_name resource collection end_name end_type begin_name assert filesystem only end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name rc end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name rc end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name is filesystem only end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name get data type name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_name rc end_name end_expr end_return end_block 
 begin_comment the method called to add create the nested element end_comment begin_name nested creator end_name begin_parameter_list begin_param begin_decl begin_type begin_name method end_name end_type begin_name m end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name method end_name end_name begin_operator EQ end_operator begin_name m end_name end_expr end_expr_stmt end_block 
 begin_comment end of if end_comment begin_comment get the value of comment return value of comment end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get comment end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name comment end_name end_expr end_return end_block 
 begin_comment p this implementation validates the container by calling verify settings and then validates each contained selector provided that the selector implements the validate interface p p ordinarily this will validate all the elements of a selector container even if the is selected method of some elements is never called this has two effects p ul li validation will often occur twice li since it is not required that selectors derive from base selector there could be selectors in the container whose error conditions are not detected if their is selected call is never made ul end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name verify settings end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name errmsg end_name begin_init begin_expr begin_call begin_name get error end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name errmsg end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name errmsg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name selector elements end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name base selector end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name base selector end_name begin_operator RPAR end_operator begin_name o end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while end_block 
 begin_comment compare two resources by content param foo the first resource param bar the second resource return a negative integer zero or a positive integer as the first argument is less than equal to or greater than the second throws build exception if i o errors occur see org apache tools ant util resource utils compare content resource resource boolean end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name resource compare end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name foo end_name end_decl end_param begin_param begin_decl begin_type begin_name resource end_name end_type begin_name bar end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_return begin_expr begin_call begin_name begin_name resource utils end_name begin_operator DOT end_operator begin_name compare content end_name end_name begin_argument_list begin_argument begin_expr begin_name foo end_name end_expr end_argument begin_argument begin_expr begin_name bar end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name binary end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test exclude one file end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name directory scanner end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set excludes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name check param end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name param end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name param end_name begin_operator EQT end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name abstract file set end_name end_type begin_name get instance end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name zip file set end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment return a string describing this object end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name date time end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name when end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name granularity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name pattern end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name pattern end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment resolve this constant pool entry with respect to its dependents in the constant pool param constant pool the constant pool of which this entry is a member and against which this entry is to be resolved end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name resolve end_name begin_parameter_list begin_param begin_decl begin_type begin_name constant pool end_name end_type begin_name constant pool end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name class cp info end_name end_type begin_name method class end_name begin_init begin_expr begin_operator LPAR end_operator begin_name class cp info end_name begin_operator RPAR end_operator begin_call begin_name begin_name constant pool end_name begin_operator DOT end_operator begin_name get entry end_name end_name begin_argument_list begin_argument begin_expr begin_name class index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name method class end_name begin_operator DOT end_operator begin_name resolve end_name end_name begin_argument_list begin_argument begin_expr begin_name constant pool end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name method class name end_name begin_operator EQ end_operator begin_call begin_name begin_name method class end_name begin_operator DOT end_operator begin_name get class name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name name and type cp info end_name end_type begin_name nt end_name begin_init begin_expr begin_operator LPAR end_operator begin_name name and type cp info end_name begin_operator RPAR end_operator begin_call begin_name begin_name constant pool end_name begin_operator DOT end_operator begin_name get entry end_name end_name begin_argument_list begin_argument begin_expr begin_name name and type index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nt end_name begin_operator DOT end_operator begin_name resolve end_name end_name begin_argument_list begin_argument begin_expr begin_name constant pool end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name method name end_name begin_operator EQ end_operator begin_call begin_name begin_name nt end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name method type end_name begin_operator EQ end_operator begin_call begin_name begin_name nt end_name begin_operator DOT end_operator begin_name get type end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name resolve end_name end_name begin_argument_list begin_argument begin_expr begin_name constant pool end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the file attribute return the file attribute end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name file end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name flush end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_synchronized begin_expr begin_name begin_name output stream funneler end_name begin_operator DOT end_operator begin_name this end_name end_name end_expr begin_block begin_expr_stmt begin_expr begin_call begin_name die if closed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_synchronized end_block 
 begin_comment set the comparison for use as a condition param c comparison see org apache tools ant types comparison since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set when end_name begin_parameter_list begin_param begin_decl begin_type begin_name comparison end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name when end_name begin_operator EQ end_operator begin_name c end_name end_expr end_expr_stmt end_block 
 begin_comment the path to the location of the ss ini file param vss server path the new vss server path value ant attribute group required end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set vss server path end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name vss server path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name vss server path end_name end_name begin_operator EQ end_operator begin_name vss server path end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test fileset and jar end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the owner atribute param owner the new owner for the file s or directory ies end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set owner end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name owner end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create arg end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name owner end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name have owner end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment deals with multiple read write calls since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle multiple tasks end_name begin_parameter_list begin_param begin_decl begin_type begin_name ant r exec client end_name end_type begin_name rexec end_name end_decl end_param end_parameter_list begin_block begin_comment login if userid and password were specified end_comment begin_if begin_condition begin_expr begin_name userid end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name password end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name login end_name begin_argument_list begin_argument begin_expr begin_name rexec end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment process each sub command end_comment begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name tasks to run end_name begin_init begin_expr begin_call begin_name begin_name rexec tasks end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name tasks to run end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name tasks to run end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name r exec sub task end_name end_type begin_name task end_name begin_init begin_expr begin_operator LPAR end_operator begin_name r exec sub task end_name begin_operator RPAR end_operator begin_call begin_name begin_name tasks to run end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name task end_name begin_operator UNP end_operator begin_name r exec read end_name begin_operator UNP end_operator begin_name default timeout end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name r exec read end_name begin_operator RPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set default timeout end_name begin_argument_list begin_argument begin_expr begin_name default timeout end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list begin_argument begin_expr begin_name rexec end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_comment gets whether or not the ant classpath is to be included in the task s classpath return true if ant s classpath is to be included end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get includeantruntime end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name include ant runtime end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check proxy class end_name begin_parameter_list begin_param begin_decl begin_type begin_name class end_name end_type begin_name proxy class end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get execute method end_name begin_argument_list begin_argument begin_expr begin_name proxy class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test encoding end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets a string containing author date files and comment return a string representation of this cvs entry end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get author end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get date end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get files end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment using the ejb descriptor file name passed from the code ejbjar code task this method returns the basename which will be used to name the completed jar file param descriptor file name string representing the file name of an ejb descriptor to be processed return the basename which will be used to name the completed jar file end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get jar base name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name descriptor file name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name base name end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment work out what the base name is end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name config end_name begin_operator DOT end_operator begin_name naming scheme end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name ejb jar end_name begin_operator DOT end_operator begin_name naming scheme end_name begin_operator DOT end_operator begin_name basejarname end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name canonical descriptor end_name begin_init begin_expr begin_call begin_name begin_name descriptor file name end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index end_name begin_init begin_expr begin_call begin_name begin_name canonical descriptor end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name index end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name base name end_name begin_operator EQ end_operator begin_call begin_name begin_name descriptor file name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name index end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name base name end_name begin_operator UNP end_operator begin_name begin_name config end_name begin_operator DOT end_operator begin_name base jar name end_name end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name config end_name begin_operator DOT end_operator begin_name naming scheme end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name ejb jar end_name begin_operator DOT end_operator begin_name naming scheme end_name begin_operator DOT end_operator begin_name descriptor end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name last separator index end_name begin_init begin_expr begin_call begin_name begin_name descriptor file name end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name end base name end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name last separator index end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name end base name end_name begin_operator EQ end_operator begin_call begin_name begin_name descriptor file name end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name config end_name begin_operator DOT end_operator begin_name base name terminator end_name end_name end_expr end_argument begin_argument begin_expr begin_name last separator index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name end base name end_name begin_operator EQ end_operator begin_call begin_name begin_name descriptor file name end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name config end_name begin_operator DOT end_operator begin_name base name terminator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name end base name end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name base name end_name begin_operator EQ end_operator begin_call begin_name begin_name descriptor file name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name end base name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name descriptor file name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name config end_name begin_operator DOT end_operator begin_name naming scheme end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name ejb jar end_name begin_operator DOT end_operator begin_name naming scheme end_name begin_operator DOT end_operator begin_name directory end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name descriptor file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name config end_name begin_operator DOT end_operator begin_name descriptor dir end_name end_name end_expr end_argument begin_argument begin_expr begin_name descriptor file name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path end_name begin_init begin_expr begin_call begin_name begin_name descriptor file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name last separator index end_name begin_init begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name last separator index end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name dir name end_name begin_init begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name last separator index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name dir separator index end_name begin_init begin_expr begin_call begin_name begin_name dir name end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name dir separator index end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dir name end_name begin_operator EQ end_operator begin_call begin_name begin_name dir name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name dir separator index end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name base name end_name begin_operator EQ end_operator begin_name dir name end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name config end_name begin_operator DOT end_operator begin_name naming scheme end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name ejb jar end_name begin_operator DOT end_operator begin_name naming scheme end_name begin_operator DOT end_operator begin_name ejb name end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name base name end_name begin_operator EQ end_operator begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name get ejb name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_else end_if end_else end_if begin_return begin_expr begin_name base name end_name end_expr end_return end_block 
 begin_comment please use vector equals or list equals param v 1 the first vector param v 2 the second vector return true if the vectors are equal since ant 1 5 deprecated since 1 6 x end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name vector end_name end_type begin_name v 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name vector end_name end_type begin_name v 2 end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name v 1 end_name begin_operator EQT end_operator begin_name v 2 end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name v 1 end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name v 2 end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name v 1 end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name v 2 end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment allow data types outside org apache tools ant types to indirectly call die on circular reference on nested data types param dt the data type to check param stk the stack of references to check param p the project to use to dereference the references throws build exception on error since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name invoke circular reference check end_name begin_parameter_list begin_param begin_decl begin_type begin_name data type end_name end_type begin_name dt end_name end_decl end_param begin_param begin_decl begin_type begin_name stack end_name end_type begin_name stk end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name dt end_name begin_operator DOT end_operator begin_name die on circular reference end_name end_name begin_argument_list begin_argument begin_expr begin_name stk end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the name of the attribute end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment use the reference to locate the loader if the loader is not found the specified classpath will be used and registered with the specified name this allows multiple taskdef typedef to use the same class loader so they can be used together eliminating the need to put them in the classpath param r the reference to locate the loader since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set loader ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get delegate end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set loader ref end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment determines if the os on which ant is executing matches the given os family name architecture and version param family the os family param name the os name param arch the os architecture param version the os version return true if the os matches since 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is os end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name family end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name arch end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name version end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name ret value end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name family end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name name end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name arch end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name version end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name is family end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name is name end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name is arch end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name is version end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name family end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment windows probing logic relies on the word windows in end_comment begin_comment the os end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name is windows end_name begin_init begin_expr begin_call begin_name begin_name os name end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name family windows end_name end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name is 9 x end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name is nt end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name is windows end_name end_expr end_condition begin_then begin_block begin_comment there are only four 9 x platforms that we look for end_comment begin_expr_stmt begin_expr begin_name is 9 x end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_call begin_name begin_name os name end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GE end_operator begin_operator UNP end_operator begin_call begin_name begin_name os name end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GE end_operator begin_operator UNP end_operator begin_call begin_name begin_name os name end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GE end_operator begin_comment wince isn t really 9 x but crippled enough to end_comment begin_comment be a muchness ant doesnt run on ce anyway end_comment begin_operator UNP end_operator begin_call begin_name begin_name os name end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GE end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name is nt end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name is 9 x end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name family end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name family windows end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name is family end_name begin_operator EQ end_operator begin_name is windows end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name family end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name family 9 x end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name is family end_name begin_operator EQ end_operator begin_name is windows end_name begin_operator UNP end_operator begin_name is 9 x end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name family end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name family nt end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name is family end_name begin_operator EQ end_operator begin_name is windows end_name begin_operator UNP end_operator begin_name is nt end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name family end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name family os 2 end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name is family end_name begin_operator EQ end_operator begin_call begin_name begin_name os name end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name family os 2 end_name end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name family end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name family netware end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name is family end_name begin_operator EQ end_operator begin_call begin_name begin_name os name end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name family netware end_name end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name family end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name family dos end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name is family end_name begin_operator EQ end_operator begin_call begin_name begin_name path sep end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name is family end_name begin_argument_list begin_argument begin_expr begin_name family netware end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name family end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name family mac end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name is family end_name begin_operator EQ end_operator begin_call begin_name begin_name os name end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name family mac end_name end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name family end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name family tandem end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name is family end_name begin_operator EQ end_operator begin_call begin_name begin_name os name end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name family end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name family unix end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name is family end_name begin_operator EQ end_operator begin_call begin_name begin_name path sep end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name is family end_name begin_argument_list begin_argument begin_expr begin_name family vms end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name is family end_name begin_argument_list begin_argument begin_expr begin_name family mac end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name os name end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name family end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name family zos end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name is family end_name begin_operator EQ end_operator begin_call begin_name begin_name os name end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name family zos end_name end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator begin_operator UNP end_operator begin_call begin_name begin_name os name end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name family end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name family os 400 end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name is family end_name begin_operator EQ end_operator begin_call begin_name begin_name os name end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name family os 400 end_name end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name family end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name family vms end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name is family end_name begin_operator EQ end_operator begin_call begin_name begin_name os name end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name family vms end_name end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name family end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name is name end_name begin_operator EQ end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name os name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name arch end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name is arch end_name begin_operator EQ end_operator begin_call begin_name begin_name arch end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name os arch end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name version end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name is version end_name begin_operator EQ end_operator begin_call begin_name begin_name version end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name os version end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name ret value end_name begin_operator EQ end_operator begin_name is family end_name begin_operator UNP end_operator begin_name is name end_name begin_operator UNP end_operator begin_name is arch end_name begin_operator UNP end_operator begin_name is version end_name end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name ret value end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no recreate basedir excludes without update end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test no recreate end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get an identity stack containing the contents of the specified stack param s the stack to copy ignored if null return an identity stack instance end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name identity stack end_name end_type begin_name get instance end_name begin_parameter_list begin_param begin_decl begin_type begin_name stack end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name s end_name begin_operator UNP end_operator begin_name identity stack end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name identity stack end_name begin_operator RPAR end_operator begin_name s end_name end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name identity stack end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name identity stack end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name s end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add all end_name end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment get the current assertions return assertions or null end_comment begin_type begin_specifier end_specifier begin_name assertions end_name end_type begin_name get assertions end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name assertions end_name end_expr end_return end_block 
 begin_comment get the user s id return the user id value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get user id end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name user id end_name end_expr end_return end_block 
 begin_comment go back to standard default patterns param def if true go back to default patterns end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set default end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name def end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name defaultrequested end_name begin_operator EQ end_operator begin_name def end_name end_expr end_expr_stmt end_block 
 begin_comment checks whether a given file is a symbolic link p it doesn t really test for symbolic links but whether the canonical and absolute paths of the file are identical this may lead to false positives on some platforms p param parent the parent directory of the file to test param name the name of the file to test return true if the file is a symbolic link throws io exception on error since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is symbolic link end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name parent end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name parent end_name begin_operator EQ end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name to test end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name get canonical path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator UNP end_operator begin_call begin_name begin_name to test end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name to test end_name begin_operator DOT end_operator begin_name get canonical path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get file string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name reader end_name end_type begin_name r end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name r end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file reader end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name read fully end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment the whole testsuite ended param suite the testsuite throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end test suite end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name suite end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name root element end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name attr tests end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name suite end_name begin_operator DOT end_operator begin_name run count end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name root element end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name attr failures end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name suite end_name begin_operator DOT end_operator begin_name failure count end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name root element end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name attr errors end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name suite end_name begin_operator DOT end_operator begin_name error count end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name root element end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name attr time end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_call begin_name begin_name suite end_name begin_operator DOT end_operator begin_name get run time end_name end_name begin_argument_list end_argument_list end_call begin_operator SLASH end_operator begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name out end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name writer end_name end_type begin_name wri end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name wri end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name output stream writer end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name wri end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name dom element writer end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name write end_name begin_argument_list begin_argument begin_expr begin_name root element end_name end_expr end_argument begin_argument begin_expr begin_name wri end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name wri end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name exc end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name exc end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name out end_name begin_operator UNP end_operator begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name end_name begin_operator UNP end_operator begin_name out end_name begin_operator UNP end_operator begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name wri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block end_then end_if end_block 
 begin_comment returns an one element array containing the source file name param source file name the name to map return the source filename in a one element array end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name map file name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name source file name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name source file name end_name end_expr end_block end_expr end_return end_block 
 begin_comment determine the timestamp of the output file return a timestamp or 0 for no output file known exists end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name get output file timestamp end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name output timestamp end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name get dest file end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name get dest file end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name output timestamp end_name begin_operator EQ end_operator begin_call begin_name get dest file end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name last modified end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name output timestamp end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if begin_return begin_expr begin_name output timestamp end_name end_expr end_return end_block 
 begin_comment set the target count number for use as a condition param c number of resources as int end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set count end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name count end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 4 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name checkprop end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name checkprop end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the prefix to add at the start of each input line param prefix the prefix to add at the start of each input line may be code null code in which case no prefix is added end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set prefix end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name prefix end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name prefix end_name end_name begin_operator EQ end_operator begin_name prefix end_name end_expr end_expr_stmt end_block 
 begin_comment set the prefix to use param prefix a code string code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set prefix end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert valid end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name prefix end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name prefix end_name end_name begin_operator EQ end_operator begin_name prefix end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test property file inline handler end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment load resource map with key value pairs values of existing keys are not overwritten bundle s encoding scheme is used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name load resource map end_name begin_parameter_list begin_param begin_decl begin_type begin_name file input stream end_name end_type begin_name ins end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name in end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream reader end_name end_type begin_name isr end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name ins end_name end_expr end_argument begin_argument begin_expr begin_name bundle encoding end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name in end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_name isr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_block begin_comment so long as the line isn t empty and isn t a comment end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment legal key value separators are and white space end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name sep index end_name begin_init begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator MINUS end_operator begin_operator EQT end_operator begin_name sep index end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name sep index end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator MINUS end_operator begin_operator EQT end_operator begin_name sep index end_name end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name k end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name k end_name begin_operator LT end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name k end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is space char end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name k end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name sep index end_name begin_operator EQ end_operator begin_name k end_name end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_for end_block end_then end_if begin_comment only if we do have a key is there going to be a value end_comment begin_if begin_condition begin_expr begin_operator MINUS end_operator begin_operator UNP end_operator begin_name sep index end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key end_name begin_init begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name sep index end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name sep index end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment handle line continuations if any end_comment begin_while begin_condition begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_name value end_name begin_operator PLUS end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_break end_break end_block end_else end_if end_block end_while begin_if begin_condition begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_comment has key already been loaded into resource map end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name resource map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name resource map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_then end_if end_block end_then end_if end_block end_while begin_if begin_condition begin_expr begin_name in end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment whether this task can deal with non file resources p this implementation returns true only if this task is lt tar gt any subclass of this class that also wants to support non file resources needs to override this method we need to do so for backwards compatibility reasons since we can t expect subclasses to support resources p return true for this task since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name supports non file resources end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name tar end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add formatter end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name j unit task mirror end_name begin_operator DOT end_operator begin_name j unit result formatter mirror end_name end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name formatters end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name j unit result formatter end_name begin_operator RPAR end_operator begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment record a fatal error param exception the fatal error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name fatal error end_name begin_parameter_list begin_param begin_decl begin_type begin_name sax parse exception end_name end_type begin_name exception end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name failed end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name do log end_name begin_argument_list begin_argument begin_expr begin_name exception end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment initialise from an io exception param e the io exception end_comment begin_specifier end_specifier begin_name error in quit exception end_name begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the setbeans attribute if this is true lt script gt will create variables in the script instance for all properties targets and references of the current project it this is false only the project and self variables will be set the default is true param set beans the value to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set set beans end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name set beans end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set set beans end_name end_name begin_argument_list begin_argument begin_expr begin_name set beans end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment interface test listener for j unit lt 3 4 p a test failed param test the test param t the exception thrown by the test end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add failure end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name test name end_name begin_init begin_expr begin_call begin_name begin_name j unit version helper end_name begin_operator DOT end_operator begin_name get test case name end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log test listener event end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name test name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name halt on failure end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name stop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment return the current datatype definition hashtable the returned hashtable is quot live quot and so should not be modified return a map of from datatype name to implementing class string to class end_comment begin_type begin_specifier end_specifier begin_name hashtable end_name end_type begin_name get data type definitions end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name component helper end_name begin_operator DOT end_operator begin_name get component helper end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get data type definitions end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test slower end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment only fail if a property of the given name does not exist in the current project param c property name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set unless end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name unless condition end_name begin_operator EQ end_operator begin_name c end_name end_expr end_expr_stmt end_block 
 begin_comment set the local path comment attribute param local path the value to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set internal local path end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name local path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name local path end_name end_name begin_operator EQ end_operator begin_name local path end_name end_expr end_expr_stmt end_block 
 begin_comment get a list of all jar files in a directory param lib dir directory return array of files or null for no such directory end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name file end_name begin_index end_index end_type begin_name list jar files end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name lib dir end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name filename filter end_name end_type begin_name filter end_name begin_init begin_expr begin_operator UNP end_operator begin_class begin_super begin_name filename filter end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name accept end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block end_function end_block end_class end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name lib dir end_name begin_operator DOT end_operator begin_name list files end_name end_name begin_argument_list begin_argument begin_expr begin_name filter end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name files end_name end_expr end_return end_block 
 begin_comment the regular expression pattern to match in the file s required if no nested lt regexp gt is used param match the match attribute end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set match end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name match end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name regex end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name regex end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name regular expression end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name regex end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr begin_name match end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment makes this instance in effect a reference to another instance p you must not set another attribute or nest elements inside this element if you make it a reference p param r the code reference code to use throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set refid end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name dir end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name default patterns end_name begin_operator DOT end_operator begin_name has patterns end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name additional patterns end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name selectors end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment indicates the size of key generated param keysize size of key throws build exception if not an integer todo could convert this to a plain integer setter end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set keysize end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name keysize end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name keysize end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name keysize end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name number format exception end_name end_type begin_name nfe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment set the manifest file to use when jarring as of ejb 1 1 manifest files are no longer used to configure the ejb however they still have a vital importance if the ejb is intended to be packaged in an ear file by adding class path settings to a manifest file the ejb can look for classes inside the ear file itself allowing for easier deployment this is outlined in the j 2 ee specification and all j 2 ee components are meant to support it param manifest the manifest to be used in the ejb jar end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set manifest end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name manifest end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name config end_name begin_operator DOT end_operator begin_name manifest end_name end_name begin_operator EQ end_operator begin_name manifest end_name end_expr end_expr_stmt end_block 
 begin_comment set the classpath to be used for this compilation param classpath the classpath to be used for this build end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_name classpath end_name end_expr end_expr_stmt end_block 
 begin_comment get the destination file return the dest file or null for not assigned end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get dest file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name output file end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name build exception end_name end_type begin_name one nested end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_name one nested message end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test concat filter before end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name do test end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name file prepend with end_name end_expr end_argument begin_argument begin_expr begin_name file append end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name my retryable ftp end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name number of failures to simulate end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name number of failures to simulate end_name end_name begin_operator EQ end_operator begin_name number of failures to simulate end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name simulated failures left end_name end_name begin_operator EQ end_operator begin_name number of failures to simulate end_name end_expr end_expr_stmt end_block 
