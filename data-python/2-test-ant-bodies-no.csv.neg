 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set rmall flag param rmall the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set rm all end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name rmall end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m rmall end_name begin_operator EQ end_operator begin_name rmall end_name end_expr end_expr_stmt end_block 
 begin_comment add a reference element identifying a data type to carry over to the new project param ref code reference code to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add reference end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name ref end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name references end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name ref end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no recreate zipfileset excludes with update end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test no recreate end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment date and time stamp given to the local copy defaults to code current code param timestamp the file time stamping behaviour end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file time stamp end_name begin_parameter_list begin_param begin_decl begin_type begin_name current mod updated end_name end_type begin_name timestamp end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal file time stamp end_name end_name begin_argument_list begin_argument begin_expr begin_name timestamp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a new component helper instance end_comment begin_specifier end_specifier begin_name component helper end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a collection of files to copy param res a resource collection to copy since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name res end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name rcs end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test complete directory move file to dir with existing file end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructs an exception with the given exception as a root cause and a location in a file param cause the exception that might have caused this one should not be code null code param location the location in the project file where the error occurred must not be code null code end_comment begin_specifier end_specifier begin_name build exception end_name begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name cause end_name end_decl end_param begin_param begin_decl begin_type begin_name location end_name end_type begin_name location end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name cause end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name location end_name end_name begin_operator EQ end_operator begin_name location end_name end_expr end_expr_stmt end_block 
 begin_comment cd into one directory and list the files present in one directory param directory full path on the remote side return array of ftp file end_comment begin_type begin_specifier end_specifier begin_name ftp file end_name begin_index end_index end_type begin_name list files end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name directory end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name list files end_name begin_argument_list begin_argument begin_expr begin_name directory end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment closes the stringreader exception io exception if the original string reader fails to be closed end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name close end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name in end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name slack end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name in end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment a check attributes for archive file set if there is a reference and it is a archive file set the archive fileset attributes cannot be used note we can only see if the reference is an archive fileset if the project has been set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check archive attributes allowed end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name get refid end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get referenced object end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name archive file set end_name begin_operator RPAR end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment get the type signature of the method return the type signature of the method end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get method type end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name method type end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name setup no rand part a end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su i 2 end_name end_name begin_operator LE end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name last end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su ch prev end_name end_name begin_operator EQ end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name su ch 2 end_name end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name su ch 2 shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name begin_operator DOT end_operator begin_name ll 8 end_name begin_index begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su t pos end_name end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su ch 2 end_name end_name begin_operator EQ end_operator begin_name su ch 2 shadow end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su t pos end_name end_name begin_operator EQ end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name begin_operator DOT end_operator begin_name tt end_name begin_index begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su t pos end_name end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su i 2 end_name end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name current char end_name end_name begin_operator EQ end_operator begin_name su ch 2 shadow end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name current state end_name end_name begin_operator EQ end_operator begin_name no rand part b state end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name crc end_name begin_operator DOT end_operator begin_name update crc end_name end_name begin_argument_list begin_argument begin_expr begin_name su ch 2 shadow end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name current state end_name end_name begin_operator EQ end_operator begin_name no rand part a state end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name end block end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name init block end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name setup block end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment make sure dot is on new line end_comment begin_type begin_name void end_name end_type begin_name send quit end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name begin_index end_index end_type begin_name ok end_name begin_init begin_expr begin_block begin_expr begin_name ok quit end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name send end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name ok end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name error in quit exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment check style visibility modifier on end_comment begin_comment does the work exception build exception if something goes wrong with the build end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name log level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name writer end_name end_type begin_name out end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name filename end_name begin_init begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name encoding end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name encoding end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file writer end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument begin_argument begin_expr begin_name append end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name output stream writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument begin_argument begin_expr begin_name append end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block end_else end_if end_block 
 begin_comment return the value of a user property if it is set param property name the name of the property may be code null code in which case the return value is also code null code return the property value or code null code for no match or if a code null code name is provided end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get user property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name property name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name property helper end_name end_type begin_name ph end_name begin_init begin_expr begin_call begin_name begin_name property helper end_name begin_operator DOT end_operator begin_name get property helper end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name ph end_name begin_operator DOT end_operator begin_name get user property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name property name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment determines the name of the j on as specific ejb descriptor using the specified standard ejb descriptor name in general the standard descriptor will be named basename ejb jar xml and this method will return basename jonas ejb jar xml or jonas basename xml return the name of the j on as specific ejb descriptor file end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get jonas descriptor name end_name begin_parameter_list end_parameter_list begin_block begin_comment descriptor name path basename basenameterminator remainder end_comment begin_comment examples org objectweb foo appli foo foo ejb jar xml end_comment begin_comment examples org objectweb foo appli foo foo xml j on as convention end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name jonas dn end_name end_decl end_decl_stmt begin_comment j on as specific dd end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name jonas convention end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment true if the j on as convention is used for the dd end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path end_name end_decl end_decl_stmt begin_comment directory path of the ejb descriptor end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file name end_name end_decl end_decl_stmt begin_comment ejb descriptor file name end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name base name end_name end_decl end_decl_stmt begin_comment filename appearing before name terminator end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name remainder end_name end_decl end_decl_stmt begin_comment filename appearing after the name terminator end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name start of file name end_name begin_init begin_expr begin_call begin_name begin_name descriptor name end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name start of file name end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_comment extract path info end_comment begin_expr_stmt begin_expr begin_name path end_name begin_operator EQ end_operator begin_call begin_name begin_name descriptor name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name start of file name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name file name end_name begin_operator EQ end_operator begin_call begin_name begin_name descriptor name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name start of file name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment descriptor name is just a file without path end_comment begin_expr_stmt begin_expr begin_name path end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name file name end_name begin_operator EQ end_operator begin_name descriptor name end_name end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name begin_name file name end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name ejb dd end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name path end_name begin_operator PLUS end_operator begin_name jonas dd end_name end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name end of base name end_name begin_init begin_expr begin_call begin_name begin_name descriptor name end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get config end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name base name terminator end_name end_expr end_argument begin_argument begin_expr begin_name start of file name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment check for the odd case where the terminator and or filename extension aren t found these will ensure jonas appears at the end of the name and before the if present end_comment begin_if begin_condition begin_expr begin_name end of base name end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_comment base name terminator not found the descriptor use the end_comment begin_comment j on as naming convention ie foo xml jonas foo xml and end_comment begin_comment not foo base name terminator ejb jar xml end_comment begin_comment foo base name terminator jonas ejb jar xml end_comment begin_expr_stmt begin_expr begin_name end of base name end_name begin_operator EQ end_operator begin_call begin_name begin_name descriptor name end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator MINUS end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name end of base name end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_comment no found end_comment begin_expr_stmt begin_expr begin_name end of base name end_name begin_operator EQ end_operator begin_call begin_name begin_name descriptor name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name jonas convention end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name base name end_name begin_operator EQ end_operator begin_call begin_name begin_name descriptor name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name start of file name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name end of base name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name remainder end_name begin_operator EQ end_operator begin_call begin_name begin_name descriptor name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name end of base name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name jonas convention end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name jonas dn end_name begin_operator EQ end_operator begin_name path end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name base name end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name jonas dn end_name begin_operator EQ end_operator begin_name path end_name begin_operator PLUS end_operator begin_name base name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name remainder end_name end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name descriptor name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name jonas dn end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name jonas dn end_name end_expr end_return end_block 
 begin_comment bugzilla report 38477 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test special signs in src path end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name report file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment tests one the file object end_comment begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report file end_name begin_operator DOT end_operator begin_name can read end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report file end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment conversion to url via file utils like in xml result aggregator not as suggested in the bug report end_comment begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name report url end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file utils end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to uri end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name report file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name report stream end_name begin_init begin_expr begin_call begin_name begin_name report url end_name begin_operator DOT end_operator begin_name open stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report stream end_name begin_operator DOT end_operator begin_name available end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment no encoding support in untar param encoding not used throws build exception always since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment test a mail message with empty body message end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test empty body end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name server thread end_name end_type begin_name test mail server end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name server thread end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name server end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_name test mail server end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name server end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name client thread end_name end_type begin_name test mail client end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name client thread end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name from end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name to end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name set subject end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name set message end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name client end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_name test mail client end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name client end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name server end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment 60 s end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name client end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment a further 30 s end_comment end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ie end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name test mail server end_name begin_operator DOT end_operator begin_name get result end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name expected result end_name begin_init begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name local end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name local end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name local end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name expected result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name expected result end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name is failed end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name get fail message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment add a name entry to the include list return code pattern set name entry code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name begin_name pattern set end_name begin_operator DOT end_operator begin_name name entry end_name end_name end_type begin_name create include end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name directory scanner end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name default patterns end_name begin_operator DOT end_operator begin_name create include end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment bugzilla report 10262 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no duplicate index end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name zip file end_name end_type begin_name archive end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name archive end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name zip file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name temp jar end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name archive end_name begin_operator DOT end_operator begin_name entries end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name number of index lists end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name zip entry end_name end_type begin_name ze end_name begin_init begin_expr begin_operator LPAR end_operator begin_name zip entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name number of index lists end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_while begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name number of index lists end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name archive end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name archive end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment is this condition true return true if the condition is true exception build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_call begin_name does type exist end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_specifier end_specifier begin_name package name mapper test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment sets whether default exclusions should be used or not param use default excludes true on yes when default exclusions should be used false off no when they shouldn t be used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set defaultexcludes end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name use default excludes end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name set defaultexcludes end_name end_name begin_argument_list begin_argument begin_expr begin_name use default excludes end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment locates the next resource of the correct name in the classpath and sets code next resource code to the url of that resource if no more resources can be found code next resource code is set to code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name find next resource end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name url end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name path elements index end_name begin_operator LT end_operator begin_call begin_name begin_name path components end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name url end_name begin_operator EQT end_operator begin_operator RPAR end_operator end_expr end_condition begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name path component end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name path components end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name path elements index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name url end_name begin_operator EQ end_operator begin_call begin_name get resource url end_name begin_argument_list begin_argument begin_expr begin_name path component end_name end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name resource name end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name path elements index end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore path elements which are not valid relative to the end_comment begin_comment project end_comment end_block end_catch end_try end_block end_while begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name next resource end_name end_name begin_operator EQ end_operator begin_name url end_name end_expr end_expr_stmt end_block 
 begin_comment a check attributes for tar file set if there is a reference and it is a tar file set the tar fileset attributes cannot be used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check tar file set attributes allowed end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name get refid end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get referenced object end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name tar file set end_name begin_operator RPAR end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment make sure we don t think we already have a web xml next time this task gets executed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name clean up end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name added web xml file end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name deployment descriptor end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name needxmlfile end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name is in update mode end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name added web xml file end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name clean up end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor using a value param value the value to use once per test or per batch end_comment begin_specifier end_specifier begin_name fork mode end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the name of the file containing the includes patterns param includes file the file to fetch the include patterns from throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set includesfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name includes file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name create includes file end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name includes file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check whether or not a class is suitable for serving as ant task ant task implementation classes must be public concrete and have a no arg constructor param task class the class to be checked must not be code null code exception build exception if the class is unsuitable for being an ant task an error level message is logged before this exception is thrown end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check task class end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name class end_name end_type begin_name task class end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name component helper end_name begin_operator DOT end_operator begin_name get component helper end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name check task class end_name begin_argument_list begin_argument begin_expr begin_name task class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name modifier end_name begin_operator DOT end_operator begin_name is public end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name task class end_name begin_operator DOT end_operator begin_name get modifiers end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_name task class end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name modifier end_name begin_operator DOT end_operator begin_name is abstract end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name task class end_name begin_operator DOT end_operator begin_name get modifiers end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_name task class end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name task class end_name begin_operator DOT end_operator begin_name get constructor end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name class end_name begin_index end_index end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment don t have to check for public since end_comment begin_comment get constructor finds public constructors only end_comment end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no such method exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_name task class end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name linkage error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_name task class end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name e end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name task class end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name task adapter end_name begin_operator DOT end_operator begin_name check task class end_name end_name begin_argument_list begin_argument begin_expr begin_name task class end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment create a command line from a string param to process the line the first element becomes the executable the rest the arguments end_comment begin_specifier end_specifier begin_name commandline end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name to process end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name tmp end_name begin_init begin_expr begin_call begin_name translate commandline end_name begin_argument_list begin_argument begin_expr begin_name to process end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name tmp end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name begin_name tmp end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set executable end_name begin_argument_list begin_argument begin_expr begin_name begin_name tmp end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name tmp end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name create argument end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name begin_name tmp end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if end_block 
 begin_specifier end_specifier begin_name oldest end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name rc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument begin_argument begin_expr begin_name date asc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name contains regexp test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment accessor for the implicit fileset return the implicit fileset since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name file set end_name end_type begin_name get implicit file set end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name fileset end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name clear end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name buffer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment defines the name of a property to be created from input behaviour is according to property task which means that existing properties cannot be overridden param addproperty name for the property to be created from input end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set addproperty end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name addproperty end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name addproperty end_name end_name begin_operator EQ end_operator begin_name addproperty end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test add condition end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name accept end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_name include no source packages end_name begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name message logged end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment read a constant pool entry from a class stream param cp stream the data input stream which contains the constant pool entry to be read exception io exception if there is a problem reading the entry from the stream end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name read end_name begin_parameter_list begin_param begin_decl begin_type begin_name data input stream end_name end_type begin_name cp stream end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name long end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cp stream end_name begin_operator DOT end_operator begin_name read long end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment tests label commandline generation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test label command line 1 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s test cmd line end_name begin_init begin_expr begin_block begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name ss exe end_name end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name command label end_name end_name end_expr begin_expr begin_name ds vss project path end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag comment end_name end_name begin_operator PLUS end_operator begin_name src comment end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag autoresponse yes end_name end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag label end_name end_name begin_operator PLUS end_operator begin_name src label end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag version end_name end_name begin_operator PLUS end_operator begin_name version end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag login end_name end_name begin_operator PLUS end_operator begin_name vss username end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name vss password end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_comment set up a vss label task end_comment begin_decl_stmt begin_decl begin_type begin_name msvsslabel end_name end_type begin_name vss label end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name msvsslabel end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss label end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss label end_name begin_operator DOT end_operator begin_name set comment end_name end_name begin_argument_list begin_argument begin_expr begin_name src comment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss label end_name begin_operator DOT end_operator begin_name set login end_name end_name begin_argument_list begin_argument begin_expr begin_name vss username end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name vss password end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss label end_name begin_operator DOT end_operator begin_name set version end_name end_name begin_argument_list begin_argument begin_expr begin_name version end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss label end_name begin_operator DOT end_operator begin_name set autoresponse end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss label end_name begin_operator DOT end_operator begin_name set label end_name end_name begin_argument_list begin_argument begin_expr begin_name src label end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss label end_name begin_operator DOT end_operator begin_name set vsspath end_name end_name begin_argument_list begin_argument begin_expr begin_name vss project path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name commandline end_name begin_operator EQ end_operator begin_call begin_name begin_name vss label end_name begin_operator DOT end_operator begin_name build cmd line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check command lines end_name begin_argument_list begin_argument begin_expr begin_name s test cmd line end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment execute target setup end_comment begin_comment commented out for performance while target is empty end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment grab lists of all root level files and all directories contained in the given archive param file the zip file to examine param dirs where to place the directories found param files where to place the files found since ant 1 7 throws io exception on error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name grab files and dirs end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name file end_name end_decl end_param begin_param begin_decl begin_type begin_name list end_name end_type begin_name dirs end_name end_decl end_param begin_param begin_decl begin_type begin_name list end_name end_type begin_name files end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name tools end_name begin_operator DOT end_operator begin_name zip end_name begin_operator DOT end_operator begin_name zip file end_name end_name end_type begin_name zf end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name zf end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name tools end_name begin_operator DOT end_operator begin_name zip end_name begin_operator DOT end_operator begin_name zip file end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name entries end_name begin_init begin_expr begin_call begin_name begin_name zf end_name begin_operator DOT end_operator begin_name get entries end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hash set end_name end_type begin_name dir set end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hash set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name tools end_name begin_operator DOT end_operator begin_name zip end_name begin_operator DOT end_operator begin_name zip entry end_name end_name end_type begin_name ze end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name tools end_name begin_operator DOT end_operator begin_name zip end_name begin_operator DOT end_operator begin_name zip entry end_name end_name begin_operator RPAR end_operator begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment meta inf would be skipped anyway avoid index for end_comment begin_comment manifest only jars end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name dir set end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment a file not in the root end_comment begin_comment since the jar may be one without directory end_comment begin_comment entries add the parent dir of this file as end_comment begin_comment well end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name dir set end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block end_then end_if end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name dirs end_name begin_operator DOT end_operator begin_name add all end_name end_name begin_argument_list begin_argument begin_expr begin_name dir set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name zf end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name zf end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment public void test 4 end_comment begin_comment expect build exception test 4 zip cannot include itself end_comment begin_comment end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_if begin_condition begin_expr begin_name zf prefix adds dir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name zf prefix adds dir end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignored end_comment end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check if the os is valid always include unix return true if the os is valid end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is valid os end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name os end_name begin_operator DOT end_operator begin_name family unix end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name is valid os end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment check ftp files to check whether they function as directories too the ftp file api seem to make directory and symbolic links incompatible we want to find out if we can cd to a symbolic link param dir the parent directory of the file to test param file the file to test return true if it is possible to cd to this directory since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is functioning as directory end_name begin_parameter_list begin_param begin_decl begin_type begin_name ftp client end_name end_type begin_name ftp end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name dir end_name end_decl end_param begin_param begin_decl begin_type begin_name ftp file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name current working dir end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_else end_if begin_try begin_block begin_expr_stmt begin_expr begin_name current working dir end_name begin_operator EQ end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name print working directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name dir end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_name current working dir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name change working directory end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get link end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get link end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_name result end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name comeback end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name comeback end_name begin_operator EQ end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name change working directory end_name end_name begin_argument_list begin_argument begin_expr begin_name current working dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name dir end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name comeback end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name dir end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_finally end_try end_block end_then end_if end_block end_then end_if begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment add an arbitary selector param selector the selector to add since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name file selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment see set classpath return the classpath created end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment test to see what happens when the resolving occurs in an infinite loop end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test infinite end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name filter set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name filter set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name add filter end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name add filter end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name add filter end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name add filter end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name set begin token end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name set end token end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name replace tokens end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment constructor end_comment begin_specifier end_specifier begin_name jar end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name archive type end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name empty behavior end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set encoding end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name root entries end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor end_comment begin_specifier end_specifier begin_name interface method ref cp info end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name constant interfacemethodref end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment end nested class end_comment begin_comment allow properties of a particular name in the set param name the property name to allow end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name append name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name property ref end_name end_type begin_name r end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name property ref end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add propertyref end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment not implemented end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name remove end_name begin_parameter_list end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name unsupported operation exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block 
 begin_comment create a nested sources element return a union instance end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name union end_name end_type begin_name create sources end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name sources end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name sources end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name union end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name sources end_name end_expr end_expr_stmt begin_return begin_expr begin_name sources end_name end_expr end_return end_block 
 begin_comment indicate if this entry is a gnu long name block return true if this is a long name extension provided by gnu tar end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is gnu long name entry end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name link flag end_name begin_operator EQT end_operator begin_name lf gnutype longname end_name begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name gnu longlink end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test ns on element end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name document end_name end_type begin_name d end_name begin_init begin_expr begin_call begin_name begin_name dom utils end_name begin_operator DOT end_operator begin_name new document end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name root end_name begin_init begin_expr begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name create element ns end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name root end_name begin_operator DOT end_operator begin_name set attribute ns end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string writer end_name end_type begin_name sw end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string writer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name dom element writer end_name end_type begin_name w end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name dom element writer end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name dom element writer end_name begin_operator DOT end_operator begin_name xml namespace policy end_name begin_operator DOT end_operator begin_name only qualify elements end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name root end_name end_expr end_argument begin_argument begin_expr begin_name sw end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name sw end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name make mirror end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment pattern to remove from the default excludes param remove sets the value for the pattern that should no longer be excluded end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set remove end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name remove end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_operator EQ end_operator begin_name remove end_name end_expr end_expr_stmt end_block 
 begin_comment returns the next path element from this tokenizer return the next path element from this tokenizer exception no such element exception if there are no more elements in this tokenizer s path end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name next token end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name no such element exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name token end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name lookahead end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name token end_name begin_operator EQ end_operator begin_name lookahead end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name lookahead end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name token end_name begin_operator EQ end_operator begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name on net ware end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name token end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is letter end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name token end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name dos style filesystem end_name begin_operator UNP end_operator begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment we are on a dos style system so this path could be a drive end_comment begin_comment spec we look at the next token end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name next token end_name begin_init begin_expr begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name next token end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name next token end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment we know we are on a dos style platform and the next path end_comment begin_comment starts with a slash or backslash so we know this is a end_comment begin_comment drive spec end_comment begin_expr_stmt begin_expr begin_name token end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_name next token end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment store the token just read for next time end_comment begin_expr_stmt begin_expr begin_name lookahead end_name begin_operator EQ end_operator begin_name next token end_name end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block end_then begin_else begin_block begin_comment we are on net ware tokenizing is handled a little differently end_comment begin_comment due to the fact that net ware has multiple character volume names end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name token end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name path separator end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name token end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment ignore and get the next token end_comment begin_expr_stmt begin_expr begin_name token end_name begin_operator EQ end_operator begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment this path could be a drive spec so look at the next token end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name next token end_name begin_init begin_expr begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment make sure we aren t going to get the path separator next end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name next token end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name path separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name next token end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name token end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name token end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name token end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name token end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment it indeed is a drive spec get the next bit end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name one more end_name begin_init begin_expr begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name one more end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name path separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name token end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_name one more end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name token end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name lookahead end_name begin_operator EQ end_operator begin_name one more end_name end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_comment implicit else ignore the since we have either a end_comment begin_comment unix or a relative path end_comment end_block end_then begin_else begin_block begin_comment store the token just read for next time end_comment begin_expr_stmt begin_expr begin_name lookahead end_name begin_operator EQ end_operator begin_name next token end_name end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block end_then end_if end_block end_else end_if begin_return begin_expr begin_name token end_name end_expr end_return end_block 
 begin_comment sets the debugging flag in this stream s tar buffer param debug true to turn on debugging end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set buffer debug end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name debug end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name buffer end_name begin_operator DOT end_operator begin_name set debug end_name end_name begin_argument_list begin_argument begin_expr begin_name debug end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the user token manager grammar option param user token manager a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set usertokenmanager end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name user token manager end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name user token manager end_name end_expr end_argument begin_argument begin_expr begin_name user token manager end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return an input stream for reading the contents of this resource return an input stream object throws io exception if the zip file cannot be opened or the entry cannot be read end_comment begin_type begin_specifier end_specifier begin_name input stream end_name end_type begin_name get input stream end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get input stream end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name zip file end_name end_type begin_name z end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name zip file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get zipfile end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get encoding end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name zip entry end_name end_type begin_name ze end_name begin_init begin_expr begin_call begin_name begin_name z end_name begin_operator DOT end_operator begin_name get entry end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ze end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name z end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get archive end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_operator UNP end_operator begin_class begin_super begin_name filter input stream end_name end_super begin_argument_list begin_argument begin_expr begin_call begin_name begin_name z end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list begin_argument begin_expr begin_name ze end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name close end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name z end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_function begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name finalize end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name throwable end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name close end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name finalize end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block end_function end_block end_class end_expr end_return end_block 
 begin_comment verify that the file exists if link validate is set param file to check file that may need to exist throws build exception with text beginning link error missing file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file to check end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name validate end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file to check end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error missing file end_name begin_operator PLUS end_operator begin_call begin_name begin_name file to check end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment checks whether or not a class is suitable for serving as ant task ant task implementation classes must be public concrete and have a no arg constructor param task class the class to be checked must not be code null code exception build exception if the class is unsuitable for being an ant task an error level message is logged before this exception is thrown end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check task class end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name class end_name end_type begin_name task class end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name modifier end_name begin_operator DOT end_operator begin_name is public end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name task class end_name begin_operator DOT end_operator begin_name get modifiers end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_name task class end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name modifier end_name begin_operator DOT end_operator begin_name is abstract end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name task class end_name begin_operator DOT end_operator begin_name get modifiers end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_name task class end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name task class end_name begin_operator DOT end_operator begin_name get constructor end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name class end_name begin_index end_index end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment don t have to check for public since end_comment begin_comment get constructor finds public constructors only end_comment end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no such method exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_name task class end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name task class end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name task adapter end_name begin_operator DOT end_operator begin_name check task class end_name end_name begin_argument_list begin_argument begin_expr begin_name task class end_name end_expr end_argument begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment set the single file for this task param file the code file code whose length to retrieve end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds a file to the cvs entry param file the file to add param revision the revision end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add file end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name file end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name revision end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name rcs file end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name revision end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates the nested code lt pathelement gt code element return the code path element code to be configured throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name path element end_name end_type begin_name create path element end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name path element end_name end_type begin_name pe end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path element end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name pe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name pe end_name end_expr end_return end_block 
 begin_comment set the classpath to be used when searching for classes and resources param classpath an ant path object containing the search path end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment executes the task performs the actual compiler call throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment first off make sure that we ve got a srcdir and destdir end_comment begin_if begin_condition begin_expr begin_name src dir end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name dest dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment scan source and dest dirs to build up both copy lists and end_comment begin_comment compile lists end_comment begin_comment scan dir src dir dest dir end_comment begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name get directory scanner end_name begin_argument_list begin_argument begin_expr begin_name src dir end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name scan dir end_name begin_argument_list begin_argument begin_expr begin_name src dir end_name end_expr end_argument begin_argument begin_expr begin_name dest dir end_name end_expr end_argument begin_argument begin_expr begin_name files end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment copy the source and support files end_comment begin_expr_stmt begin_expr begin_call begin_name copy files to destination end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment compile the source files end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name compile list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name compile list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_call begin_name begin_name compile list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name dest dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name do net rexx compile end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment utility method to remove trailing fragment from a uri for example code http java sun com index html chapter 1 code would return code http java sun com index html code param uri the uri to process it may or may not contain a fragment return the uri sans fragment end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name remove fragment end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name result end_name begin_init begin_expr begin_name uri end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name hash pos end_name begin_init begin_expr begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name hash pos end_name begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name hash pos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test nested 6 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment ignore end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get result end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name loop end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment write a target level message to the log with the given log level param target the target to use in the log must not be code null code param message the text to log should not be code null code param throwable the exception causing this log may be code null code param msg level the log priority level to use since 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log end_name begin_parameter_list begin_param begin_decl begin_type begin_name target end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name throwable end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name msg level end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fire message logged end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name throwable end_name end_expr end_argument begin_argument begin_expr begin_name msg level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convenience constructor param u the url to expose end_comment begin_specifier end_specifier begin_name url resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name url end_name end_type begin_name u end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set url end_name begin_argument_list begin_argument begin_expr begin_name u end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convenience method normalize brings the drive in uppercase the drive letter is in lower case under cygwin calling this method allows tests where normalize is called to pass under cygwin end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert equals ignore drive case end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name s 2 end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name s 1 end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator UNP end_operator begin_call begin_name begin_name s 2 end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb 1 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_name s 1 end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_name s 2 end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb 1 end_name begin_operator DOT end_operator begin_name set char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name to upper case end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name s 1 end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb 2 end_name begin_operator DOT end_operator begin_name set char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name to upper case end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name s 2 end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sb 1 end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name sb 2 end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name s 1 end_name end_expr end_argument begin_argument begin_expr begin_name s 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment execute the task end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name dom element writer end_name end_type begin_name writer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name dom element writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name append end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name output stream end_name end_type begin_name os end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name os end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name append end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name os end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name log output stream end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name node end_name end_type begin_name n end_name begin_init begin_expr begin_call begin_name get fragment end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get first child end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name n end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error no xml end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name element end_name begin_operator RPAR end_operator begin_name n end_name end_expr end_argument begin_argument begin_expr begin_name os end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_name e end_name end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name os end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment param an argument a string that is ignored end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name method to javadoc end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name an argument end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment flag to disable informational messages optional default false param noinform if true disables informational messages end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set noinform end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name noinform end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name noinform end_name end_name begin_operator EQ end_operator begin_name noinform end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test echo prefix as doubly negated propertyset end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name test echo prefix various end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the command used to invoke the java virtual machine default is java the command is resolved by java lang runtime exec ignored if fork is disabled param value the new vm to use instead of tt java tt see set fork boolean since ant 1 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set jvm end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get commandline end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set vm end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment work around command line length limit by using an external file for the sourcefiles param b true if an external file is to be used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set use external file end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name use external file end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name remove end_name begin_parameter_list end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name unsupported operation exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test jar with manifest in non ascii dir end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name mainjarstring end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name extjarstring end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name my path end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name my path end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name mainjarstring end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set user property end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name ant class loader end_name end_type begin_name my loader end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create class loader end_name begin_argument_list begin_argument begin_expr begin_name my path end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path end_name begin_init begin_expr begin_call begin_name begin_name my loader end_name begin_operator DOT end_operator begin_name get classpath end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name mainjarstring end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name path separator end_name end_name begin_operator PLUS end_operator begin_name extjarstring end_name end_expr end_argument begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filter 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the deprecation flag return the deprecation flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get deprecation end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name deprecation end_name end_expr end_return end_block 
 begin_comment prefix to use when retrieving environment variables thus if you specify environment quot myenv quot you will be able to access os specific environment variables via property names quot myenv path quot or quot myenv term quot p note that if you supply a property name with a final quot quot it will not be doubled ie environment quot myenv quot will still allow access of environment variables through quot myenv path quot and quot myenv term quot this functionality is currently only implemented on select platforms feel free to send patches to increase the number of platforms this functionality is supported on br note also that properties are case sensitive even if the environment variables on your operating system are not e g it will be env path not env path on windows 2000 param env prefix ant attribute group noname end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set environment end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name env end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name env end_name end_name begin_operator EQ end_operator begin_name env end_name end_expr end_expr_stmt end_block 
 begin_comment defines the language required param language the scripting language name for the script end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set language end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name language end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set language end_name end_name begin_argument_list begin_argument begin_expr begin_name language end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment utility method that encapsulates the logic of adding a file entry to a jar file used by execute to add entries to the jar file as it is constructed param j stream a jar output stream into which to write the jar entry param input file a file from which to read the contents the file being added param logical filename a string representing the name including all relevant path information that should be stored for the entry being added throws build exception if there is a problem end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add file to jar end_name begin_parameter_list begin_param begin_decl begin_type begin_name jar output stream end_name end_type begin_name j stream end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name input file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name logical filename end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file input stream end_name end_type begin_name i stream end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name addedfiles end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name logical filename end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name i stream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name input file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment create the zip entry and add it to the jar file end_comment begin_decl_stmt begin_decl begin_type begin_name zip entry end_name end_type begin_name zip entry end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name zip entry end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name logical filename end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name j stream end_name begin_operator DOT end_operator begin_name put next entry end_name end_name begin_argument_list begin_argument begin_expr begin_name zip entry end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment create the file input stream and buffer everything over end_comment begin_comment to the jar output stream end_comment begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name byte buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_operator STAR end_operator begin_name default buffer size end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_do begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name j stream end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name byte buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name count end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name count end_name begin_operator EQ end_operator begin_call begin_name begin_name i stream end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name byte buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name byte buffer end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_condition begin_expr begin_name count end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition end_do begin_comment add it to list of files in jar end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name addedfiles end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name logical filename end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name logical filename end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name input file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_finally begin_block begin_comment close up the file input stream for the class file end_comment begin_if begin_condition begin_expr begin_name i stream end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name i stream end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name close exception end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment validation code throws org apache tools ant build exception if validation failed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name validate end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get dest file end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment the optional attribute of the text element param optional if true this is optional end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set optional end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name optional end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name optional end_name end_name begin_operator EQ end_operator begin_name optional end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test multiple targets end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the source archive file for the archivefileset prevents both dir and src from being specified param src the archive from which to extract entries end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check archive attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name has dir end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name src end_name end_name begin_operator EQ end_operator begin_name src end_name end_expr end_expr_stmt end_block 
 begin_comment touch a single file with the current timestamp this millis this method does not interact with any nested mappers and remains for reasons of backwards compatibility only param file file to touch throws build exception on error deprecated since 1 6 x end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name touch end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name touch end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get timestamp end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns an enumeration of the names of the nested elements supported by the introspected class return an enumeration of the names of the nested elements supported by the introspected class see get nested element map end_comment begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name get nested elements end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name nested types end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add ns definition end_name begin_parameter_list begin_param begin_decl begin_type begin_name element end_name end_type begin_name element end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name array list end_name end_type begin_name al end_name begin_init begin_expr begin_operator LPAR end_operator begin_name array list end_name begin_operator RPAR end_operator begin_call begin_name begin_name ns uri by element end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name al end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name al end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ns uri by element end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument begin_argument begin_expr begin_name al end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name al end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds a set of files about which extensions data will be extracted param file set a set of files about which extensions data will be extracted end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add libfileset end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name lib file set end_name end_type begin_name file set end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name extensions filesets end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name file set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the regexp pattern from the string description param pattern the pattern to match end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set pattern end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name pattern end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name pattern end_name end_name begin_operator EQ end_operator begin_name pattern end_name end_expr end_expr_stmt end_block 
 begin_comment specified dir is this dir should never exist null end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 18 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert null end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test delete restart end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name rec in end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name rec dir end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name echo end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name env end_name begin_operator DOT end_operator begin_name get messager end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name print notice end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the login account to use on the specified server param p account the account name on remote system since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set account end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name p account end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name account end_name end_name begin_operator EQ end_operator begin_name p account end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check end_name begin_argument_list begin_argument begin_expr begin_name event end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the project to work with param project the current project end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set project end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name project end_name end_name begin_operator EQ end_operator begin_name project end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test get with selector retryable 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add task definition end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name one failure ftp end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name bx end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name planar image end_name end_type begin_name execute transform operation end_name begin_parameter_list begin_param begin_decl begin_type begin_name planar image end_name end_type begin_name image end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name buffered image end_name end_type begin_name bi end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name instructions end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name image operation end_name end_type begin_name instr end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name image operation end_name begin_operator RPAR end_operator begin_call begin_name begin_name instructions end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name instr end_name begin_operator UNP end_operator begin_name draw operation end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name perform scale end_name begin_argument_list begin_argument begin_expr begin_name image end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name instr end_name begin_operator UNP end_operator begin_name transform operation end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name bi end_name begin_operator EQ end_operator begin_call begin_name begin_name image end_name begin_operator DOT end_operator begin_name get as buffered image end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name image end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name transform operation end_name begin_operator RPAR end_operator begin_name instr end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name execute transform operation end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name planar image end_name begin_operator DOT end_operator begin_name wrap rendered image end_name end_name begin_argument_list begin_argument begin_expr begin_name bi end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bi end_name begin_operator EQ end_operator begin_call begin_name begin_name image end_name begin_operator DOT end_operator begin_name get as buffered image end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_block end_for begin_return begin_expr begin_call begin_name perform scale end_name begin_argument_list begin_argument begin_expr begin_name image end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment ignore exception end_comment begin_comment adds the patterns of the other instance to this set param other the other pattern set instance param p the current project end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name append end_name begin_parameter_list begin_param begin_decl begin_type begin_name pattern set end_name end_type begin_name other end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name incl end_name begin_init begin_expr begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get include patterns end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name incl end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name incl end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name create include end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set name end_name begin_argument_list begin_argument begin_expr begin_name begin_name incl end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name excl end_name begin_init begin_expr begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get exclude patterns end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name excl end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name excl end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name create exclude end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set name end_name begin_argument_list begin_argument begin_expr begin_name begin_name excl end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if end_block 
 begin_comment gets the no config parameter attribute of the c sharp object return the no config parameter value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get no config parameter end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name noconfig end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name array list end_name end_type begin_name get existing end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name existing end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 5 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment no arg constructor end_comment begin_specifier end_specifier begin_name compressed resource end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment get the value of recursive return value of recursive end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is recursive end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name recursive end_name end_name end_expr end_return end_block 
 begin_comment create a mapper to map the property names return a mapper to be configured end_comment begin_type begin_specifier end_specifier begin_name mapper end_name end_type begin_name create mapper end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert not reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name mapper end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name mapper end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name mapper end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name mapper end_name end_expr end_return end_block 
 begin_comment check if multireader works end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name testmultireader end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test get attributes end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name map end_name end_type begin_name attr map end_name begin_init begin_expr begin_call begin_name get expected attributes end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name get attributes end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name expect end_name begin_init begin_expr begin_operator LPAR end_operator begin_name class end_name begin_operator RPAR end_operator begin_call begin_name begin_name attr map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name expect end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name expect end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name get attribute type end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attr map end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name attr map end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name attr map end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment appends code excludes code to the current list of exclude patterns patterns may be separated by a comma or a space param excludes the string containing the exclude patterns end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set excludes end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name excludes end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name excludes end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name excludes end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name tok end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name excludes end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name create exclude end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_then end_if end_block 
 begin_comment set the name of the property whose value is to serve as the replacement value required if code value code is not set param property property name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name property end_name end_name begin_operator EQ end_operator begin_name property end_name end_expr end_expr_stmt end_block 
 begin_comment methods below all add specific selectors end_comment begin_comment add a select selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add selector end_name begin_parameter_list begin_param begin_decl begin_type begin_name select selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test nested end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a nested task p param nested task nested task to execute p end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add task end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name nested task end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name nested tasks end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name nested task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_name rcs file end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name rev end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name rev end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment flag to validate the xml file optional default false param validate if true validate the xml file default false end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set validate end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name validate end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name validate end_name end_name begin_operator EQ end_operator begin_name validate end_name end_expr end_expr_stmt end_block 
 begin_comment construct the listener and make sure there is a valid appender end_comment begin_specifier end_specifier begin_name log 4 j listener end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name initialized end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name logger end_name end_type begin_name log end_name begin_init begin_expr begin_call begin_name begin_name logger end_name begin_operator DOT end_operator begin_name get logger end_name end_name begin_argument_list begin_argument begin_expr begin_name log ant end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name logger end_name end_type begin_name root log end_name begin_init begin_expr begin_call begin_name begin_name logger end_name begin_operator DOT end_operator begin_name get root logger end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name root log end_name begin_operator DOT end_operator begin_name get all appenders end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name null enumeration end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name initialized end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test jar no fork end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment compare two resources param foo the first resource param bar the second resource return a negative integer zero or a positive integer as the first argument is less than equal to or greater than the second end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name resource compare end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name foo end_name end_decl end_param begin_param begin_decl begin_type begin_name resource end_name end_type begin_name bar end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name foo end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name compare to end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bar end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment creates an exception that indicates that this xml element must not have child elements if the refid attribute is set return the exception to throw end_comment begin_type begin_specifier end_specifier begin_name build exception end_name end_type begin_name no children allowed end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment extract a set of extension objects from the extension set param proj the project instance return an array containing the extensions from this set throws build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name extension end_name begin_index end_index end_type begin_name to extensions end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name proj end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name array list end_name end_type begin_name extensions list end_name begin_init begin_expr begin_call begin_name begin_name extension util end_name begin_operator DOT end_operator begin_name to extensions end_name end_name begin_argument_list begin_argument begin_expr begin_name extensions end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name extension util end_name begin_operator DOT end_operator begin_name extract extensions end_name end_name begin_argument_list begin_argument begin_expr begin_name proj end_name end_expr end_argument begin_argument begin_expr begin_name extensions list end_name end_expr end_argument begin_argument begin_expr begin_name extensions filesets end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_operator LPAR end_operator begin_name begin_name extension end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name extensions list end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name extension end_name begin_index begin_expr begin_call begin_name begin_name extensions list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment file for generated xml documentation param f output file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set doc file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name doc file end_name begin_operator EQ end_operator begin_name f end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment check if the language attribute is set throws build exception if it is not end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check language end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name language end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment set the type of this element this is the name of an ant task or type which is to be used when this element is to be created this is an alternative to specifying the class name directly param type the name of an ant type or task to use for this nested element end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set type end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name type end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name type end_name end_name begin_operator EQ end_operator begin_name type end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name threaded output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment read a constant pool entry from a class stream param cp stream the data input stream which contains the constant pool entry to be read exception io exception if there is a problem reading the entry from the stream end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name read end_name begin_parameter_list begin_param begin_decl begin_type begin_name data input stream end_name end_type begin_name cp stream end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name double end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cp stream end_name begin_operator DOT end_operator begin_name read double end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment end_comment begin_comment helper methods end_comment begin_comment end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get file string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name reader end_name end_type begin_name r end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name r end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file reader end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name read fully end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment handles the start of an element within a target task containers will always use another task handler and all other tasks will always use a nested element handler param uri the namespace uri for this element param tag the name of the element being started will not be code null code param qname the qualified name for this element param attrs attributes of the element being started will not be code null code param context the current context return the handler for elements exception sax parse exception if an error occurs when initialising the appropriate child handler end_comment begin_type begin_specifier end_specifier begin_name ant handler end_name end_type begin_name on start child end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name tag end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name qname end_name end_decl end_param begin_param begin_decl begin_type begin_name attributes end_name end_type begin_name attrs end_name end_decl end_param begin_param begin_decl begin_type begin_name ant xml context end_name end_type begin_name context end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax parse exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_name begin_name project helper 2 end_name begin_operator DOT end_operator begin_name element handler end_name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name util end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name begin_name util end_name begin_operator DOT end_operator begin_name group end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name existing end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name util end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name begin_name util end_name begin_operator DOT end_operator begin_name group end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name non existing end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name util end_name begin_operator DOT end_operator begin_name substitute end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name remove end_name begin_parameter_list begin_param begin_decl begin_type begin_name fail fast end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name set end_name end_type begin_name s end_name begin_init begin_expr begin_call begin_name set end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name f end_name begin_operator DOT end_operator begin_name parent end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name s end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment checks if the attributes are correct dl li if the class can be created li li if an adapter class can be created li li if the type is assignable from adapto li li if the type can be used with the adapter class li dl param project the current project end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check class end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name clazz end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name clazz end_name begin_operator EQ end_operator begin_call begin_name get type class end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name clazz end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_comment check adapter end_comment begin_if begin_condition begin_expr begin_name adapter class end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name adapt to class end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name adapt to class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name begin_argument_list begin_argument begin_expr begin_name clazz end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name type adapter end_name end_type begin_name adapter end_name begin_init begin_expr begin_operator LPAR end_operator begin_name type adapter end_name begin_operator RPAR end_operator begin_call begin_name create and set end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name adapter class end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name adapter end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name adapter end_name begin_operator DOT end_operator begin_name check proxy class end_name end_name begin_argument_list begin_argument begin_expr begin_name clazz end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment topologically sort a set of targets equivalent to calling code topo sort new string root targets return all code param root the name of the root target the sort is created in such a way that the sequence of targets up to the root target is the minimum possible such sequence must not be code null code param target table a hashtable mapping names to targets must not be code null code param return all code boolean code indicating whether to return all targets or the execution sequence only return a vector of target objects in sorted order exception build exception if there is a cyclic dependency among the targets or if a named target does not exist since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name vector end_name end_type begin_name topo sort end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name root end_name end_decl end_param begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name target table end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name return all end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_call begin_name topo sort end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name root end_name end_expr end_block end_expr end_argument begin_argument begin_expr begin_name target table end_name end_expr end_argument begin_argument begin_expr begin_name return all end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment the directory containing the java cc distribution param javacc home the home directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set javacchome end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name javacc home end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name javacc home end_name end_name begin_operator EQ end_operator begin_name javacc home end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set implementation end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name implementation end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set implementation end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name classname end_name begin_argument_list begin_argument begin_expr begin_name implementation end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add cleanup end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name clean up list end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test the interface semantic of comparators this method does some common test for comparator implementations param algo configured test object end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name do test end_name begin_parameter_list begin_param begin_decl begin_type begin_name comparator end_name end_type begin_name comp end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o 1 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o 3 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment really 2 end_comment begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name compare end_name end_name begin_argument_list begin_argument begin_expr begin_name o 1 end_name end_expr end_argument begin_argument begin_expr begin_name o 2 end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name compare end_name end_name begin_argument_list begin_argument begin_expr begin_name o 1 end_name end_expr end_argument begin_argument begin_expr begin_name o 3 end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name compare end_name end_name begin_argument_list begin_argument begin_expr begin_name o 2 end_name end_expr end_argument begin_argument begin_expr begin_name o 3 end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the base directory for the project checking that the given filename exists and is a directory param base d the project base directory must not be code null code exception build exception if the directory if invalid end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set basedir end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name base d end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name set base dir end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name base d end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the replacement string required if code property code is not set param value code string code value to replace end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name format output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name type end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name nested end_name begin_init begin_expr begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create element end_name end_name begin_argument_list begin_argument begin_expr begin_name type end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name root element end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_name nested end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nested end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create cdata section end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test preserve last modified end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the extra field data in central directory param data the data to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set central directory data end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name data end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name central data end_name begin_operator EQ end_operator begin_name data end_name end_expr end_expr_stmt end_block 
 begin_comment return a description of the type of the given element with special handling for instances of tasks and data types p this is useful for logging purposes param element the element to describe must not be code null code return a description of the element type since 1 95 ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get element name end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name element end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name component helper end_name begin_operator DOT end_operator begin_name get component helper end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get element name end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment connects the handler to the stderr of the perforce process param is stderr coming from perforce throws io exception under unknown circumstances end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set process error stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name es end_name end_name begin_operator EQ end_operator begin_name is end_name end_expr end_expr_stmt end_block 
 begin_comment get the nested resource collections return list end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name list end_name end_type begin_name get resource collections end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name die on circular reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name collections end_name begin_operator DOT end_operator begin_name unmodifiable list end_name end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment empty end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add error end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment param param 1 the output stream exception java io io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set process input stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name param 1 end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test context class loader end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name context end_name begin_init begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name current thread end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get context class loader end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name caller end_name begin_init begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class loader end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert same end_name begin_argument_list begin_argument begin_expr begin_name context end_name end_expr end_argument begin_argument begin_expr begin_name caller end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the number of milliseconds leeway to give before deciding a target is out of date p default is 1 second or 2 seconds on dos systems p param granularity the granularity used to decide if a target is out of date since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set granularity end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name granularity end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name granularity end_name end_name begin_operator EQ end_operator begin_name granularity end_name end_expr end_expr_stmt end_block 
 begin_comment builds the compilation classpath return the compilation class path end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name get compile classpath end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment add dest dir to classpath so that previously compiled and end_comment begin_comment untouched classes are on classpath end_comment begin_if begin_condition begin_expr begin_name dest dir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_name dest dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment combine the build classpath with the system classpath in an end_comment begin_comment order determined by the value of build sysclasspath end_comment begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name cp end_name begin_init begin_expr begin_name compile classpath end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name cp end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name cp end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name include ant runtime end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name add existing end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cp end_name begin_operator DOT end_operator begin_name concat system classpath end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name add existing end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cp end_name begin_operator DOT end_operator begin_name concat system classpath end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name include java runtime end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name add java runtime end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name classpath end_name end_expr end_return end_block 
 begin_comment run the task throws build exception if the execution of the perforce command fails end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name p 4 view end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name add cmd end_name begin_operator EQ end_operator begin_name p 4 view end_name end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name p 4 cmd opts end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name changelist end_name begin_operator GT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator LPAR end_operator begin_operator PLUS end_operator begin_name changelist end_name begin_operator RPAR end_operator begin_operator DP end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name filelist end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name src files end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name src files end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name src files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get basedir end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name src files end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name filelist end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name filelist end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_name cmd length end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name exec p 4 add end_name begin_argument_list begin_argument begin_expr begin_name filelist end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name filelist end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_call begin_name begin_name filelist end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name exec p 4 add end_name begin_argument_list begin_argument begin_expr begin_name filelist end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for end_block 
 begin_comment set the version number to get only works with sos get on a file param version the new version value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set version end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name version end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal version end_name end_name begin_argument_list begin_argument begin_expr begin_name version end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the implementation specific settings given as nested arg elements return the arguments since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get current args end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name facade end_name begin_operator DOT end_operator begin_name get args end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_name boolean end_name end_type begin_name is poly morphic end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment get the archive from which entries will be extracted param p the project to use return the source file end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get src end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name archive file set end_name begin_operator RPAR end_operator begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get src end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name get src end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment pr 38370 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test dirset path end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get a compiled representation of the regexp pattern param options the options return the compiled pattern throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name pattern end_name end_type begin_name get compiled pattern end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name options end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_comment compute the compiler options based on the input options first end_comment begin_decl_stmt begin_decl begin_type begin_name pattern end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name begin_name compiler end_name begin_operator DOT end_operator begin_name compile end_name end_name begin_argument_list begin_argument begin_expr begin_name pattern end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get compiler options end_name begin_argument_list begin_argument begin_expr begin_name options end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name p end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment set the system properties to use when running the java class param s commandline java system properties end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set system properties end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name commandline java end_name begin_operator DOT end_operator begin_name sys properties end_name end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name sys properties end_name begin_operator EQ end_operator begin_name s end_name end_expr end_expr_stmt end_block 
 begin_comment unfortunately link java util zip zip output stream java util zip zip output stream seems to access the extra data directly so overriding get extra doesn t help we need to modify super s data directly since 1 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set extra end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set extra end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name extra field utils end_name begin_operator DOT end_operator begin_name merge local file data data end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get extra fields end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add key value pair to the hashtable upon which to later operate upon end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add to include file map end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name property end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name checksum file end_name begin_init begin_expr begin_call begin_name get checksum file end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name force overwrite end_name begin_operator UNP end_operator begin_name is condition end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_call begin_name begin_name checksum file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name include file map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name checksum file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name checksum file end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name totalproperty end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment read the checksum from disk end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name checksum end_name begin_init begin_expr begin_call begin_name read checksum end_name begin_argument_list begin_argument begin_expr begin_name checksum file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name digest end_name begin_init begin_expr begin_call begin_name decode hex end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name checksum end_name begin_operator DOT end_operator begin_name to char array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name all digests end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name digest end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name include file map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name property end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test parent differs in case scanning sensitive end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name directory scanner end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the jvm version required param value the version required end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set vmversion end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name vm version end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test parser handles schema end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name xml reader end_name end_type begin_name xerces end_name end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name xerces end_name begin_operator EQ end_operator begin_call begin_name begin_name xml reader factory end_name begin_operator DOT end_operator begin_name create xml reader end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name xerces end_name begin_operator DOT end_operator begin_name set feature end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set recurse flag param recurse the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set recurse end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name recurse end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m recurse end_name begin_operator EQ end_operator begin_name recurse end_name end_expr end_expr_stmt end_block 
 begin_comment enable raw exception handling default false param raw exception handling a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set raw exception handling end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name raw exception handling end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name raw exception handling end_name end_name begin_operator EQ end_operator begin_name raw exception handling end_name end_expr end_expr_stmt end_block 
 begin_comment sets the object s to be locked param objselect objects to be locked end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set objselect end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name objselect end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m objselect end_name begin_operator EQ end_operator begin_name objselect end_name end_expr end_expr_stmt end_block 
 begin_comment creates a new filtered reader param in a reader object providing the underlying stream must not be code null code end_comment begin_specifier end_specifier begin_name strip line comments end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name in end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get preserve time status return boolean containing status of preserve time flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get preserve time end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m ptime end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set whether to send the mail through ssl param ssl if true use ssl transport since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set ssl end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name ssl end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ssl end_name end_name begin_operator EQ end_operator begin_name ssl end_name end_expr end_expr_stmt end_block 
 begin_comment return a file set that has the same basedir and same patternsets as this one return the cloned fileset end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name clone end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name clone end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_comment get a attribute of the section param attribute name the name of the attribute return a manifest attribute instance if the attribute is single valued otherwise a vector of manifest attribute instances end_comment begin_type begin_specifier end_specifier begin_name attribute end_name end_type begin_name get attribute end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name attribute name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name attribute end_name begin_operator RPAR end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attribute name end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test line with cariagereturn single bytes end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name write single bytes end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stream end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stream end_name begin_operator DOT end_operator begin_name assert invoked end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the working directory of the process param d the working directory of the process end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name d end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dir end_name end_name begin_operator EQ end_operator begin_name d end_name end_expr end_expr_stmt end_block 
 begin_comment construct a new time comparison with the specified value param value the enumerated attribute value end_comment begin_specifier end_specifier begin_name time comparison end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the progress monitor return the progress monitor end_comment begin_type begin_specifier end_specifier begin_name sftp progress monitor end_name end_type begin_name get progress monitor end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name monitor end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name monitor end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name progress monitor end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name monitor end_name end_expr end_return end_block 
 begin_comment do the compilation throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment fulfill the resource collection contract return number of elements as int end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name restrict end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name die on circular reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set a single commandline argument to the absolute filename of the given file param value a single commandline argument end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name parts end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_block end_expr end_expr_stmt end_block 
 begin_comment constructs a build exception with no descriptive information end_comment begin_specifier end_specifier begin_name build exception end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment load the userlist from the user list file if specified and add to list of users param user list the file of users throws build exception if file can not be loaded for some reason end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name load userlist end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name properties end_name end_type begin_name user list end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name users file end_name end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name user list end_name begin_operator DOT end_operator begin_name load end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name users file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if end_block 
 begin_comment load an antlib from a url param class loader the classloader to use param url the url to load the definitions from end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name load antlib end_name begin_parameter_list begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name class loader end_name end_decl end_param begin_param begin_decl begin_type begin_name url end_name end_type begin_name url end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name antlib end_name end_type begin_name antlib end_name begin_init begin_expr begin_call begin_name begin_name antlib end_name begin_operator DOT end_operator begin_name create antlib end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name url end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get uri end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name antlib end_name begin_operator DOT end_operator begin_name set class loader end_name end_name begin_argument_list begin_argument begin_expr begin_name class loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name antlib end_name begin_operator DOT end_operator begin_name set uri end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get uri end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name antlib end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name add location to build exception end_name end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment is the given character allowed inside an xml document p see xml 1 0 2 2 a href http www w 3 org tr 1998 rec xml 19980210 charsets http www w 3 org tr 1998 rec xml 19980210 charsets a p param c the character to test return true if the character is allowed since 1 10 ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is legal character end_name begin_parameter_list begin_param begin_decl begin_type begin_name char end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name c end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name c end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name c end_name begin_operator LE end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name c end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name c end_name begin_operator LE end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_else end_if end_else end_if end_else end_if end_else end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment decompress on the fly using java util zip gzip input stream param in the stream to wrap return the wrapped stream throws io exception if there is a problem end_comment begin_type begin_specifier end_specifier begin_name input stream end_name end_type begin_name wrap stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name in end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name gzip input stream end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test file set is no dir set end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name dir set end_name end_type begin_name ds end_name begin_init begin_expr begin_operator LPAR end_operator begin_name dir set end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name fs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name ds end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name dir set end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name ds end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment add the given resources param rc may give additional information like fullpath or permissions param resources the resources to add param z out the stream to write to throws io exception on error since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add resources end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name rc end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name resource end_name begin_index end_index end_name end_type begin_name resources end_name end_decl end_param begin_param begin_decl begin_type begin_name zip output stream end_name end_type begin_name z out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name rc end_name begin_operator UNP end_operator begin_name file set end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add resources end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_name rc end_name end_expr end_argument begin_argument begin_expr begin_name resources end_name end_expr end_argument begin_argument begin_expr begin_name z out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name resources end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_name begin_name resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name is directory end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name do filesonly end_name end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name base end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator begin_name file resource end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name base end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name file resource end_name begin_operator RPAR end_operator begin_name begin_name resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name is directory end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name add parent dirs end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name z out end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name archive file set end_name begin_operator DOT end_operator begin_name default dir mode end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name begin_name resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name is directory end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name begin_name resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator begin_name file resource end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name file resource end_name begin_operator RPAR end_operator begin_name begin_name resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get file end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name zip file end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument begin_argument begin_expr begin_name z out end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name archive file set end_name begin_operator DOT end_operator begin_name default file mode end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name is end_name begin_operator EQ end_operator begin_name begin_name resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get input stream end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name zip file end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument begin_argument begin_expr begin_name z out end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get last modified end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name archive file set end_name begin_operator DOT end_operator begin_name default file mode end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block end_else end_if end_block end_then end_if end_block end_for end_block 
 begin_comment get the merged patterns for this abstract file set param p the project to use return the default patternset merged with the additional sets in a new pattern set instance since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name pattern set end_name end_type begin_name merge patterns end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name merge patterns end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name pattern set end_name end_type begin_name ps end_name begin_init begin_expr begin_operator LPAR end_operator begin_name pattern set end_name begin_operator RPAR end_operator begin_call begin_name begin_name default patterns end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name count end_name begin_init begin_expr begin_call begin_name begin_name additional patterns end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name count end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name additional patterns end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ps end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name pattern set end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name ps end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name input handler end_name end_type begin_name get input handler end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name handlers end_name begin_index begin_expr begin_call begin_name get index end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test resourcename end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment copies the contents of the current tar archive entry directly into an output stream param out the output stream into which to write the entry s data throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name copy entry contents end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_operator STAR end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name num read end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name buf end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name num read end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name num read end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test fileset up to date end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name remove end_name begin_parameter_list end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name unsupported operation exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test verify total end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the list of files to be attached param filenames comma separated list of files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set files end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name filenames end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name t end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name filenames end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name create attachments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_comment version to check out param version the version to check out ant attribute group vdl end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set version end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name version end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal version end_name end_name begin_argument_list begin_argument begin_expr begin_name version end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the central point in checking permissions overridden from java lang security manager param perm the permission requested end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check permission end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name security end_name begin_operator DOT end_operator begin_name permission end_name end_name end_type begin_name perm end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name active end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name delegate to old sm end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name perm end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name perm ok end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name granted end_name begin_operator DOT end_operator begin_name implies end_name end_name begin_argument_list begin_argument begin_expr begin_name perm end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name perm ok end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name check revoked end_name begin_argument_list begin_argument begin_expr begin_name perm end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment if the permission was not explicitly granted or revoked the original security manager will do its work end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name perm ok end_name begin_operator UNP end_operator begin_name orig sm end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name orig sm end_name begin_operator DOT end_operator begin_name check permission end_name end_name begin_argument_list begin_argument begin_expr begin_name perm end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name granted end_name begin_operator DOT end_operator begin_name implies end_name end_name begin_argument_list begin_argument begin_expr begin_name perm end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name security exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name perm end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name check revoked end_name begin_argument_list begin_argument begin_expr begin_name perm end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_specifier end_specifier begin_name jdk 14 regexp matcher test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test style is set end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment empty param test not used param t not used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add failure end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment set the comparison mode param c a time comparison object end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set when end_name begin_parameter_list begin_param begin_decl begin_type begin_name time comparison end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name when end_name begin_operator EQ end_operator begin_name c end_name end_expr end_expr_stmt end_block 
 begin_comment add a name entry to the excludes files list return code pattern set name entry code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name begin_name pattern set end_name begin_operator DOT end_operator begin_name name entry end_name end_name end_type begin_name create excludes file end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name ds end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name default patterns end_name begin_operator DOT end_operator begin_name create excludes file end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment write out manifest to destfile param manifest the manifest throws io exception if error writing file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write manifest end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name manifest end_name end_type begin_name manifest end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file output stream end_name end_type begin_name output end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name output end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name output end_name end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_then end_if end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name p end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name init end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end test suite end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name suite end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block end_block 
 begin_comment initialize the task throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name init end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set defaults end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment handles the start of a top level element within the project an appropriate handler is created and initialised with the details of the element param uri the namespace uri for this element param name the name of the element being started will not be code null code param qname the qualified name for this element param attrs attributes of the element being started will not be code null code param context the context for this element return a target or an element handler exception org xml sax sax parse exception if the tag given is not code taskdef code code typedef code code property code code target code or a data type definition end_comment begin_type begin_specifier end_specifier begin_name ant handler end_name end_type begin_name on start child end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name qname end_name end_decl end_param begin_param begin_decl begin_type begin_name attributes end_name end_type begin_name attrs end_name end_decl end_param begin_param begin_decl begin_type begin_name ant xml context end_name end_type begin_name context end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax parse exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name ant core uri end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name project helper 2 end_name begin_operator DOT end_operator begin_name target handler end_name end_name end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_name begin_name project helper 2 end_name begin_operator DOT end_operator begin_name element handler end_name end_name end_expr end_return end_block end_else end_if end_block 
 begin_comment sets the dependency cache file param cache the dependency cache file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set cache end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name cache end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name cache end_name end_name begin_operator EQ end_operator begin_name cache end_name end_expr end_expr_stmt end_block 
 begin_comment get the factory instance configured for this processor return the factory instance in use end_comment begin_type begin_specifier end_specifier begin_name factory end_name end_type begin_name get factory end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name factory end_name end_expr end_return end_block 
 begin_comment get the type name param cmd containing the command line string with or without the type name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get type command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name typenm end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name get type name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name typenm end_name begin_operator EQ end_operator begin_call begin_name get type name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get vob end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name typenm end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_call begin_name get vob end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name typenm end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_specifier end_specifier begin_name un package name mapper test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment empty end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add failure end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name assertion failed error end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment returns the value for this token return the value for this token end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name value end_name end_expr end_return end_block 
 begin_comment get the index of a given constant fieldref entry in the constant pool param field class name the name of the class which contains the field being referenced param field name the name of the field being referenced param field type the type descriptor of the field being referenced return the index at which the given field ref entry occurs in the constant pool or 1 if the value does not occur end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get field ref entry end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name field class name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name field name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name field type end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name index end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name element end_name begin_init begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name element end_name begin_operator UNP end_operator begin_name field ref cp info end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name field ref cp info end_name end_type begin_name field ref entry end_name begin_init begin_expr begin_operator LPAR end_operator begin_name field ref cp info end_name begin_operator RPAR end_operator begin_name element end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name field ref entry end_name begin_operator DOT end_operator begin_name get field class name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name field class name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name field ref entry end_name begin_operator DOT end_operator begin_name get field name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name field name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name field ref entry end_name begin_operator DOT end_operator begin_name get field type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name field type end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name index end_name begin_operator EQ end_operator begin_name i end_name end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_for begin_return begin_expr begin_name index end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name util end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment remove any non numerical chars should leave the change number end_comment begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name util end_name begin_operator DOT end_operator begin_name substitute end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name changenumber end_name begin_init begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name changenumber end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name my proj end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_name changenumber end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name util end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_else end_if end_block 
 begin_comment if true enables unsuccessful file put delete and get operations to be skipped with a warning and the remainder of the files still transferred param skip failed transfers true if failures in transfers are ignored end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set skip failed transfers end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name skip failed transfers end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name skip failed transfers end_name end_name begin_operator EQ end_operator begin_name skip failed transfers end_name end_expr end_expr_stmt end_block 
 begin_comment run the command param cmd the command line return the exit status of the command end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name run end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name run end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name log stream handler end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment run the launcher to launch ant param args the command line arguments return an exit code as the normal ant main calls exit when it ends this is for handling failures at bind time exception malformed url exception if the ur ls required for the classloader cannot be created end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name run end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name launch exception end_name end_expr end_argument begin_argument begin_expr begin_name malformed url exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name ant home property end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name anthome property end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name ant home end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name source jar end_name begin_init begin_expr begin_call begin_name begin_name locator end_name begin_operator DOT end_operator begin_name get class source end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name jar dir end_name begin_init begin_expr begin_call begin_name begin_name source jar end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name main classname end_name begin_init begin_expr begin_name main class end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ant home property end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ant home end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name ant home property end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name ant home end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name ant home end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ant home end_name begin_operator EQ end_operator begin_call begin_name begin_name jar dir end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr begin_name anthome property end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ant home end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name ant home end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name launch exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name lib paths end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name cp string end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name arg list end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name new args end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name no user lib end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name no class path end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name args end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name i end_name begin_operator EQT end_operator begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name launch exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name lib paths end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name args end_name begin_index begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name begin_name args end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name i end_name begin_operator EQT end_operator begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name launch exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name cp string end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name launch exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name cp string end_name begin_operator EQ end_operator begin_name begin_name args end_name begin_index begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_index end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name begin_name args end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name begin_name args end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name no user lib end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name begin_name args end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name begin_name args end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name no class path end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name begin_name args end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name i end_name begin_operator EQT end_operator begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name launch exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name main classname end_name begin_operator EQ end_operator begin_name begin_name args end_name begin_index begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_index end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name arg list end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name args end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_block end_for begin_comment decide whether to copy the existing arg set or end_comment begin_comment build a new one from the list of all args excluding the special end_comment begin_comment operations that only we handle end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name arg list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name new args end_name begin_operator EQ end_operator begin_name args end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name new args end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name begin_name string end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name arg list end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name arg list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name url end_name begin_index end_index end_type begin_name lib ur ls end_name begin_init begin_expr begin_call begin_name get lib path ur ls end_name begin_argument_list begin_argument begin_expr begin_name no class path end_name begin_operator QM end_operator begin_operator DP end_operator begin_name cp string end_name end_expr end_argument begin_argument begin_expr begin_name lib paths end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name url end_name begin_index end_index end_type begin_name system ur ls end_name begin_init begin_expr begin_call begin_name get system ur ls end_name begin_argument_list begin_argument begin_expr begin_name jar dir end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name url end_name begin_index end_index end_type begin_name user ur ls end_name begin_init begin_expr begin_name no user lib end_name begin_operator QM end_operator begin_operator UNP end_operator begin_name begin_name url end_name begin_index begin_expr end_expr end_index end_name begin_operator DP end_operator begin_call begin_name get user ur ls end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name url end_name begin_index end_index end_type begin_name jars end_name begin_init begin_expr begin_call begin_name get jar array end_name begin_argument_list begin_argument begin_expr begin_name lib ur ls end_name end_expr end_argument begin_argument begin_expr begin_name user ur ls end_name end_expr end_argument begin_argument begin_expr begin_name system ur ls end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name locator end_name begin_operator DOT end_operator begin_name get tools jar end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment now update the class path property end_comment begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name base class path end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name java class path end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name base class path end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name base class path end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name path separator char end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name base class path end_name begin_operator DOT end_operator begin_name set length end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name base class path end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name jars end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name base class path end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name path separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name base class path end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name locator end_name begin_operator DOT end_operator begin_name from uri end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name jars end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr begin_name java class path end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name base class path end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name url class loader end_name end_type begin_name loader end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name url class loader end_name begin_argument_list begin_argument begin_expr begin_name jars end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name current thread end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set context class loader end_name begin_argument_list begin_argument begin_expr begin_name loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name main class end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name exit code end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name main class end_name begin_operator EQ end_operator begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name load class end_name end_name begin_argument_list begin_argument begin_expr begin_name main classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name ant main end_name end_type begin_name main end_name begin_init begin_expr begin_operator LPAR end_operator begin_name ant main end_name begin_operator RPAR end_operator begin_call begin_name begin_name main class end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name main end_name begin_operator DOT end_operator begin_name start ant end_name end_name begin_argument_list begin_argument begin_expr begin_name new args end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name main classname end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name main jar end_name begin_init begin_expr begin_call begin_name begin_name locator end_name begin_operator DOT end_operator begin_name get class source end_name end_name begin_argument_list begin_argument begin_expr begin_name main class end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name main jar end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name exit code end_name begin_operator EQ end_operator begin_name exit code error end_name end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name exit code end_name begin_operator EQ end_operator begin_name exit code error end_name end_expr end_expr_stmt end_block end_catch end_try begin_return begin_expr begin_name exit code end_name end_expr end_return end_block 
 begin_comment returns a vms string representation of a code file code object this is useful since the jvm by default internally converts vms paths to unix style the returned string is always an absolute path param f the code file code to get the vms path for return the absolute vms path to code f code end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to vms path end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_comment format device dir subdir file end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name os path end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path end_name begin_init begin_expr begin_call begin_name normalize end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name is absolute end_name begin_init begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_init end_decl end_decl_stmt begin_comment treat directories specified using dir syntax as files end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name is directory end_name begin_init begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name region matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name device end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name directory end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name is absolute end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name index end_name begin_operator EQ end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name index end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_return end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name device end_name begin_operator EQ end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name index end_name begin_operator PPLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name is directory end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name directory end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name index end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name dir end end_name begin_init begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name dir end end_name begin_operator EQT end_operator begin_operator MINUS end_operator begin_operator UNP end_operator begin_name dir end end_name begin_operator LT end_operator begin_name index end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name file end_name begin_operator EQ end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name directory end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name index end_name end_expr end_argument begin_argument begin_expr begin_name dir end end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name index end_name begin_operator EQ end_operator begin_name dir end end_name begin_operator PLUS end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_name index end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name file end_name begin_operator EQ end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_block end_else end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name is absolute end_name begin_operator UNP end_operator begin_name directory end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name insert end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name os path end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name device end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_name device end_name begin_operator PLUS end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name directory end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator PLUS end_operator begin_name directory end_name begin_operator PLUS end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name file end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_name file end_name begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_return begin_expr begin_name os path end_name end_expr end_return end_block 
 begin_comment sets whether debug symbols should be generated into the class file valid true values are on or true anything else sets the flag to false the default value is false param symbols a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set symbols end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name symbols end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name symbols end_name end_name begin_operator EQ end_operator begin_name symbols end_name end_expr end_expr_stmt end_block 
 begin_comment this is a very minimal derivative of the nomal copy logic throws build exception if something goes wrong with the build end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name validate attributes end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name source files end_name begin_init begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name source files end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name sources end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name sources end_name begin_operator LT end_operator begin_name begin_name source files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name sources end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name source file name end_name begin_init begin_expr begin_name begin_name source files end_name begin_index begin_expr begin_name sources end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name source file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name source file name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name to files end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name string end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name map file name end_name end_name begin_argument_list begin_argument begin_expr begin_name source file name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name to files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name dest file name end_name begin_init begin_expr begin_name begin_name to files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dest file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dest dir end_name end_expr end_argument begin_argument begin_expr begin_name dest file name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name source file end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name source file name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name source file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name source file name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name source file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name dest file end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name copy file end_name end_name begin_argument_list begin_argument begin_expr begin_name source file end_name end_expr end_argument begin_argument begin_expr begin_name dest file end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name preserve last modified end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_name source file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name dest file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name dest file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name dest file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name msg end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_name dest file end_name end_expr end_expr_stmt end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_for end_block end_for end_block 
 begin_comment all methods static end_comment begin_comment convert a list of extension adapter objects to extensions param adapters the list of extension adapterss to add to convert throws build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name array list end_name end_type begin_name to extensions end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name list end_name end_type begin_name adapters end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name array list end_name end_type begin_name results end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_init begin_expr begin_call begin_name begin_name adapters end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name extension adapter end_name end_type begin_name adapter end_name begin_init begin_expr begin_operator LPAR end_operator begin_name extension adapter end_name begin_operator RPAR end_operator begin_call begin_name begin_name adapters end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name extension end_name end_type begin_name extension end_name begin_init begin_expr begin_call begin_name begin_name adapter end_name begin_operator DOT end_operator begin_name to extension end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name extension end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name results end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name two failure ftp end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create a doclet parameter to be configured by ant return a new doclet param instance to be configured end_comment begin_type begin_specifier end_specifier begin_name doclet param end_name end_type begin_name create param end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name doclet param end_name end_type begin_name param end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name doclet param end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name params end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name param end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name param end_name end_expr end_return end_block 
 begin_comment set the name attribute param name a code string code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set six end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment form the option string for remove int checks return the parameter string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get remove int checks parameter end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name remove int checks end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check parameters end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name check param end_name begin_argument_list begin_argument begin_expr begin_name propertyfile end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name chain end_name begin_parameter_list begin_param begin_decl begin_type begin_name reader end_name end_type begin_name rdr end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name buffer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffering output filter reader end_name begin_argument_list begin_argument begin_expr begin_name rdr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name buffer end_name end_expr end_return end_block 
 begin_comment log the specified throwable param t the throwable to log since 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log end_name begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string writer end_name end_type begin_name sw end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string writer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name print writer end_name end_type begin_name w end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_name sw end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list begin_argument begin_expr begin_name w end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sw end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment not significant for the class loader end_comment begin_comment cleans up any resources held by this classloader at the end of a build param event the build finished event end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name cleanup end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test echo to log end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_name test value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write manifest end_name begin_parameter_list begin_param begin_decl begin_type begin_name zip output stream end_name end_type begin_name z out end_name end_decl end_param begin_param begin_decl begin_type begin_name manifest end_name end_type begin_name manifest end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name get warnings end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name zip dir end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name z out end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name zip file set end_name begin_operator DOT end_operator begin_name default dir mode end_name end_name end_expr end_argument begin_argument begin_expr begin_name jar marker end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment time to write the manifest end_comment begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name baos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name output stream writer end_name end_type begin_name osw end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name output stream writer end_name begin_argument_list begin_argument begin_expr begin_name baos end_name end_expr end_argument begin_argument begin_expr begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name jar encoding end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name print writer end_name end_type begin_name writer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_name osw end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name writer end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name byte array input stream end_name end_type begin_name bais end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name baos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name zip file end_name end_name begin_argument_list begin_argument begin_expr begin_name bais end_name end_expr end_argument begin_argument begin_expr begin_name z out end_name end_expr end_argument begin_argument begin_expr begin_name manifest name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name zip file set end_name begin_operator DOT end_operator begin_name default file mode end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name init zip output stream end_name end_name begin_argument_list begin_argument begin_expr begin_name z out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment establishes the object that contains the files to be added to the output return a path to be configured end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create addfiles end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name addfiles end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name addfiles end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name addfiles end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment check the command line options end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check options end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get replace end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment replace end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag replace end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get ordinary end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment ordinary end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag ordinary end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name get global end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment global end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag global end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name get pbranch end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment pbranch end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag pbranch end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get shared end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment shared end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag shared end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment c end_comment begin_expr_stmt begin_expr begin_call begin_name get comment command end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name get comment file end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment cfile end_comment begin_expr_stmt begin_expr begin_call begin_name get comment file command end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag nocomment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if begin_comment type name vob end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get type specifier end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test constructor windows style end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name l end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name is unix style end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name is net ware end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name base end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name base end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name base end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if begin_expr_stmt begin_expr begin_name p end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name l end_name begin_operator EQ end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name is unix style end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name is net ware end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if begin_expr_stmt begin_expr begin_name p end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name l end_name begin_operator EQ end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name is unix style end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name is net ware end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if begin_expr_stmt begin_expr begin_name p end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name l end_name begin_operator EQ end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name is unix style end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name is net ware end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if begin_expr_stmt begin_expr begin_name p end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name l end_name begin_operator EQ end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name is unix style end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name is net ware end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block 
 begin_comment locate the script defining task and execute the script by passing control to it end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get script end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name execute script end_name begin_argument_list begin_argument begin_expr begin_name attributes end_name end_expr end_argument begin_argument begin_expr begin_name nested element map end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructs the input component opens the file for reading param source the file to read from throws io exception when the file cannot be read from end_comment begin_name file input end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name source end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name output buffer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name buffer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name char end_name begin_index begin_expr begin_name buff size end_name end_expr end_index end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name encoding end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name reader end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file reader end_name begin_argument_list begin_argument begin_expr begin_name source end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name reader end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name source end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment sets the set of include patterns patterns may be separated by a comma or a space param includes the string containing the include patterns end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set includes end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name includes end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name used matching task end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_name includes end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test multiple dots end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name checkprop end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name checkprop end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirector 18 end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment encoding encoding end_comment begin_comment get an output stream for the resource return an output stream to which content can be written throws io exception if unable to provide the content of this resource as a stream throws unsupported operation exception if output streams are not supported for this resource type end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name output stream end_name end_type begin_name get output stream end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get output stream end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get value end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name immutable resource exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte array output stream end_name end_type begin_name baos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator UNP end_operator begin_class begin_super begin_name filter output stream end_name end_super begin_argument_list begin_argument begin_expr begin_name baos end_name end_expr end_argument end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name close end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name string resource end_name begin_operator DOT end_operator begin_name this end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name encoding end_name begin_operator EQT end_operator begin_operator QM end_operator begin_call begin_name begin_name baos end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_call begin_name begin_name baos end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_function end_block end_class end_expr end_return end_block 
 begin_comment get the manifest from the given jar if it is indeed a jar and it has a manifest param container the file from which a manifest is required return the jar s manifest or null is the container is not a jar or it has no manifest exception io exception if the manifest cannot be read end_comment begin_type begin_specifier end_specifier begin_name manifest end_name end_type begin_name get jar manifest end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name container end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name container end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name jar file end_name end_type begin_name jar file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name jar file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name jar file end_name begin_argument_list begin_argument begin_expr begin_name container end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name jar file end_name begin_operator DOT end_operator begin_name get manifest end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name jar file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name jar file end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment special back door for subclasses internal access to the hashtables return the live hashtable of user properties end_comment begin_type begin_specifier end_specifier begin_name hashtable end_name end_type begin_name get internal user properties end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name user properties end_name end_expr end_return end_block 
 begin_comment query current directory return the directory end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get directory end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name directory end_name end_expr end_return end_block 
 begin_type begin_name void end_name end_type begin_name store end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name child end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invocation target exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument begin_argument begin_expr begin_name instantiation exception end_name end_expr end_argument end_throws begin_block begin_comment do nothing end_comment end_block 
 begin_comment generate a split index param b true if the index should be split into a file per letter end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set splitindex end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add arg if end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convenience overloaded version of link get class loader for path project path string boolean p delegates to the other one after extracting the referenced path from the project this checks also that the passed reference is pointing to a path all right p param p current ant project param ref reference to path structure param reverse loader if set to true this new loader will take precedence over its parent which is contra the regular classloader behaviour return the class loader end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name class loader end_name end_type begin_name get class loader for path end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name reference end_name end_type begin_name ref end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name reverse loader end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path id end_name begin_init begin_expr begin_call begin_name begin_name ref end_name begin_operator DOT end_operator begin_name get ref id end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name path end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get reference end_name end_name begin_argument_list begin_argument begin_expr begin_name path id end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name path end_name begin_operator UNP end_operator begin_name path end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name path id end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name loader id end_name begin_init begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name refid classpath loader prefix end_name end_name begin_operator PLUS end_operator begin_name path id end_name end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name get class loader for path end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name path end_name begin_operator RPAR end_operator begin_name path end_name end_expr end_argument begin_argument begin_expr begin_name loader id end_name end_expr end_argument begin_argument begin_expr begin_name reverse loader end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test uri end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the localpath string g lc source p the localpath is created if it didn t exist return an empty string if localpath is not set end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get localpath end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name lcl path end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment set to empty str if no local path return end_comment begin_if begin_condition begin_expr begin_name local path end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment make sure m local dir exists create it if it doesn t end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dir end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name local path end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name done end_name begin_init begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name mkdirs end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name done end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_name local path end_name begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name lcl path end_name begin_operator EQ end_operator begin_name flag override working dir end_name begin_operator PLUS end_operator begin_name local path end_name end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name lcl path end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no resource on error fail all end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name expect build exception containing end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment formats a property value for display to the user param p an item property to format param value the object to format return a string containing the property which is truncated to 35 characters for display end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name format for display end_name begin_parameter_list begin_param begin_decl begin_type begin_name property end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get type code end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name begin_name property end_name begin_operator DOT end_operator begin_name types end_name begin_operator DOT end_operator begin_name text end_name end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name str end_name begin_init begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name str end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name str end_name begin_operator EQ end_operator begin_call begin_name begin_name str end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_operator PLUS end_operator begin_name str end_name begin_operator PLUS end_operator end_expr end_return end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get type code end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name begin_name property end_name begin_operator DOT end_operator begin_name types end_name begin_operator DOT end_operator begin_name enumerated end_name end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get enum display name end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name integer end_name begin_operator RPAR end_operator begin_name value end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name int value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_else end_if end_block end_else end_if end_block 
 begin_comment remove the given attribute from the section param attribute name the name of the attribute to be removed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name remove attribute end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name attribute name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key end_name begin_init begin_expr begin_call begin_name begin_name attribute name end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attribute index end_name begin_operator DOT end_operator begin_name remove element end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test transfer parameter unset with if end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect file contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the resources to add return the resources to add end_comment begin_type begin_specifier end_specifier begin_name resource end_name begin_index end_index begin_index end_index end_type begin_name get resources to add end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name resources to add end_name end_expr end_return end_block 
 begin_comment add a nested sysproperty element param sysp the element to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add sysproperty end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name environment end_name begin_operator DOT end_operator begin_name variable end_name end_name end_type begin_name sysp end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name sysp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the name of property to set if extensions are available param property the name of property to set if extensions is available end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set property end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name property name end_name end_name begin_operator EQ end_operator begin_name property end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test split lines end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name data end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name res end_name begin_init begin_expr begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line split end_name end_name begin_argument_list begin_argument begin_expr begin_name data end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set whether to include filenames param include file names whether to include filenames in the text of the message end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set includefilenames end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name include file names end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name include file names end_name end_name begin_operator EQ end_operator begin_name include file names end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name no new line test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment read a record from the input stream and return the data return the record data throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name read record end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name debug end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr rec idx end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr blk idx end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name in stream end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr rec idx end_name end_name begin_operator GE end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name recs per block end_name end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name read block end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name record size end_name end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name block buffer end_name end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr rec idx end_name end_name begin_operator STAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name record size end_name end_name begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name record size end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr rec idx end_name end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment utility method to load properties from file return the loaded properties throws build exception end_comment begin_type begin_specifier end_specifier begin_name properties end_name end_type begin_name load properties end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file input stream end_name end_type begin_name input end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name properties end_name end_type begin_name properties end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name input end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name my file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name load end_name end_name begin_argument_list begin_argument begin_expr begin_name input end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name properties end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ioe end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name input end_name end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name input end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ioe end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test for an untimely death of the process return true if a watchdog had to kill the process since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name killed process end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name watchdog end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name watchdog end_name begin_operator DOT end_operator begin_name killed process end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment generate a deep clone of the contained object return a clone of the contained object end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name clone end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name c end_name begin_init begin_expr begin_operator LPAR end_operator begin_name commandline end_name begin_operator RPAR end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name c end_name begin_operator DOT end_operator begin_name arguments end_name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name c end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name clone not supported exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment set the classpath to load the filter reader through nested element return a classpath to be configured end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment add the error file mapper param error mapper code mapper code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured error mapper end_name begin_parameter_list begin_param begin_decl begin_type begin_name mapper end_name end_type begin_name error mapper end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name error mapper end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name using error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name error mapper end_name end_name begin_operator EQ end_operator begin_name error mapper end_name end_expr end_expr_stmt end_block 
 begin_comment parse an entry name from a header buffer param header the header buffer from which to parse param offset the offset into the buffer from which to parse param length the number of header bytes to parse return the header s entry name end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string buffer end_name end_type begin_name parse name end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name header end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name offset end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name length end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name end end_name begin_init begin_expr begin_name offset end_name begin_operator PLUS end_operator begin_name length end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name offset end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name end end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name header end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator begin_name begin_name header end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment file the output of the process is redirected to if error is not redirected it too will appear in the output param out the file to which output stream is written end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name out end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal argument exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name using output end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name output mapper end_name begin_operator EQ end_operator begin_call begin_name create merge mapper end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the long file mode this can be longfile error 0 longfile truncate 1 or longfile gnu 2 this specifies the treatment of long file names names tar constants namelen default is longfile error param long file mode the mode to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set long file mode end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name long file mode end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name long file mode end_name end_name begin_operator EQ end_operator begin_name long file mode end_name end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get vendor output jar file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name base name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get dest dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name base name end_name begin_operator PLUS end_operator begin_name suffix end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment delegate method handling the lt classpath gt tag p this nested path like structure can set a path to add to the classpath p return the created path end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name component end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment test that version 1 1 stubs are good throws exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test version 11 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the input buffer for this component the filter expects from the component providing the input that data is only added by that component to the end of this string buffer this string buffer will be modified by this filter and expects that another component will only append to this string buffer param input the input for this filter end_comment begin_type begin_name void end_name end_type begin_name set input buffer end_name begin_parameter_list begin_param begin_decl begin_type begin_name string buffer end_name end_type begin_name input end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name input buffer end_name begin_operator EQ end_operator begin_name input end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test duplicate text name 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment compare two resources param foo the first resource param bar the second resource return a negative integer zero or a positive integer as the first argument is less than equal to or greater than the second end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name resource compare end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name foo end_name end_decl end_param begin_param begin_decl begin_type begin_name resource end_name end_type begin_name bar end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name int end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name foo end_name begin_operator DOT end_operator begin_name get last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_call begin_name begin_name bar end_name begin_operator DOT end_operator begin_name get last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment create a proxy diagnostics tool bound to link default destination end_comment begin_specifier end_specifier begin_name proxy diagnostics end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name default destination end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment build up a command line return a command line for jasper end_comment begin_type begin_specifier end_specifier begin_name commandline java end_name end_type begin_name setup jasper command end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name commandline java end_name end_type begin_name cmd end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline java end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name jsp c end_name end_type begin_name jspc end_name begin_init begin_expr begin_call begin_name get jspc end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add arg end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name jspc end_name begin_operator DOT end_operator begin_name get destdir end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add arg end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name jspc end_name begin_operator DOT end_operator begin_name get package end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is tomcat 5 x end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add arg end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name jspc end_name begin_operator DOT end_operator begin_name get verbose end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name add arg end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name jspc end_name begin_operator DOT end_operator begin_name get uriroot end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add arg end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name jspc end_name begin_operator DOT end_operator begin_name get uribase end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add arg end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name jspc end_name begin_operator DOT end_operator begin_name get ieplugin end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add arg end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name jspc end_name begin_operator DOT end_operator begin_name get webinc end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add arg end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name jspc end_name begin_operator DOT end_operator begin_name get webxml end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add arg end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name jspc end_name begin_operator DOT end_operator begin_name is mapped end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add arg end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name jspc end_name begin_operator DOT end_operator begin_name get web app end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dir end_name begin_init begin_expr begin_call begin_name begin_name jspc end_name begin_operator DOT end_operator begin_name get web app end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get directory end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add arg end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log and add files to compile end_name begin_argument_list begin_argument begin_expr begin_call begin_name get jspc end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get jspc end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get compile list end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name cmd end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test concat filter before after end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name do test end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name file prepend with end_name end_expr end_argument begin_argument begin_expr begin_name file append with end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the level return the log level end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get message level end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name level end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name is reference test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for scp from message param verbose if true log extra information param session the scp session to use param a remote file the remote file name param a local file the local file param recursive if true use recursion r option to scp since ant 1 6 2 end_comment begin_specifier end_specifier begin_name scp from message end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name verbose end_name end_decl end_param begin_param begin_decl begin_type begin_name session end_name end_type begin_name session end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name a remote file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name a local file end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name recursive end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name verbose end_name end_expr end_argument begin_argument begin_expr begin_name session end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name remote file end_name end_name begin_operator EQ end_operator begin_name a remote file end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name local file end_name end_name begin_operator EQ end_operator begin_name a local file end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name is recursive end_name end_name begin_operator EQ end_operator begin_name recursive end_name end_expr end_expr_stmt end_block 
 begin_comment restrict the given set of files to those that are newer than their corresponding target files param files the original set of files param src dir all files are relative to this directory param dest dir target files live here if null file names returned by the mapper are assumed to be absolute param mapper knows how to construct a target file names from source file names param granularity the number of milliseconds leeway to give before deciding a target is out of date return an array of filenames since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name restrict end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name files end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name src dir end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest dir end_name end_decl end_param begin_param begin_decl begin_type begin_name file name mapper end_name end_type begin_name mapper end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name granularity end_name end_decl end_param end_parameter_list begin_block begin_comment record destdir for later use in get resource end_comment begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dest dir end_name end_name begin_operator EQ end_operator begin_name dest dir end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name v end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name src end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name src dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name resource end_name begin_argument_list begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name resource end_name begin_index end_index end_type begin_name sourceresources end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name resource end_name begin_index begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name sourceresources end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment build the list of sources which are out of date with end_comment begin_comment respect to the target end_comment begin_decl_stmt begin_decl begin_type begin_name resource end_name begin_index end_index end_type begin_name outofdate end_name begin_init begin_expr begin_call begin_name begin_name resource utils end_name begin_operator DOT end_operator begin_name select out of date sources end_name end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument begin_argument begin_expr begin_name sourceresources end_name end_expr end_argument begin_argument begin_expr begin_name mapper end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name granularity end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_name begin_name outofdate end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name counter end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name counter end_name begin_operator LT end_operator begin_name begin_name outofdate end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name counter end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name result end_name begin_index begin_expr begin_name counter end_name end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name outofdate end_name begin_index begin_expr begin_name counter end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment sets the code view name code attribute to the given value param view name the view to find the specified folder in see get view name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set view name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name view name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name view name end_name end_name begin_operator EQ end_operator begin_name view name end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name t end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_name f end_name begin_operator EQT end_operator end_expr end_return end_block 
 begin_comment the local wsdl file to parse either url or src file is required param src file wsdl file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name wsdl end_name begin_operator DOT end_operator begin_name set file end_name end_name begin_argument_list begin_argument begin_expr begin_name src file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns true the file is selected if most of the other selectors agree in case of a tie go by the allowtie setting that defaults to true meaning in case of a tie the file is selected param basedir the base directory the scan is being done from param filename is the name of the file to check param file is a java io file object for the filename that the selector can use return whether the file should be selected or not end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name basedir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name yesvotes end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name novotes end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name selector elements end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name result end_name end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name file selector end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name is selected end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name filename end_name end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name result end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name yesvotes end_name begin_operator EQ end_operator begin_name yesvotes end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name novotes end_name begin_operator EQ end_operator begin_name novotes end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_else end_if end_block end_while begin_if begin_condition begin_expr begin_name yesvotes end_name begin_operator GT end_operator begin_name novotes end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name novotes end_name begin_operator GT end_operator begin_name yesvotes end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_else end_if begin_comment at this point we know we have a tie end_comment begin_return begin_expr begin_name allowtie end_name end_expr end_return end_block 
 begin_comment retrieve extensions from the specified libraries param libraries the filesets for libraries return the extensions contained in libraries throws build exception if failing to scan libraries end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name extension end_name begin_index end_index end_type begin_name get extensions end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name list end_name end_type begin_name libraries end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name array list end_name end_type begin_name extensions end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name iterator end_name end_type begin_name iterator end_name begin_init begin_expr begin_call begin_name begin_name libraries end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iterator end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name file set end_name end_type begin_name file set end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name iterator end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name include impl end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name include url end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name file set end_name begin_operator UNP end_operator begin_name lib file set end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name lib file set end_name end_type begin_name lib file set end_name begin_init begin_expr begin_operator LPAR end_operator begin_name lib file set end_name begin_operator RPAR end_operator begin_name file set end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name include impl end_name begin_operator EQ end_operator begin_call begin_name begin_name lib file set end_name begin_operator DOT end_operator begin_name is include impl end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name include url end_name begin_operator EQ end_operator begin_call begin_name begin_name lib file set end_name begin_operator DOT end_operator begin_name is include url end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name directory scanner end_name end_type begin_name scanner end_name begin_init begin_expr begin_call begin_name begin_name file set end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name basedir end_name begin_init begin_expr begin_call begin_name begin_name scanner end_name begin_operator DOT end_operator begin_name get basedir end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name scanner end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name load extensions end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name extensions end_name end_expr end_argument begin_argument begin_expr begin_name include impl end_name end_expr end_argument begin_argument begin_expr begin_name include url end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_while begin_return begin_expr begin_operator LPAR end_operator begin_name begin_name extension end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name extensions end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name extension end_name begin_index begin_expr begin_call begin_name begin_name extensions end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name compare bytes end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name expected end_name begin_init begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name reader input stream end_name end_type begin_name r end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name reader input stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string reader end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name expected end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name expect end_name begin_init begin_expr begin_name begin_name expected end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name read end_name begin_init begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name expect end_name begin_operator UNP end_operator begin_name read end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name i end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name expect end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name read end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name s end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name s end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment matches a jar entry against the includes excludes list normalizing the path separator param path the non null path name to test for inclusion return code true code if the path should be included code false code otherwise end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name match end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name vpath end_name begin_init begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name is included end_name begin_argument_list begin_argument begin_expr begin_name vpath end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name is excluded end_name begin_argument_list begin_argument begin_expr begin_name vpath end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment end execute end_comment begin_comment returns the delimiter which c uses to separate references i e a semi colon return the delimiter end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get reference delimiter end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment get the name of the entry return the entry name since 1 9 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name begin_operator EQT end_operator begin_operator QM end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name name end_name end_expr end_return end_block 
 begin_comment connects the handler to the stdout of the perforce process param is stdout coming from perforce throws io exception under unknown circumstances end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set process output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name is end_name end_name begin_operator EQ end_operator begin_name is end_name end_expr end_expr_stmt end_block 
 begin_comment read data from the default input stream if no default has been specified system in is used param buffer the buffer into which data is to be read param offset the offset into the buffer at which data is stored param length the amount of data to read return the number of bytes read exception io exception if the data cannot be read since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name default input end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name buffer end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name offset end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name length end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name default input stream end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name default input stream end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name eof exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block 
 begin_comment write the data to the buffer and flush the buffer if a line separator is detected param cc data to log byte throws io exception io exception if an i o error occurs in particular an code io exception code may be thrown if the output stream has been closed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name cc end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte end_name end_type begin_name c end_name begin_init begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator begin_name cc end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name c end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name c end_name begin_operator EQT end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name skip end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name process buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name cc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name skip end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name c end_name begin_operator EQT end_operator begin_operator RPAR end_operator end_expr end_expr_stmt end_block 
 begin_comment get an iterator over the files return an iterator end_comment begin_type begin_specifier end_specifier begin_name iterator end_name end_type begin_name files iterator end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment get the date time in string format return a string representing a date time end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get datetime end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name date time end_name end_expr end_return end_block 
 begin_comment replaces code xxx code style constructions in the given value with the string value of the corresponding properties param project the project containing the properties to replace must not be code null code param value the string to be scanned for property references may be code null code exception build exception if the string contains an opening code code without a closing code code return the original string with the properties replaced or code null code if the original string is code null code deprecated since 1 6 x use project replace properties since 1 5 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name replace properties end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment needed since project properties are not accessible end_comment begin_return begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name replace properties end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test user property wins inherit all end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set user property end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment bind the runner to a project component properties targets and references are all added as beans project is bound to project and self to the component param component to become code self code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name bind to component end_name begin_parameter_list begin_param begin_decl begin_type begin_name project component end_name end_type begin_name component end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name project end_name begin_operator EQ end_operator begin_call begin_name begin_name component end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add beans end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get properties end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add beans end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get user properties end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add beans end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get targets end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add beans end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get references end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add bean end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add bean end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name component end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the date and time as a string param s the date time to use end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set date time end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name date time end_name begin_operator EQ end_operator begin_name s end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name millis end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment verifies that no empty junit noframes html is generated when frames output is selected via the default needs reports 1 task from junitreport xml end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no file j unit no frames end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment constructor param project the project to which this antxml context belongs to end_comment begin_specifier end_specifier begin_name ant xml context end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name project end_name end_name begin_operator EQ end_operator begin_name project end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name implicit target end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name implicit target end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name target vector end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name implicit target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name setup rand part a end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su i 2 end_name end_name begin_operator LE end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name last end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su ch prev end_name end_name begin_operator EQ end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name su ch 2 end_name end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name su ch 2 shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name begin_operator DOT end_operator begin_name ll 8 end_name begin_index begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su t pos end_name end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su t pos end_name end_name begin_operator EQ end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name begin_operator DOT end_operator begin_name tt end_name begin_index begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su t pos end_name end_name end_expr end_index end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su r n to go end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su r n to go end_name end_name begin_operator EQ end_operator begin_name begin_name b zip 2 constants end_name begin_operator DOT end_operator begin_name r nums end_name begin_index begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su r t pos end_name end_name end_expr end_index end_name begin_operator MINUS end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator PPLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name su r t pos end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su r t pos end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su r n to go end_name end_name begin_operator MMINUS end_operator end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su ch 2 end_name end_name begin_operator EQ end_operator begin_name su ch 2 shadow end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name su r n to go end_name end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su i 2 end_name end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name current char end_name end_name begin_operator EQ end_operator begin_name su ch 2 shadow end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name current state end_name end_name begin_operator EQ end_operator begin_name rand part b state end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name crc end_name begin_operator DOT end_operator begin_name update crc end_name end_name begin_argument_list begin_argument begin_expr begin_name su ch 2 shadow end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name end block end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name init block end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name setup block end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment set whether to cache collections param b boolean cache flag end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set cache end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name cache end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment interface test listener p a new test is started param t the test end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start test end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name test starts end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name long end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name failed end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument begin_argument begin_expr begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get description end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the project of the project component we are working for end_comment begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name get context project end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name component end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name hashtable end_name end_type begin_name make table end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name key end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name table end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name table end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name table end_name end_expr end_return end_block 
 begin_comment add commands unique to c param command ongoing command end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add compiler specific options end_name begin_parameter_list begin_param begin_decl begin_type begin_name net command end_name end_type begin_name command end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get include default references parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get warn level parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get doc file parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get full paths parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get file align parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get incremental parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get no config parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get unsafe parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment execute p 4 command assembled by subclasses param command the command to run param handler a p 4 handler to process any input and output throws build exception if failonerror has been set to true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name exec p 4 command end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name command end_name end_decl end_param begin_param begin_decl begin_type begin_name p 4 handler end_name end_type begin_name handler end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_comment reset error flags before executing the command end_comment begin_expr_stmt begin_expr begin_name in error end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name error message end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name commandline end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment check api for these it s how cvs does it end_comment begin_if begin_condition begin_expr begin_name p 4 port end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name p 4 port end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name p 4 port end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name p 4 user end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name p 4 user end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name p 4 user end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name p 4 client end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name p 4 client end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name p 4 client end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name p 4 opts end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name p 4 opts end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set line end_name begin_argument_list begin_argument begin_expr begin_name p 4 opts end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set line end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name describe command end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name handler end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name handler end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name simple p 4 output handler end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name execute end_name end_type begin_name exe end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name execute end_name begin_argument_list begin_argument begin_expr begin_name handler end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set ant run end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set commandline end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name in error end_name begin_operator UNP end_operator begin_name fail on error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name stop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_finally end_try end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name fail msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name fail on error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name fail msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name fail msg end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_catch end_try end_block 
 begin_specifier end_specifier begin_name call target test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test doubly nested fileset no patterns end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test plain task end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name echo end_name end_type begin_name e end_name begin_init begin_expr begin_operator LPAR end_operator begin_name echo end_name begin_operator RPAR end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert false end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name begin_name location end_name begin_operator DOT end_operator begin_name unknown location end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert false end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get line number end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the label being used return the label being used end_comment begin_type begin_specifier end_specifier begin_name label end_name end_type begin_name get label in use end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name label in use end_name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test international german end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is at least java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 4 end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test the code that validates the selector end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test validate end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name depth selector end_name end_type begin_name s end_name begin_init begin_expr begin_operator LPAR end_operator begin_name depth selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 1 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 1 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name depth selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set min end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set max end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 2 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 2 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name depth selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name parameter end_name end_type begin_name param end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name parameter end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name parameter end_name begin_index end_index end_type begin_name params end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name parameter end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name params end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_name param end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set parameters end_name end_name begin_argument_list begin_argument begin_expr begin_name params end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 3 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 3 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name depth selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name param end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name parameter end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name params end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_name param end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set parameters end_name end_name begin_argument_list begin_argument begin_expr begin_name params end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 4 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 4 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name depth selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name param end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name parameter end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name params end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_name param end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set parameters end_name end_name begin_argument_list begin_argument begin_expr begin_name params end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 5 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 5 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment iterate through the generated command line comparing it to reference one param s test cmd line the reference command line param s generated cmd line the generated command line end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check command lines end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name s test cmd line end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name s generated cmd line end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name test length end_name begin_init begin_expr begin_name begin_name s test cmd line end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name gen length end_name begin_init begin_expr begin_name begin_name s generated cmd line end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name gen index end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name test index end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name test index end_name begin_operator LT end_operator begin_name test length end_name end_expr end_condition begin_block begin_try begin_block begin_if begin_condition begin_expr begin_name begin_name s generated cmd line end_name begin_index begin_expr begin_name gen index end_name end_expr end_index end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name gen index end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_continue end_continue end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name test index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name s test cmd line end_name begin_index begin_expr begin_name test index end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name s generated cmd line end_name begin_index begin_expr begin_name gen index end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name test index end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name gen index end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name array index out of bounds exception end_name end_type begin_name aioob end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name s test cmd line end_name begin_index begin_expr begin_name test index end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_while begin_comment count the number of empty strings end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name cnt end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name gen length end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name s generated cmd line end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name cnt end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_name gen length end_name begin_operator MINUS end_operator begin_name cnt end_name begin_operator GT end_operator begin_name begin_name s test cmd line end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_comment we have extra elements end_comment begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment add a package nested element param pn a nested element specifing the package end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add package end_name begin_parameter_list begin_param begin_decl begin_type begin_name package name end_name end_type begin_name pn end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name pn end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the alias to add under param alias alias to add under end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set alias end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name alias end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name alias end_name end_name begin_operator EQ end_operator begin_name alias end_name end_expr end_expr_stmt end_block 
 begin_comment add an lt available gt condition param a an available condition since 1 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add available end_name begin_parameter_list begin_param begin_decl begin_type begin_name available end_name end_type begin_name a end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name conditions end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name a end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add an escape unicode filter param escape unicode an code escape unicode code value since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add escape unicode end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name escape unicode end_name end_type begin_name escape unicode end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filter readers end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name escape unicode end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the pattern string for this regular expression in the given project param p project return pattern end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get pattern end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name init end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get pattern end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name set pattern end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name regexp end_name begin_operator DOT end_operator begin_name get pattern end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set whether to use filetokenizer or line tokenizer param by line if true use a linetokenizer default otherwise use a filetokenizer end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set by line end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name by line end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name by line end_name end_name begin_operator EQ end_operator begin_name by line end_name end_expr end_expr_stmt end_block 
 begin_comment signals that a build has started param event recieved build event end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_comment no op end_comment end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name bs r end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name n end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name bs live shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs live end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name bs buff shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs buff end_name end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name bs live shadow end_name begin_operator LT end_operator begin_name n end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name input stream end_name end_type begin_name in shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name in end_name end_name end_expr end_init end_decl end_decl_stmt begin_do begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name thech end_name begin_init begin_expr begin_call begin_name begin_name in shadow end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name thech end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name bs buff shadow end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name bs buff shadow end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_name thech end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bs live shadow end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block begin_condition begin_expr begin_name bs live shadow end_name begin_operator LT end_operator begin_name n end_name end_expr end_condition end_do begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs buff end_name end_name begin_operator EQ end_operator begin_name bs buff shadow end_name end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs live end_name end_name begin_operator EQ end_operator begin_name bs live shadow end_name begin_operator MINUS end_operator begin_name n end_name end_expr end_expr_stmt begin_return begin_expr begin_operator LPAR end_operator begin_name bs buff shadow end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name bs live shadow end_name begin_operator MINUS end_operator begin_name n end_name begin_operator RPAR end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_name n end_name begin_operator RPAR end_operator begin_operator MINUS end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment if true transitive dependencies are followed until the closure of the dependency set if reached when not set the depend task will only follow direct dependencies between classes param closure indicate if dependency closure is required end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set closure end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name closure end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name closure end_name end_name begin_operator EQ end_operator begin_name closure end_name end_expr end_expr_stmt end_block 
 begin_comment sets the property name whose value should be set to the output of the process param output prop name of property end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set outputproperty end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output prop end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set output property end_name end_name begin_argument_list begin_argument begin_expr begin_name output prop end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name incompatible with spawn end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment returns the next character in the filtered stream only including lines from the original stream which match all of the specified regular expressions return the next character in the resulting stream or 1 if the end of the resulting stream has been reached exception io exception if the underlying stream throws an io exception during reading end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get initialized end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name initialize end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set initialized end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ch end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name line end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name regexps size end_name begin_init begin_expr begin_call begin_name begin_name regexps end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name read line end_name begin_argument_list end_argument_list end_call end_expr end_init begin_condition begin_expr begin_name line end_name begin_operator UNP end_operator end_expr end_condition begin_incr begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name read line end_name begin_argument_list end_argument_list end_call end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name matches end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name matches end_name begin_operator UNP end_operator begin_name i end_name begin_operator LT end_operator begin_name regexps size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name regular expression end_name end_type begin_name regexp end_name begin_init begin_expr begin_operator LPAR end_operator begin_name regular expression end_name begin_operator RPAR end_operator begin_call begin_name begin_name regexps end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name regexp end_name end_type begin_name re end_name begin_init begin_expr begin_call begin_name begin_name regexp end_name begin_operator DOT end_operator begin_name get regexp end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name matches end_name begin_operator EQ end_operator begin_call begin_name begin_name re end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_if begin_condition begin_expr begin_name matches end_name begin_operator UNP end_operator begin_call begin_name is negated end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_name line end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name read end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if end_block end_else end_if begin_return begin_expr begin_name ch end_name end_expr end_return end_block 
 begin_comment create a nested element to be configured param element name the name of the nested element return object representing the element name end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name create nested element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name element name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name nested element end_name end_type begin_name definition end_name begin_init begin_expr begin_operator LPAR end_operator begin_name nested element end_name begin_operator RPAR end_operator begin_call begin_name begin_name nested element map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name element name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name definition end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name element name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name instance end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name classname end_name begin_init begin_expr begin_name begin_name definition end_name begin_operator DOT end_operator begin_name class name end_name end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name classname end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name instance end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create task end_name begin_argument_list begin_argument begin_expr begin_name begin_name definition end_name begin_operator DOT end_operator begin_name type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name instance end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name instance end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create data type end_name begin_argument_list begin_argument begin_expr begin_name begin_name definition end_name begin_operator DOT end_operator begin_name type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_comment try the context classloader class loader loader thread current thread get context class loader end_comment begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name loader end_name begin_init begin_expr begin_call begin_name create loader end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name instance end_name begin_operator EQ end_operator begin_call begin_name begin_name classpath utils end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument begin_argument begin_expr begin_name loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name instance end_name begin_operator EQ end_operator begin_call begin_name begin_name classpath utils end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name script def end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get class loader end_name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set project reference end_name begin_argument_list begin_argument begin_expr begin_name instance end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name instance end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name element name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_name instance end_name end_expr end_return end_block 
 begin_comment this cache is valid if the cachefile is set return true if all is ok false otherwise end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is valid end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name cachefile end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment extracts the name of a property from a method name by subtracting a given prefix and converting into lower case it is up to calling code to make sure the method name does actually begin with the specified prefix no checking is done in this method param method name the name of the method in question must not be code null code param prefix the prefix to remove must not be code null code return the lower cased method name with the prefix removed end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get property name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name method name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name method name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name prefix end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment check style member name check on end_comment begin_comment check style visibility modifier on end_comment begin_comment add a set of files to be deleted param set the file set to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add fileset end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name set end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test check in project option flags end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test checkin project flags end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s test cmd line end_name begin_init begin_expr begin_block begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr begin_name sos server path end_name end_expr begin_expr end_expr begin_expr begin_name sos username end_name end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr begin_name vss server path end_name end_expr begin_expr end_expr begin_expr begin_name ds vss project path end_name end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr begin_name sos home end_name end_expr begin_expr end_expr begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr begin_expr end_expr begin_expr begin_name src comment end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_comment set up a sos checkin task end_comment begin_decl_stmt begin_decl begin_type begin_name sos checkin end_name end_type begin_name sos checkin end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name sos checkin end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sos checkin end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sos checkin end_name begin_operator DOT end_operator begin_name set vss server path end_name end_name begin_argument_list begin_argument begin_expr begin_name vss server path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sos checkin end_name begin_operator DOT end_operator begin_name set sos server path end_name end_name begin_argument_list begin_argument begin_expr begin_name sos server path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sos checkin end_name begin_operator DOT end_operator begin_name set project path end_name end_name begin_argument_list begin_argument begin_expr begin_name ds vss project path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sos checkin end_name begin_operator DOT end_operator begin_name set comment end_name end_name begin_argument_list begin_argument begin_expr begin_name src comment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sos checkin end_name begin_operator DOT end_operator begin_name set username end_name end_name begin_argument_list begin_argument begin_expr begin_name sos username end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sos checkin end_name begin_operator DOT end_operator begin_name set sos home end_name end_name begin_argument_list begin_argument begin_expr begin_name sos home end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sos checkin end_name begin_operator DOT end_operator begin_name set no cache end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sos checkin end_name begin_operator DOT end_operator begin_name set no compress end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sos checkin end_name begin_operator DOT end_operator begin_name set verbose end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sos checkin end_name begin_operator DOT end_operator begin_name set recursive end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name commandline end_name begin_operator EQ end_operator begin_call begin_name begin_name sos checkin end_name begin_operator DOT end_operator begin_name build cmd line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check command lines end_name begin_argument_list begin_argument begin_expr begin_name s test cmd line end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test real bzip 2 test end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name test logo extraction end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test the if condition return true if there is no if condition or the named property exists end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name test if condition end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name if condition end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name if condition end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name if condition end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_return end_block 
 begin_comment set the output file identical to set dest file see dotnet base matching task set dest file param params the new output file value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name params end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name output file end_name begin_operator EQ end_operator begin_name params end_name end_expr end_expr_stmt end_block 
 begin_comment perform the compilation since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name compile end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name compiler impl end_name begin_init begin_expr begin_call begin_name get compiler end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name compile list end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name compile list end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name begin_name compile list end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name dest dir end_name begin_operator UNP end_operator begin_operator QM end_operator begin_operator PLUS end_operator begin_name dest dir end_name begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name list files end_name end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name compile list end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name filename end_name begin_init begin_expr begin_name begin_name compile list end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name compiler adapter end_name end_type begin_name adapter end_name begin_init begin_expr begin_call begin_name begin_name compiler adapter factory end_name begin_operator DOT end_operator begin_name get compiler end_name end_name begin_argument_list begin_argument begin_expr begin_name compiler impl end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment now we need to populate the compiler adapter end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name adapter end_name begin_operator DOT end_operator begin_name set javac end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment finally lets execute the compiler end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name adapter end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name fail on error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name fail msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name fail msg end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block end_then end_if end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test xml end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute jsp compile end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment executes the task exception build exception if there is an execution problem todo validate that if either in or our is defined then both are end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task type end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name saved base dir end_name begin_init begin_expr begin_name base dir end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name scanner end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name list end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name dirs end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name xsl resource end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name xsl file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name xsl resource end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name xsl file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name in file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name in file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name in file end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_try begin_block begin_if begin_condition begin_expr begin_name base dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name base dir end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name liaison end_name begin_operator EQ end_operator begin_call begin_name get liaison end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment check if liaison wants to log errors using us as logger end_comment begin_if begin_condition begin_expr begin_name liaison end_name begin_operator UNP end_operator begin_name xslt logger aware end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name xslt logger aware end_name begin_operator RPAR end_operator begin_name liaison end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set logger end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name liaison end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name xsl file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment if we enter here it means that the stylesheet is supplied end_comment begin_comment via style attribute end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name stylesheet end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name xsl file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name stylesheet end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name stylesheet end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument begin_argument begin_expr begin_name xsl file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment shouldn t throw out deprecation warnings before we know the wrong version has been used end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name stylesheet end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file resource end_name end_type begin_name fr end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fr end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fr end_name begin_operator DOT end_operator begin_name set file end_name end_name begin_argument_list begin_argument begin_expr begin_name stylesheet end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name xsl resource end_name begin_operator EQ end_operator begin_name fr end_name end_expr end_expr_stmt end_block end_then end_if begin_comment if we have an in file and out then process them end_comment begin_if begin_condition begin_expr begin_name in file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name out file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name process end_name begin_argument_list begin_argument begin_expr begin_name in file end_name end_expr end_argument begin_argument begin_expr begin_name out file end_name end_expr end_argument begin_argument begin_expr begin_name xsl resource end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_comment if we get here in and out have not been specified we are in batch processing mode end_comment begin_comment make sure destination directory exists end_comment begin_expr_stmt begin_expr begin_call begin_name check dest end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name use implicit fileset end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name scanner end_name begin_operator EQ end_operator begin_call begin_name get directory scanner end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name dest dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment process all the files marked for styling end_comment begin_expr_stmt begin_expr begin_name list end_name begin_operator EQ end_operator begin_call begin_name begin_name scanner end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name list end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name process end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name list end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name dest dir end_name end_expr end_argument begin_argument begin_expr begin_name xsl resource end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_if begin_condition begin_expr begin_name perform directory scan end_name end_expr end_condition begin_then begin_block begin_comment process all the directories marked for styling end_comment begin_expr_stmt begin_expr begin_name dirs end_name begin_operator EQ end_operator begin_call begin_name begin_name scanner end_name begin_operator DOT end_operator begin_name get included directories end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name dirs end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name j end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name list end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name dirs end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name list end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name list end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name process end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name dirs end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_name begin_name list end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name dest dir end_name end_expr end_argument begin_argument begin_expr begin_name xsl resource end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_for end_block end_then end_if end_block end_then begin_else begin_block begin_comment only resource collections there better be some end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name process resources end_name begin_argument_list begin_argument begin_expr begin_name xsl resource end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name loader end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name reset thread context loader end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name cleanup end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name loader end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name liaison end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name stylesheet loaded end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name base dir end_name begin_operator EQ end_operator begin_name saved base dir end_name end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment creates a project instance for the project to call end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name new project end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create sub project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new project end_name begin_operator DOT end_operator begin_name set java version property end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name fixup path end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name watchdog end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name execute watchdog end_name begin_argument_list begin_argument begin_expr begin_name time out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds a dependency to this target param dependency the name of a target this target is dependent on must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add dependency end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name dependency end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name dependencies end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dependencies end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name dependencies end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name dependency end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test unless end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment adds a reference to a classpath defined elsewhere param r the reference to an instance defining the classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set refid end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the name to use in logging messages return the name to use in logging messages end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get task name end_name begin_parameter_list end_parameter_list begin_block begin_comment return element name end_comment begin_return begin_expr begin_name real thing end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name real thing end_name begin_operator UNP end_operator begin_name task end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get task name end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_name real thing end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test mapping end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name package name mapper end_name end_type begin_name mapper end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name package name mapper end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name set from end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file end_name begin_init begin_expr begin_call begin_name fixup path end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name map file name end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call begin_index begin_expr end_expr end_index end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test undefined end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add vendor files end_name begin_parameter_list begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name ejb files end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name dd prefix end_name end_decl end_param end_parameter_list begin_block begin_comment j on as specific descriptor deployment end_comment begin_expr_stmt begin_expr begin_name jonas descriptor name end_name begin_operator EQ end_operator begin_call begin_name get jonas descriptor name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name jonas dd end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get config end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name descriptor dir end_name end_expr end_argument begin_argument begin_expr begin_name jonas descriptor name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name jonas dd end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ejb files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name meta dir end_name begin_operator PLUS end_operator begin_name jonas dd end_name end_expr end_argument begin_argument begin_expr begin_name jonas dd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name jonas dd end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment set the code file code containing the excludes patterns param excl code file code instance throws build exception if there is a problem end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set excludesfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name excl end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name default patterns end_name begin_operator DOT end_operator begin_name set excludesfile end_name end_name begin_argument_list begin_argument begin_expr begin_name excl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ds end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment read a constant pool entry from a class stream param cp stream the data input stream which contains the constant pool entry to be read exception io exception if there is a problem reading the entry from the stream end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name read end_name begin_parameter_list begin_param begin_decl begin_type begin_name data input stream end_name end_type begin_name cp stream end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_call begin_name begin_name cp stream end_name begin_operator DOT end_operator begin_name read utf end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test whether or not a name matches the start of at least one include pattern param name the name to match must not be code null code return code true code when the name matches against the start of at least one include pattern or code false code otherwise end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name could hold included end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name includes end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name match pattern start end_name begin_argument_list begin_argument begin_expr begin_name begin_name includes end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name is case sensitive end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name is more powerful than excludes end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name includes end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name is deeper end_name begin_argument_list begin_argument begin_expr begin_name begin_name includes end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_comment set the debugging flag for the buffer param debug if true print debugging output end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set debug end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name debug end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_operator EQ end_operator begin_name debug end_name end_expr end_expr_stmt end_block 
 begin_comment retrieve the bytes for the given string in the encoding set for this stream param name the string to get bytes from return the bytes as a byte array throws zip exception on error since 1 3 end_comment begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name get bytes end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name zip exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name encoding end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_try begin_block begin_return begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unsupported encoding exception end_name end_type begin_name uee end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name zip exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name uee end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_else end_if end_block 
 begin_comment whether the antlr version is 2 7 2 or higher return true if the version of antlr present is 2 7 2 or later since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is 272 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name ant class loader end_name end_type begin_name l end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name l end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create class loader end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name get classpath end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name l end_name begin_operator DOT end_operator begin_name load class end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name l end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name l end_name begin_operator DOT end_operator begin_name cleanup end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get fail message end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name fail message end_name end_expr end_return end_block 
 begin_comment returns a code string code object representing the specified size selector this is sizeselector value compare less more equal return a string describing this object end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name sizelimit end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name when end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment resolves a diff string see diff against the inherited filenames and files arrays param filelist diff string return string containing the filenames for all differing files separated with semicolons end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name resolve end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name filelist end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name min end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name filenames end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator begin_call begin_name begin_name filelist end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name begin_name filelist end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name begin_name filenames end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name min end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_operator EQT end_operator begin_call begin_name begin_name filelist end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_return begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment inherit the id references param parent the parent project of this project end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name inherit id references end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name parent end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name parent id project end_name begin_operator EQ end_operator begin_name parent end_name end_expr end_expr_stmt end_block 
 begin_comment setter used to store the name of the toplink descriptor param in string the string to use as the descriptor name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set toplinkdescriptor end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name in string end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name toplink descriptor end_name end_name begin_operator EQ end_operator begin_name in string end_name end_expr end_expr_stmt end_block 
 begin_comment set the default system input stream normally this stream is set to system in this input stream is used when no task input redirection is being performed param default input stream the default input stream to use when input is requested since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set default input stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name default input stream end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name default input stream end_name end_name begin_operator EQ end_operator begin_name default input stream end_name end_expr end_expr_stmt end_block 
 begin_comment verify we are connected to the correct rdbms param conn the jdbc connection return true if we are connected to the correct rdbms end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is valid rdbms end_name begin_parameter_list begin_param begin_decl begin_type begin_name connection end_name end_type begin_name conn end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name rdbms end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name version end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name database meta data end_name end_type begin_name dmd end_name begin_init begin_expr begin_call begin_name begin_name conn end_name begin_operator DOT end_operator begin_name get meta data end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name rdbms end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name the vendor end_name begin_init begin_expr begin_call begin_name begin_name dmd end_name begin_operator DOT end_operator begin_name get database product name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name the vendor end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name the vendor end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name the vendor end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name rdbms end_name end_expr end_argument end_argument_list end_call begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name rdbms end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name version end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name the version end_name begin_init begin_expr begin_call begin_name begin_name dmd end_name begin_operator DOT end_operator begin_name get database product version end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name english end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name the version end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name the version end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name the version end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name version end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name the version end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name version end_name end_expr end_argument end_argument_list end_call begin_operator GE end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name version end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name sql exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment could not get the required information end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_catch end_try begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name xml catalog end_name end_type begin_name new catalog end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name xml catalog end_name end_type begin_name cat end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name xml catalog end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cat end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name cat end_name end_expr end_return end_block 
 begin_comment checks for a schema being out of data param schema url file param dest last modified timestamp 1 for no dest return true if a rebuild is needed end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is rebuild needed end_name begin_parameter_list begin_param begin_decl begin_type begin_name schema end_name end_type begin_name schema end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name dest last modified end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name dest last modified end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name is up to date end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name schema end_name begin_operator DOT end_operator begin_name get timestamp end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name dest last modified end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment set the directories path to find the java source files param src path the source path end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set srcdir end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name src path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name src path end_name end_name begin_operator EQ end_operator begin_name src path end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test ref id end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name test path end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test path end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set path end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name property checker end_name end_type begin_name pc end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name property checker end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_expr begin_call begin_name begin_name test path end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add build listener end_name end_name begin_argument_list begin_argument begin_expr begin_name pc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name assertion failed error end_name end_type begin_name ae end_name begin_init begin_expr begin_call begin_name begin_name pc end_name begin_operator DOT end_operator begin_name get error end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ae end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_name ae end_name end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name remove build listener end_name end_name begin_argument_list begin_argument begin_expr begin_name pc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name head tail test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_synchronized begin_expr begin_name begin_name output stream funneler end_name begin_operator DOT end_operator begin_name this end_name end_name end_expr begin_block begin_expr_stmt begin_expr begin_call begin_name die if closed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_synchronized end_block 
 begin_comment checks to make sure all settings are kosher in this case it means that the max depth is not lower than the min depth end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name verify settings end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name min end_name begin_operator LT end_operator begin_operator UNP end_operator begin_name max end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name max end_name begin_argument_list begin_argument begin_name min end_name begin_operator UNP end_operator begin_name max end_name end_argument end_argument_list end_name begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment get no checkout flag status return boolean containing status of noco flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get no checkout end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m noco end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test reference end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name keys end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name boolean end_name begin_index end_index end_name end_type begin_name expect end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name reference checker end_name end_type begin_name rc end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name reference checker end_name begin_argument_list begin_argument begin_expr begin_name keys end_name end_expr end_argument begin_argument begin_expr begin_name expect end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add build listener end_name end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name assertion failed error end_name end_type begin_name ae end_name begin_init begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name get error end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ae end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_name ae end_name end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name remove build listener end_name end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment clone the objects this is not a full depth clone the list of assertions is cloned but it does not clone the underlying assertions return a cli throws clone not supported exception if the super class does not support cloning end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name clone end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name clone not supported exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name assertions end_name end_type begin_name that end_name begin_init begin_expr begin_operator LPAR end_operator begin_name assertions end_name begin_operator RPAR end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name that end_name begin_operator DOT end_operator begin_name assertion list end_name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name array list end_name begin_operator RPAR end_operator begin_call begin_name begin_name assertion list end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name that end_name end_expr end_return end_block 
 begin_comment sets some additional args to send to verify command param args additional command line parameters end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set verify args end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name verify args end_name end_name begin_operator EQ end_operator begin_name args end_name end_expr end_expr_stmt end_block 
 begin_comment whether to append output error when redirecting to a file param value true indicated you want to append end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set append end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name append end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment test timeout without timing out end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test timeout not end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name is failure test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the classpath to be used when searching for classes and resources param classpath an ant path object containing the search path end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set classpath end_name end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get whether default exclusions should be used or not return the defaultexclusions value end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name get defaultexcludes end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name get ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get defaultexcludes end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name use default excludes end_name end_expr end_return end_block 
 begin_comment get version flag status return boolean containing status of version flag end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get version end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m version end_name end_expr end_return end_block 
 begin_comment gets the destination directory return destination directory since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get destdir end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dest dir end_name end_name end_expr end_return end_block 
 begin_comment get the source dir return the source path end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name get src dir end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name src end_name end_expr end_return end_block 
 begin_comment convenient method to retrieve the full stacktrace from a given exception param t the exception to get the stacktrace from return the stacktrace from the given exception end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get stack trace end_name begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string writer end_name end_type begin_name sw end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string writer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name print writer end_name end_type begin_name pw end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_name sw end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list begin_argument begin_expr begin_name pw end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pw end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pw end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name sw end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment directory where code srssafe ini code resides param server path the path to the vss server end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set serverpath end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name server path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name server path end_name end_name begin_operator EQ end_operator begin_name server path end_name end_expr end_expr_stmt end_block 
 begin_comment factory method from base class this is overriden in child classes to return a specific selector class end_comment begin_type begin_specifier end_specifier begin_name base selector end_name end_type begin_name get instance end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name present selector end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set the file which must be present in the file system to set the given property param file the name of the file which is required end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name filename end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name remove leading path end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check the attributes and nested elements end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check configuration end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name have perm end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name default set defined end_name begin_operator UNP end_operator begin_call begin_name begin_name default set end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add fileset end_name begin_argument_list begin_argument begin_expr begin_name default set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name check configuration end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment override facility for subclasses to put custom hashtables in end_comment begin_comment hook management end_comment begin_comment set the project for which this helper is performing property resolution param p the project instance end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set project end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name project end_name end_name begin_operator EQ end_operator begin_name p end_name end_expr end_expr_stmt end_block 
 begin_comment returns the server field return a string representing the server attribute end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get server end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name server end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get default output directory end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment construct a build event for a project level event param project the project that emitted the event should not be code null code end_comment begin_specifier end_specifier begin_name build event end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name project end_name end_name begin_operator EQ end_operator begin_name project end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name target end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name task end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convenience method to copy a file from a source to a destination no filtering is performed param source file file to copy from must not be code null code param dest file file to copy to must not be code null code exception io exception if the copying fails deprecated since 1 4 x end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name copy file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name source file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name copy file end_name end_name begin_argument_list begin_argument begin_expr begin_name source file end_name end_expr end_argument begin_argument begin_expr begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the semantic attributes attribute end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get semantic attributes end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name semantic attributes end_name end_name end_expr end_return end_block 
 begin_comment defines whether or not the output should be compacted param compress a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set compress end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name compress end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name compress end_name end_name begin_operator EQ end_operator begin_name compress end_name end_expr end_expr_stmt end_block 
 begin_comment if true generate separate write calls for each html line in the jsp return mapping status end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is mapped end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name mapped end_name end_expr end_return end_block 
 begin_comment sets the name of the file containing the excludes patterns param excludes file the file to fetch the exclude patterns from throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set excludesfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name excludes file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name create excludes file end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name excludes file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name testrvdate end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return true if this resource is selected param r the resource to check return whether the resource was selected end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name none end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name get selectors end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_name none end_name begin_operator UNP end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_name none end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource selector end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name is selected end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name none end_name end_expr end_return end_block 
 begin_comment do the work throws build exception if failonerror has been set to true and perforce fails end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name p 4 view end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name p 4 view end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name p 4 view end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name p 4 view end_name begin_operator EQ end_operator begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr begin_name p 4 view end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name p 4 view end_name begin_operator EQ end_operator begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr begin_name p 4 view end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name desc end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name desc end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name desc end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name lock end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name lock end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name simple date format end_name end_type begin_name formatter end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name simple date format end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name date end_name end_type begin_name now end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name date end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_call begin_name begin_name formatter end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_name now end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment we have to create a unlocked label first end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name new label end_name begin_init begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name desc end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name p 4 view end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name p 4 handler end_name end_type begin_name handler end_name begin_init begin_expr begin_operator UNP end_operator begin_class begin_super begin_name p 4 handler adapter end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_function end_block end_class end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name set output end_name end_name begin_argument_list begin_argument begin_expr begin_name new label end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name exec p 4 command end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name handler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name exec p 4 command end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_class begin_super begin_name p 4 handler adapter end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_function end_block end_class end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name desc end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name p 4 view end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment now lock if required end_comment begin_if begin_condition begin_expr begin_name lock end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name lock end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string buffer end_name end_type begin_name label spec end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment read back the label spec from perforce end_comment begin_comment replace options end_comment begin_comment submit back to perforce end_comment begin_expr_stmt begin_expr begin_name handler end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_class begin_super begin_name p 4 handler adapter end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name util end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name lock end_name end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name label spec end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_function end_block end_class end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name exec p 4 command end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name handler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name label spec end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name handler end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_class begin_super begin_name p 4 handler adapter end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_function end_block end_class end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name set output end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name label spec end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name exec p 4 command end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name handler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment return true if value is gnu end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is gnu mode end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name gnu end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment gets the classespath return the classes path end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name get classespath end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name classes path end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test sysproperties end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name current classpath end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name current classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert null end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name commandline java end_name end_type begin_name c end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline java end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name environment end_name begin_operator DOT end_operator begin_name variable end_name end_name end_type begin_name v end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name environment end_name begin_operator DOT end_operator begin_name variable end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name set key end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name add sysproperty end_name end_name begin_argument_list begin_argument begin_expr begin_name v end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name property set end_name end_type begin_name ps end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name property set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ps end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ps end_name begin_operator DOT end_operator begin_name append name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name add syspropertyset end_name end_name begin_argument_list begin_argument begin_expr begin_name ps end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name set system properties end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name new classpath end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name new classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name current classpath end_name end_expr end_argument begin_argument begin_expr begin_name new classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get properties end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name contains key end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name restore system properties end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try begin_expr_stmt begin_expr begin_call begin_name assert null end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert null end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test complete directory move to existing dir end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a j on as deployment tool for deployment to j on as servers p ant calls this method on creation to handle embedded jonas elements in the server deploy task param tool an instance of jonas hot deployment tool passed in by ant end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add jonas end_name begin_parameter_list begin_param begin_decl begin_type begin_name jonas hot deployment tool end_name end_type begin_name tool end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tool end_name begin_operator DOT end_operator begin_name set task end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vendor tools end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name tool end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the file utils for this task return the fileutils object end_comment begin_type begin_specifier end_specifier begin_name file utils end_name end_type begin_name get file utils end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name file utils end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test circular reference check end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file list end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get files end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_comment dummy 1 dummy 2 dummy 3 dummy 1 end_comment begin_decl_stmt begin_decl begin_type begin_name file list end_name end_type begin_name f 1 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name f 1 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f 1 end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file list end_name end_type begin_name f 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name f 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f 2 end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file list end_name end_type begin_name f 3 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name f 3 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f 3 end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f 1 end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f 1 end_name begin_operator DOT end_operator begin_name get files end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_comment dummy 1 dummy 2 dummy 3 end_comment begin_comment which has the project s basedir as root end_comment begin_expr_stmt begin_expr begin_name f 1 end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file list end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name f 1 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f 1 end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name f 2 end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file list end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name f 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f 2 end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name f 3 end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file list end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name f 3 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f 3 end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dir end_name begin_init begin_expr begin_call begin_name begin_name f 1 end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment logs a message with the given priority this delegates the actual logging to the project param msg the message to be logged should not be code null code param t the exception to be logged may be code null code param msg level the message priority at which this message is to be logged since 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name msg level end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name t end_name end_expr end_argument begin_argument begin_expr begin_name msg level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name msg level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment writes all necessary data for this entry since 1 1 throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name close entry end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name entry end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name real crc end_name begin_init begin_expr begin_call begin_name begin_name crc end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name crc end_name begin_operator DOT end_operator begin_name reset end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name deflated end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name finish end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name finished end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name deflate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name set size end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name adjust to long end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name get total in end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name set compressed size end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name adjust to long end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name get total out end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name set crc end_name end_name begin_argument_list begin_argument begin_expr begin_name real crc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name reset end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name written end_name begin_operator UNP end_operator begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get compressed size end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name raf end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get crc end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name real crc end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name zip exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name to hex string end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get crc end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name to hex string end_name end_name begin_argument_list begin_argument begin_expr begin_name real crc end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name written end_name begin_operator MINUS end_operator begin_name data start end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name zip exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get size end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name written end_name begin_operator MINUS end_operator begin_name data start end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then begin_else begin_block begin_comment method is stored and we used random access file end_comment begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name size end_name begin_init begin_expr begin_name written end_name begin_operator MINUS end_operator begin_name data start end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name set size end_name end_name begin_argument_list begin_argument begin_expr begin_name size end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name set compressed size end_name end_name begin_argument_list begin_argument begin_expr begin_name size end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name set crc end_name end_name begin_argument_list begin_argument begin_expr begin_name real crc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if begin_comment if random access output write the local file header containing end_comment begin_comment the correct crc and compressed uncompressed sizes end_comment begin_if begin_condition begin_expr begin_name raf end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name save end_name begin_init begin_expr begin_call begin_name begin_name raf end_name begin_operator DOT end_operator begin_name get file pointer end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name raf end_name begin_operator DOT end_operator begin_name seek end_name end_name begin_argument_list begin_argument begin_expr begin_name local data start end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip long end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get crc end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip long end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get compressed size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip long end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name raf end_name begin_operator DOT end_operator begin_name seek end_name end_name begin_argument_list begin_argument begin_expr begin_name save end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name write data descriptor end_name begin_argument_list begin_argument begin_expr begin_name entry end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name entry end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment returns the directory scanner needed to access the files to process return a code directory scanner code instance end_comment begin_type begin_specifier end_specifier begin_name directory scanner end_name end_type begin_name get directory scanner end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get directory scanner end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment returns the current task definition hashtable the returned hashtable is live and so should not be modified return a map of from task name to implementing class string to class end_comment begin_type begin_specifier end_specifier begin_name hashtable end_name end_type begin_name get task definitions end_name begin_parameter_list end_parameter_list begin_block begin_synchronized begin_expr begin_name task class definitions end_name end_expr begin_block begin_synchronized begin_expr begin_name ant type table end_name end_expr begin_block begin_if begin_condition begin_expr begin_name rebuild task class definitions end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name task class definitions end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name ant type table end_name begin_operator DOT end_operator begin_name key set end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name clazz end_name begin_init begin_expr begin_call begin_name begin_name ant type table end_name begin_operator DOT end_operator begin_name get exposed class end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name clazz end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name clazz end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name task class definitions end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ant type table end_name begin_operator DOT end_operator begin_name get type class end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_expr_stmt begin_expr begin_name rebuild task class definitions end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_synchronized end_block end_synchronized begin_return begin_expr begin_name task class definitions end_name end_expr end_return end_block 
 begin_comment processes checks out code st files code files from star team folder param each file repository file to process param target folder a java io file folder to work throws io exception when star team api fails to work with files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process file end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name com end_name begin_operator DOT end_operator begin_name starbase end_name begin_operator DOT end_operator begin_name starteam end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name each file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name target folder end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name filename end_name begin_init begin_expr begin_call begin_name begin_name each file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name local file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name begin_argument_list begin_argument begin_expr begin_name target folder end_name end_expr end_argument begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment if the file doesn t pass the include exclude tests skip it end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name should process end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get full repository path end_name begin_argument_list begin_argument begin_expr begin_name each file end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name is using revision label end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name target folder end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name target folder end_name begin_operator DOT end_operator begin_name mkdirs end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name target folder end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name target folder end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name success end_name begin_init begin_expr begin_call begin_name begin_name each file end_name begin_operator DOT end_operator begin_name checkout by label id end_name end_name begin_argument_list begin_argument begin_expr begin_name local file end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get i dof label in use end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name lock status end_name end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name use repository time stamp end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name success end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name describe checkout end_name begin_argument_list begin_argument begin_expr begin_name each file end_name end_expr end_argument begin_argument begin_expr begin_name local file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name checkout end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment just a note star team has a status for new which implies end_comment begin_comment that there is an item on your local machine that is not end_comment begin_comment in the repository these are the items that show up as end_comment begin_comment not in view in the starteam gui end_comment begin_comment one would think that we would want to perhaps checkin the end_comment begin_comment new items not in all cases steve cohen 15 dec 2001 end_comment begin_comment unfortunately the sdk doesn t really work and we can t end_comment begin_comment actually see anything with a status of new that is why end_comment begin_comment we can just check out everything here without worrying end_comment begin_comment about losing anything end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name file status end_name begin_init begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name each file end_name begin_operator DOT end_operator begin_name get status end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_comment we try to update the status once to give star team end_comment begin_comment another chance end_comment begin_if begin_condition begin_expr begin_name file status end_name begin_operator EQT end_operator begin_name begin_name status end_name begin_operator DOT end_operator begin_name merge end_name end_name begin_operator UNP end_operator begin_name file status end_name begin_operator EQT end_operator begin_name begin_name status end_name begin_operator DOT end_operator begin_name unknown end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name each file end_name begin_operator DOT end_operator begin_name update status end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name file status end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_call begin_name begin_name each file end_name begin_operator DOT end_operator begin_name get status end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name each file end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name status end_name begin_operator DOT end_operator begin_name name end_name end_name begin_argument_list begin_argument begin_expr begin_name file status end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_switch begin_condition begin_expr begin_name file status end_name end_expr end_condition begin_block begin_case begin_expr begin_name begin_name status end_name begin_operator DOT end_operator begin_name outofdate end_name end_name end_expr end_case begin_case begin_expr begin_name begin_name status end_name begin_operator DOT end_operator begin_name missing end_name end_name end_expr begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name describe checkout end_name begin_argument_list begin_argument begin_expr begin_name each file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_default begin_if begin_condition begin_expr begin_call begin_name is forced end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name file status end_name begin_operator UNP end_operator begin_name begin_name status end_name begin_operator DOT end_operator begin_name current end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name describe checkout end_name begin_argument_list begin_argument begin_expr begin_name each file end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name status end_name begin_operator DOT end_operator begin_name name end_name end_name begin_argument_list begin_argument begin_expr begin_name file status end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get full repository path end_name begin_argument_list begin_argument begin_expr begin_name each file end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name status end_name begin_operator DOT end_operator begin_name name end_name end_name begin_argument_list begin_argument begin_expr begin_name file status end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name checkout end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if end_default end_block end_switch begin_if begin_condition begin_expr begin_name checkout end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name target folder end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name target folder end_name begin_operator DOT end_operator begin_name mkdirs end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name target folder end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name target folder end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name each file end_name begin_operator DOT end_operator begin_name checkout end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name lock status end_name end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name use repository time stamp end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name convert eol end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_block 
 begin_comment do the work throws build exception if the label name is not supplied end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name p 4 view end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name p 4 view end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name p 4 view end_name begin_operator EQ end_operator begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr begin_name p 4 view end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name p 4 view end_name begin_operator EQ end_operator begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr begin_name p 4 view end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name p 4 view end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name p 4 view end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name is simulationmode end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name p 4 cmd opts end_name begin_operator EQ end_operator begin_name p 4 cmd opts end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name is delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name p 4 cmd opts end_name begin_operator EQ end_operator begin_name p 4 cmd opts end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name is add end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name p 4 cmd opts end_name begin_operator EQ end_operator begin_name p 4 cmd opts end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name exec p 4 command end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name p 4 cmd opts end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name p 4 view end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name simple p 4 output handler end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add the references explicitly defined as nested elements to the new project also copy over all references that don t override existing references in the new project if inheritrefs has been requested throws build exception if a reference does not have a refid end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add references end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name this references end_name begin_init begin_expr begin_operator LPAR end_operator begin_name hashtable end_name begin_operator RPAR end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get references end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name clone end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name new references end_name begin_init begin_expr begin_call begin_name begin_name new project end_name begin_operator DOT end_operator begin_name get references end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name references end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_expr begin_name e end_name begin_operator EQ end_operator begin_call begin_name begin_name references end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name reference end_name end_type begin_name ref end_name begin_init begin_expr begin_operator LPAR end_operator begin_name reference end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name refid end_name begin_init begin_expr begin_call begin_name begin_name ref end_name begin_operator DOT end_operator begin_name get ref id end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name refid end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name this references end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_name refid end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name refid end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name this references end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name refid end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name to refid end_name begin_init begin_expr begin_call begin_name begin_name ref end_name begin_operator DOT end_operator begin_name get to refid end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name to refid end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name to refid end_name begin_operator EQ end_operator begin_name refid end_name end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name copy reference end_name begin_argument_list begin_argument begin_expr begin_name refid end_name end_expr end_argument begin_argument begin_expr begin_name to refid end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_comment now add all references that are not defined in the end_comment begin_comment subproject if inherit refs is true end_comment begin_if begin_condition begin_expr begin_name inherit refs end_name end_expr end_condition begin_then begin_block begin_for begin_init begin_expr begin_name e end_name begin_operator EQ end_operator begin_call begin_name begin_name this references end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name new references end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name copy reference end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new project end_name begin_operator DOT end_operator begin_name inherit id references end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if end_block 
 begin_comment set the list of include patterns to use all and characters are replaced by code file separator char code so the separator used need not match code file separator char code p when a pattern ends with a or is appended param includes a list of include patterns may be code null code indicating that all files should be included if a non code null code list is given all elements must be non code null code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set includes end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name includes end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name includes end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name includes end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name includes end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_name begin_name includes end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_index end_name end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name includes end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name includes end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name normalize pattern end_name begin_argument_list begin_argument begin_expr begin_name begin_name includes end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_else end_if end_block 
 begin_comment a refactored method for populating all the command line arguments based on the user specified attributes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name populate attributes end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name output directory end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name super grammar end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name super grammar end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name html end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name diagnostic end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name trace end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name trace parser end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name trace lexer end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name trace tree walker end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name is 272 end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name debug end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment fulfill the resource collection contract return number of elements as int since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name get directory scanner end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get included files count end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment enables the linksource switch will be ignored if javadoc is not the 1 4 version default is false param b a code string code value since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set breakiterator end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name breakiterator end_name end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment construtor for apt task this sets the apt compiler adapter as the compiler in the super class end_comment begin_specifier end_specifier begin_name apt end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set compiler end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name apt external compiler adapter end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get name end_name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set fork end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the replacement text to use when from is matched required param to new prefix end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set to end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name to end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name to end_name end_name begin_operator EQ end_operator begin_name to end_name end_expr end_expr_stmt end_block 
 begin_comment empty implementation required by sub build listener interface param event ignored since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment see copy scan file file string string end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name scan end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name from dir end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name to dir end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name files end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name dirs end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name mapper element end_name begin_operator EQT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list begin_argument begin_expr begin_name from dir end_name end_expr end_argument begin_argument begin_expr begin_name to dir end_name end_expr end_argument begin_argument begin_expr begin_name files end_name end_expr end_argument begin_argument begin_expr begin_name dirs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name non orphans end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name dirs end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name non orphans end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name dirs end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no jar no classname end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment send a quot message logged quot project level event to the build listeners for this project param project the project generating the event should not be code null code param message the message to send should not be code null code param priority the priority of the message end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name fire message logged end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name priority end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fire message logged end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name priority end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment construct a new resource selector container with the specified array of selectors param r the resource selector to add end_comment begin_specifier end_specifier begin_name resource selector container end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name resource selector end_name begin_index end_index end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name r end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name begin_name r end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no classname end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test copy and remove with zipfileset end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test copy and remove end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructs a file path from a code file code uri p will be an absolute path if the given uri is absolute p p prior to java 1 4 swallows that are not followed by two characters p see a href http www w 3 org tr xml 11 dt sysid dt sysid a which makes some mention of how characters not supported by uri reference syntax should be escaped param uri the uri designating a file in the local filesystem return the local file system path for the file throws illegal argument exception if the uri is malformed or not a legal file url since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name from uri end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param end_parameter_list begin_block begin_comment 8031 first try java 1 4 end_comment begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name uri clazz end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name uri clazz end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name cnfe end_name end_decl end_param end_parameter_list begin_block begin_comment fine java 1 3 or earlier do it by hand end_comment end_block end_catch end_try begin_comment also check for properly formed ur is ant formerly recommended using end_comment begin_comment nonsense ur is such as file foo xml in xml includes you shouldn t end_comment begin_comment do that just foo xml is correct but for compatibility we special case end_comment begin_comment things when the path is not absolute and fall back to the old parsing behavior end_comment begin_if begin_condition begin_expr begin_name uri clazz end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name lang end_name begin_operator DOT end_operator begin_name reflect end_name begin_operator DOT end_operator begin_name method end_name end_name end_type begin_name create method end_name begin_init begin_expr begin_call begin_name begin_name uri clazz end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name string end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name uri obj end_name begin_init begin_expr begin_call begin_name begin_name create method end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name uri end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name lang end_name begin_operator DOT end_operator begin_name reflect end_name begin_operator DOT end_operator begin_name constructor end_name end_name end_type begin_name file const end_name begin_init begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get constructor end_name end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name uri clazz end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name file const end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name uri obj end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name lang end_name begin_operator DOT end_operator begin_name reflect end_name begin_operator DOT end_operator begin_name invocation target exception end_name end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name e 2 end_name begin_init begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get target exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name e 2 end_name begin_operator UNP end_operator begin_name illegal argument exception end_name end_expr end_condition begin_then begin_block begin_comment bad uri pass this on end_comment begin_throw begin_expr begin_operator LPAR end_operator begin_name illegal argument exception end_name begin_operator RPAR end_operator begin_name e 2 end_name end_expr end_throw end_block end_then begin_else begin_block begin_comment unexpected target exception should not happen end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name e 2 end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment reflection problems should not happen debug end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if begin_comment fallback method for java 1 3 or earlier end_comment begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name url end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name url end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name malformed url exception end_name end_type begin_name em you earl ex end_name end_decl end_param end_parameter_list begin_block begin_comment ignore malformed exception end_comment end_block end_catch end_try begin_if begin_condition begin_expr begin_name url end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name get protocol end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal argument exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name get host end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name insert end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name insert end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file end_name begin_init begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name get file end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name query pos end_name begin_init begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name query pos end_name begin_operator LT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_name file end_name begin_operator DP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name query pos end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name uri end_name begin_operator EQ end_operator begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name path separator char end_name end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator UNP end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is letter end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name uri end_name begin_operator EQ end_operator begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name path end_name begin_operator EQ end_operator begin_call begin_name decode uri end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name cwd end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name posi end_name begin_init begin_expr begin_call begin_name begin_name cwd end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name posi end_name begin_operator GT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name path end_name begin_operator EQ end_operator begin_call begin_name begin_name cwd end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name posi end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_name path end_name end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unsupported encoding exception end_name end_type begin_name exc end_name end_decl end_param end_parameter_list begin_block begin_comment not sure whether this is clean but this method is end_comment begin_comment declared not to throw exceptions end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal state exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name exc end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_return begin_expr begin_name path end_name end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set system error end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name err end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name system error end_name begin_operator EQ end_operator begin_name err end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test duplicate targets end_name begin_parameter_list end_parameter_list begin_block begin_comment fail because buildfile contains two targets with the same name end_comment begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name bft end_name end_type begin_name bft end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name bft end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment utility method that saves the current entry end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name save entry end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name entry key end_name begin_init begin_expr begin_name date end_name begin_operator PLUS end_operator begin_name author end_name begin_operator PLUS end_operator begin_name comment end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name cvs entry end_name end_type begin_name entry end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_name entry key end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name date end_name end_type begin_name date object end_name begin_init begin_expr begin_call begin_name parse date end_name begin_argument_list begin_argument begin_expr begin_name date end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name entry end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name cvs entry end_name begin_argument_list begin_argument begin_expr begin_name date object end_name end_expr end_argument begin_argument begin_expr begin_name author end_name end_expr end_argument begin_argument begin_expr begin_name comment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name entry key end_name end_expr end_argument begin_argument begin_expr begin_name entry end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name entry end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name cvs entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name entry key end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name add file end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name revision end_name end_expr end_argument begin_argument begin_expr begin_name previous revision end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the input stream for the redirector return the redirector s input stream or null if no output has been configured end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name input stream end_name end_type begin_name get input stream end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name input stream end_name end_expr end_return end_block 
 begin_comment logs a message with the default info priority param msg the message to be logged should not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment initialisation routine called after handler creation with the element name and attributes the attributes which this handler can deal with are code name code code depends code code if code code unless code code id code and code description code param tag name of the element which caused this handler to be created should not be code null code ignored in this implementation param attrs attributes of the element which caused this handler to be created must not be code null code exception sax parse exception if an unexpected attribute is encountered or if the code name code attribute is missing end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name tag end_name end_decl end_param begin_param begin_decl begin_type begin_name attribute list end_name end_type begin_name attrs end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax parse exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name depends end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name if cond end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name unless cond end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name id end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name description end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name attrs end_name begin_operator DOT end_operator begin_name get length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key end_name begin_init begin_expr begin_call begin_name begin_name attrs end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name begin_name attrs end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name location end_name begin_argument_list begin_argument begin_expr begin_name begin_name helper impl end_name begin_operator DOT end_operator begin_name locator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name depends end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name if cond end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name unless cond end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name id end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name description end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name sax parse exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name key end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name helper impl end_name begin_operator DOT end_operator begin_name locator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_block end_for begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name sax parse exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name helper impl end_name begin_operator DOT end_operator begin_name locator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name target end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name target end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment implicit target must be first on dependency list end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name add dependency end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name set if end_name end_name begin_argument_list begin_argument begin_expr begin_name if cond end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name set unless end_name end_name begin_argument_list begin_argument begin_expr begin_name unless cond end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name set description end_name end_name begin_argument_list begin_argument begin_expr begin_name description end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper impl end_name begin_operator DOT end_operator begin_name project end_name begin_operator DOT end_operator begin_name add target end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name id end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name id end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper impl end_name begin_operator DOT end_operator begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr begin_name id end_name end_expr end_argument begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment take care of dependencies end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name depends end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name set depends end_name end_name begin_argument_list begin_argument begin_expr begin_name depends end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment assume patch was created with old and new files swapped optional default false param r if true set the r option on the patch command end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set reverse end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name r end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment get a particular node param i the index of the node to get return the node if the index is in bounds null otherwise end_comment begin_type begin_specifier end_specifier begin_name node end_name end_type begin_name item end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name i end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name node end_name begin_operator RPAR end_operator begin_call begin_name element at end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name array index out of bounds exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return begin_comment conforming to node list interface end_comment end_block end_catch end_try end_block 
 begin_comment return the resource containing definitions end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get resource end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name resource end_name end_expr end_return end_block 
 begin_comment return the configured object return the real thing whatever it is since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name get real thing end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name real thing end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test excepting end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test echo to good file end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert good file end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the description of the text or code null code if no description is available end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get description end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name description end_name end_expr end_return end_block 
 begin_comment specifies a comment param v value to assign to comment end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set comment end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name comment end_name end_name begin_operator EQ end_operator begin_name v end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test nested filter sets end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name filter set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator LPAR end_operator begin_name filter set end_name begin_operator RPAR end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name filters end_name begin_init begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get filter hash end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name filters end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name filters end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name fs end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name filter set end_name begin_operator RPAR end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name filters end_name begin_operator EQ end_operator begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get filter hash end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name filters end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name filters end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name filters end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name fs end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name filter set end_name begin_operator RPAR end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name filters end_name begin_operator EQ end_operator begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get filter hash end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name filters end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name filters end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name fs end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name filter set end_name begin_operator RPAR end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name filters end_name begin_operator EQ end_operator begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get filter hash end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name filters end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name filters end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name jakarta regexp regexp test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment param event the build event that is being logged end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name message logged end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name integer end_name end_type begin_name mcnt end_name begin_init begin_expr begin_operator LPAR end_operator begin_name integer end_name begin_operator RPAR end_operator begin_call begin_name begin_name search map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name mcnt end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name search map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name mcnt end_name begin_operator DOT end_operator begin_name int value end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name message logged end_name end_name begin_argument_list begin_argument begin_expr begin_name event end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment copies fullpath prefix and permission attributes from the archive file set to a new tar file set or returns it unchanged if it already is a tar file set param archive file set fileset to copy attributes from may be null return a new tar file set since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name tar file set end_name end_type begin_name as tar file set end_name begin_parameter_list begin_param begin_decl begin_type begin_name archive file set end_name end_type begin_name archive file set end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name tar file set end_name end_type begin_name tfs end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name archive file set end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name archive file set end_name begin_operator UNP end_operator begin_name tar file set end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name tfs end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name tar file set end_name begin_operator RPAR end_operator begin_name archive file set end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name tfs end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name tar file set end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tfs end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name archive file set end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tfs end_name begin_operator DOT end_operator begin_name set prefix end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name archive file set end_name begin_operator DOT end_operator begin_name get prefix end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tfs end_name begin_operator DOT end_operator begin_name set fullpath end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name archive file set end_name begin_operator DOT end_operator begin_name get fullpath end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name archive file set end_name begin_operator DOT end_operator begin_name has file mode been set end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tfs end_name begin_operator DOT end_operator begin_name integer set file mode end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name archive file set end_name begin_operator DOT end_operator begin_name get file mode end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name archive file set end_name begin_operator DOT end_operator begin_name has dir mode been set end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tfs end_name begin_operator DOT end_operator begin_name integer set dir mode end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name archive file set end_name begin_operator DOT end_operator begin_name get dir mode end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name archive file set end_name begin_operator UNP end_operator begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name tools end_name begin_operator DOT end_operator begin_name ant end_name begin_operator DOT end_operator begin_name types end_name begin_operator DOT end_operator begin_name tar file set end_name end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name tools end_name begin_operator DOT end_operator begin_name ant end_name begin_operator DOT end_operator begin_name types end_name begin_operator DOT end_operator begin_name tar file set end_name end_name end_type begin_name t end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name tools end_name begin_operator DOT end_operator begin_name ant end_name begin_operator DOT end_operator begin_name types end_name begin_operator DOT end_operator begin_name tar file set end_name end_name begin_operator RPAR end_operator begin_name archive file set end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name has user name been set end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tfs end_name begin_operator DOT end_operator begin_name set user name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get user name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name has group been set end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tfs end_name begin_operator DOT end_operator begin_name set group end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get group end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name has user id been set end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tfs end_name begin_operator DOT end_operator begin_name set uid end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get uid end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name has group id been set end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tfs end_name begin_operator DOT end_operator begin_name set gid end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get gid end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_then end_if end_block end_else end_if begin_return begin_expr begin_name tfs end_name end_expr end_return end_block 
 begin_comment creates an unknown element for the given element name param element name the name of the unknown element must not be code null code end_comment begin_specifier end_specifier begin_name unknown element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name element name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name element name end_name end_name begin_operator EQ end_operator begin_name element name end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no redirect end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set whether to invoke garbage collection after each image processed defaults to false param gc whether to invoke the garbage collector end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set gc end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name gc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name garbage collect end_name begin_operator EQ end_operator begin_name gc end_name end_expr end_expr_stmt end_block 
 begin_comment check if the table contains a particular key param value the key to look for return true if the table contains key end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name contains key end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name init all end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment helper method to execute our command on vms param cmd param first file name return end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name exec on vms end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name first file name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name vms file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name vms file end_name begin_operator EQ end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name create vms java option file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name get arguments end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name command line end_name begin_init begin_expr begin_block begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name get executable end_name end_name begin_argument_list end_argument_list end_call end_expr begin_expr end_expr begin_expr begin_call begin_name begin_name vms file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_block end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator EQT end_operator begin_call begin_name execute external compile end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument begin_argument begin_expr begin_name first file name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list begin_argument begin_expr begin_name vms file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment autoresponce behaviour valid options are y and n param response the auto response value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set autoresponse end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name response end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal auto response end_name end_name begin_argument_list begin_argument begin_expr begin_name response end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test empty dir copy and remove end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name d end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert file is not present end_name begin_argument_list begin_argument begin_expr begin_name d end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert file is present end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert file is not present end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name get full log end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert debuglog containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert debuglog containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 8 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect name address 2 end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name email address end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment include metadata information param metadata a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set metadata end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name metadata end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name metadata end_name end_name begin_operator EQ end_operator begin_name metadata end_name end_expr end_expr_stmt end_block 
 begin_comment configure from a test sets member variables to attributes of the test param test end_comment begin_name forked test configuration end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name test end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name get filtertrace end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name get haltonerror end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name get haltonfailure end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name get error property end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name get failure property end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment reads the properties file if it hasn t already been read end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name read props end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name props end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name props file end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name file name key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name props file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name file name key end_name begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name props end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name load end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name props file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name props file end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if end_block 
 begin_comment core class that exists in system classpath is ignored end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 20 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert null end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the skeleton class suffix return the skeleton suffix quot skel quot end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get skel class suffix end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name rmi skel suffix end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test system id end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name systemid end_name begin_init begin_expr begin_call begin_name begin_name jaxp utils end_name begin_operator DOT end_operator begin_name get system id end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name systemid end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name systemid end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the heart of the matter this is where the selector gets to decide on the inclusion of a file in a particular fileset param basedir the base directory the scan is being done from param filename is the name of the file to check param file is a java io file object the selector can use return whether the file should be selected or not end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name basedir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name is selected end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_name void end_name end_type begin_name update crc end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name in ch end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name temp end_name begin_init begin_expr begin_operator LPAR end_operator begin_name global crc end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_name in ch end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name temp end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name temp end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name temp end_name end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name global crc end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name global crc end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_name begin_name crc end_name begin_operator DOT end_operator begin_name crc 32 table end_name begin_index begin_expr begin_name temp end_name end_expr end_index end_name end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle error flush end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name system error end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system error end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment set the comparison to be used default equal param when the comparison enumerated attribute to use end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set when end_name begin_parameter_list begin_param begin_decl begin_type begin_name comparison end_name end_type begin_name when end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name when end_name end_name begin_operator EQ end_operator begin_name when end_name end_expr end_expr_stmt end_block 
 begin_comment todo is this used param state not used at the moment end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set italic end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name state end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name italic end_name begin_operator EQ end_operator begin_name state end_name end_expr end_expr_stmt end_block 
 begin_comment constructor to use when the user has specified a classpath param test the test to run param halt on error whether to stop the run if an error is found param filtertrace whether to filter junit stack frames out of exceptions param halt on failure whether to stop the run if failure is found param show output whether to send output to system out err as well as formatters param loader the classloader to use running the test end_comment begin_specifier end_specifier begin_name j unit test runner end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name halt on error end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name filtertrace end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name halt on failure end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name show output end_name end_decl end_param begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name loader end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name halt on error end_name end_expr end_argument begin_argument begin_expr begin_name filtertrace end_name end_expr end_argument begin_argument begin_expr begin_name halt on failure end_name end_expr end_argument begin_argument begin_expr begin_name show output end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment defines the manager param manager the scripting manager end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set manager end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name manager end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set manager end_name end_name begin_argument_list begin_argument begin_expr begin_name manager end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check if a string is a valid name for an element or attribute param name the string to check return true if the name consists of valid name characters end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is valid name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is valid name character end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_comment executes the task p builds a command line to execute cleartool and then calls exec s run method to execute the command line throws build exception if the command fails and failonerr is set to true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name command line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name a proj end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment check for required attributes end_comment begin_if begin_condition begin_expr begin_call begin_name get type name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get type value end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment default the viewpath to basedir if it is not specified end_comment begin_if begin_condition begin_expr begin_call begin_name get view path end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set view path end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name a proj end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment build the command line from what we got the format is end_comment begin_comment cleartool mkattr options viewpath end_comment begin_comment as specified in the cleartool help end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get clear tool command end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name command mkattr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check options end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get fail on err end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get view path basename end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment for debugging end_comment begin_comment system out println command line to string end_comment begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name run end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name is failure end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get fail on err end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment the classpath to be used with the java virtual machine that runs the weblogic shutdown command param path the classpath to use when executing the weblogic admin task end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_name path end_name end_expr end_expr_stmt end_block 
 begin_comment no arg constructor end_comment begin_specifier end_specifier begin_name fork mode end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test batch test fork once custom formatter end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert result files exist end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirector 5 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name test redirector 5 or 6 end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment print a readable version of the constant pool entry return the string representation of this constant pool entry end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name is resolved end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name field class name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name field name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name field type end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name class index end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name name and type index end_name end_expr end_expr_stmt end_block end_else end_if begin_return begin_expr begin_name value end_name end_expr end_return end_block 
 begin_comment set the pattern to compare names against param n the pattern string to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name n end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name pattern end_name begin_operator EQ end_operator begin_name n end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirect 6 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name test redirect 5 or 6 end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment run this execute java in a thread since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name object end_name begin_index end_index end_type begin_name argument end_name begin_init begin_expr begin_block begin_expr begin_call begin_name begin_name java command end_name begin_operator DOT end_operator begin_name get arguments end_name end_name begin_argument_list end_argument_list end_call end_expr end_block end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_if begin_condition begin_expr begin_name perm end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name perm end_name begin_operator DOT end_operator begin_name set security manager end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name main end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name argument end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name invocation target exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name begin_init begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get target exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name t end_name begin_operator UNP end_operator begin_name interrupted exception end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name caught end_name begin_operator EQ end_operator begin_name t end_name end_expr end_expr_stmt end_block end_then end_if begin_comment else swallow probably due to timeout end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name caught end_name begin_operator EQ end_operator begin_name t end_name end_expr end_expr_stmt end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name perm end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name perm end_name begin_operator DOT end_operator begin_name restore security manager end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_synchronized begin_expr begin_name this end_name end_expr begin_block begin_expr_stmt begin_expr begin_call begin_name notify all end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_synchronized end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check end_name begin_argument_list begin_argument begin_expr begin_name event end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment p create a new apache catalog instance p p this method overrides the superclass method of the same name in order to set the resolver object for callbacks the reason we have to do this is that internally catalog creates a new instance of itself for each external catalog file processed that is if two external catalog files are processed there will be a total of two apache catalog instances and so on p return the catalog end_comment begin_type begin_specifier end_specifier begin_name catalog end_name end_type begin_name new catalog end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name apache catalog end_name end_type begin_name cat end_name begin_init begin_expr begin_operator LPAR end_operator begin_name apache catalog end_name begin_operator RPAR end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name new catalog end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cat end_name begin_operator DOT end_operator begin_name set resolver end_name end_name begin_argument_list begin_argument begin_expr begin_name resolver end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name cat end_name end_expr end_return end_block 
 begin_comment get the destination directory return the directory end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get destdir end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name dest dir end_name end_expr end_return end_block 
 begin_comment logs a message with the given priority this delegates the actual logging to the project param msg the message to be logged should not be code null code param msg level the message priority at which this message is to be logged end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name msg level end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name msg level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name msg level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment try and create a temp file in our temp dir this checks that it has space and access we also do some clock reporting param out end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name do report temp dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name tempdir end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name tempdir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name tempdir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name temp directory end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name tempdir end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name temp directory end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name tempdir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_comment create the file end_comment begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name now end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name temp file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file output stream end_name end_type begin_name fileout end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name temp file end_name begin_operator EQ end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name create temp file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name temp directory end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment do some writing to it end_comment begin_expr_stmt begin_expr begin_name fileout end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name temp file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_name kilobyte end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name test file size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fileout end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name fileout end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name fileout end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name filetime end_name begin_init begin_expr begin_call begin_name begin_name temp file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name temp file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name drift end_name begin_init begin_expr begin_name filetime end_name begin_operator MINUS end_operator begin_name now end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name drift end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name math end_name begin_operator DOT end_operator begin_name abs end_name end_name begin_argument_list begin_argument begin_expr begin_name drift end_name end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_name big drift limit end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name ignore throwable end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name tempdir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name temp file end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name fileout end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name temp file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name temp file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name temp file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment add a delegate resource comparator param c the next delegate resource comparator end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource comparator end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name v end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name v end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name v end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the algorithm to use in signing param sigalg algorithm end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set sigalg end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name sigalg end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name sigalg end_name end_name begin_operator EQ end_operator begin_name sigalg end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name count test cases end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment build listener stuff end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name target count end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert equal content end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name expect end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name result end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name assertion failed error end_name end_expr end_argument begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name result end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name in expect end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name in result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name in expect end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name expect end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name in result end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name expected byte end_name begin_init begin_expr begin_call begin_name begin_name in expect end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name expected byte end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name expected byte end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name in result end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name expected byte end_name begin_operator EQ end_operator begin_call begin_name begin_name in expect end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator MINUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name in result end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name in result end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name in result end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name in expect end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name in expect end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment regard the value as int date or string default param value the type enumerated value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set type end_name begin_parameter_list begin_param begin_decl begin_type begin_name type end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name type end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name type end_name begin_operator DOT end_operator begin_name to type end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment initialise the constant entry param tag value the constant pool entry type to be used param entries the number of constant pool entry slots occupied by this entry end_comment begin_specifier end_specifier begin_name constant cp info end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name tag value end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name entries end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name tag value end_name end_expr end_argument begin_argument begin_expr begin_name entries end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment construct a new file resource iterator end_comment begin_specifier end_specifier begin_name file resource iterator end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment gets the value set for the file time stamp if it equals current then we return gtc if it equals modified then we return gtm if it equals updated then we return gtu otherwise we return gtc return the default file time flag if not set end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get file time stamp end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name timestamp end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name timestamp end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name time modified end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name flag filetime modified end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name timestamp end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name time updated end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name flag filetime updated end_name end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_name flag filetime def end_name end_expr end_return end_block end_else end_if end_else end_if end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test is at least java version end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is at least java version end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get java version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert false end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is at least java version end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name declare beans end_name begin_parameter_list begin_param begin_decl begin_type begin_name bsf manager end_name end_type begin_name m end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name bsf exception end_name end_expr end_argument end_throws begin_block begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name get beans end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name key set end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name get beans end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name value end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name declare bean end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment bsf uses a hashtable to store values end_comment begin_comment so cannot declare bean with a null value end_comment begin_comment so need to remove any bean of this name as end_comment begin_comment that bean should not be visible end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name undeclare bean end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for end_block 
 begin_comment returns included files as a list of semicolon separated filenames return a code string code of included filenames end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name get directory scanner end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name i end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment whether this task can deal with non file resources p this implementation returns true only if this task is lt xmlproperty gt any subclass of this class that also wants to support non file resources needs to override this method we need to do so for backwards compatibility reasons since we can t expect subclasses to support resources p return true for this task since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name supports non file resources end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name xml property end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment launches the given command in a new process param project the project that the command is part of param cmd the command to execute param env the environment for the new process if null the environment of the current process is used return the created process throws io exception if attempting to run a command in a specific directory end_comment begin_type begin_specifier end_specifier begin_name process end_name end_type begin_name exec end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name cmd end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name env end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name project end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name describe command end_name end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name runtime end_name begin_operator DOT end_operator begin_name get runtime end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exec end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr begin_name env end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment verify a jar param jar the jar to verify throws build exception if the file could not be verified end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name verify one jar end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name jar end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name jar end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error no file end_name begin_operator PLUS end_operator begin_name jar end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name exec task end_name end_type begin_name cmd end_name begin_init begin_expr begin_call begin_name create jar signer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name set common options end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name bind to keystore end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment verify special operations end_comment begin_expr_stmt begin_expr begin_call begin_name add value end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name certificates end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add value end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment jar is required end_comment begin_expr_stmt begin_expr begin_call begin_name add value end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name jar end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name jar end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name output cache end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name build exception end_name end_type begin_name ex end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name ex end_name begin_operator EQ end_operator begin_name e end_name end_expr end_expr_stmt end_block end_catch end_try begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name results end_name begin_init begin_expr begin_call begin_name begin_name output cache end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment deal with jdk 1 4 2 bug end_comment begin_if begin_condition begin_expr begin_name ex end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name jarsigner command end_name begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_name ex end_name end_expr end_throw end_block end_else end_if end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name verified text end_name end_expr end_argument end_argument_list end_call begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error no verify end_name begin_operator PLUS end_operator begin_name jar end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_specifier end_specifier begin_name dummy task without default constructor end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name dummy end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name login suceeded end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name change remote dir end_name begin_argument_list begin_argument begin_expr begin_name remote tmp dir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name ftp directory scanner end_name end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name my ftp task end_name begin_operator DOT end_operator begin_name new scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name process end_name end_type begin_name get process end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name timetorun end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name cmd array end_name begin_init begin_expr begin_block begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get jre executable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr begin_expr end_expr begin_expr begin_name test classpath end_name end_expr begin_expr begin_call begin_name begin_name time process end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get name end_name end_name end_name begin_argument_list end_argument_list end_call end_expr begin_expr begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_name timetorun end_name end_expr end_argument end_argument_list end_call end_expr end_block end_expr end_init end_decl end_decl_stmt begin_comment system out println testing with classpath system get property java class path end_comment begin_return begin_expr begin_call begin_name begin_name runtime end_name begin_operator DOT end_operator begin_name get runtime end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exec end_name begin_argument_list begin_argument begin_expr begin_name cmd array end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment append code includes code to the current list of include patterns param includes array containing the include patterns end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name append includes end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name includes end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name includes end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name includes end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name default patterns end_name begin_operator DOT end_operator begin_name create include end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set name end_name begin_argument_list begin_argument begin_expr begin_name begin_name includes end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_name ds end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment there is a bug in java sound 0 90 jdk 1 3 beta it prevents correct termination of the vm so we have to exit ourselves end_comment begin_comment system exit 0 end_comment begin_comment fired before any targets are started param event ignored end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment load the sql file and then execute it throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name saved transaction end_name begin_init begin_expr begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name begin_name transactions end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name saved sql command end_name begin_init begin_expr begin_name sql command end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name sql command end_name begin_operator EQ end_operator begin_call begin_name begin_name sql command end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_if begin_condition begin_expr begin_name src file end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name sql command end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name transactions end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name src file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name src file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment deal with the resources end_comment begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name resource end_name end_type begin_name r end_name begin_init begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment make a transaction for each resource end_comment begin_decl_stmt begin_decl begin_type begin_name transaction end_name end_type begin_name t end_name begin_init begin_expr begin_call begin_name create transaction end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name set src resource end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_comment make a transaction group for the outer command end_comment begin_decl_stmt begin_decl begin_type begin_name transaction end_name end_type begin_name t end_name begin_init begin_expr begin_call begin_name create transaction end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name set src end_name end_name begin_argument_list begin_argument begin_expr begin_name src file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name add text end_name end_name begin_argument_list begin_argument begin_expr begin_name sql command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name conn end_name begin_operator EQ end_operator begin_call begin_name get connection end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is valid rdbms end_name begin_argument_list begin_argument begin_expr begin_name conn end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_name statement end_name begin_operator EQ end_operator begin_call begin_name begin_name conn end_name begin_operator DOT end_operator begin_name create statement end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name statement end_name begin_operator DOT end_operator begin_name set escape processing end_name end_name begin_argument_list begin_argument begin_expr begin_name escape processing end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name print stream end_name end_type begin_name out end_name begin_init begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name end_name end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_if begin_condition begin_expr begin_name output end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name output end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered output stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name append end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment process all transactions end_comment begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name transactions end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name transaction end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name run transaction end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is autocommit end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name conn end_name begin_operator DOT end_operator begin_name commit end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name out end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name out end_name begin_operator UNP end_operator begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name close quietly end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name sql exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name close quietly end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_try begin_block begin_if begin_condition begin_expr begin_name statement end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name statement end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name conn end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name conn end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name sql exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_finally end_try begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name good sql end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name total sql end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_name transactions end_name begin_operator EQ end_operator begin_name saved transaction end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name sql command end_name begin_operator EQ end_operator begin_name saved sql command end_name end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment load the script from an external file optional param file the file containing the script source end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name in end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name in end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file reader end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name script end_name begin_operator UNP end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name read fully end_name end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment operation to apply quot quot or quot quot default for all datatypes quot quot for date and int only param value the operation enumerated value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set operation end_name begin_parameter_list begin_param begin_decl begin_type begin_name operation end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name operation end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name operation end_name begin_operator DOT end_operator begin_name to operation end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructs an exception with the given exception as a root cause param cause the exception that might have caused this one should not be code null code end_comment begin_specifier end_specifier begin_name build exception end_name begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name cause end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cause end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name cause end_name end_name begin_operator EQ end_operator begin_name cause end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test source overrides default end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set new property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name set source end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name get source end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name make output file relative end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name dest file end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name relative path end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name default output directory end_name begin_init begin_expr begin_call begin_name get default output directory end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name next pos end_name begin_init begin_expr begin_call begin_name begin_name default output directory end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name start pos end_name begin_init begin_expr begin_name next pos end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name start pos end_name begin_operator GT end_operator begin_operator MINUS end_operator begin_operator UNP end_operator begin_name start pos end_name begin_operator LT end_operator begin_call begin_name begin_name default output directory end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name relative path end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name next pos end_name begin_operator EQ end_operator begin_call begin_name begin_name default output directory end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name start pos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name next pos end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name start pos end_name begin_operator EQ end_operator begin_name next pos end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name start pos end_name begin_operator EQ end_operator begin_name next pos end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_else end_if end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name relative path end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name relative path end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test circular reference check end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name mapper end_name end_type begin_name m end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name mapper end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name m end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_comment dummy 1 dummy 2 dummy 3 dummy 1 end_comment begin_decl_stmt begin_decl begin_type begin_name mapper end_name end_type begin_name m 1 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name mapper end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name m 1 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m 1 end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name mapper end_name end_type begin_name m 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name mapper end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name m 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m 2 end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name mapper end_name end_type begin_name m 3 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name mapper end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name m 3 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m 3 end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name m 1 end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_comment dummy 1 dummy 2 dummy 3 end_comment begin_comment which holds a glob mapper from java to class end_comment begin_expr_stmt begin_expr begin_name m 1 end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name mapper end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name m 1 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m 1 end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name m 2 end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name mapper end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name m 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m 2 end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name m 3 end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name mapper end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name m 3 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name mapper type end_name end_name end_type begin_name mt end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name mapper type end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mt end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m 3 end_name begin_operator DOT end_operator begin_name set type end_name end_name begin_argument_list begin_argument begin_expr begin_name mt end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m 3 end_name begin_operator DOT end_operator begin_name set from end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m 3 end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file name mapper end_name end_type begin_name fmm end_name begin_init begin_expr begin_call begin_name begin_name m 1 end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name fmm end_name begin_operator UNP end_operator begin_name glob pattern mapper end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name fmm end_name begin_operator DOT end_operator begin_name map file name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name result end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the value to determine the behaviour when encountering writable files return an empty string if not set end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get writable files end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name writable files end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name writable files end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name writable replace end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name flag replace writable end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name writable files end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name writable skip end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment ss exe exits with 100 when files have been skipped end_comment begin_comment so we have to ignore the failure end_comment begin_expr_stmt begin_expr begin_name fail on error end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr begin_name flag skip writable end_name end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr end_expr end_return end_block end_else end_if end_else end_if end_else end_if end_block 
 begin_comment fulfill the resource collection contract return number of elements as int end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name base resource collection wrapper end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name die on circular reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name cache collection end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dynamic attribute end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set new property end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test that we can round trip by opening a url that exists throws io exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test round trip end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name property end_name begin_init begin_expr begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name url end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name instream end_name begin_init begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name open stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name instream end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment executes the task p builds a command line to execute cleartool and then calls exec s run method to execute the command line throws build exception if the command fails and failonerr is set to true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name command line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment check for required attributes end_comment begin_if begin_condition begin_expr begin_call begin_name get type name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment build the command line from what we got the format is end_comment begin_comment cleartool mklbtype options type selector end_comment begin_comment as specified in the cleartool help end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get clear tool command end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name command mklbtype end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check options end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get fail on err end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get type specifier end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name run end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name is failure end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get fail on err end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment set the debug flag on or off param f on off flag end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set debug end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name debug end_name begin_operator EQ end_operator begin_name f end_name end_expr end_expr_stmt end_block 
 begin_comment check the command line options end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check options end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get replace end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment replace end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag replace end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get recurse end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment recurse end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag recurse end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get version end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment version end_comment begin_expr_stmt begin_expr begin_call begin_name get version command end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment c end_comment begin_expr_stmt begin_expr begin_call begin_name get comment command end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name get comment file end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment cfile end_comment begin_expr_stmt begin_expr begin_call begin_name get comment file command end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag nocomment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name get type name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment type end_comment begin_expr_stmt begin_expr begin_call begin_name get type command end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get type value end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment type value end_comment begin_expr_stmt begin_expr begin_call begin_name get type value command end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment viewpath end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get view path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment see directory scanner set excludes end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set excludes end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name excludes end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment do the work the work is actually done by creating a separate jvm to run the weblogic admin task this approach allows the classpath of the helper task to be set exception build exception if someting goes wrong with the build end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name username end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name password end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name server url end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name java end_name end_type begin_name weblogic admin end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name java end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name weblogic admin end_name begin_operator DOT end_operator begin_name set fork end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name weblogic admin end_name begin_operator DOT end_operator begin_name set classname end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name args end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name bea home end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name args end_name begin_operator EQ end_operator begin_name server url end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name username end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name password end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name delay end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name args end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name server url end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name username end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name password end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name delay end_name end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name weblogic admin end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set line end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name weblogic admin end_name begin_operator DOT end_operator begin_name set classpath end_name end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name weblogic admin end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment construct a delegate param component the project component this delegate is for end_comment begin_name delegate end_name begin_parameter_list begin_param begin_decl begin_type begin_name project component end_name end_type begin_name component end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name component end_name end_name begin_operator EQ end_operator begin_name component end_name end_expr end_expr_stmt end_block 
 begin_comment adds an element to the classpath to be searched param path element the path element to add must not be code null code exception build exception if the given path element cannot be resolved against the project end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add path element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name path element end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name path component end_name begin_init begin_expr begin_name project end_name begin_operator UNP end_operator begin_operator QM end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name path element end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name path element end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name add path file end_name begin_argument_list begin_argument begin_expr begin_name path component end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment get the value of ccm action return value of ccm action end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get ccm action end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name ccm action end_name end_expr end_return end_block 
 begin_comment opens the given file for reading assuming the platform s native encoding for file names param f the archive throws io exception if an error occurs while reading the file end_comment begin_specifier end_specifier begin_name zip file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test default mapper end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name test default mapper end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create a new argument to the java program return an argument to be configured end_comment begin_type begin_specifier end_specifier begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name argument end_name end_name end_type begin_name create argument end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name java command end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment returns an array containing the target filename s for the given source file p p if the given rule doesn t apply to the source file implementation must return null source file scanner will then omit the source file in question p param source file name the name of the source file relative to some given basedirectory return an array of strings if the rule applies to the source file or null if it does not end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name map file name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name source file name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name init script runner end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get runner end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add bean end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name source file name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name clear end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute script end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name begin_name string end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_name empty string array end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_comment set the options to pass to the java compiler param a string the options end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set javacopts end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name a string end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name javacopts end_name begin_operator EQ end_operator begin_name a string end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test apt fork false end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert log containing end_name begin_argument_list begin_argument begin_expr begin_name begin_name apt end_name begin_operator DOT end_operator begin_name warning ignoring fork end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set this entry s modification time param time this entry s new modification time end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set mod time end_name begin_parameter_list begin_param begin_decl begin_type begin_name date end_name end_type begin_name time end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name mod time end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name time end_name begin_operator DOT end_operator begin_name get time end_name end_name begin_argument_list end_argument_list end_call begin_operator SLASH end_operator begin_name millis per second end_name end_expr end_expr_stmt end_block 
 begin_comment return the command to run return the command end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get command end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name compiler executables end_name begin_index begin_expr begin_call begin_name get index end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle end_name begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name failonerror end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator LPAR end_operator begin_name e end_name begin_operator UNP end_operator begin_name build exception end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_operator LPAR end_operator begin_name build exception end_name begin_operator RPAR end_operator begin_name e end_name begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_name quiet end_name begin_operator QM end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name begin_operator DP end_operator begin_name verbosity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment retrieve history recursively defaults to false param recursive the boolean value for recursive end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set recursive end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name recursive end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal recursive end_name end_name begin_argument_list begin_argument begin_expr begin_name recursive end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the flag to ignore the project tag param flag to ignore the project tag end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set ignore project tag end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name flag end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ignore project tag end_name end_name begin_operator EQ end_operator begin_name flag end_name end_expr end_expr_stmt end_block 
 begin_comment returns the mapper to use based on nested elements or the flatten attribute end_comment begin_type begin_specifier end_specifier begin_name file name mapper end_name end_type begin_name get mapper end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file name mapper end_name end_type begin_name mapper end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name mapper element end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name mapper end_name begin_operator EQ end_operator begin_call begin_name begin_name mapper element end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name flatten end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name mapper end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name flat file name mapper end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name mapper end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name identity mapper end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if begin_return begin_expr begin_name mapper end_name end_expr end_return end_block 
 begin_comment get the action parameter name return the code string code action by default can be overridden end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get action parameter name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment read a byte return the byte 0 255 or 1 if this is the end of the stream throws io exception if there is an error end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name eof end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_name eof end_name end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name read current end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name result end_name begin_operator EQT end_operator begin_name eof end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name next resource end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name read current end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name time end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name date end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name calendar end_name end_type begin_name cal end_name begin_init begin_expr begin_call begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name set time end_name end_name begin_argument_list begin_argument begin_expr begin_name time end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name year end_name begin_init begin_expr begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name year end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name month end_name begin_init begin_expr begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name month end_name end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name value end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name year end_name begin_operator MINUS end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name month end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name day of month end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name hour of day end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name minute end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name second end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name result end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name byte end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name value end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name result end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name byte end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name value end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name result end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name byte end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name value end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name result end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name byte end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name value end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name zl end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name zip long end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name c end_name end_type begin_name el end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment learn whether to cache collections default is code true code return boolean cache flag end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is cache end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is cache end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment specify where to find source file param src a path instance containing the various source directories end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set sourcepath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name source path end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name source path end_name begin_operator EQ end_operator begin_name src end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name source path end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment sets the archive that holds this as a single element resource collection param a the archive as a single element resource collection end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name a end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check children allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name archive end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name archive end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name next end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment no arg constructor end_comment begin_specifier end_specifier begin_name xmlj unit result formatter end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name map file name end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name source file name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name source file name end_name end_expr begin_operator UNP end_operator begin_expr begin_name source file name end_name begin_operator PLUS end_operator end_expr end_block end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirector 3 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test duplicate text name end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment find a file matching a string in an array of ftp file this method will find alpha when requested for alpha if and only if the case sensitive attribute is set to false when case sensitive is set to true only the exact match is returned param the files array of files param lastpathelement the file name being sought return null if the file cannot be found otherwise return the matching file end_comment begin_type begin_specifier end_specifier begin_name ftp file end_name end_type begin_name get file end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name ftp file end_name begin_index end_index end_name end_type begin_name the files end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name lastpathelement end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name the files end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name fcount end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name fcount end_name begin_operator LT end_operator begin_name begin_name the files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name fcount end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name the files end_name begin_index begin_expr begin_name fcount end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name lastpathelement end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name the files end_name begin_index begin_expr begin_name fcount end_name end_expr end_index end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is case sensitive end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name begin_name the files end_name begin_index begin_expr begin_name fcount end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name lastpathelement end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name the files end_name begin_index begin_expr begin_name fcount end_name end_expr end_index end_name end_expr end_return end_block end_then end_if end_else end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_comment translate a path into its native platform specific format p this method uses path tokenizer to separate the input path into its components this handles dos style paths in a relatively sensible way the file separators are then converted to their platform specific versions param to process the path to be translated may be code null code return the native version of the specified path or an empty string if the path is code null code or empty since ant 1 7 see path tokenizer end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name translate path end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name to process end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name to process end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name to process end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name path end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name to process end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name path tokenizer end_name end_type begin_name tokenizer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path tokenizer end_name begin_argument_list begin_argument begin_expr begin_name to process end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path component end_name begin_init begin_expr begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name path component end_name begin_operator EQ end_operator begin_call begin_name begin_name path component end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name path component end_name begin_operator EQ end_operator begin_call begin_name begin_name path component end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name path separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name path component end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set the name of the entry param name the name to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test complete directory move 2 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name test complete directory move end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment specified dir is this is the current directory and should end_comment begin_comment always exist end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 16 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the user s id param user id the user s new id value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set userid end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name user id end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name user id end_name end_name begin_operator EQ end_operator begin_name user id end_name end_expr end_expr_stmt end_block 
 begin_comment gets the description of this element return the description of the element or code null code if no description is available since ant 1 6 1 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get description end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name description end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test unique end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name l end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name base end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name l end_name begin_operator EQ end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set path end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name l end_name begin_operator EQ end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name l end_name begin_operator EQ end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set path end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name l end_name begin_operator EQ end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment factory method from base class this is overriden in child classes to return a specific selector class end_comment begin_type begin_specifier end_specifier begin_name base selector end_name end_type begin_name get instance end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name contains selector end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name stop end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment compare the content of two resources a nonexistent resource s content is less than that of an existing resource a directory type resource s content is less than that of a file type resource param r 1 the resource whose content is to be compared param r 2 the other resource whose content is to be compared param text true if the content is to be treated as text and differences in kind of line break are to be ignored return a negative integer zero or a positive integer as the first argument is less than equal to or greater than the second throws io exception if the resources cannot be read since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name compare content end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name r 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name resource end_name end_type begin_name r 2 end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name r 1 end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name r 2 end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name e 1 end_name begin_init begin_expr begin_call begin_name begin_name r 1 end_name begin_operator DOT end_operator begin_name is exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name e 2 end_name begin_init begin_expr begin_call begin_name begin_name r 2 end_name begin_operator DOT end_operator begin_name is exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name e 1 end_name begin_operator UNP end_operator begin_name e 2 end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name e 1 end_name begin_operator UNP end_operator begin_name e 2 end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_name e 1 end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator MINUS end_operator end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name d 1 end_name begin_init begin_expr begin_call begin_name begin_name r 1 end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name d 2 end_name begin_init begin_expr begin_call begin_name begin_name r 2 end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name d 1 end_name begin_operator UNP end_operator begin_name d 2 end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name d 1 end_name begin_operator UNP end_operator begin_name d 2 end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_name d 1 end_name begin_operator QM end_operator begin_operator MINUS end_operator begin_operator DP end_operator end_expr end_return end_block end_then end_if begin_return begin_expr begin_name text end_name begin_operator QM end_operator begin_call begin_name text compare end_name begin_argument_list begin_argument begin_expr begin_name r 1 end_name end_expr end_argument begin_argument begin_expr begin_name r 2 end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_call begin_name binary compare end_name begin_argument_list begin_argument begin_expr begin_name r 1 end_name end_expr end_argument begin_argument begin_expr begin_name r 2 end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment assert that only the given message has been logged with a priority lt info when running the given target end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name expect log end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name log end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name real log end_name begin_init begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name log end_name end_expr end_argument begin_argument begin_expr begin_name real log end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment similar definition used to compare two definitions defined twice with the same name and the same types the classloader may be different but have the same path so same definition cannot be used param other the definition to compare to param project the current project return true if the definitions are the same end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name similar definition end_name begin_parameter_list begin_param begin_decl begin_type begin_name ant type definition end_name end_type begin_name other end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name other end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name get class name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get class name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name extract classname end_name begin_argument_list begin_argument begin_expr begin_name adapter class end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name extract classname end_name begin_argument_list begin_argument begin_expr begin_name begin_name other end_name begin_operator DOT end_operator begin_name adapter class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name extract classname end_name begin_argument_list begin_argument begin_expr begin_name adapt to class end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name extract classname end_name begin_argument_list begin_argument begin_expr begin_name begin_name other end_name begin_operator DOT end_operator begin_name adapt to class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment all the names are the same check if the class path of the loader end_comment begin_comment is the same end_comment begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name old loader end_name begin_init begin_expr begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get class loader end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name new loader end_name begin_init begin_expr begin_call begin_name get class loader end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name old loader end_name begin_operator EQT end_operator begin_name new loader end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name old loader end_name begin_operator UNP end_operator begin_name ant class loader end_name begin_operator UNP end_operator begin_name new loader end_name begin_operator UNP end_operator begin_name ant class loader end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name ant class loader end_name begin_operator RPAR end_operator begin_name old loader end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name ant class loader end_name begin_operator RPAR end_operator begin_name new loader end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get classpath end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment get the default extension return the string bz 2 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get default extension end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name default extension end_name end_expr end_return end_block 
 begin_comment override security manager check exit this throws an exit exception status exception param status the exit status end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check exit end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name status end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name exit exception end_name begin_argument_list begin_argument begin_expr begin_name status end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment retrieve a local copy during a checkout defaults to true param get the get local copy behaviour end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set get local copy end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name get end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal get local copy end_name end_name begin_argument_list begin_argument begin_expr begin_name get end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convenience method to copy a file from a source to a destination specifying if token filtering should be used and if source files may overwrite newer destination files param source file name of file to copy from must not be code null code param dest file name of file to copy to must not be code null code param filtering whether or not token filtering should be used during the copy param overwrite whether or not the destination file should be overwritten if it already exists exception io exception if the copying fails deprecated since 1 4 x end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name copy file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name source file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name dest file end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name filtering end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name overwrite end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name copy file end_name end_name begin_argument_list begin_argument begin_expr begin_name source file end_name end_expr end_argument begin_argument begin_expr begin_name dest file end_name end_expr end_argument begin_argument begin_expr begin_name filtering end_name begin_operator QM end_operator begin_name global filters end_name begin_operator DP end_operator end_expr end_argument begin_argument begin_expr begin_name overwrite end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test combo classfileset end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test combo set end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name result file set end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get reference end_name end_name begin_argument_list begin_argument begin_expr begin_name result fileset end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name scanner end_name begin_init begin_expr begin_call begin_name begin_name result file set end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name scanned files end_name begin_init begin_expr begin_call begin_name begin_name scanner end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name files end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name scanned files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name scanned files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name scanned files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment load the script from an external file optional param file the file containing the script source end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set src end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the argument or null for no argument needed this is overridden from dotnet compile java because vbc uses win 32 resource rather than win 32 res return the win 32 res parameter to csc end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get win 32 res parameter end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get win 32 res end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator PLUS end_operator begin_call begin_name get win 32 res end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr end_expr end_return end_block end_else end_if end_block 
 begin_comment label to get param label the label to get ant attribute group vdl end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set label end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name label end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal label end_name end_name begin_argument_list begin_argument begin_expr begin_name label end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment marks this task as invalid any further use of this task will go through a replacement with the updated definition end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name mark invalid end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name invalid end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no trim string condition end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the the login id to use on the server required if tt password tt is set param u a code string code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set userid end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name u end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name userid end_name end_name begin_operator EQ end_operator begin_name u end_name end_expr end_expr_stmt end_block 
 begin_comment get the comment command param cmd containing the command line string with or without the comment flag and string appended end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get comment command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes this breaks clearcase end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag comment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get and move to front decode 0 end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name group no end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name input stream end_name end_type begin_name in shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name in end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name data end_name end_type begin_name data shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name zt end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name selector end_name begin_index begin_expr begin_name group no end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name begin_index end_index end_type begin_name limit zt end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name limit end_name begin_index begin_expr begin_name zt end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name zn end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name min lens end_name begin_index begin_expr begin_name zt end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name zvec end_name begin_init begin_expr begin_call begin_name bs r end_name begin_argument_list begin_argument begin_expr begin_name zn end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name bs live shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs live end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name bs buff shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs buff end_name end_name end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name zvec end_name begin_operator GT end_operator begin_name begin_name limit zt end_name begin_index begin_expr begin_name zn end_name end_expr end_index end_name end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name zn end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_while begin_condition begin_expr begin_name bs live shadow end_name begin_operator LT end_operator end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name thech end_name begin_init begin_expr begin_call begin_name begin_name in shadow end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name thech end_name begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name bs buff shadow end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name bs buff shadow end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_name thech end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bs live shadow end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_continue end_continue end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_while begin_expr_stmt begin_expr begin_name bs live shadow end_name begin_operator MMINUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name zvec end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name zvec end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name bs buff shadow end_name begin_operator UNP end_operator begin_name bs live shadow end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs live end_name end_name begin_operator EQ end_operator begin_name bs live shadow end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs buff end_name end_name begin_operator EQ end_operator begin_name bs buff shadow end_name end_expr end_expr_stmt begin_return begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name perm end_name begin_index begin_expr begin_name zt end_name end_expr end_index begin_index begin_expr begin_name zvec end_name begin_operator MINUS end_operator begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name base end_name begin_index begin_expr begin_name zt end_name end_expr end_index begin_index begin_expr begin_name zn end_name end_expr end_index end_name end_expr end_index end_name end_expr end_return end_block 
 begin_comment get the name of the manager prefix return javax end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get manager name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment add a lt filesmatch gt condition param test a files match condition since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add files match end_name begin_parameter_list begin_param begin_decl begin_type begin_name files match end_name end_type begin_name test end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name conditions end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the name of the factory end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name is file selected test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the location of the file to get the audio required param source the name of a sound file directory or of the audio file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set source end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name source end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name source end_name end_name begin_operator EQ end_operator begin_name source end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name remove tab filter end_name begin_parameter_list begin_param begin_decl begin_type begin_name reader end_name end_type begin_name in end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name tab length end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name tab length end_name end_name begin_operator EQ end_operator begin_name tab length end_name end_expr end_expr_stmt end_block 
 begin_comment remove an array of files in a directory and a list of subdirectories which will only be deleted if include empty is true param d directory to work from param files array of files to delete can be of zero length param dirs array of directories to delete can of zero length end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name remove files end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name d end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name files end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name dirs end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name quiet end_name begin_operator QM end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name begin_operator DP end_operator begin_name verbosity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name d end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name quiet end_name begin_operator QM end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name begin_operator DP end_operator begin_name verbosity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name delete end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name handle end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name dirs end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator begin_operator UNP end_operator begin_name include empty end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name dir count end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr begin_name begin_name dirs end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator GE end_operator end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator MMINUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name curr dir end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name d end_name end_expr end_argument begin_argument begin_expr begin_name begin_name dirs end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name dir files end_name begin_init begin_expr begin_call begin_name begin_name curr dir end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name dir files end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name begin_name dir files end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name curr dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name quiet end_name begin_operator QM end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name begin_operator DP end_operator begin_name verbosity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name delete end_name begin_argument_list begin_argument begin_expr begin_name curr dir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name handle end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name curr dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name dir count end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_name dir count end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name dir count end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name dir count end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name quiet end_name begin_operator QM end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name begin_operator DP end_operator begin_name verbosity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test online resources end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the file that is currently to be tested return the file that is currently been tested end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name file end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name script selector test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment no op not a real business error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test path as resource end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file 1 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file 3 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file 1 end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file 2 end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file 3 end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the adapter class param adapter class the class to use to adapt the definition class end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set adapter class end_name begin_parameter_list begin_param begin_decl begin_type begin_name class end_name end_type begin_name adapter class end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name adapter class end_name end_name begin_operator EQ end_operator begin_name adapter class end_name end_expr end_expr_stmt end_block 
 begin_comment returns a read only list of extension points supported by the introspected class p a task type or nested element with void methods named code add code or code add configured code taking a single class or interface argument supports extensions point this method returns the list of all these em void add configured type em methods return a list of void single argument add or add configured code method code s of all supported extension points these methods are sorted such that if the argument type of a method derives from another type also an argument of a method of this list the method with the most derived argument will always appear first can be empty but never code null code since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name list end_name end_type begin_name get extension points end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name add type methods end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_name begin_name collections end_name begin_operator DOT end_operator begin_name empty list end_name end_name begin_operator DP end_operator begin_call begin_name begin_name collections end_name begin_operator DOT end_operator begin_name unmodifiable list end_name end_name begin_argument_list begin_argument begin_expr begin_name add type methods end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name manifest end_name end_type begin_name get manifest end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name manifest file end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name manifest end_name end_type begin_name new manifest end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file input stream end_name end_type begin_name fis end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream reader end_name end_type begin_name isr end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name fis end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name manifest file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name manifest encoding end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name isr end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name fis end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name isr end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name fis end_name end_expr end_argument begin_argument begin_expr begin_name manifest encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name new manifest end_name begin_operator EQ end_operator begin_call begin_name get manifest end_name begin_argument_list begin_argument begin_expr begin_name isr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unsupported encoding exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name manifest file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name isr end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name isr end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment do nothing end_comment end_block end_catch end_try end_block end_then end_if end_block end_finally end_try begin_return begin_expr begin_name new manifest end_name end_expr end_return end_block 
 begin_comment sets the locator param locator locator end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set locator end_name begin_parameter_list begin_param begin_decl begin_type begin_name locator end_name end_type begin_name locator end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name locator end_name end_name begin_operator EQ end_operator begin_name locator end_name end_expr end_expr_stmt end_block 
 begin_comment indicate whether this resource collection is composed entirely of resources accessible via local filesystem conventions if true all resources returned from this resource collection should be instances of file resource return whether this is a filesystem only resource collection since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is filesystem only end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name src end_name begin_operator EQT end_operator end_expr end_return end_block 
 begin_comment default constructor causes the bcel classes to load to ensure bcel dependencies can be satisfied end_comment begin_specifier end_specifier begin_name ancestor analyzer end_name begin_parameter_list end_parameter_list begin_block begin_comment force bcel classes to load now end_comment begin_try begin_block begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name class parser end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block 
 begin_comment the teardown method for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name resource collection end_name end_type begin_name next rc end_name begin_parameter_list begin_param begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name resource collection end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name xml catalog test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment write a byte to both output streams param b the byte to write throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name left end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name right end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test resolve file end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_comment start with simple absolute file names end_comment begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals ignore drive case end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals ignore drive case end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment throw in drive letters end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name drive spec end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name drive spec lower end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec lower end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name drive spec lower end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec lower end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name drive spec lower end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment promised to eliminate consecutive slashes after drive letter end_comment begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment throw in net ware volume names end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name drive spec end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name drive spec lower end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name drive spec lower end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name drive spec lower end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment promised to eliminate consecutive slashes after drive letter end_comment begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_comment drive letters must be considered just normal filenames end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name drive spec end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name udir end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name udir end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_name drive spec end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name udir end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_name drive spec end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name drive spec lower end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name udir end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_name drive spec lower end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name drive spec lower end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name udir end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_name drive spec lower end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name drive spec lower end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_comment now test some relative file name magic end_comment begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment tests to make sure that the selector is selecting files correctly end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test selection behaviour end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name type selector end_name end_type begin_name s end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name results end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name type selector end_name begin_operator DOT end_operator begin_name file type end_name end_name end_type begin_name directory end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name type selector end_name begin_operator DOT end_operator begin_name file type end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name type selector end_name begin_operator DOT end_operator begin_name file type end_name end_name end_type begin_name file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name type selector end_name begin_operator DOT end_operator begin_name file type end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name make bed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name type selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set type end_name end_name begin_argument_list begin_argument begin_expr begin_name directory end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name type selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set type end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name cleanup bed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment set a feature if it is supported log at verbose level if not param feature the feature param value a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set feature if supported end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name feature end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name get xml reader end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set feature end_name begin_argument_list begin_argument begin_expr begin_name feature end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name sax not recognized exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name feature end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name sax not supported exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name feature end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment replace occurrences into a string param data the string to replace occurrences into param from the occurrence to replace param to the occurrence to be used as a replacement return the new string with replaced occurrences end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name replace end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name data end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name from end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name to end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name data end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pos end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name pos end_name begin_operator EQ end_operator begin_call begin_name begin_name data end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name from end_name end_expr end_argument begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name data end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument begin_argument begin_expr begin_name pos end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name to end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name i end_name begin_operator EQ end_operator begin_name pos end_name begin_operator PLUS end_operator begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name data end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment constructor using a zipfileset arguement param fileset the zipfileset to use end_comment begin_specifier end_specifier begin_name zip file set end_name begin_parameter_list begin_param begin_decl begin_type begin_name zip file set end_name end_type begin_name fileset end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name fileset end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name encoding end_name begin_operator EQ end_operator begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name encoding end_name end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test escape unicode end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name expected end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_name expected end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the file to which the output of the process is redirected param out the output file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name output end_name end_name begin_operator EQ end_operator begin_name out end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name incompatible with spawn end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment constructor end_comment begin_specifier end_specifier begin_name long cp info end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name constant long end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get nlabel status return boolean containing status of nlabel flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get nlabel end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m nlabel end_name end_expr end_return end_block 
 begin_comment get an output stream for the resource return an output stream to which content can be written throws io exception if unable to provide the content of this resource as a stream throws unsupported operation exception if output streams are not supported for this resource type since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name output stream end_name end_type begin_name get output stream end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get output stream end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name unsupported operation exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block 
 begin_comment set the analyzer to use when adding in dependencies to the jar param analyzer the name of the dependency analyzer or a class end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dependency end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name analyzer end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name config end_name begin_operator DOT end_operator begin_name analyzer end_name end_name begin_operator EQ end_operator begin_name analyzer end_name end_expr end_expr_stmt end_block 
 begin_comment receive notification that the start of an xml element has been found param name string name of the element found param atts attribute list of the attributes included with the element if any throws sax exception if the parser cannot process the document end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name attribute list end_name end_type begin_name atts end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block begin_comment i need to push the element onto the string current loc which always represents the current location in the xml document end_comment begin_expr_stmt begin_expr begin_name current loc end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_name name end_name end_expr end_expr_stmt begin_comment a new element has started so reset the text being captured end_comment begin_expr_stmt begin_expr begin_name current text end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name current loc end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ias descriptor end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name current loc end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ias descriptor end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ejb type end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment setter used to store the borland appserver version 4 or 5 param version app server version 4 or 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set version end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name version end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name version end_name end_name begin_operator EQ end_operator begin_name version end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no overwrite end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment flag defaults to true to create all directories that are in the starteam repository even if they are empty param value the value to set the attribute to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set create working dirs end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name create dirs end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment label to sync client to optional param label name of a label against which one want to sync throws build exception if label is null or empty string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set label end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name label end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name label end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name label end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name label end_name end_name begin_operator EQ end_operator begin_name label end_name end_expr end_expr_stmt end_block 
 begin_comment test setting the name of the javac executable end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test forked executable name end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name get javac executable end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name get javac executable end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name set fork end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name get javac executable end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name get javac executable end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name set fork end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name get javac executable end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name get javac executable end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name get javac executable end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name my javac end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name set fork end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_name my javac end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name my javac end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name get javac executable end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set whether to include the value of the input string in log messages defaults to true param log input string true or false since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set log input string end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name log input string end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name log input string end_name end_name begin_operator EQ end_operator begin_name log input string end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_expr_stmt end_block 
 begin_comment execute the created command line param cmd the command line to run return int the exit code throws build exception end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name run end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name execute end_name end_type begin_name exe end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name execute end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name log stream handler end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set ant run end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set working directory end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set commandline end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set vm launcher end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment use the os vm launcher so we get environment variables end_comment begin_return begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment set the next chained component helper param next the next chained component helper end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set next end_name begin_parameter_list begin_param begin_decl begin_type begin_name component helper end_name end_type begin_name next end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name next end_name end_name begin_operator EQ end_operator begin_name next end_name end_expr end_expr_stmt end_block 
 begin_comment create an element writer the xml declaration will be included namespaces ignored end_comment begin_specifier end_specifier begin_name dom element writer end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set the directory where the javadoc output will be generated param dir the destination directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set destdir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name dest dir end_name begin_operator EQ end_operator begin_name dir end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set file end_name begin_argument_list begin_argument begin_expr begin_name dest dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name hb make code lengths end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name len end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name begin_name int end_name begin_index end_index end_name end_type begin_name freq end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name data end_name end_type begin_name dat end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name alpha size end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name max len end_name end_decl end_param end_parameter_list begin_block begin_comment nodes and heap entries run from 1 entry 0 for both the heap and nodes is a sentinel end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name begin_index end_index end_type begin_name heap end_name begin_init begin_expr begin_name begin_name dat end_name begin_operator DOT end_operator begin_name heap end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name begin_index end_index end_type begin_name weight end_name begin_init begin_expr begin_name begin_name dat end_name begin_operator DOT end_operator begin_name weight end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name begin_index end_index end_type begin_name parent end_name begin_init begin_expr begin_name begin_name dat end_name begin_operator DOT end_operator begin_name parent end_name end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name alpha size end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_operator MMINUS end_operator begin_name i end_name begin_operator GE end_operator end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name weight end_name begin_index begin_expr begin_name i end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name begin_name freq end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_name begin_name freq end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_expr_stmt end_block end_for begin_for begin_init begin_decl begin_type begin_name boolean end_name end_type begin_name too long end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name too long end_name end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_name too long end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name n nodes end_name begin_init begin_expr begin_name alpha size end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name n heap end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name weight end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name parent end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_operator MINUS end_operator end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LE end_operator begin_name alpha size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name parent end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator MINUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name n heap end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name n heap end_name end_expr end_index end_name begin_operator EQ end_operator begin_name i end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name zz end_name begin_init begin_expr begin_name n heap end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name tmp end_name begin_init begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name begin_name weight end_name begin_index begin_expr begin_name tmp end_name end_expr end_index end_name begin_operator LT end_operator begin_name begin_name weight end_name begin_index begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name begin_operator UNP end_operator end_expr end_index end_name end_expr end_index end_name end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name begin_operator UNP end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name zz end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name end_expr end_index end_name begin_operator EQ end_operator begin_name tmp end_name end_expr end_expr_stmt end_block end_for begin_while begin_condition begin_expr begin_name n heap end_name begin_operator GT end_operator end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name n 1 end_name begin_init begin_expr begin_name begin_name heap end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name heap end_name begin_index begin_expr begin_name n heap end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name n heap end_name begin_operator MMINUS end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name yy end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name zz end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name tmp end_name begin_init begin_expr begin_name begin_name heap end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name yy end_name begin_operator EQ end_operator begin_name zz end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name yy end_name begin_operator GT end_operator begin_name n heap end_name end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name yy end_name begin_operator LT end_operator begin_name n heap end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name begin_name weight end_name begin_index begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name yy end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_index end_name begin_operator LT end_operator begin_name begin_name weight end_name begin_index begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name yy end_name end_expr end_index end_name end_expr end_index end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name yy end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name weight end_name begin_index begin_expr begin_name tmp end_name end_expr end_index end_name begin_operator LT end_operator begin_name begin_name weight end_name begin_index begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name yy end_name end_expr end_index end_name end_expr end_index end_name end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name heap end_name begin_index begin_expr begin_name yy end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name zz end_name begin_operator EQ end_operator begin_name yy end_name end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name end_expr end_index end_name begin_operator EQ end_operator begin_name tmp end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name n 2 end_name begin_init begin_expr begin_name begin_name heap end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name heap end_name begin_index begin_expr begin_name n heap end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name n heap end_name begin_operator MMINUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name yy end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name zz end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name tmp end_name begin_operator EQ end_operator begin_name begin_name heap end_name begin_index begin_expr end_expr end_index end_name end_expr end_expr_stmt begin_while begin_condition begin_expr end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name yy end_name begin_operator EQ end_operator begin_name zz end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name yy end_name begin_operator GT end_operator begin_name n heap end_name end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name yy end_name begin_operator LT end_operator begin_name n heap end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name begin_name weight end_name begin_index begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name yy end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_index end_name begin_operator LT end_operator begin_name begin_name weight end_name begin_index begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name yy end_name end_expr end_index end_name end_expr end_index end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name yy end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name weight end_name begin_index begin_expr begin_name tmp end_name end_expr end_index end_name begin_operator LT end_operator begin_name begin_name weight end_name begin_index begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name yy end_name end_expr end_index end_name end_expr end_index end_name end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name heap end_name begin_index begin_expr begin_name yy end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name zz end_name begin_operator EQ end_operator begin_name yy end_name end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name end_expr end_index end_name begin_operator EQ end_operator begin_name tmp end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name n nodes end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name parent end_name begin_index begin_expr begin_name n 1 end_name end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name parent end_name begin_index begin_expr begin_name n 2 end_name end_expr end_index end_name begin_operator EQ end_operator begin_name n nodes end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name weight n 1 end_name begin_init begin_expr begin_name begin_name weight end_name begin_index begin_expr begin_name n 1 end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name weight n 2 end_name begin_init begin_expr begin_name begin_name weight end_name begin_index begin_expr begin_name n 2 end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name weight end_name begin_index begin_expr begin_name n nodes end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name weight n 1 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name weight n 2 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name weight n 1 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator GT end_operator begin_operator LPAR end_operator begin_name weight n 2 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator LPAR end_operator begin_name weight n 1 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator DP end_operator begin_operator LPAR end_operator begin_name weight n 2 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator RPAR end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name parent end_name begin_index begin_expr begin_name n nodes end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator MINUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name n heap end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name n heap end_name end_expr end_index end_name begin_operator EQ end_operator begin_name n nodes end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name tmp end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name zz end_name begin_operator EQ end_operator begin_name n heap end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name tmp end_name begin_operator EQ end_operator begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name end_expr end_index end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name weight tmp end_name begin_init begin_expr begin_name begin_name weight end_name begin_index begin_expr begin_name tmp end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name weight tmp end_name begin_operator LT end_operator begin_name begin_name weight end_name begin_index begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name begin_operator UNP end_operator end_expr end_index end_name end_expr end_index end_name end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name begin_operator UNP end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name zz end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name end_expr end_index end_name begin_operator EQ end_operator begin_name tmp end_name end_expr end_expr_stmt end_block end_while begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LE end_operator begin_name alpha size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name k end_name begin_init begin_expr begin_name i end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name parent k end_name end_decl end_init begin_condition begin_expr begin_operator LPAR end_operator begin_name parent k end_name begin_operator EQ end_operator begin_name begin_name parent end_name begin_index begin_expr begin_name k end_name end_expr end_index end_name begin_operator RPAR end_operator begin_operator GE end_operator end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_name k end_name begin_operator EQ end_operator begin_name parent k end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_name begin_name len end_name begin_index begin_expr begin_name i end_name begin_operator MINUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator begin_name j end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name j end_name begin_operator GT end_operator begin_name max len end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name too long end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_name too long end_name end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name alpha size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr begin_name begin_name weight end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name j end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name j end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name weight end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_name j end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_for end_block end_then end_if end_block end_for end_block 
 begin_comment resolve this class info against the given constant pool param constant pool the constant pool with which to resolve the class end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name resolve end_name begin_parameter_list begin_param begin_decl begin_type begin_name constant pool end_name end_type begin_name constant pool end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name class name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name utf 8 cp info end_name begin_operator RPAR end_operator begin_call begin_name begin_name constant pool end_name begin_operator DOT end_operator begin_name get entry end_name end_name begin_argument_list begin_argument begin_expr begin_name index end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name resolve end_name end_name begin_argument_list begin_argument begin_expr begin_name constant pool end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name char end_name end_type begin_name get char end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name i end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment create a merge mapper pointing to the specified destination file param destfile code file code return code mapper code end_comment begin_type begin_specifier end_specifier begin_name mapper end_name end_type begin_name create merge mapper end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name destfile end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name mapper end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name mapper end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set classname end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name tools end_name begin_operator DOT end_operator begin_name ant end_name begin_operator DOT end_operator begin_name util end_name begin_operator DOT end_operator begin_name merging mapper end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get name end_name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name destfile end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test dest dir path end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment new things we want end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test dollar passthru end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert expands to end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert expands to end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert expands to end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert expands to end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert expands to end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert expands to end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert expands to end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment logs a message if the priority is suitable in non emacs mode task level messages are prefixed by the task name which is right justified param event a build event containing message information must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name message logged end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name priority end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get priority end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment filter out messages based on priority end_comment begin_if begin_condition begin_expr begin_name priority end_name begin_operator LE end_operator begin_name msg output level end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name message end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get task end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_name emacs mode end_name end_expr end_condition begin_then begin_block begin_comment print out the name of the task if we re in one end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get task end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name label end_name begin_init begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name size end_name begin_init begin_expr begin_name left column size end_name begin_operator MINUS end_operator begin_call begin_name begin_name label end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name tmp end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tmp end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name tmp end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name label end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name label end_name begin_operator EQ end_operator begin_call begin_name begin_name tmp end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name r end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string reader end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name begin_init begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name first end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_do begin_block begin_if begin_condition begin_expr begin_name first end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name line end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name label end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name first end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name label end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_condition begin_expr begin_name line end_name begin_operator UNP end_operator end_expr end_condition end_do end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment shouldn t be possible end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name label end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name ex end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name begin_operator LE end_operator begin_name msg output level end_name begin_operator UNP end_operator begin_name ex end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name get stack trace end_name end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name priority end_name begin_operator UNP end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name print message end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name priority end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name print message end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name err end_name end_expr end_argument begin_argument begin_expr begin_name priority end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment stops the watcher it will notify all threads possibly waiting on this object end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name stop end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name watchdog end_name begin_operator DOT end_operator begin_name stop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name clean up end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name testantfile end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dir 1 end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment basedir of subant subant test 1 subant xml is end_comment begin_comment therefore we expect here the subant subant test 1 subdirectory end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dir 2 end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment basedir of subant subant test 2 subant xml is end_comment begin_comment therefore we expect here the subant subdirectory end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dir 3 end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name test base dirs end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_call begin_name begin_name dir 1 end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr begin_operator UNP end_operator begin_expr begin_call begin_name begin_name dir 2 end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr begin_operator UNP end_operator begin_expr begin_call begin_name begin_name dir 3 end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name enumerations end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test greedy inline handler end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name stdin end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment hidden constructor end_comment begin_comment check if optional tasks are available not that it does not check for implementation version use tt validate version tt for this return tt true tt if optional tasks are available end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is optional available end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block end_catch end_try begin_return begin_expr end_expr end_return end_block 
 begin_comment creates a new code pattern set code instance end_comment begin_specifier end_specifier begin_name pattern set end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment log a fatal error param e the exception to log end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name fatal error end_name begin_parameter_list begin_param begin_decl begin_type begin_name transformer exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log error end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment return code true code if the specified code package code is satisfied by this code specification code otherwise return code false code param other the specification return true if the specification is compatible with this specification end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is compatible with end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name specification end_name end_type begin_name other end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name compatible end_name begin_operator EQT end_operator begin_call begin_name get compatibility with end_name begin_argument_list begin_argument begin_expr begin_name other end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment check to see if the target is up to date with respect to input files param files the list of files to check return true if the cab file is newer than its dependents end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is up to date end_name begin_parameter_list begin_param begin_decl begin_type begin_name vector end_name end_type begin_name files end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name up to date end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name up to date end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file end_name begin_init begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name last modified end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_call begin_name begin_name cab file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name up to date end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_return begin_expr begin_name up to date end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name get target time end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name touch file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add arg end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name sign end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name attribute end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create arg end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get sign string end_name begin_argument_list begin_argument begin_expr begin_name sign end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_name attribute end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name have attr end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end prefix mapping end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block end_block 
 begin_comment get the compiler class name return the compiler class name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get compiler end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get compiler end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment get nowarn flag status return boolean containing status of nwarn flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get no warn end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m nwarn end_name end_expr end_return end_block 
 begin_comment sets the server language code attribute param server language code configuration to be set unless it is null or empty string in which case ignored see org apache commons net ftp ftp client config end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set server language code config end_name begin_parameter_list begin_param begin_decl begin_type begin_name language code end_name end_type begin_name server language code end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name server language code end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name server language code end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name server language code config end_name end_name begin_operator EQ end_operator begin_name server language code end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name configuration has been set end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment set type file dir param fd a file dir object end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set type end_name begin_parameter_list begin_param begin_decl begin_type begin_name file dir end_name end_type begin_name fd end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name type end_name begin_operator EQ end_operator begin_name fd end_name end_expr end_expr_stmt end_block 
 begin_comment set whether to fail if error param fail on error if true failure to locate library should fail build end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fail on error end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name fail on error end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name fail on error end_name end_name begin_operator EQ end_operator begin_name fail on error end_name end_expr end_expr_stmt end_block 
 begin_comment validate the config that has been configured from the build file throws build exception if the config is not valid end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate config end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name begin_name config end_name begin_operator DOT end_operator begin_name src dir end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name config end_name begin_operator DOT end_operator begin_name descriptor dir end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name config end_name begin_operator DOT end_operator begin_name descriptor dir end_name end_name begin_operator EQ end_operator begin_name begin_name config end_name begin_operator DOT end_operator begin_name src dir end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name config end_name begin_operator DOT end_operator begin_name naming scheme end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name config end_name begin_operator DOT end_operator begin_name naming scheme end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name naming scheme end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name config end_name begin_operator DOT end_operator begin_name naming scheme end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name naming scheme end_name begin_operator DOT end_operator begin_name descriptor end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name config end_name begin_operator DOT end_operator begin_name naming scheme end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name naming scheme end_name begin_operator DOT end_operator begin_name basejarname end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name begin_name config end_name begin_operator DOT end_operator begin_name base jar name end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_else end_if end_block 
 begin_comment clone this resource return copy of this end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name clone end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name clone not supported exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name unsupported operation exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment sets the default timeout if none has been set already param default timeout an code integer code value ant attribute ignore true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set default timeout end_name begin_parameter_list begin_param begin_decl begin_type begin_name integer end_name end_type begin_name default timeout end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name timeout end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name timeout end_name begin_operator EQ end_operator begin_name default timeout end_name end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment return the names of the files which matched at least one of the include patterns and at least one of the exclude patterns the names are relative to the base directory this involves performing a slow scan if one has not already been completed return the names of the files which matched at least one of the include patterns and at least one of the exclude patterns see slow scan end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get excluded files end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name slow scan end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name files excluded end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name files excluded end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name files end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name files end_name end_expr end_return end_block 
 begin_comment read from the rexec session until the string we are waiting for is found or the timeout has been reached param s the string to wait on param timeout the maximum number of seconds to wait end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name wait for string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param begin_param begin_decl begin_type begin_name integer end_name end_type begin_name timeout end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name timeout end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name timeout end_name begin_operator DOT end_operator begin_name int value end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_while begin_condition begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator begin_call begin_name begin_name is end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name calendar end_name end_type begin_name end time end_name begin_init begin_expr begin_call begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name end time end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name second end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name timeout end_name begin_operator DOT end_operator begin_name int value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_block begin_while begin_condition begin_expr begin_call begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name before end_name begin_argument_list begin_argument begin_expr begin_name end time end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name is end_name begin_operator DOT end_operator begin_name available end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name sleep end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_if begin_condition begin_expr begin_call begin_name begin_name is end_name begin_operator DOT end_operator begin_name available end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name s end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator begin_call begin_name begin_name is end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_name be end_name end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment read a byte return the byte 0 255 or 1 if this is the end of the stream throws io exception if there is an error end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name read current end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name result end_name begin_operator EQT end_operator begin_name eof end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name eof end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name open file end_name begin_argument_list begin_argument begin_expr begin_operator PPLUS end_operator begin_name current index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name read current end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment perform the concatenation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name cat end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name output stream end_name end_type begin_name os end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name char end_name begin_index end_index end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name char end_name begin_index begin_expr begin_name buffer size end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name print writer end_name end_type begin_name writer end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name output writer end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name writer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_name output writer end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name destination file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment log using warn so it displays in quiet mode end_comment begin_expr_stmt begin_expr begin_name os end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name log output stream end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment ensure that the parent dir of dest file exists end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name parent end_name begin_init begin_expr begin_call begin_name begin_name destination file end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name mkdirs end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name os end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name destination file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name append end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name output encoding end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name writer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name output stream writer end_name begin_argument_list begin_argument begin_expr begin_name os end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name writer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name output stream writer end_name begin_argument_list begin_argument begin_expr begin_name os end_name end_expr end_argument begin_argument begin_expr begin_name output encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if begin_if begin_condition begin_expr begin_name header end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name header end_name begin_operator DOT end_operator begin_name get filtering end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name concatenate end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr begin_name writer end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string reader end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name header end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name header end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name concatenate end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr begin_name writer end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name multi reader end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name footer end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name footer end_name begin_operator DOT end_operator begin_name get filtering end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name concatenate end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr begin_name writer end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string reader end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name footer end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name footer end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name os end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name ioex end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name ioex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name os end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment exit is treated in a special way in order to be able to return the exit code towards tasks an exit exception is thrown instead of a simple security exception to indicate the exit code overridden from java lang security manager param status the exit status requested end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check exit end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name status end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name security end_name begin_operator DOT end_operator begin_name permission end_name end_name end_type begin_name perm end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name lang end_name begin_operator DOT end_operator begin_name runtime permission end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name check permission end_name begin_argument_list begin_argument begin_expr begin_name perm end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name security exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name exit exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name status end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment returns the next character in the filtered stream only including characters not in the set of line breaking characters return the next character in the resulting stream or 1 if the end of the resulting stream has been reached exception io exception if the underlying stream throws an io exception during reading end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get initialized end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name initialize end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set initialized end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ch end_name begin_init begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name ch end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name line breaks end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_break end_break end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_while begin_return begin_expr begin_name ch end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test transcoding end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f 1 end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f 2 end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_name f 1 end_name end_expr end_argument begin_argument begin_expr begin_name f 2 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the classpath to be passed to the jvm running the tool optional depending upon the tool the classpath may also be supplied as a nested element param classpath a path object representing the classpath attribute end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_name classpath end_name end_expr end_expr_stmt end_block 
 begin_comment creates and adds a tag argument this is used to specify custom tags this argument is only available for javadoc 1 4 and will generate a verbose message and then be ignored when run on java versions below 1 4 return tag argument to be configured end_comment begin_type begin_specifier end_specifier begin_name tag argument end_name end_type begin_name create tag end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name tag argument end_name end_type begin_name ta end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name tag argument end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tags end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name ta end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name ta end_name end_expr end_return end_block 
 begin_comment ignore it end_comment begin_comment list information about a single file from the remote host code filename code may contain a relative path specification p the file listing will then be retrieved using the entire relative path spec no attempt is made to change directories it is anticipated that this may eventually cause problems with some ftp servers but it simplifies the coding p param ftp ftp client param bw buffered writer param filename the directory one wants to list throws io exception in unknown circumstances throws build exception in unknown circumstances end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name list file end_name begin_parameter_list begin_param begin_decl begin_type begin_name ftp client end_name end_type begin_name ftp end_name end_decl end_param begin_param begin_decl begin_type begin_name buffered writer end_name end_type begin_name bw end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name verbose end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name ftp file end_name begin_index end_index end_type begin_name ftpfiles end_name begin_init begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name list files end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ftpfiles end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name begin_name ftpfiles end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name bw end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name ftpfiles end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bw end_name begin_operator DOT end_operator begin_name new line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name transferred end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set nineteen end_name begin_parameter_list begin_param begin_decl begin_type begin_name double end_name end_type begin_name d end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name double end_name end_type begin_name diff end_name begin_init begin_expr begin_name d end_name begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name d end_name end_expr end_argument begin_argument begin_expr begin_name diff end_name begin_operator GT end_operator begin_operator MINUS end_operator begin_operator UNP end_operator begin_name diff end_name begin_operator LT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment fulfill the resource collection contract return true if all resources represent files end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is filesystem only end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name is filesystem only end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name get nested end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource collection end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name is filesystem only end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the classpath for loading the driver using the classpath reference param r a reference to a classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set refid end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name testpropertyoutput 1 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name property resource end_name end_type begin_name r end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name property resource end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name testoutputbe end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a regular expression selector entry on the selector list param selector the code contains regexp selector code to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add contains regexp end_name begin_parameter_list begin_param begin_decl begin_type begin_name contains regexp selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates the temporary file exception build exception if something goes wrong with the build end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name property end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name property end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name dest dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dest dir end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name tfile end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name create temp file end_name end_name begin_argument_list begin_argument begin_expr begin_name prefix end_name end_expr end_argument begin_argument begin_expr begin_name suffix end_name end_expr end_argument begin_argument begin_expr begin_name dest dir end_name end_expr end_argument begin_argument begin_expr begin_name delete on exit end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set new property end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name tfile end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds a file set to the implicit build path p em note that the directories will be added to the build path in no particular order so if order is significant one should use a file list instead em param set the file set to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add fileset end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name set end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the timeout in milliseconds after which the process will be killed param value timeout in milliseconds since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set timeout end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name timeout end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name incompatible with spawn end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment return code true code if this code dewey decimal code is greater than the other code dewey decimal code param other the other dewey decimal return true if greater than other dewey decimal false otherwise end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is greater than end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name dewey decimal end_name end_type begin_name other end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name max end_name begin_init begin_expr begin_call begin_name begin_name math end_name begin_operator DOT end_operator begin_name max end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name other end_name begin_operator DOT end_operator begin_name components end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name components end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name max end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name component 1 end_name begin_init begin_expr begin_operator LPAR end_operator begin_name i end_name begin_operator LT end_operator begin_name begin_name components end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_name begin_name components end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name component 2 end_name begin_init begin_expr begin_operator LPAR end_operator begin_name i end_name begin_operator LT end_operator begin_name begin_name other end_name begin_operator DOT end_operator begin_name components end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_name begin_name other end_name begin_operator DOT end_operator begin_name components end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name component 2 end_name begin_operator GT end_operator begin_name component 1 end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name component 2 end_name begin_operator LT end_operator begin_name component 1 end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return begin_comment exact match end_comment end_block 
 begin_comment returns the directory scanner needed to access the files to process param p the project against which the directory scanner should be configured return a code directory scanner code instance end_comment begin_type begin_specifier end_specifier begin_name directory scanner end_name end_type begin_name get directory scanner end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get directory scanner end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_synchronized begin_expr begin_name this end_name end_expr begin_block begin_if begin_condition begin_expr begin_name directory scanner end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name p end_name begin_operator EQT end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ds end_name begin_operator EQ end_operator begin_name directory scanner end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get data type name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name ds end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name directory scanner end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name setup directory scanner end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set follow symlinks end_name end_name begin_argument_list begin_argument begin_expr begin_name follow symlinks end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name directory scanner end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name p end_name begin_operator EQT end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator QM end_operator begin_name ds end_name begin_operator DP end_operator begin_name directory scanner end_name end_expr end_expr_stmt end_block end_else end_if end_block end_synchronized begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name ds end_name end_expr end_return end_block 
 begin_comment construct a new code pump stream handler code param out the output code output stream code param err the error code output stream code end_comment begin_specifier end_specifier begin_name pump stream handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name end_decl end_param begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name err end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name err end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the resolved file param extension the extension param project the project return the file resolved throws build exception if the file cannot be resolved end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name resolve end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name extension end_name end_type begin_name extension end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name ant end_name end_type begin_name ant end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name ant end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ant end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ant end_name begin_operator DOT end_operator begin_name set inherit all end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ant end_name begin_operator DOT end_operator begin_name set antfile end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name antfile end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name dir end_name begin_init begin_expr begin_call begin_name begin_name antfile end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get canonical file end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ant end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name target end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ant end_name begin_operator DOT end_operator begin_name set target end_name end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name ant end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name destfile end_name end_expr end_return end_block 
 begin_comment add an or selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add or end_name begin_parameter_list begin_param begin_decl begin_type begin_name or selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect name address end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name email address end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the name of this element param name the name of the element end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is valid name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set method of handling mappers that return multiple mappings for a given source path param enable multiple mappings if true the task will copy to all the mappings for a given source path if false only the first file or directory is processed by default this setting is false to provide backward compatibility with earlier releases since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set enable multiple mappings end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name enable multiple mappings end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name enable multiple mappings end_name end_name begin_operator EQ end_operator begin_name enable multiple mappings end_name end_expr end_expr_stmt end_block 
 begin_comment set the property name whose value should be set to the output of the process param output prop property name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set outputproperty end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output prop end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set output property end_name end_name begin_argument_list begin_argument begin_expr begin_name output prop end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name incompatible with spawn end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment checks that a string buffer ends up with a given string it may sound trivial with the existing jdk api but the various implementation among jd ks can make those methods extremely resource intensive and perform poorly due to massive memory allocation and copying see param buffer the buffer to perform the check on param suffix the suffix return code true code if the character sequence represented by the argument is a suffix of the character sequence represented by the string buffer object code false code otherwise note that the result will be code true code if the argument is the empty string end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name ends with end_name begin_parameter_list begin_param begin_decl begin_type begin_name string buffer end_name end_type begin_name buffer end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name suffix end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name suffix end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment this loop is done on purpose to avoid memory allocation performance end_comment begin_comment problems on various jd ks end_comment begin_comment string buffer last index of was introduced in jdk 1 4 and end_comment begin_comment implementation is ok though does allocation copying end_comment begin_comment string buffer to string ends with does massive memory end_comment begin_comment allocation copying on jdk 1 5 end_comment begin_comment see http issues apache org bugzilla show bug cgi id 37169 end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name end index end_name begin_init begin_expr begin_call begin_name begin_name suffix end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name buffer index end_name begin_init begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name end index end_name begin_operator GE end_operator end_expr end_condition begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer index end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name suffix end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name end index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name buffer index end_name begin_operator MMINUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name end index end_name begin_operator MMINUS end_operator end_expr end_expr_stmt end_block end_while begin_return begin_expr end_expr end_return end_block 
 begin_comment set quot keep going quot mode in this mode ant will try to execute as many targets as possible all targets that do not depend on failed target s will be executed if the keep going settor getter methods are used in conjunction with the code ant executor class code property they will have no effect param keep going mode quot keep going quot mode since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set keep going mode end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name keep going mode end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name keep going mode end_name end_name begin_operator EQ end_operator begin_name keep going mode end_name end_expr end_expr_stmt end_block 
 begin_comment the unit of the value to be applied to date operations valid values are ul li millisecond li li second li li minute li li hour li li day default li li week li li month li li year li ul this only applies to date types using a operation param unit the unit enumerated value since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set unit end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name property file end_name begin_operator DOT end_operator begin_name unit end_name end_name end_type begin_name unit end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_call begin_name begin_name unit end_name begin_operator DOT end_operator begin_name get calendar field end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the units to use for the comparison this is a little complicated because common usage has created standards that play havoc with capitalization rules thus some people will use k for indicating 1000 s when the si standard calls for k others have tried to introduce k as a multiple of 1024 but that falls down when you reach m since m is already defined as 0 001 p to get around this complexity a number of standards bodies have proposed the 2 10 standard and at least one has adopted it but we are still left with a populace that isn t clear on how capitalization should work p we therefore ignore capitalization as much as possible completely mixed case is not possible but all upper and lower forms are accepted for all long and short forms since we have no need to work with the 0 001 case this practice works here p this function translates all the long and short forms that a unit prefix can occur in and translates them into a single multiplier param units the units to compare the size to using an enumerated attribute end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set units end_name begin_parameter_list begin_param begin_decl begin_type begin_name byte units end_name end_type begin_name units end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name units end_name begin_operator DOT end_operator begin_name get index end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name multiplier end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name i end_name begin_operator GT end_operator begin_operator MINUS end_operator begin_operator UNP end_operator begin_name i end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name multiplier end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name i end_name begin_operator GT end_operator begin_operator UNP end_operator begin_name i end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name multiplier end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name i end_name begin_operator GT end_operator begin_operator UNP end_operator begin_name i end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name multiplier end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name i end_name begin_operator GT end_operator begin_operator UNP end_operator begin_name i end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name multiplier end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name i end_name begin_operator GT end_operator begin_operator UNP end_operator begin_name i end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name multiplier end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name i end_name begin_operator GT end_operator begin_operator UNP end_operator begin_name i end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name multiplier end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name i end_name begin_operator GT end_operator begin_operator UNP end_operator begin_name i end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name multiplier end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name i end_name begin_operator GT end_operator begin_operator UNP end_operator begin_name i end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name multiplier end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if begin_if begin_condition begin_expr begin_name multiplier end_name begin_operator GT end_operator begin_operator UNP end_operator begin_name size end_name begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name sizelimit end_name begin_operator EQ end_operator begin_name size end_name begin_operator STAR end_operator begin_name multiplier end_name end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment construct a dewey decimal from string in dewey decimal format param string the string in dewey decimal format exception number format exception if string is malformed end_comment begin_specifier end_specifier begin_name dewey decimal end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name string end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name number format exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string tokenizer end_name end_type begin_name tokenizer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name string end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_init begin_expr begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name count tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name components end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name int end_name begin_index begin_expr begin_operator LPAR end_operator begin_name size end_name begin_operator PLUS end_operator begin_operator RPAR end_operator begin_operator SLASH end_operator end_expr end_index end_name end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name components end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name component end_name begin_init begin_expr begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name component end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name number format exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name components end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name component end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment strip token end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment if it ended in a dot throw an exception end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name number format exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if end_block end_for end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name cmp 1 0 end_name end_expr begin_operator UNP end_operator begin_expr begin_name cmp 2 0 end_name end_expr begin_operator UNP end_operator end_block end_expr end_return end_block 
 begin_comment create a token to filter as the text of a nested element return nested token code nested string code to configure end_comment begin_type begin_specifier end_specifier begin_name nested string end_name end_type begin_name create replace token end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name token end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name token end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name nested string end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name token end_name end_expr end_return end_block 
 begin_comment load ant properties from the source file or resource exception build exception if something goes wrong with the build end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment validation end_comment begin_if begin_condition begin_expr begin_name src end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name is exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name src end_name begin_operator UNP end_operator begin_name java resource end_name end_expr end_condition begin_then begin_block begin_comment dreaded backwards compatibility end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name src end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name src end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name buffered input stream end_name end_type begin_name bis end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name reader end_name end_type begin_name instream end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name byte array input stream end_name end_type begin_name tis end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name bis end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name encoding end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name instream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name bis end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name instream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name bis end_name end_expr end_argument begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name chain reader helper end_name end_type begin_name crh end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name chain reader helper end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name crh end_name begin_operator DOT end_operator begin_name set primary reader end_name end_name begin_argument_list begin_argument begin_expr begin_name instream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name crh end_name begin_operator DOT end_operator begin_name set filter chains end_name end_name begin_argument_list begin_argument begin_expr begin_name filter chains end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name crh end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name instream end_name begin_operator EQ end_operator begin_call begin_name begin_name crh end_name begin_operator DOT end_operator begin_name get assembled reader end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name text end_name begin_init begin_expr begin_call begin_name begin_name crh end_name begin_operator DOT end_operator begin_name read fully end_name end_name begin_argument_list begin_argument begin_expr begin_name instream end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name text end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name text end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name text end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name encoding end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name tis end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name byte array input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name text end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name tis end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name byte array input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name text end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name properties end_name end_type begin_name props end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name load end_name end_name begin_argument_list begin_argument begin_expr begin_name tis end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name property end_name end_type begin_name property task end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name property end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name property task end_name begin_operator DOT end_operator begin_name bind to owner end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name property task end_name begin_operator DOT end_operator begin_name add properties end_name end_name begin_argument_list begin_argument begin_expr begin_name props end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name bis end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name tis end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment test whether all contents of the specified directory must be excluded param name the directory name to check return whether all the specified directory s contents are excluded end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name contents excluded end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator QM end_operator begin_name name end_name begin_operator DP end_operator begin_name name end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name excludes end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name e end_name begin_init begin_expr begin_name begin_name excludes end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name selector utils end_name begin_operator DOT end_operator begin_name match path end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name is case sensitive end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test negation end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the prefix prepended to entries in the archive file param p the project to use return the prefix end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get prefix end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name archive file set end_name begin_operator RPAR end_operator begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get prefix end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_name prefix end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name parse uri end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index of at end_name begin_init begin_expr begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index of colon end_name begin_init begin_expr begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name index of colon end_name begin_operator GT end_operator begin_operator MINUS end_operator begin_operator UNP end_operator begin_name index of colon end_name begin_operator LT end_operator begin_name index of at end_name end_expr end_condition begin_then begin_block begin_comment user password host path notation end_comment begin_expr_stmt begin_expr begin_call begin_name set username end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name index of colon end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set password end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name index of colon end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name index of at end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment no password will require passphrase end_comment begin_expr_stmt begin_expr begin_call begin_name set username end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name index of at end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name get user info end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get password end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name get user info end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get passphrase end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get user info end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index of path end_name begin_init begin_expr begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name index of at end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name index of path end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name set host end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name index of at end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name index of path end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name remote path end_name begin_init begin_expr begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name index of path end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name remote path end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name remote path end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name remote path end_name end_expr end_return end_block 
 begin_comment ensure that the in exclude quot patterns quot have been properly divided up since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name ensure non pattern sets ready end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name are non pattern sets ready end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name include patterns end_name begin_operator EQ end_operator begin_call begin_name fill non pattern set end_name begin_argument_list begin_argument begin_expr begin_name include non patterns end_name end_expr end_argument begin_argument begin_expr begin_name includes end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name exclude patterns end_name begin_operator EQ end_operator begin_call begin_name fill non pattern set end_name begin_argument_list begin_argument begin_expr begin_name exclude non patterns end_name end_expr end_argument begin_argument begin_expr begin_name excludes end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name are non pattern sets ready end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment see org apache tools ant task init throws build exception on error since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name init end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add any vendor specific files which should be included in the ejb jar param ejb files the hashtable of files to populate param dd prefix the prefix to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add vendor files end_name begin_parameter_list begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name ejb files end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name dd prefix end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name jboss dd end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get config end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name descriptor dir end_name end_expr end_argument begin_argument begin_expr begin_name dd prefix end_name begin_operator PLUS end_operator begin_name jboss dd end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name jboss dd end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ejb files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name meta dir end_name begin_operator PLUS end_operator begin_name jboss dd end_name end_expr end_argument begin_argument begin_expr begin_name jboss dd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name jboss dd end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name descriptor file name end_name begin_init begin_expr begin_name jboss cmp 10 d end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name ejb jar end_name begin_operator DOT end_operator begin_name cmp version end_name begin_operator DOT end_operator begin_name cmp 2 0 end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get parent end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get cmpversion end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name descriptor file name end_name begin_operator EQ end_operator begin_name jboss cmp 20 d end_name end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name jboss cmpd end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get config end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name descriptor dir end_name end_expr end_argument begin_argument begin_expr begin_name dd prefix end_name begin_operator PLUS end_operator begin_name descriptor file name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name jboss cmpd end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ejb files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name meta dir end_name begin_operator PLUS end_operator begin_name descriptor file name end_name end_expr end_argument begin_argument begin_expr begin_name jboss cmpd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name jboss cmpd end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_else end_if end_block 
 begin_comment convenience method to copy a file from a source to a destination specifying if token filtering must be used if source files may overwrite newer destination files and the last modified time of code dest file code file should be made equal to the last modified time of code source file code param source file name of file to copy from must not be code null code param dest file name of file to copy to must not be code null code param filters the collection of filters to apply to this copy param overwrite whether or not the destination file should be overwritten if it already exists param preserve last modified whether or not the last modified time of the resulting file should be set to that of the source file param encoding the encoding used to read and write the files throws io exception if the copying fails since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name copy file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name source file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name dest file end_name end_decl end_param begin_param begin_decl begin_type begin_name filter set collection end_name end_type begin_name filters end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name overwrite end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name preserve last modified end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name copy file end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name source file end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name filters end_name end_expr end_argument begin_argument begin_expr begin_name overwrite end_name end_expr end_argument begin_argument begin_expr begin_name preserve last modified end_name end_expr end_argument begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_name file union end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name u end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name union end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name u end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name type end_name begin_operator DOT end_operator begin_name file end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the project that fired this event return the project that fired this event end_comment begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name get project end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name project end_name end_expr end_return end_block 
 begin_comment cache current system properties and set them to those in this java command throws build exception if security prevented this operation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set system properties end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sys properties end_name begin_operator DOT end_operator begin_name set system end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check that it is ok to set attributes i e that no reference is defined since ant 1 6 throws build exception if not allowed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check attributes allowed end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment get identical flag status return boolean containing status of identical flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get identical end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m identical end_name end_expr end_return end_block 
 begin_comment resolve this constant pool entry with respect to its dependents in the constant pool param constant pool the constant pool of which this entry is a member and against which this entry is to be resolved end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name resolve end_name begin_parameter_list begin_param begin_decl begin_type begin_name constant pool end_name end_type begin_name constant pool end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name resolved end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test documentation claims on copy end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert false end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this method blocks until the stream pumper finishes throws interrupted exception if interrupted see is finished end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name wait for end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name interrupted exception end_name end_expr end_argument end_throws begin_block begin_while begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is finished end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name wait end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_comment verify our jar files throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment validation logic end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has jar end_name begin_init begin_expr begin_name jar end_name begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has jar end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name has resources end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error no source end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin execution end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment patch the redirector to save output to a file end_comment begin_decl_stmt begin_decl begin_type begin_name redirector element end_name end_type begin_name redirector end_name begin_init begin_expr begin_call begin_name get redirector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set always log end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name filter chain end_name end_type begin_name output filter chain end_name begin_init begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name create output filter chain end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name output filter chain end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name output cache end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name sources end_name begin_init begin_expr begin_call begin_name create unified source path end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name sources end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name file resource end_name end_type begin_name fr end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name verify one jar end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name fr end_name begin_operator DOT end_operator begin_name get file end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name end execution end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment set the path to use when loading the component param path a path instance containing the classpath to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set path end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name path end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name path end_name end_name begin_operator EQ end_operator begin_name path end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name path end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment adds a set of files param set the fileset to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add fileset end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name set end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a resource collection param rc the resource collection to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name rc end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name rc end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name resources end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name resources end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name file union end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name resources end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the extra options attribute return the extra options value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get extra options end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name extra options end_name end_name end_expr end_return end_block 
 begin_comment retrieves the explicit user choice return the explicit user choice end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get explicit choice end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name user choice end_name end_expr end_return end_block 
 begin_comment adds a path to sourcepath return a sourcepath to be configured end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create sourcepath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name compile sourcepath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name compile sourcepath end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name compile sourcepath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment creates a new filtered reader param in a reader object providing the underlying stream must not be code null code end_comment begin_specifier end_specifier begin_name prefix lines end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name in end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the behavior wrt missing filtersfiles param on missing filters file the on missing describing the behavior end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set on missing filters file end_name begin_parameter_list begin_param begin_decl begin_type begin_name on missing end_name end_type begin_name on missing filters file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name on missing filters file end_name end_name begin_operator EQ end_operator begin_name on missing filters file end_name end_expr end_expr_stmt end_block 
 begin_comment performs this task if it s still valid or gets a replacement version and performs that otherwise performing a task consists of firing a task started event configuring the task executing it and then firing task finished event if a runtime exception is thrown the task finished event is still fired but with the exception as the cause end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name perform end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name invalid end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name fire task started end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name reason end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name maybe configure end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dispatch utils end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name begin_name location end_name begin_operator DOT end_operator begin_name unknown location end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name reason end_name begin_operator EQ end_operator begin_name ex end_name end_expr end_expr_stmt begin_throw begin_expr begin_name ex end_name end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name reason end_name begin_operator EQ end_operator begin_name ex end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_name be end_name end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name error end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name reason end_name begin_operator EQ end_operator begin_name ex end_name end_expr end_expr_stmt begin_throw begin_expr begin_name ex end_name end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name fire task finished end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name reason end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name unknown element end_name end_type begin_name ue end_name begin_init begin_expr begin_call begin_name get replacement end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name task end_name end_type begin_name task end_name begin_init begin_expr begin_call begin_name begin_name ue end_name begin_operator DOT end_operator begin_name get task end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name perform end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test element order end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return true if there is more elements end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has more elements end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name reached eof end_name end_expr end_return end_block 
 begin_comment test whether or not compilation is needed a return value of code true code means yes code false code means our tests do not indicate this but as the tl ds are not used for dependency checking this is not guaranteed the current tests are ol li no dest file li dest file out of date w r t source li dest file zero bytes long ol param src file jsp source file param java file jsp dest file return true if a compile is definately needed end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is compile needed end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name java file end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name should compile end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name should compile end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name src file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name java file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name src file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_call begin_name begin_name java file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name should compile end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name src file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name java file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name java file end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name should compile end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name src file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name java file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_block end_else end_if begin_return begin_expr begin_name should compile end_name end_expr end_return end_block 
 begin_comment track progress every 10 if 100 kb filesize 1 mb for larger files track progress for every percent transmitted param filesize the size of the file been transmitted param total length the total transmission size param percent transmitted the current percent transmitted return the percent that the file is of the total end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name track progress end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name filesize end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name total length end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name percent transmitted end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name percent end_name begin_init begin_expr begin_operator LPAR end_operator begin_name int end_name begin_operator RPAR end_operator begin_call begin_name begin_name math end_name begin_operator DOT end_operator begin_name round end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name math end_name begin_operator DOT end_operator begin_name floor end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name total length end_name begin_operator SLASH end_operator begin_operator LPAR end_operator begin_name double end_name begin_operator RPAR end_operator begin_name filesize end_name begin_operator RPAR end_operator begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name percent end_name begin_operator GT end_operator begin_name percent transmitted end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name filesize end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name percent end_name begin_operator UNP end_operator begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name percent end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name percent end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name percent end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block end_else end_if end_block end_then end_if begin_return begin_expr begin_name percent end_name end_expr end_return end_block 
 begin_comment add an or selector entry on the selector list param selector the code or selector code to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add or end_name begin_parameter_list begin_param begin_decl begin_type begin_name or selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set compression method allowable values are ul li none no compression li gzip gzip compression li bzip 2 bzip 2 compression ul param mode the compression method end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set compression end_name begin_parameter_list begin_param begin_decl begin_type begin_name tar compression method end_name end_type begin_name mode end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name compression end_name end_name begin_operator EQ end_operator begin_name mode end_name end_expr end_expr_stmt end_block 
 begin_comment zip a file to an output stream param file the file to zip param z out the output stream throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name zip file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name z out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name zip resource end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name z out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name project end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name init end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set base dir end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name x end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name x end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name x end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name x end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name beddir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr begin_name x end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name mirrorfiles end_name begin_index begin_expr begin_name x end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name mirrordir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr begin_name x end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment set the port to connect to the smtp host param port the port to use for connection see default port end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set port end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name port end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name port end_name end_name begin_operator EQ end_operator begin_name port end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name project end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set from end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name from end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment scenario tests end_comment begin_comment tests whether the seldirs attribute is used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test seldirs end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name modified selector end_name end_type begin_name s end_name begin_init begin_expr begin_operator LPAR end_operator begin_name modified selector end_name begin_operator RPAR end_operator begin_call begin_name get selector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name make bed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb true end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb false end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name filenames end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name is directory end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb true end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb false end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb true end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb false end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set seldirs end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name perform tests end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name sb true end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name get cache end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name delete end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set seldirs end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name perform tests end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name sb false end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name get cache end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name delete end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name cleanup bed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name s end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name get cache end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name delete end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_then end_if end_block end_finally end_try end_block 
 begin_comment returns a named entry or code null code if no entry by that name exists param name name of the entry return the zip entry corresponding to the given name or code null code if not present end_comment begin_type begin_specifier end_specifier begin_name zip entry end_name end_type begin_name get entry end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name zip entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name name map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add failure end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_comment pre 3 4 end_comment begin_if begin_condition begin_expr begin_name t end_name begin_operator UNP end_operator begin_name assertion failed error end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name test listener end_name begin_operator DOT end_operator begin_name add failure end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name assertion failed error end_name begin_operator RPAR end_operator begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name test listener end_name begin_operator DOT end_operator begin_name add error end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name src dir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error file and srcdir end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment patch file into the fileset end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name set file end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment set our parent dir end_comment begin_expr_stmt begin_expr begin_name src dir end_name begin_operator EQ end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name src dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name src dir end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name src dir end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name dest dir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dest dir end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dest dir end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if end_block 
 begin_comment writes all remaining throws io exception if there is an error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name close end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name process buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test wrong class end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name rmic adapter factory end_name begin_operator DOT end_operator begin_name error not rmic adapter end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment either returns its argument or a plaeholder if the argument is null end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name file end_name end_type begin_name get key file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_name f end_name begin_operator EQT end_operator begin_operator QM end_operator begin_name null file placeholder end_name begin_operator DP end_operator begin_name f end_name end_expr end_return end_block 
 begin_comment builds a command line to execute ss return the constructed commandline end_comment begin_type begin_specifier end_specifier begin_name commandline end_name end_type begin_name build cmd line end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name command line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment first off make sure that we ve got a command and a local path end_comment begin_if begin_condition begin_expr begin_call begin_name get localpath end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment build the command line from what we got the format is end_comment begin_comment ss add vss items b c d h i k n o r w y end_comment begin_comment as specified in the ss exe help end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get ss command end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name command add end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment vss items end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get localpath end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment i or i y or i n end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get autoresponse end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment r end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get recursive end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment w end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get writable end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment y end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get login end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment c end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name command line end_name end_expr end_return end_block 
 begin_comment enable default or disable assembly language in the output param assembler a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set assembler end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name assembler end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name assembler end_name end_name begin_operator EQ end_operator begin_name assembler end_name end_expr end_expr_stmt end_block 
 begin_comment file to write to param file the file to write to if not set echo to standard output end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name depend selector test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment implements comparator compare param o 1 the first object param o 2 the second object return 0 if both are equal otherwise 1 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name compare end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name o 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name o 2 end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name o 1 end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name o 2 end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name o 1 end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name o 2 end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator end_expr end_return end_block 
 begin_comment this was originally an emulation of file create new file for jdk 1 1 but it is now implemented using that method ant 1 6 3 onwards p this method has historically strong not strong guaranteed that the operation was atomic in its current implementation it is param f the file to be created return true if the file did not exist already throws io exception on error since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name create new file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name create new file end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test digest algorithm md 5 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name digest algorithm end_name end_type begin_name algo end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name digest algorithm end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name algo end_name begin_operator DOT end_operator begin_name set algorithm end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name do test end_name begin_argument_list begin_argument begin_expr begin_name algo end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name taskdef test container task end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment accessor to the name of the property return name of the property end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_comment get value of promotiongroup return string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get promotiongroup end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name promotiongroup end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 7 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get baseline root name return string containing the name of the baseline end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get baseline root name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m baseline root name end_name end_expr end_return end_block 
 begin_comment set the port attribute param port the port number of the socket end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set port end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name port end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name port end_name end_name begin_operator EQ end_operator begin_name port end_name end_expr end_expr_stmt end_block 
 begin_comment constructor for implementation specific argument end_comment begin_specifier end_specifier begin_name implementation specific argument end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the gid for the tar entry optional default 0 this is not the same as the group name param gid the group id end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set gid end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name gid end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check tar file set attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name group id set end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name gid end_name end_name begin_operator EQ end_operator begin_name gid end_name end_expr end_expr_stmt end_block 
 begin_comment end_comment begin_comment constructors initializers end_comment begin_comment overridden so we can add the task as build listener since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add build listener end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment taking in the substring representing the path relative to the source dir return a new string representing the destination path not supported as jasper in tomcat 4 0 doesnt either param path not used return null always end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name map path end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment carry out the transfer throws io exception on i o errors throws j sch exception on errors detected by scp end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name j sch exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name directory list end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name do multiple transfer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name local file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name do single transfer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name string resource end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment control warnings about serial tag param b if true generate warning about the serial tag end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set serialwarn end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add arg if end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this method is called as the first step in the process descriptor method to allow vendor specific subclasses to validate the task configuration prior to processing the descriptor if the configuration is invalid a build exception should be thrown param descriptor file name string representing the file name of an ejb descriptor to be processed param sax parser sax parser which may be used to parse the xml descriptor throws build exception if there is a problem end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check configuration end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name descriptor file name end_name end_decl end_param begin_param begin_decl begin_type begin_name sax parser end_name end_type begin_name sax parser end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment for the generic deployment tool do nothing vendor specific subclasses should throw a build exception if the configuration is invalid for their server end_comment end_block 
 begin_comment the heart of the matter this is where the selector gets to decide on the inclusion of a file in a particular fileset param basedir not used by this selector param filename not used by this selector param file path to file to be selected return whether the file should be selected or not end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name basedir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return begin_comment quick return directories cannot be signed end_comment end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name is signed end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name is signed end_name begin_operator DOT end_operator begin_name set file end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name is signed end_name begin_operator DOT end_operator begin_name eval end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set the classname to execute param classname the fully qualified classname end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classname end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name java command end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name execute jar end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment flag to enable server side code generation optional default false param server server side flag end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set server end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name server end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name server end_name end_name begin_operator EQ end_operator begin_name server end_name end_expr end_expr_stmt end_block 
 begin_comment actually add the given property value to the project after writing a log message end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name id end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name value end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name id end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name msg end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator PLUS end_operator begin_name id end_name begin_operator PLUS end_operator begin_operator RPAR end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name added attributes end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment if this attribute was added by this task then end_comment begin_comment we append this value to the existing value end_comment begin_comment we use the set property method which will end_comment begin_comment forcibly override the property if it already exists end_comment begin_comment we need to put these properties into the project end_comment begin_comment when we read them though instead of keeping them end_comment begin_comment outside of the project and batch adding them at the end end_comment begin_comment to allow other properties to reference them end_comment begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name added attributes end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name value end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set property end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name added attributes end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set new property end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name added attributes end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if begin_if begin_condition begin_expr begin_name id end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add reference end_name begin_argument_list begin_argument begin_expr begin_name id end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test date check end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name log end_name begin_init begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name log end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name signed selector test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name ready end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name ready end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment ignore we do not want this to stop the build end_comment begin_comment see default logger print message end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name print message end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name print stream end_name end_type begin_name stream end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name priority end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name message end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name stream end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name colors set end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set colors end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name colors set end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string buffer end_name end_type begin_name msg end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_switch begin_condition begin_expr begin_name priority end_name end_expr end_condition begin_block begin_case begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name insert end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name err color end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name end color end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name insert end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name warn color end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name end color end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name insert end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name info color end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name end color end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name insert end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name verbose color end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name end color end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr begin_comment fall through end_comment end_case begin_default begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name insert end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name debug color end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name end color end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_default end_block end_switch begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name strmessage end_name begin_init begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stream end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name strmessage end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment plays the file for duration milliseconds or loops end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name play end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name loops end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name duration end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name clip end_name end_type begin_name audio clip end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name audio input stream end_name end_type begin_name audio input stream end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name audio input stream end_name begin_operator EQ end_operator begin_call begin_name begin_name audio system end_name begin_operator DOT end_operator begin_name get audio input stream end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unsupported audio file exception end_name end_type begin_name uafe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name uafe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_name audio input stream end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name audio format end_name end_type begin_name format end_name begin_init begin_expr begin_call begin_name begin_name audio input stream end_name begin_operator DOT end_operator begin_name get format end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name data line end_name begin_operator DOT end_operator begin_name info end_name end_name end_type begin_name info end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name data line end_name begin_operator DOT end_operator begin_name info end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name clip end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr begin_name format end_name end_expr end_argument begin_argument begin_expr begin_name begin_name audio system end_name begin_operator DOT end_operator begin_name not specified end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name audio clip end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name clip end_name begin_operator RPAR end_operator begin_call begin_name begin_name audio system end_name begin_operator DOT end_operator begin_name get line end_name end_name begin_argument_list begin_argument begin_expr begin_name info end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name audio clip end_name begin_operator DOT end_operator begin_name add line listener end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name audio clip end_name begin_operator DOT end_operator begin_name open end_name end_name begin_argument_list begin_argument begin_expr begin_name audio input stream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name line unavailable exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_name duration end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name play clip end_name begin_argument_list begin_argument begin_expr begin_name audio clip end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name duration end_name begin_operator DOT end_operator begin_name long value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name play clip end_name begin_argument_list begin_argument begin_expr begin_name audio clip end_name end_expr end_argument begin_argument begin_expr begin_name loops end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name audio clip end_name begin_operator DOT end_operator begin_name drain end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name audio clip end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name fixup path end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment utility method to add an argument to the command line conditionally based on the given flag param b the flag which controls if the argument is added param arg the argument value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add arg if end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name arg end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name b end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name arg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment query for the modern compiler existing return true if classic os on the classpath end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name does modern compiler exist end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name modern compiler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name cnfe end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name cl end_name begin_init begin_expr begin_call begin_name begin_name compiler adapter factory end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get class loader end_name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name cl end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cl end_name begin_operator DOT end_operator begin_name load class end_name end_name begin_argument_list begin_argument begin_expr begin_name modern compiler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name cnfe 2 end_name end_decl end_param end_parameter_list begin_block begin_comment ignore exception end_comment end_block end_catch end_try end_block end_catch end_try begin_return begin_expr end_expr end_return end_block 
 begin_comment sets the file 2 attribute param file 2 the new file 2 value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file 2 end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file 2 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file 2 end_name end_name begin_operator EQ end_operator begin_name file 2 end_name end_expr end_expr_stmt end_block 
 begin_comment the locale used to create date time string the general form is language country variant but either variant or variant and country may be omitted for more information please refer to documentation for the java util locale class param locale the locale to use see java util locale end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set locale end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name locale end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name st end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name locale end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name language end_name begin_operator EQ end_operator begin_call begin_name begin_name st end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name st end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name country end_name begin_operator EQ end_operator begin_call begin_name begin_name st end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name st end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name variant end_name begin_operator EQ end_operator begin_call begin_name begin_name st end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name st end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name country end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no such element exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment where to copy the source file param dest path to file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dest end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dest end_name end_name begin_operator EQ end_operator begin_name dest end_name end_expr end_expr_stmt end_block 
 begin_comment performs the check for circular references and returns the referenced property set return the referenced property set end_comment begin_type begin_specifier end_specifier begin_name property set end_name end_type begin_name get ref end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name property set end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list begin_argument begin_expr begin_name begin_name property set end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment resets the current target name to code null code param event ignored in this implementation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name target name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment fulfill the resource collection contract return size of the collection as int since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_call begin_name resource collection end_name begin_argument_list begin_argument begin_expr begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name src end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name archive scanner end_name end_type begin_name as end_name begin_init begin_expr begin_operator LPAR end_operator begin_name archive scanner end_name begin_operator RPAR end_operator begin_call begin_name get directory scanner end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name as end_name begin_operator DOT end_operator begin_name get included files count end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment create a deep clone of this instance except for the nested selectors the list of selectors is a shallow clone of this instance s list return a cloned object end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name object end_name end_type begin_name clone end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name clone end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name files end_name end_type begin_name f end_name begin_init begin_expr begin_operator LPAR end_operator begin_name files end_name begin_operator RPAR end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name f end_name begin_operator DOT end_operator begin_name default patterns end_name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name pattern set end_name begin_operator RPAR end_operator begin_call begin_name begin_name default patterns end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name f end_name begin_operator DOT end_operator begin_name additional patterns end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name additional patterns end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name additional patterns end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name pattern set end_name end_type begin_name ps end_name begin_init begin_expr begin_operator LPAR end_operator begin_name pattern set end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name additional patterns end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ps end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_name begin_name f end_name begin_operator DOT end_operator begin_name selectors end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list begin_argument begin_expr begin_name selectors end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name f end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name clone not supported exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_specifier end_specifier begin_name regexp test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name directory scanner end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set whether to trim in string mode param trim code boolean code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set trim end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name trim end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_operator EQ end_operator begin_name trim end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_expr_stmt end_block 
 begin_comment deprecated but email is byte oriented end_comment begin_comment mac does n r but that s tough to distinguish from windows r n r n end_comment begin_comment don t tackle that problem right now end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name b end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name last char end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name raw write end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment ensure always r n end_comment begin_expr_stmt begin_expr begin_call begin_name raw write end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name b end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name last char end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name raw write end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment add extra dot end_comment begin_expr_stmt begin_expr begin_call begin_name raw write end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name raw write end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if begin_expr_stmt begin_expr begin_name last char end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment get name of the pvcs bin directory return string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get pvcsbin end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name pvcsbin end_name end_expr end_return end_block 
 begin_comment logs the compilation parameters adds the files to compile and logs the quot nice source list quot param cmd the command line to add parameters to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log and add files to compile end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name describe arguments end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name nice class list end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name c end_name begin_init begin_expr begin_call begin_name get classes end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name c end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name begin_name c end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nice class list end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nice class list end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name c end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nice class list end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name l sep end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name prefix end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name c end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name prefix end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name prefix end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name prefix end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name l sep end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name prefix end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_call begin_name begin_name nice class list end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the j unit setup method end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr begin_name taskdefs dir end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name testname end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for tar input stream param is the input stream to use param block size the block size to use end_comment begin_specifier end_specifier begin_name tar input stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name block size end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument begin_argument begin_expr begin_name block size end_name end_expr end_argument begin_argument begin_expr begin_name begin_name tar buffer end_name begin_operator DOT end_operator begin_name default rcdsize end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment make this instance in effect a reference to another instance p you must not set another attribute or nest elements inside this element if you make it a reference p param r the code reference code to use throws build exception if there is a problem end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set refid end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name has patterns end_name begin_argument_list begin_argument begin_expr begin_name default patterns end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name additional patterns end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name selectors end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment processes the buffer to the end does not take into account that appended data may make it possible to replace the end of the already received data end_comment begin_type begin_name void end_name end_type begin_name flush end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name replace end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment avoid runtime problem on pre 1 4 when compiling post 1 4 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name output buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name input buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name input buffer end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name input buffer end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment class does exist property test true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 9 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test right use of cache names end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test validate wrong algorithm end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name modified selector end_name begin_operator DOT end_operator begin_name algorithm name end_name end_name end_type begin_name algo name end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name modified selector end_name begin_operator DOT end_operator begin_name algorithm name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name algo name end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name processing instruction end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name data end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block end_block 
 begin_specifier end_specifier begin_name rhino reference test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment whether the task should suppress the private property is defined but not used in strictargs mode which can be quite annoying while developing the warning is logged as verbose message though param suppress private property not used a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set suppress private property not used end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name suppress private property not used end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name suppress private property not used end_name end_name begin_operator EQ end_operator begin_name suppress private property not used end_name end_expr end_expr_stmt end_block 
 begin_comment the name of the label optional default ant label param name of the label end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment the destination file if any return the destination file since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get outputfile end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name output file end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test on error report end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the next character in the filtered stream the original stream is first read in fully and the ant properties are expanded the results of this expansion are then queued so they can be read character by character return the next character in the resulting stream or 1 if the end of the resulting stream has been reached exception io exception if the underlying stream throws an io exception during reading end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ch end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name queued data end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name queued data end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name queued data end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name queued data end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_call begin_name begin_name queued data end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name queued data end_name begin_operator EQ end_operator begin_call begin_name begin_name queued data end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name queued data end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name queued data end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name queued data end_name begin_operator EQ end_operator begin_call begin_name read fully end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name queued data end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_operator MINUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name project end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name queued data end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name replace properties end_name end_name begin_argument_list begin_argument begin_expr begin_name queued data end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name read end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_else end_if end_block end_else end_if begin_return begin_expr begin_name ch end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment write an archive record to the archive param record the record data to write to the archive throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write record end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name record end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name debug end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr rec idx end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr blk idx end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out stream end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name record end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator UNP end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name record size end_name end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name record end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name record size end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr rec idx end_name end_name begin_operator GE end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name recs per block end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name write block end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name record end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name block buffer end_name end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr rec idx end_name end_name begin_operator STAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name record size end_name end_name begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name record size end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr rec idx end_name end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set system output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name system output end_name begin_operator EQ end_operator begin_name out end_name end_expr end_expr_stmt end_block 
 begin_comment creates a named task or data type if the real object is a task it is configured up to the init stage param ue the unknown element to create the real object for must not be code null code param w ignored in this implementation return the task or data type represented by the given unknown element end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name make object end_name begin_parameter_list begin_param begin_decl begin_type begin_name unknown element end_name end_type begin_name ue end_name end_decl end_param begin_param begin_decl begin_type begin_name runtime configurable end_name end_type begin_name w end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name component helper end_name end_type begin_name helper end_name begin_init begin_expr begin_call begin_name begin_name component helper end_name begin_operator DOT end_operator begin_name get component helper end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name ue end_name begin_operator DOT end_operator begin_name get component name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name create component end_name end_name begin_argument_list begin_argument begin_expr begin_name ue end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ue end_name begin_operator DOT end_operator begin_name get namespace end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name get not found exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name begin_name pre set def end_name begin_operator DOT end_operator begin_name pre set definition end_name end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name pre set def end_name begin_operator DOT end_operator begin_name pre set definition end_name end_name end_type begin_name def end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name pre set def end_name begin_operator DOT end_operator begin_name pre set definition end_name end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name o end_name begin_operator EQ end_operator begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name create object end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ue end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name get not found exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name get pre sets end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get component name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name ue end_name begin_operator DOT end_operator begin_name apply pre set end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name get pre sets end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name task end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name task end_name end_type begin_name task end_name begin_init begin_expr begin_operator LPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name set task type end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ue end_name begin_operator DOT end_operator begin_name get task type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name set task name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ue end_name begin_operator DOT end_operator begin_name get task name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name init end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name unknown element end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name o end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_name o end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name make object end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_argument begin_argument begin_expr begin_name w end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name task end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_name o end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set owning target end_name begin_argument_list begin_argument begin_expr begin_call begin_name get owning target end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name project component end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name project component end_name begin_operator RPAR end_operator begin_name o end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set location end_name begin_argument_list begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name o end_name end_expr end_return end_block 
 begin_comment gets the classpath field return a path representing the classpath attribute end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name get classpath end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name a class path end_name begin_init begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get classpath end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name a class path end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name a class path end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name orb end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name a orb jar end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name jonasroot end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_name orb end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name a config dir end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name jonasroot end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name a j on as orb path end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name a class path end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name a orb jar end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name path separator end_name end_name begin_operator PLUS end_operator begin_name a config dir end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name a class path end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name a j on as orb path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name a class path end_name end_expr end_return end_block 
 begin_comment allows nested classpath elements not allowed if this catalog is itself a reference to another catalog that is a catalog cannot both refer to another em and em contain elements or other attributes return a path instance to be configured end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name set checked end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment writes a byte to the current tar archive entry this method simply calls read byte int int param b the byte written throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name one buf end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator begin_name b end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name one buf end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name directory scanner end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the output file return the argument string or null for no argument end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get output file parameter end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name output file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name output file end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 6 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment bugzilla report 40021 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no frames end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name report file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment tests one the file object end_comment begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report file end_name begin_operator DOT end_operator begin_name can read end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report file end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment conversion to url via file utils like in xml result aggregator not as suggested in the bug report end_comment begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name report url end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file utils end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to uri end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name report file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name report stream end_name begin_init begin_expr begin_call begin_name begin_name report url end_name begin_operator DOT end_operator begin_name open stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report stream end_name begin_operator DOT end_operator begin_name available end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns a very verbose exception for when a task data type cannot be found param what the kind of thing being created for example when a task name could not be found this would be code task code should not be code null code param name the name of the element which could not be found should not be code null code return a detailed description of what might have caused the problem end_comment begin_type begin_specifier end_specifier begin_name build exception end_name end_type begin_name get not found exception end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name what end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name component helper end_name end_type begin_name helper end_name begin_init begin_expr begin_call begin_name begin_name component helper end_name begin_operator DOT end_operator begin_name get component helper end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name diagnose creation failure end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name what end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment if set to a value 1 9 it adds z n to the cvs command line else it disables compression param level compression level 1 to 9 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set compression level end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name level end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name compression end_name end_name begin_operator EQ end_operator begin_name level end_name end_expr end_expr_stmt end_block 
 begin_comment no op end_comment begin_comment beautiful output end_comment begin_comment override object to string return information about this selector end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name update end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name select directories end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name cache end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name algorithm end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name comparator end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment converts the buffer to a string and sends it to the project param buffer the byte array output stream used to collect the output until a line separator is seen see project demux output string boolean end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process flush end_name begin_parameter_list begin_param begin_decl begin_type begin_name byte array output stream end_name end_type begin_name buffer end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name output end_name begin_init begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name demux flush end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument begin_argument begin_expr begin_name is error stream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name reset buffer info end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name taskdef test simple task end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no get name end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name j unit version helper end_name begin_operator DOT end_operator begin_name get test case name end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name foo 3 end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the previous revision for this cvs tag entry return the previous revision end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get previous revision end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name prev revision end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name contains test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name magic names end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment return the current number of bytes ready for reading exception io exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name available end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name in end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name slack end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name slack end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator begin_name begin end_name end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name ready end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr end_expr end_return end_block end_else end_if end_block 
 begin_comment adds a reference to a classpath defined elsewhere param r a classpath reference end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set refid end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the character set of mail message return charset of mail message since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get charset end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name charset end_name end_expr end_return end_block 
 begin_comment defines the language required param language the scripting language name for the script end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set language end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name language end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set language end_name end_name begin_argument_list begin_argument begin_expr begin_name language end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add the modified selector param selector the code modified selector code to add since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add modified end_name begin_parameter_list begin_param begin_decl begin_type begin_name modified selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the nested resource collection return a resource collection throws build exception if no nested resource collection has been provided end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name resource collection end_name end_type begin_name get resource collection end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name die on circular reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name rc end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name one nested end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_name rc end_name end_expr end_return end_block 
 begin_comment create an argument object and add it to our list of args p each commandline object has at most one instance of the argument class p param insert at start if true the argument is inserted at the beginning of the list of args otherwise it is appended return an argument to be configured end_comment begin_type begin_specifier end_specifier begin_name argument end_name end_type begin_name create argument end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name insert at start end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name argument end_name end_type begin_name argument end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name argument end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name insert at start end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name insert element at end_name end_name begin_argument_list begin_argument begin_expr begin_name argument end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name argument end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_return begin_expr begin_name argument end_name end_expr end_return end_block 
 begin_comment length of the extra field in the local file data without header id or length specifier return a code zip short code for the length of the data of this extra field since 1 1 end_comment begin_type begin_specifier end_specifier begin_name zip short end_name end_type begin_name get local file data length end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name zip short end_name begin_argument_list begin_argument begin_expr begin_comment crc end_comment begin_operator PLUS end_operator begin_comment mode end_comment begin_operator PLUS end_operator begin_comment siz dev end_comment begin_operator PLUS end_operator begin_comment uid end_comment begin_operator PLUS end_operator begin_comment gid end_comment begin_operator PLUS end_operator begin_call begin_name get linked file end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment only do the antlib tests if we are in the same jvm as ant return end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is shared jvm end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name property end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name property end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment add a single source file param sf the source file to be processed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add source end_name begin_parameter_list begin_param begin_decl begin_type begin_name source file end_name end_type begin_name sf end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name source files end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name sf end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the content type return the mime type end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get mime type end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name mime type end_name end_expr end_return end_block 
 begin_comment execute the target verify output matches expectations param target target to execute param output output to look for end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name expect output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name real output end_name begin_init begin_expr begin_call begin_name get output end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name real output end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no duplicate schema end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name schema validate end_name begin_operator DOT end_operator begin_name error duplicate schema end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the name of this target return the name of this target or code null code if the name has not been set yet end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_comment set fail on error flag param b fail flag set to true to cause an exception to be raised if the return value 0 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fail on error end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name fail on error end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment get the public id of the dtd return the public id end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get public id end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name public id end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filter chain end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name tmp end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name check end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name tmp end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_name tmp end_name end_expr end_argument begin_argument begin_expr begin_name check end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name type selector test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the url from a file param f the file to set as a url end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name set url end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file url end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name malformed url exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment enable disable verbose log messages showing when each sub build path is entered exited the default value is false param on true to enable verbose mode false otherwise default end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set verbose end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name on end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name verbose end_name end_name begin_operator EQ end_operator begin_name on end_name end_expr end_expr_stmt end_block 
 begin_comment return a string that describes the arguments suitable for verbose output before a call to code runtime exec string code return a string that describes the arguments since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name describe arguments end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name describe arguments end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment retrieves the base directory for this instance param p the code project code against which the reference is resolved if set return code file code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name file end_name end_type begin_name get dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get dir end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_name dir end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test custom algorithm end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name algo end_name begin_init begin_expr begin_call begin_name get algo name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name algo end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name algo end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the vss server path return if it was set null if not end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get vss server path end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name vss server path end_name end_expr end_return end_block 
 begin_comment does the given argument match the pattern using default options param argument the string to match against return true if the pattern matches throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name matches end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name argument end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_call begin_name matches end_name begin_argument_list begin_argument begin_expr begin_name argument end_name end_expr end_argument begin_argument begin_expr begin_name match default end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment set case sensitivity of the files collection param case sensitive code boolean code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set case sensitive end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name case sensitive end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name case sensitive end_name end_name begin_operator EQ end_operator begin_name case sensitive end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ds end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name print head end_name begin_parameter_list begin_param begin_decl begin_type begin_name print writer end_name end_type begin_name out end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name tasks end_name end_decl end_param begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name types end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name assert end_name begin_operator DOT end_operator begin_name assert true end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name head called end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name assert end_name begin_operator DOT end_operator begin_name assert true end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name target called end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name assert end_name begin_operator DOT end_operator begin_name assert true end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name tail called end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name assert end_name begin_operator DOT end_operator begin_name assert equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name element called end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name head called end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment specify how parser error are to be handled optional default is code true code p if set to code true code default throw a build exception if the parser yields an error param fail if set to code false code do not fail on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fail on error end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name fail end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name fail on error end_name begin_operator EQ end_operator begin_name fail end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test line with cariagereturn linefeed array end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name write byte array end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write as array end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write as array end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stream end_name begin_operator DOT end_operator begin_name assert invoked end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment see directory scanner set includes end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set includes end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name includes end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets a configured default value return the default value since ant 1 7 0 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get default value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name default value end_name end_expr end_return end_block 
 begin_comment read in lines and execute them param reader the reader contains sql lines param out the place to output results throws sql exception on sql problems throws io exception on io problems end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run statements end_name begin_parameter_list begin_param begin_decl begin_type begin_name reader end_name end_type begin_name reader end_name end_decl end_param begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sql exception end_name end_expr end_argument begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sql end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name in end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_name reader end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name keepformat end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace properties end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name keepformat end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name st end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name st end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name token end_name begin_init begin_expr begin_call begin_name begin_name st end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name token end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name keepformat end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sql end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sql end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sql end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sql end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_comment sql defines as a comment to eol end_comment begin_comment and in oracle it may contain a hint end_comment begin_comment so we cannot just remove it instead we must end it end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name keepformat end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sql end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name delimiter type end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name delimiter type end_name begin_operator DOT end_operator begin_name normal end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr begin_name sql end_name end_expr end_argument begin_argument begin_expr begin_name delimiter end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name delimiter type end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name delimiter type end_name begin_operator DOT end_operator begin_name row end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name delimiter end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name exec sql end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sql end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name sql end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_call begin_name begin_name delimiter end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sql end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name sql end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while begin_comment catch any statements not followed by end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name sql end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name exec sql end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sql end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name get project end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name e end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name f end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name k end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set new property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set keep going mode end_name end_name begin_argument_list begin_argument begin_expr begin_name k end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name f end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set new property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name p end_name end_expr end_return end_block 
 begin_comment constructors end_comment begin_comment bean constructor end_comment begin_specifier end_specifier begin_name modified selector end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment set the flag to skip errors on directory creation and maybe later other server specific errors param ignore noncritical errors true if non critical errors should not cause a failure end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set ignore noncritical errors end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name ignore noncritical errors end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ignore noncritical errors end_name end_name begin_operator EQ end_operator begin_name ignore noncritical errors end_name end_expr end_expr_stmt end_block 
 begin_comment set the negation mode default false no negation param b the boolean negation mode to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set negate end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name negate end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment date and time stamp given to the local copy defaults to code current code param timestamp the file time stamping behaviour end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file time stamp end_name begin_parameter_list begin_param begin_decl begin_type begin_name current mod updated end_name end_type begin_name timestamp end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal file time stamp end_name end_name begin_argument_list begin_argument begin_expr begin_name timestamp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment used for isolated resource seaching return the root classloader of ant class loader end_comment begin_type begin_specifier end_specifier begin_name class loader end_name end_type begin_name get root loader end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name ret end_name begin_init begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class loader end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name ret end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name get parent end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name ret end_name begin_operator EQ end_operator begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name get parent end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_name ret end_name end_expr end_return end_block 
 begin_comment helper method calls on the star team api to retrieve an id number for the specified view corresponding to this label param v the code view code in which to search for code this label code return the id number corresponding to code this label code or 1 if no label was provided exception build exception if code this label code does not correspond to any label in the supplied view end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get label id end_name begin_parameter_list begin_param begin_decl begin_type begin_name view end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name label end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name find label end_name begin_argument_list begin_argument begin_expr begin_name v end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name label in use end_name begin_operator DOT end_operator begin_name get id end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_operator MINUS end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment autoresponce behaviour valid options are y and n param response the auto response value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set autoresponse end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name response end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal auto response end_name end_name begin_argument_list begin_argument begin_expr begin_name response end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name execute java test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name get proxy end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name proxy end_name end_expr end_return end_block 
 begin_comment set the name of the method param method the name of the method to check end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set method end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name method end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name method end_name end_name begin_operator EQ end_operator begin_name method end_name end_expr end_expr_stmt end_block 
 begin_comment set the footer text to be placed at the bottom of each output file param text the footer text end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add footer end_name begin_parameter_list begin_param begin_decl begin_type begin_name html end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name footer end_name begin_operator EQ end_operator begin_name text end_name end_expr end_expr_stmt end_block 
 begin_comment adds a path to the classpath return a class path to be configured end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name compile classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name compile classpath end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name compile classpath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment call a target verify property is null param target build file target param property property name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name expect property unset end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument begin_argument begin_expr begin_name property end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the input encoding param input encoding code string code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set input encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name input encoding end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name input encoding end_name end_name begin_operator EQ end_operator begin_name input encoding end_name end_expr end_expr_stmt end_block 
 begin_comment attribute specifing whether to ignore the difference between and the two common directory characters param handle dir sep a boolean default is false since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set handle dir sep end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name handle dir sep end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name handle dir sep end_name end_name begin_operator EQ end_operator begin_name handle dir sep end_name end_expr end_expr_stmt end_block 
 begin_comment verifies that the ejb is valid if it is invalid an exception is thrown param build dir the directory where the ejb remote interface home interface and implementation class must be found throws ejbc exception if the ejb is invalid end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check configuration end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name build dir end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name ejbc exception end_name end_expr end_argument end_throws begin_block begin_comment check that the specified instance variables are valid end_comment begin_if begin_condition begin_expr begin_name home end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name ejbc exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name remote end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name ejbc exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name implementation end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name ejbc exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name beantype end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name entity bean end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name beantype end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name stateless session end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name beantype end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name stateful session end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name ejbc exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name beantype end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name cmp end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name beantype end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name entity bean end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name hasession end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name beantype end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name stateful session end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment check that the ejb source classes all exist end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name remote end_name begin_operator DOT end_operator begin_name get class file end_name end_name begin_argument_list begin_argument begin_expr begin_name build dir end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name ejbc exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name remote end_name begin_operator DOT end_operator begin_name get qualified class name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name home end_name begin_operator DOT end_operator begin_name get class file end_name end_name begin_argument_list begin_argument begin_expr begin_name build dir end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name ejbc exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name home end_name begin_operator DOT end_operator begin_name get qualified class name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name implementation end_name begin_operator DOT end_operator begin_name get class file end_name end_name begin_argument_list begin_argument begin_expr begin_name build dir end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name ejbc exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name implementation end_name begin_operator DOT end_operator begin_name get qualified class name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment calculate the checksum s return returns true if the checksum verification test passed false otherwise throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name is condition end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr begin_call begin_name validate and execute end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment returns the current datatype definition hashtable the returned hashtable is live and so should not be modified return a map of from datatype name to implementing class string to class end_comment begin_type begin_specifier end_specifier begin_name hashtable end_name end_type begin_name get ant type table end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name ant type table end_name end_expr end_return end_block 
 begin_comment get the file necessary to load the sun compiler tools if the classes are available to this class then no additional url is required and null is returned this may be because the classes are explicitly in the class path or provided by the jvm directly return the tools jar as a file if required null otherwise end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name file end_name end_type begin_name get tools jar end_name begin_parameter_list end_parameter_list begin_block begin_comment firstly check if the tools jar is already in the classpath end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name tools jar available end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_comment just check whether this throws an exception end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name tools jar available end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name tools jar available end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e 2 end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_catch end_try begin_if begin_condition begin_expr begin_name tools jar available end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment couldn t find compiler try to find tools jar end_comment begin_comment based on java home setting end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name java home end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name tools jar end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name java home end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name tools jar end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment found in java home as given end_comment begin_return begin_expr begin_name tools jar end_name end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name java home end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name java home end_name begin_operator EQ end_operator begin_call begin_name begin_name java home end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name java home end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name tools jar end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name java home end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name tools jar end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name tools jar end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_name tools jar end_name end_expr end_return end_block 
 begin_comment set the name of the field param field the name of the field to check end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set field end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name field end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name field end_name end_name begin_operator EQ end_operator begin_name field end_name end_expr end_expr_stmt end_block 
 begin_comment test fork forked output goes to log end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test fork end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment build the command line br get file required parameters server name password database project file br get file optional parameters workdir revision verbose nocache nocompression soshome br get project required parameters server name password database project br get project optional parameters label workdir recursive verbose nocache nocompression soshome br return commandline the generated command to be executed end_comment begin_type begin_specifier end_specifier begin_name commandline end_name end_type begin_name build cmd line end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name command line end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment if we find a file attribute then act on a file otherwise act on a project end_comment begin_if begin_condition begin_expr begin_call begin_name get filename end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment add command get file to the commandline end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name begin_name sos cmd end_name begin_operator DOT end_operator begin_name flag command end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name begin_name sos cmd end_name begin_operator DOT end_operator begin_name command get file end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment add file xxxxx to the commandline end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name begin_name sos cmd end_name begin_operator DOT end_operator begin_name flag file end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get filename end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment look for a version attribute end_comment begin_if begin_condition begin_expr begin_call begin_name get version end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment add revision xxxxx to the commandline end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name begin_name sos cmd end_name begin_operator DOT end_operator begin_name flag version end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get version end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_comment add command get project to the commandline end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name begin_name sos cmd end_name begin_operator DOT end_operator begin_name flag command end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name begin_name sos cmd end_name begin_operator DOT end_operator begin_name command get project end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment look for a recursive option end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get recursive end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment look for a label option end_comment begin_if begin_condition begin_expr begin_call begin_name get label end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name begin_name sos cmd end_name begin_operator DOT end_operator begin_name flag label end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get label end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name get required attributes end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get optional attributes end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name command line end_name end_expr end_return end_block 
 begin_comment check if bsf supports the language return true if bsf can create an engine for this language end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name supports language end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name table end_name begin_init begin_expr begin_operator LPAR end_operator begin_name hashtable end_name begin_operator RPAR end_operator begin_call begin_name begin_name reflect util end_name begin_operator DOT end_operator begin_name get field end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name bsf manager end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name engine class name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name table end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get language end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name engine class name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get language end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name get script class loader end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name load class end_name begin_argument_list begin_argument begin_expr begin_name engine class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get language end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name ex end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_catch end_try end_block 
 begin_comment set the source resource param a the resource to pack as a single element resource collection end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name a end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name set src resource end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name next end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment run task exception build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name saved file end_name begin_init begin_expr begin_name my file end_name end_expr end_init end_decl end_decl_stmt begin_comment may be altered in validate end_comment begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name properties end_name end_type begin_name properties end_name begin_init begin_expr begin_call begin_name load properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name build number end_name begin_init begin_expr begin_call begin_name get build number end_name begin_argument_list begin_argument begin_expr begin_name properties end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name default property name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_name build number end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment write the properties file back out end_comment begin_decl_stmt begin_decl begin_type begin_name file output stream end_name end_type begin_name output end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name output end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name my file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name header end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name store end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument begin_argument begin_expr begin_name header end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_name my file end_name end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name output end_name end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ioe end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if begin_expr_stmt begin_expr begin_name my file end_name begin_operator EQ end_operator begin_name saved file end_name end_expr end_expr_stmt end_block end_finally end_try begin_comment finally set the property end_comment begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set new property end_name begin_argument_list begin_argument begin_expr begin_name default property name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_name build number end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test handling of null arguments end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test null args end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name null pointer exception end_name end_type begin_name npe end_name end_decl end_param end_parameter_list begin_block begin_comment expected exception caught end_comment end_block end_catch end_try begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute file end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the title return the title end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get title end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name title end_name begin_operator UNP end_operator begin_operator QM end_operator begin_call begin_name begin_name title end_name begin_operator DOT end_operator begin_name get text end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator end_expr end_return end_block 
 begin_comment get this project s input stream return the input stream instance in use by this project instance to read input end_comment begin_type begin_specifier end_specifier begin_name input stream end_name end_type begin_name get default input stream end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name default input stream end_name end_expr end_return end_block 
 begin_comment constructs an instance which may be used to process ejb descriptors and generate ejb stubs and skeletons if needed param std descriptor file referencing a standard ejb descriptor param ias descriptor file referencing an i as specific ejb descriptor param dest directory file referencing the base directory where both ejb source files are found and where stubs and skeletons will be written param classpath string representation of the classpath to be used by the i as ejbc utility param parser sax parser to be used to process both of the ejb descriptors todo classpath elements is not needed here its never used at least idea tells me so end_comment begin_specifier end_specifier begin_name i planet ejbc end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name std descriptor end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name ias descriptor end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest directory end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name classpath end_name end_decl end_param begin_param begin_decl begin_type begin_name sax parser end_name end_type begin_name parser end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name std descriptor end_name end_name begin_operator EQ end_operator begin_name std descriptor end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ias descriptor end_name end_name begin_operator EQ end_operator begin_name ias descriptor end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dest directory end_name end_name begin_operator EQ end_operator begin_name dest directory end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_name classpath end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name parser end_name end_name begin_operator EQ end_operator begin_name parser end_name end_expr end_expr_stmt begin_comment parse the classpath into it s individual elements and store the results in the classpath elements instance variable end_comment begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name elements end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name classpath end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name st end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name path separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name st end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name elements end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name st end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name classpath elements end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name begin_name string end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name elements end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name elements end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test test tar task end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name test logo extraction end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment begin a download end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name begin download end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name dots end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test file resource end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name regexp end_name end_type begin_name get regexp implementation end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name jakarta regexp regexp end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment creates child elements creates children of the children recursively and sets attributes of the child elements param parent the configured object for the parent must not be code null code param parent wrapper the wrapper containing child wrappers to be configured must not be code null code if there are any children exception build exception if the children cannot be configured end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle children end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name runtime configurable end_name end_type begin_name parent wrapper end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name parent end_name begin_operator UNP end_operator begin_name type adapter end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parent end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name type adapter end_name begin_operator RPAR end_operator begin_name parent end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get proxy end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parent uri end_name begin_init begin_expr begin_call begin_name get namespace end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name parent class end_name begin_init begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name introspection helper end_name end_type begin_name ih end_name begin_init begin_expr begin_call begin_name begin_name introspection helper end_name begin_operator DOT end_operator begin_name get helper end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name parent class end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name children end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name it end_name begin_init begin_expr begin_call begin_name begin_name children end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name runtime configurable end_name end_type begin_name child wrapper end_name begin_init begin_expr begin_call begin_name begin_name parent wrapper end_name begin_operator DOT end_operator begin_name get child end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name unknown element end_name end_type begin_name child end_name begin_init begin_expr begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name handle child end_name begin_argument_list begin_argument begin_expr begin_name parent uri end_name end_expr end_argument begin_argument begin_expr begin_name ih end_name end_expr end_argument begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name child end_name end_expr end_argument begin_argument begin_expr begin_name child wrapper end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name parent end_name begin_operator UNP end_operator begin_name task container end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name throw not supported end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name get tag end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment a task container anything could happen just add the end_comment begin_comment child to the container end_comment begin_decl_stmt begin_decl begin_type begin_name task container end_name end_type begin_name container end_name begin_init begin_expr begin_operator LPAR end_operator begin_name task container end_name begin_operator RPAR end_operator begin_name parent end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name container end_name begin_operator DOT end_operator begin_name add task end_name end_name begin_argument_list begin_argument begin_expr begin_name child end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unsupported element exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name parent wrapper end_name begin_operator DOT end_operator begin_name get element tag end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name get element end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_for end_block end_then end_if end_block 
 begin_comment add a new fileset with the option to specify permissions return the tar fileset to be used as the nested element end_comment begin_type begin_specifier end_specifier begin_name tar file set end_name end_type begin_name create tar file set end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name tar file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name tar file set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name fs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name fs end_name end_expr end_return end_block 
 begin_comment create an object for a component param component name the name of the component if the component is in a namespace the name is prefixed with the namespace uri and return the class if found or null if not end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name create component end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name component name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name ant type definition end_name end_type begin_name def end_name begin_init begin_expr begin_call begin_name get definition end_name begin_argument_list begin_argument begin_expr begin_name component name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator LPAR end_operator begin_name def end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name create end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_specifier end_specifier begin_name dynamic filter test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the main argument or null for no argument needed return the main class parameter to csc end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get main class parameter end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name main class end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name main class end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator PLUS end_operator begin_name main class end_name end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr end_expr end_return end_block end_else end_if end_block 
 begin_comment run a target assert the index file is there look for text in the log param target name target param text optional text to look for end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name expect report with text end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name target name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert index created end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name text end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert log containing end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment cache the system properties and set the system properties to the new values throws build exception if security prevented this operation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set system end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name sys end_name begin_operator EQ end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get properties end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name sys end_name begin_operator DOT end_operator begin_name property names end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name sys end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name put all end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name merge property sets end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name variables end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name environment end_name begin_operator DOT end_operator begin_name variable end_name end_name end_type begin_name v end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name environment end_name begin_operator DOT end_operator begin_name variable end_name end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name validate end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name get key end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set properties end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name security exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment return the canonical form of a filename p if the specified file name is relative it is resolved with respect to the given root directory param file name the name of the file to resolve must not be code null code param root dir the directory respective to which relative file names are resolved may be code null code in which case the current directory is used return the resolved file deprecated since 1 4 x end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name resolve file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name file name end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name root dir end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name root dir end_name end_expr end_argument begin_argument begin_expr begin_name file name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment returns all path elements defined by this and nested path objects return list of path elements end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name list end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name path end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name list end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name assert filesystem only end_name begin_argument_list begin_argument begin_expr begin_name union end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr end_expr end_index end_name begin_operator DP end_operator begin_call begin_name begin_name union end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment handles the end of the element this pops the wrapper from the context param uri the namespace uri for the element param tag the name of the element param context the current context end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name on end element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name tag end_name end_decl end_param begin_param begin_decl begin_type begin_name ant xml context end_name end_type begin_name context end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name pop wrapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this method builds a file path to use in conjunction with directories p use code genericantfile code in order to run the same build file with different basedirs p if this attribute is set code antfile code is ignored param afile path of the generic ant file absolute or relative to project base directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set generic antfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name afile end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name genericantfile end_name end_name begin_operator EQ end_operator begin_name afile end_name end_expr end_expr_stmt end_block 
 begin_comment execute the command param command the command to exec return the exit value of the command throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name run end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name command end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name err end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_comment assume the worst end_comment begin_comment test if os match end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name myos end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name myos end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name os end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name myos end_name end_expr end_argument end_argument_list end_call begin_operator LT end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_comment this command will be executed only on the specified os end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name os end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment default directory to the project s base directory end_comment begin_if begin_condition begin_expr begin_name dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dir end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name myos end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name myos end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name command end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name dir end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name command end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name ant end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant home end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ant end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant home end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name ant run end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name ant end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name command end_name begin_operator EQ end_operator begin_name ant run end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name dir end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name command end_name end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name ant end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant home end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ant end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant home end_name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name ant run end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name ant end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name command end_name begin_operator EQ end_operator begin_name ant run end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name dir end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name command end_name end_expr end_expr_stmt end_block end_else end_if begin_try begin_block begin_comment show the command end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment exec command on system runtime end_comment begin_decl_stmt begin_decl begin_type begin_name process end_name end_type begin_name proc end_name begin_init begin_expr begin_call begin_name begin_name runtime end_name begin_operator DOT end_operator begin_name get runtime end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exec end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name out end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name fos end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file writer end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment copy input and error to the output stream end_comment begin_decl_stmt begin_decl begin_type begin_name stream pumper end_name end_type begin_name input pumper end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name stream pumper end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name proc end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name stream pumper end_name end_type begin_name error pumper end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name stream pumper end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name proc end_name begin_operator DOT end_operator begin_name get error stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment starts pumping away the generated output error end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name input pumper end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name error pumper end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment wait for everything to finish end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name proc end_name begin_operator DOT end_operator begin_name wait for end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name input pumper end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name error pumper end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name proc end_name begin_operator DOT end_operator begin_name destroy end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment close the output file if required end_comment begin_expr_stmt begin_expr begin_call begin_name log flush end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment check its exit value end_comment begin_expr_stmt begin_expr begin_name err end_name begin_operator EQ end_operator begin_call begin_name begin_name proc end_name begin_operator DOT end_operator begin_name exit value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name err end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name fail on error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name err end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name err end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name command end_name end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try begin_return begin_expr begin_name err end_name end_expr end_return end_block 
 begin_comment overridden method to return the decimal value for display return a string version of the integer end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment sets a stream to which the stderr from the cvs exe should go param error stream an output stream willing to process stderr end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set error stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name error stream end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name error stream end_name end_name begin_operator EQ end_operator begin_name error stream end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no name end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the classpath used to find the doclet class by reference param r the reference to the path instance to use as the doclet classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set doclet path ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name doclet end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name doclet end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name doclet info end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name doclet end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name doclet end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set refid end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the type s uri return the string uri end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get uri end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name uri end_name end_expr end_return end_block 
 begin_comment action taken when local files are writable defaults to code fail code p due to ss exe returning with an exit code of 100 for both errors and when a file has been skipped code failonerror code is set to false when using the code skip code option p param files the writable files behaviour end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set writable files end_name begin_parameter_list begin_param begin_decl begin_type begin_name writable files end_name end_type begin_name files end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal writable files end_name end_name begin_argument_list begin_argument begin_expr begin_name files end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a lt istrue gt condition param test an is true condition since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add is true end_name begin_parameter_list begin_param begin_decl begin_type begin_name is true end_name end_type begin_name test end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name conditions end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment tests whether the implementation has been chosen by the user either via a magic property or explicitly return true if magic or user choice has be set since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has been set end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name user choice end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name magic value end_name begin_operator UNP end_operator end_expr end_return end_block 
 begin_comment constructor to use when the user has specified a classpath param test the test to run param halt on error whether to stop the run if an error is found param filtertrace whether to filter junit stack frames out of exceptions param halt on failure whether to stop the run if failure is found param loader the classloader to use running the test end_comment begin_specifier end_specifier begin_name j unit test runner end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name halt on error end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name filtertrace end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name halt on failure end_name end_decl end_param begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name loader end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name halt on error end_name end_expr end_argument begin_argument begin_expr begin_name filtertrace end_name end_expr end_argument begin_argument begin_expr begin_name halt on failure end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment read a section through a reader param reader the reader from which the section is read return the name of the next section if it has been read as part of this section this only happens if the manifest is malformed throws manifest exception if the section is not valid according to the jar spec throws io exception if the section cannot be read from the reader end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name read end_name begin_parameter_list begin_param begin_decl begin_type begin_name buffered reader end_name end_type begin_name reader end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name manifest exception end_name end_expr end_argument begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name attribute end_name end_type begin_name attribute end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name begin_init begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name line end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment continuation line end_comment begin_if begin_condition begin_expr begin_name attribute end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment a continuation on the first line is a end_comment begin_comment continuation of the name concatenate this end_comment begin_comment line and the name end_comment begin_expr_stmt begin_expr begin_name name end_name begin_operator UNP end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name manifest exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name add continuation end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name attribute end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name attribute end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name read ahead end_name begin_init begin_expr begin_call begin_name add attribute and check end_name begin_argument_list begin_argument begin_expr begin_name attribute end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment refresh attribute in case of multivalued attributes end_comment begin_expr_stmt begin_expr begin_name attribute end_name begin_operator EQ end_operator begin_call begin_name get attribute end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get key end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name name read ahead end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name name read ahead end_name end_expr end_return end_block end_then end_if end_block end_else end_if end_block end_while end_block 
 begin_comment param timeout the timeout value to use in milliseconds see execute watchdog long deprecated since 1 5 x use constructor with a long type instead 1 4 x compatibility end_comment begin_specifier end_specifier begin_name execute watchdog end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name timeout end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name long end_name begin_operator RPAR end_operator begin_name timeout end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment handles a target definition element by creating a target handler and initialising is with the details of the element param tag the name of the element to be handled will not be code null code param attrs attributes of the element to be handled will not be code null code exception sax parse exception if an error occurs initialising the handler end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle target end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name tag end_name end_decl end_param begin_param begin_decl begin_type begin_name attribute list end_name end_type begin_name attrs end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax parse exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name target handler end_name begin_argument_list begin_argument begin_expr begin_name helper impl end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name init end_name begin_argument_list begin_argument begin_expr begin_name tag end_name end_expr end_argument begin_argument begin_expr begin_name attrs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment list of files to concatenate param list the list of files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add filelist end_name begin_parameter_list begin_param begin_decl begin_type begin_name file list end_name end_type begin_name list end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name list end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for the mapper type enumeration end_comment begin_specifier end_specifier begin_name mapper type end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name implementations end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name implementations end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name implementations end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name implementations end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name implementations end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name implementations end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name implementations end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name implementations end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment default implementation end_comment begin_comment methods used to support the default behavior and provide backward end_comment begin_comment compatibility some will be deprecated you should avoid calling them end_comment begin_comment default implementation of set property will be called from project this is the original 1 5 implementation with calls to the hook added param ns the namespace for the property currently not used param name the name of the property param value the value to set the property to param verbose if this is true output extra log messages return true if the property is set end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name set property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name ns end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name value end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name verbose end_name end_decl end_param end_parameter_list begin_block begin_comment user cli properties take precedence end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name user properties end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name verbose end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name done end_name begin_init begin_expr begin_call begin_name set property hook end_name begin_argument_list begin_argument begin_expr begin_name ns end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name done end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name verbose end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name verbose end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name value end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block 
 begin_comment set whether to reevaluate the set everytime the set is used default is true param dynamic if true reevaluate the property set each time the set is used if false cache the property set the first time and use the cached set on subsequent occasions end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dynamic end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name dynamic end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert not reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dynamic end_name end_name begin_operator EQ end_operator begin_name dynamic end_name end_expr end_expr_stmt end_block 
 begin_comment helper method to get the value as a java int from a two byte array param bytes the array of bytes return the correspondanding java int value end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name get value end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name bytes end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name get value end_name begin_argument_list begin_argument begin_expr begin_name bytes end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test two mappers end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name expand end_name begin_operator DOT end_operator begin_name error multiple mappers end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the resource name of a property file to load param resource resource on classpath ant attribute group noname end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name resource end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name resource end_name end_name begin_operator EQ end_operator begin_name resource end_name end_expr end_expr_stmt end_block 
 begin_comment the name of a file containing the packages to process param src the file containing the package list end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set package list end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name package list end_name begin_operator EQ end_operator begin_name src end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name enumerated attribute test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no resource on error not fail end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no string return end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name j unit version helper end_name begin_operator DOT end_operator begin_name get test case name end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name foo 2 end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add the directories matched by the nested dirsets to the vector and the base directories of the dirsets to the path it also handles the packages and excludepackages attributes and elements since 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name parse packages end_name begin_parameter_list begin_param begin_decl begin_type begin_name vector end_name end_type begin_name pn end_name end_decl end_param begin_param begin_decl begin_type begin_name path end_name end_type begin_name sp end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name added packages end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name dir sets end_name begin_init begin_expr begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name begin_name package sets end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment for each source path entry add a directoryset with includes end_comment begin_comment taken from packagenames attribute and nested package end_comment begin_comment elements and excludes taken from excludepackages attribute end_comment begin_comment and nested excludepackage elements end_comment begin_if begin_condition begin_expr begin_name source path end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name pattern set end_name end_type begin_name ps end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name pattern set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name package names end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name package names end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name package name end_name end_type begin_name p end_name begin_init begin_expr begin_operator LPAR end_operator begin_name package name end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name pkg end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name pkg end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name pkg end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name ps end_name begin_operator DOT end_operator begin_name create include end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set name end_name begin_argument_list begin_argument begin_expr begin_name pkg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ps end_name begin_operator DOT end_operator begin_name create include end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name exclude package names end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name package name end_name end_type begin_name p end_name begin_init begin_expr begin_operator LPAR end_operator begin_name package name end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name pkg end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name pkg end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name pkg end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name ps end_name begin_operator DOT end_operator begin_name create exclude end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set name end_name begin_argument_list begin_argument begin_expr begin_name pkg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name path elements end_name begin_init begin_expr begin_call begin_name begin_name source path end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name path elements end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dir end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name path elements end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name dir set end_name end_type begin_name ds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name dir set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set defaultexcludes end_name end_name begin_argument_list begin_argument begin_expr begin_name use default excludes end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name create pattern set end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add configured patternset end_name begin_argument_list begin_argument begin_expr begin_name ps end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dir sets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name path elements end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name dir sets end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name dir set end_name end_type begin_name ds end_name begin_init begin_expr begin_operator LPAR end_operator begin_name dir set end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name base dir end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name base dir end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name dsc end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name dirs end_name begin_init begin_expr begin_call begin_name begin_name dsc end_name begin_operator DOT end_operator begin_name get included directories end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name contains packages end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name dirs end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_comment are there any java files in this directory end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name pd end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name dirs end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name pd end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_class begin_super begin_name filename filter end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name accept end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_name include no source packages end_name begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block end_function end_block end_class end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name dirs end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name contains packages end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name package name end_name begin_init begin_expr begin_name begin_name dirs end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name added packages end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name package name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name added packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name package name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pn end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name package name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_name contains packages end_name end_expr end_condition begin_then begin_block begin_comment we don t need to care for duplicates here end_comment begin_comment path list does it for us end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name sp end_name begin_operator DOT end_operator begin_name create path element end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set location end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_while end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test catalog end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test factory end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name factory end_name end_type begin_name ea end_name begin_init begin_expr begin_operator LPAR end_operator begin_name factory end_name begin_operator RPAR end_operator begin_call begin_name begin_name enumerated attribute end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name factory end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ea end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name enumerated attribute end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name factory end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_comment was expected end_comment end_block end_catch end_try end_block 
 begin_comment see enumerated attribute get values end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_return end_block 
 begin_comment the name of the file to import how relative paths are resolved is still in flux use absolute paths for safety param file the name of the file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_comment i don t think we can use file different rules end_comment begin_comment for relative paths end_comment begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set to end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment get this entry s user id return this entry s user id end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get user id end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name user id end_name end_name end_expr end_return end_block 
 begin_comment set the value of the condition this is used by the script to pass the return value it can be used by an attribute in which case it sets the default value param value the value to set the condition to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment convert the selectors within this container to a string this will just be a helper class for the subclasses that put their own name around the contents listed here return comma separated list of selectors contained in this one end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name selector elements end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment tests vss history commandline generation with from label end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test history command line 1 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s test cmd line end_name begin_init begin_expr begin_block begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name ss exe end_name end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name command history end_name end_name end_expr begin_expr begin_name ds vss project path end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag autoresponse def end_name end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag version label end_name end_name begin_operator PLUS end_operator begin_name long label end_name begin_operator PLUS end_operator begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name value fromlabel end_name end_name begin_operator PLUS end_operator begin_name src label end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag login end_name end_name begin_operator PLUS end_operator begin_name vss username end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name vss password end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag output end_name end_name begin_operator PLUS end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_name output end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_comment set up a vss history task end_comment begin_decl_stmt begin_decl begin_type begin_name msvsshistory end_name end_type begin_name vss history end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name msvsshistory end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss history end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss history end_name begin_operator DOT end_operator begin_name set login end_name end_name begin_argument_list begin_argument begin_expr begin_name vss username end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name vss password end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss history end_name begin_operator DOT end_operator begin_name set from label end_name end_name begin_argument_list begin_argument begin_expr begin_name src label end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss history end_name begin_operator DOT end_operator begin_name set to label end_name end_name begin_argument_list begin_argument begin_expr begin_name long label end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss history end_name begin_operator DOT end_operator begin_name set vsspath end_name end_name begin_argument_list begin_argument begin_expr begin_name vss project path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss history end_name begin_operator DOT end_operator begin_name set recursive end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss history end_name begin_operator DOT end_operator begin_name set output end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name commandline end_name begin_operator EQ end_operator begin_call begin_name begin_name vss history end_name begin_operator DOT end_operator begin_name build cmd line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check command lines end_name begin_argument_list begin_argument begin_expr begin_name s test cmd line end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the value of this header param value the value to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment this is a consistency check to ensure the selector s required values have been set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name verify settings end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name date time end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name millis end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name millis end_name begin_operator LT end_operator begin_operator UNP end_operator begin_name date time end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment check millis and only set it once end_comment begin_decl_stmt begin_decl begin_type begin_name date format end_name end_type begin_name df end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name pattern end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name begin_name date format end_name begin_operator DOT end_operator begin_name get date time instance end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name date format end_name begin_operator DOT end_operator begin_name short end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name date format end_name begin_operator DOT end_operator begin_name short end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name simple date format end_name begin_argument_list begin_argument begin_expr begin_name pattern end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name set millis end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name df end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_name date time end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get time end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name millis end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name date time end_name begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name parse exception end_name end_type begin_name pe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name date time end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name pattern end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_name pattern end_name begin_operator RPAR end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if end_else end_if end_block 
 begin_type begin_name object end_name end_type begin_name create end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name ignore end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_name nested element end_name end_expr end_return end_block 
 begin_comment restore symlinks throws build exception on error since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name recreate end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name file sets end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name handle error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name links end_name begin_init begin_expr begin_call begin_name load links end_name begin_argument_list begin_argument begin_expr begin_name file sets end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name kitr end_name begin_init begin_expr begin_call begin_name begin_name links end_name begin_operator DOT end_operator begin_name key set end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name kitr end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name lnk end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name kitr end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name res end_name begin_init begin_expr begin_call begin_name begin_name links end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name lnk end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment handle the case where lnk points to a directory bug 25181 end_comment begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name test end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name lnk end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name is symbolic link end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name lnk end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name do link end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument begin_argument begin_expr begin_name lnk end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name get canonical path end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get canonical path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name delete symlink end_name begin_argument_list begin_argument begin_expr begin_name lnk end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name do link end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument begin_argument begin_expr begin_name lnk end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_comment else lnk exists do nothing end_comment end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name handle error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_for end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name set defaults end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment mandatory constructor end_comment begin_specifier end_specifier begin_name j unit test runner test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init build prop file end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name build props end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name build props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name test property file key end_name end_expr end_argument begin_argument begin_expr begin_name test property file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name build props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name fname key end_name end_expr end_argument begin_argument begin_expr begin_name new fname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name build props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name lname key end_name end_expr end_argument begin_argument begin_expr begin_name new lname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name build props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name email key end_name end_expr end_argument begin_argument begin_expr begin_name new email end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name build props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name phone key end_name end_expr end_argument begin_argument begin_expr begin_name new phone end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name build props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name age key end_name end_expr end_argument begin_argument begin_expr begin_name new age end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name build props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name date key end_name end_expr end_argument begin_argument begin_expr begin_name new date end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file output stream end_name end_type begin_name fos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name build props file path end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name build props end_name begin_operator DOT end_operator begin_name store end_name end_name begin_argument_list begin_argument begin_expr begin_name fos end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment performs the check for circular references and returns the referenced pattern set end_comment begin_type begin_specifier end_specifier begin_name pattern set end_name end_type begin_name get ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name pattern set end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment set the return code to check param c the return code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set code end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name code end_name begin_operator EQ end_operator begin_name c end_name end_expr end_expr_stmt end_block 
 begin_comment the password of the user optional param password a string representing the password attribute end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set password end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name password end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name password end_name end_name begin_operator EQ end_operator begin_name password end_name end_expr end_expr_stmt end_block 
 begin_comment create the url throws org apache tools ant build exception if something goes wrong with the build end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment now exit here if the property is already set end_comment begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name url end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name fileset url end_name begin_init begin_expr begin_call begin_name filesets to url end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name validate file end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name url end_name begin_operator EQ end_operator begin_call begin_name to url end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment and add any files if also defined end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name fileset url end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name url end_name begin_operator EQ end_operator begin_name url end_name begin_operator PLUS end_operator begin_name separator end_name begin_operator PLUS end_operator begin_name fileset url end_name end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name url end_name begin_operator EQ end_operator begin_name fileset url end_name end_expr end_expr_stmt end_block end_else end_if begin_comment add path ur ls end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path url end_name begin_init begin_expr begin_call begin_name paths to url end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name path url end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name url end_name begin_operator EQ end_operator begin_name url end_name begin_operator PLUS end_operator begin_name separator end_name begin_operator PLUS end_operator begin_name path url end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name url end_name begin_operator EQ end_operator begin_name path url end_name end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name property end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name url end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set new property end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name send mtf values end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index begin_index end_index end_type begin_name len end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name begin_operator DOT end_operator begin_name send mtf values len end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name alpha size end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name n in use end_name end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name t end_name begin_init begin_expr begin_name n groups end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_operator MMINUS end_operator begin_name t end_name begin_operator GE end_operator end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name len t end_name begin_init begin_expr begin_name begin_name len end_name begin_index begin_expr begin_name t end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name v end_name begin_init begin_expr begin_name alpha size end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_operator MMINUS end_operator begin_name v end_name begin_operator GE end_operator end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name len t end_name begin_index begin_expr begin_name v end_name end_expr end_index end_name begin_operator EQ end_operator begin_name greater icost end_name end_expr end_expr_stmt end_block end_for end_block end_for begin_comment decide how many coding tables to use end_comment begin_comment assert this n mtf 0 this n mtf end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name n groups end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name n mtf end_name end_name begin_operator LT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name n mtf end_name end_name begin_operator LT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name n mtf end_name end_name begin_operator LT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name n mtf end_name end_name begin_operator LT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_comment generate an initial set of coding tables end_comment begin_expr_stmt begin_expr begin_call begin_name send mtf values 0 end_name begin_argument_list begin_argument begin_expr begin_name n groups end_name end_expr end_argument begin_argument begin_expr begin_name alpha size end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment iterate up to n iters times to improve the tables end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name n selectors end_name begin_init begin_expr begin_call begin_name send mtf values 1 end_name begin_argument_list begin_argument begin_expr begin_name n groups end_name end_expr end_argument begin_argument begin_expr begin_name alpha size end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment compute mtf values for the selectors end_comment begin_expr_stmt begin_expr begin_call begin_name send mtf values 2 end_name begin_argument_list begin_argument begin_expr begin_name n groups end_name end_expr end_argument begin_argument begin_expr begin_name n selectors end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment assign actual codes for the tables end_comment begin_expr_stmt begin_expr begin_call begin_name send mtf values 3 end_name begin_argument_list begin_argument begin_expr begin_name n groups end_name end_expr end_argument begin_argument begin_expr begin_name alpha size end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment transmit the mapping table end_comment begin_expr_stmt begin_expr begin_call begin_name send mtf values 4 end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment now the selectors end_comment begin_expr_stmt begin_expr begin_call begin_name send mtf values 5 end_name begin_argument_list begin_argument begin_expr begin_name n groups end_name end_expr end_argument begin_argument begin_expr begin_name n selectors end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment now the coding tables end_comment begin_expr_stmt begin_expr begin_call begin_name send mtf values 6 end_name begin_argument_list begin_argument begin_expr begin_name n groups end_name end_expr end_argument begin_argument begin_expr begin_name alpha size end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment and finally the block data proper end_comment begin_expr_stmt begin_expr begin_call begin_name send mtf values 7 end_name begin_argument_list begin_argument begin_expr begin_name n selectors end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set extra command options only used on some of the perforce tasks param p 4 cmd opts command line options going after the particular perforce command end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set cmdopts end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name p 4 cmd opts end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name p 4 cmd opts end_name end_name begin_operator EQ end_operator begin_name p 4 cmd opts end_name end_expr end_expr_stmt end_block 
 begin_comment adds a permission to be granted param perm the permissions permission to be granted end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured grant end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name permissions end_name begin_operator DOT end_operator begin_name permission end_name end_name end_type begin_name perm end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name granted permissions end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name perm end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment executes this build task throws org apache tools ant build exception if there is an error during task execution exception build exception description of exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name sleep time end_name begin_init begin_expr begin_call begin_name get sleep time end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name sleep time end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name do sleep end_name begin_argument_list begin_argument begin_expr begin_name sleep time end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name fail on error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name text end_name begin_init begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test negation false end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property unset end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the merged include patterns for this abstract file set param p the project to use return the include patterns of the default pattern set and all nested patternsets since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name merge includes end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name merge patterns end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get include patterns end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 5 end_name begin_parameter_list end_parameter_list begin_block begin_comment should print panic cannot find import vocab file java token types txt end_comment begin_comment since it needs to run java g first before java tree g end_comment begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment since 1 9 end_comment begin_specifier end_specifier begin_name zip entry end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name project end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name clone vm end_name begin_operator EQ end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name clone vm end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment gets the full paths parameter attribute of the c sharp object return the full paths parameter value or null if unset end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get full paths parameter end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name fullpaths end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test open end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name los end_name begin_operator DOT end_operator begin_name open end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name los end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name f end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the code verbose code attribute return whether to display all files as it checks them out see set verbose boolean verbose end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get verbose end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name verbose end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test ant end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment adds a file to be merged into the output param file to merge the file to merge into the output end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add merge file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name file to merge end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name file to merge end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name mergefiles end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name file to merge end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructs a new build listener that logs build events to an xml file end_comment begin_specifier end_specifier begin_name xml logger end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment add a name value pair to the project property set param n name of property param v value to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name n end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name user property end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get user property end_name begin_argument_list begin_argument begin_expr begin_name n end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set inherited property end_name begin_argument_list begin_argument begin_expr begin_name n end_name end_expr end_argument begin_argument begin_expr begin_name v end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name n end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set new property end_name begin_argument_list begin_argument begin_expr begin_name n end_name end_expr end_argument begin_argument begin_expr begin_name v end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment param p the current project return the directory attribute end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get dir end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_name dir end_name end_expr end_return end_block 
 begin_comment sets the quot to quot pattern required param to the to pattern throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set to end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name to end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name to end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name to end_name begin_operator DOT end_operator begin_name to char array end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the distinguished name for entity param dname distinguished name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dname end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name dname end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name expanded dname end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dname end_name end_name begin_operator EQ end_operator begin_name dname end_name end_expr end_expr_stmt end_block 
 begin_comment the filtering attribute default is false param filter if true use filtering end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set filtering end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name filter end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name filtering end_name begin_operator EQ end_operator begin_name filter end_name end_expr end_expr_stmt end_block 
 begin_comment fired when a target finishes building this adds the time taken and any error stacktrace to the appropriate target element in the log param event an event with any relevant extra information will not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name target end_name end_type begin_name target end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name timed element end_name end_type begin_name target element end_name begin_init begin_expr begin_operator LPAR end_operator begin_name timed element end_name begin_operator RPAR end_operator begin_call begin_name begin_name targets end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name target element end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name total time end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name begin_name target element end_name begin_operator DOT end_operator begin_name start time end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name target element end_name begin_operator DOT end_operator begin_name element end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name time attr end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name default logger end_name begin_operator DOT end_operator begin_name format time end_name end_name begin_argument_list begin_argument begin_expr begin_name total time end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name timed element end_name end_type begin_name parent element end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name stack end_name end_type begin_name thread stack end_name begin_init begin_expr begin_call begin_name get stack end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name thread stack end_name begin_operator DOT end_operator begin_name empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name timed element end_name end_type begin_name popped stack end_name begin_init begin_expr begin_operator LPAR end_operator begin_name timed element end_name begin_operator RPAR end_operator begin_call begin_name begin_name thread stack end_name begin_operator DOT end_operator begin_name pop end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name popped stack end_name begin_operator UNP end_operator begin_name target element end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name popped stack end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name target element end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name thread stack end_name begin_operator DOT end_operator begin_name empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parent element end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name timed element end_name begin_operator RPAR end_operator begin_call begin_name begin_name thread stack end_name begin_operator DOT end_operator begin_name peek end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name parent element end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name build element end_name begin_operator DOT end_operator begin_name element end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name target element end_name begin_operator DOT end_operator begin_name element end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name parent element end_name begin_operator DOT end_operator begin_name element end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name target element end_name begin_operator DOT end_operator begin_name element end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name targets end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the encoding to use for reading in an existing manifest file param encoding the manifest file encoding end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name encoding end_name end_name begin_operator EQ end_operator begin_name encoding end_name end_expr end_expr_stmt end_block 
 begin_comment property name whose value should be set to the output of the process param output property the name of the property to be set with the task s output end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set output property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output property end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name output property end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name output property end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name output property end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name output property end_name end_name begin_operator EQ end_operator begin_name output property end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name baos end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment set a lookup list of user names addresses param users file the file containing the users info end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set usersfile end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name users file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name users file end_name end_name begin_operator EQ end_operator begin_name users file end_name end_expr end_expr_stmt end_block 
 begin_comment get the local file return the local file end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get local file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name local file end_name end_expr end_return end_block 
 begin_comment creates an empty email address end_comment begin_specifier end_specifier begin_name email address end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment add an environment variable p will be ignored if we are not forking a new vm param var new environment variable since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add env end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name environment end_name begin_operator DOT end_operator begin_name variable end_name end_name end_type begin_name var end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name env end_name begin_operator DOT end_operator begin_name add variable end_name end_name begin_argument_list begin_argument begin_expr begin_name var end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates an unknown location end_comment begin_specifier end_specifier begin_name location end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment get the value of project return value of project end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get ccm project end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name ccm project end_name end_expr end_return end_block 
 begin_comment sets the location of the standard xml ejb descriptor typically this file is named ejb jar xml param ejbdescriptor the name and location of the ejb descriptor end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set ejbdescriptor end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name ejbdescriptor end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ejbdescriptor end_name end_name begin_operator EQ end_operator begin_name ejbdescriptor end_name end_expr end_expr_stmt end_block 
 begin_comment will be called every time a namespace is reached it ll verify if the ns was processed and if not load the task definitions param uri the namespace uri end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check namespace end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment set the packages to javadoc on param src a comma separated list of packages end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set packages end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name tok end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name package name end_name end_type begin_name pn end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name package name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pn end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add package end_name begin_argument_list begin_argument begin_expr begin_name pn end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_comment called by the project to let the task initialize properly the default implementation is a no op exception build exception if something goes wrong with the build end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block end_block 
 begin_comment a utility method that runs an external command writes the output and error streams of the command to the project log param task the task that the command is part of used for logging param cmdline the command to execute throws build exception if the command does not exit successfully end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name run command end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name task end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name cmdline end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name describe command end_name end_name begin_argument_list begin_argument begin_expr begin_name cmdline end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name execute end_name end_type begin_name exe end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name execute end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name log stream handler end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set ant run end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set commandline end_name end_name begin_argument_list begin_argument begin_expr begin_name cmdline end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name retval end_name begin_init begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name is failure end_name begin_argument_list begin_argument begin_expr begin_name retval end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name begin_name cmdline end_name begin_index begin_expr end_expr end_index end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name retval end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_type begin_name exc end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name cmdline end_name begin_index begin_expr end_expr end_index end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name exc end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment create a new transformer based on the liaison settings throws exception thrown if there is an error during creation see set stylesheet java io file see add param java lang string java lang string see set output property java lang string java lang string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name create transformer end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name templates end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name read templates end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name transformer end_name begin_operator EQ end_operator begin_call begin_name begin_name templates end_name begin_operator DOT end_operator begin_name new transformer end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment configure the transformer end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name transformer end_name begin_operator DOT end_operator begin_name set error listener end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name uri resolver end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name transformer end_name begin_operator DOT end_operator begin_name set uri resolver end_name end_name begin_argument_list begin_argument begin_expr begin_name uri resolver end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name output properties end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name pair end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name string end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name output properties end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name transformer end_name begin_operator DOT end_operator begin_name set output property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name pair end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name pair end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment add a nested element definition param nested element the nested element definition end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add element end_name begin_parameter_list begin_param begin_decl begin_type begin_name nested element end_name end_type begin_name nested element end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name nested elements end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name nested element end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment contains regex filter param filter the contains regex filter end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add contains regex end_name begin_parameter_list begin_param begin_decl begin_type begin_name contains regex end_name end_type begin_name filter end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filters end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name filter end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add text to the element param t the text to be added end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add text end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name text end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name sync test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds a file to the output stream end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add file end_name begin_parameter_list begin_param begin_decl begin_type begin_name zip output stream end_name end_type begin_name output end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name compress end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment make sure file exists end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name zip entry end_name end_type begin_name entry end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name zip entry end_name begin_argument_list begin_argument begin_expr begin_call begin_name get entry name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name prefix end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name set time end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name set size end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name compress end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name set crc end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name calc checksum end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file input stream end_name end_type begin_name input end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add to output stream end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument begin_argument begin_expr begin_name input end_name end_expr end_argument begin_argument begin_expr begin_name entry end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the executable used to start the new jvm param vm the executable to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set vm end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name vm end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name vm command end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_name vm end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment find out the relative path to the root path of the enclosing scanner this relative path is spelled exactly like on disk for instance if the ant ftp file has been instantiated as alpha but the file is really called alpha this method will return alpha if a symbolic link is encountered it is followed but the name of the link rather than the name of the target is returned ie does not behave like file get canonical path return relative path separated by remote file sep throws io exception if a change directory fails throws build exception if one of the components of the relative path cannot be found end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get relative path end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name relative path calculated end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name parent end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name traverses symlinks end_name begin_operator EQ end_operator begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name is traverse symlinks end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name relative path end_name begin_operator EQ end_operator begin_call begin_name get relative path end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name get relative path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name relative path end_name begin_operator EQ end_operator begin_call begin_name get relative path end_name begin_argument_list begin_argument begin_expr begin_name root path end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name relative path calculated end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_return begin_expr begin_name relative path end_name end_expr end_return end_block 
 begin_comment param desc description of the text end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set description end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name desc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name description end_name begin_operator EQ end_operator begin_name desc end_name end_expr end_expr_stmt end_block 
 begin_comment reads the response throws a build exception if the response indicates an error param in the input stream to use throws io exception on i o error throws build exception on other errors end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name wait for ack end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name in end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name b end_name begin_init begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment b may be 0 for success end_comment begin_comment 1 for error end_comment begin_comment 2 for fatal error end_comment begin_if begin_condition begin_expr begin_name b end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_comment didn t receive any response end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_if begin_condition begin_expr begin_name b end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name c end_name begin_operator GT end_operator begin_operator UNP end_operator begin_name c end_name begin_operator UNP end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_if begin_condition begin_expr begin_name b end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_if begin_condition begin_expr begin_name b end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name b end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_else end_if end_block end_then end_if end_else end_if end_block 
 begin_comment get the ejbc compiler class return the name of the ejbc compiler class end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get ejbc class end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name ejbc class end_name end_expr end_return end_block 
 begin_comment gets the package name for the java class return string representing the package name for the class end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get package name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name package name end_name end_expr end_return end_block 
 begin_comment factory method for creating the appropriate catalog resolver strategy implementation p until we query the classpath we don t know whether the apache resolver norm walsh s library from xml commons is available or not this method determines whether the library is available and creates the appropriate implementation of catalog resolver based on the answer p p this is an application of the gang of four strategy pattern combined with template method p end_comment begin_type begin_specifier end_specifier begin_name catalog resolver end_name end_type begin_name get catalog resolver end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name catalog resolver end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name ant class loader end_name end_type begin_name loader end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name loader end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create class loader end_name begin_argument_list begin_argument begin_expr begin_name begin_name path end_name begin_operator DOT end_operator begin_name system classpath end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name clazz end_name begin_init begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name apache resolver end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name loader end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment the apache resolver is present need to check if it can end_comment begin_comment be seen by the catalog resolver class start by getting end_comment begin_comment the actual loader end_comment begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name apache resolver loader end_name begin_init begin_expr begin_call begin_name begin_name clazz end_name begin_operator DOT end_operator begin_name get class loader end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment load the base class through this loader end_comment begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name base resolver class end_name begin_init begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name catalog resolver end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name apache resolver loader end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment and find its actual loader end_comment begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name base resolver loader end_name begin_init begin_expr begin_call begin_name begin_name base resolver class end_name begin_operator DOT end_operator begin_name get class loader end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment we have the loader which is being used to load the end_comment begin_comment catalog resolver can it see the apache resolver the end_comment begin_comment base resolver will only be able to create the apache resolver end_comment begin_comment if it can see it doesn t use the context loader end_comment begin_expr_stmt begin_expr begin_name clazz end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name apache resolver end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name base resolver loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name obj end_name begin_init begin_expr begin_call begin_name begin_name clazz end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment end_comment begin_comment success the xml commons resolver library is end_comment begin_comment available so use it end_comment begin_comment end_comment begin_expr_stmt begin_expr begin_name catalog resolver end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name external resolver end_name begin_argument_list begin_argument begin_expr begin_name clazz end_name end_expr end_argument begin_argument begin_expr begin_name obj end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_comment end_comment begin_comment the xml commons resolver library is not end_comment begin_comment available so we can t use it end_comment begin_comment end_comment begin_expr_stmt begin_expr begin_name catalog resolver end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name internal resolver end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get catalog path end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name get catalog path end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name list end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name length end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ex end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if begin_return begin_expr begin_name catalog resolver end_name end_expr end_return end_block 
 begin_comment defines the language required param language the scripting language name for the script end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set language end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name language end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set language end_name end_name begin_argument_list begin_argument begin_expr begin_name language end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test move file and fileset end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return a archive file set that has the same properties as this one return the cloned archive file set since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name clone end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name archive file set end_name begin_operator RPAR end_operator begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name clone end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_comment evaluate the availability of a resource return boolean is the resource is available exception build exception if the condition is not configured correctly end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_if begin_condition begin_expr begin_name classname end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name file end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name resource end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name type end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name classpath end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name loader end_name end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create class loader end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name appendix end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name is task end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name appendix end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name property end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name set task name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name classname end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name check class end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name classname end_name begin_operator PLUS end_operator begin_name appendix end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name check file end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name type end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name type end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name appendix end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name check resource end_name begin_argument_list begin_argument begin_expr begin_name resource end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name resource end_name begin_operator PLUS end_operator begin_name appendix end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name loader end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name cleanup end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name loader end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name is task end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set task name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try begin_return begin_expr end_expr end_return end_block 
 begin_comment the regular expression used to search the file param theexpression this must match a line in the file to be selected end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set expression end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name theexpression end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name user provided expression end_name end_name begin_operator EQ end_operator begin_name theexpression end_name end_expr end_expr_stmt end_block 
 begin_comment sets an optional super grammar file use set glib file super grammar instead param super grammar the super grammar filename deprecated since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set glib end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name super grammar end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name sg end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name sg end_name begin_operator EQ end_operator begin_call begin_name begin_name super grammar end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name sg end_name begin_operator EQ end_operator begin_name super grammar end_name end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name set glib end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name sg end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment malformed manifest no on the line end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test magic property overrides empty string end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name rmic adapter factory end_name begin_operator DOT end_operator begin_name error unknown compiler end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment param to the replacement string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set replace end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name to end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name to end_name end_name begin_operator EQ end_operator begin_name to end_name end_expr end_expr_stmt end_block 
 begin_comment set a stream to use as input param input stream the stream from which input will be read since ant 1 6 3 end_comment begin_comment public end_comment begin_type begin_name void end_name end_type begin_name set input stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name input stream end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name input stream end_name end_name begin_operator EQ end_operator begin_name input stream end_name end_expr end_expr_stmt end_block 
 begin_comment returns the root folder in the starteam repository used for this operation return the root folder in use end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get root starteam folder end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name root starteam folder end_name end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name mapper test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the class loader of the loading object param class loader a code class loader code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set antlib class loader end_name begin_parameter_list begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name class loader end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name antlib class loader end_name end_name begin_operator EQ end_operator begin_name class loader end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name stop end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name stop end_name begin_operator EQ end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return true if the input is one of the allowed values end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is input valid end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name choices end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get input end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name get input end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get default value end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test supports characters end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name supports characters end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ih end_name begin_operator EQ end_operator begin_call begin_name begin_name introspection helper end_name begin_operator DOT end_operator begin_name get helper end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name string end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name supports characters end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment used to be part of init it must be done once but we delay it until we do need all tasks otherwise we just get the tasks that we need and avoid costly init end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init all end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name init all done end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name init all done end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name next reader end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name close end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name reader end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment not significant for the class loader end_comment begin_comment empty implementation to satisfy the build listener interface param event the target started event end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_comment not significant for the class loader end_comment end_block 
 begin_comment the contains attribute param contains the string that the token should contain end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set contains end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name contains end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_operator EQ end_operator begin_name contains end_name end_expr end_expr_stmt end_block 
 begin_comment construct a new code pump stream handler code end_comment begin_specifier end_specifier begin_name pump stream handler end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment performs the image rotation when being handled as a draw operation it absolutely requires that there be a draw operation nested beneath it but only the first draw operation will be handled since it can only return one image return the image end_comment begin_type begin_specifier end_specifier begin_name planar image end_name end_type begin_name execute draw operation end_name begin_parameter_list end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name instructions end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name image operation end_name end_type begin_name instr end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name image operation end_name begin_operator RPAR end_operator begin_call begin_name begin_name instructions end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name instr end_name begin_operator UNP end_operator begin_name draw operation end_name end_expr end_condition begin_then begin_block begin_comment if this transform operation has draw operation children end_comment begin_comment then rotate the first child and return end_comment begin_decl_stmt begin_decl begin_type begin_name planar image end_name end_type begin_name op end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name draw operation end_name begin_operator RPAR end_operator begin_name instr end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name execute draw operation end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name op end_name begin_operator EQ end_operator begin_call begin_name perform rotate end_name begin_argument_list begin_argument begin_expr begin_name op end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name op end_name end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_comment get the pname command param cmd containing the command line string with or without the pname flag and value appended end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get pname command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get pname end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then begin_else begin_block begin_comment had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes this breaks clearcase end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag pname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get pname end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment sets the user provided input param input the string to be used for input end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set input end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name input end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name input end_name end_name begin_operator EQ end_operator begin_name input end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test simple end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment determines and executes the action method for the task param task the task to execute throws build exception on error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name task end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name method name end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name dispatchable end_name end_type begin_name dispatchable end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_if begin_condition begin_expr begin_name task end_name begin_operator UNP end_operator begin_name dispatchable end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dispatchable end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name dispatchable end_name begin_operator RPAR end_operator begin_name task end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name task end_name begin_operator UNP end_operator begin_name unknown element end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name unknown element end_name end_type begin_name ue end_name begin_init begin_expr begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_name task end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name real thing end_name begin_init begin_expr begin_call begin_name begin_name ue end_name begin_operator DOT end_operator begin_name get real thing end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name real thing end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name real thing end_name begin_operator UNP end_operator begin_name dispatchable end_name begin_operator UNP end_operator begin_name real thing end_name begin_operator UNP end_operator begin_name task end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dispatchable end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name dispatchable end_name begin_operator RPAR end_operator begin_name real thing end_name end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_else end_if begin_if begin_condition begin_expr begin_name dispatchable end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name m name end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name dispatchable end_name begin_operator DOT end_operator begin_name get action parameter name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name name end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name m name end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name substring end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to upper case end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name m name end_name begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name class end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name dispatchable end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name method end_name end_type begin_name action m end_name begin_init begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list begin_argument begin_expr begin_name m name end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name action m end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name action m end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name dispatchable end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name object end_name begin_index end_index end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name s end_name begin_init begin_expr begin_call begin_name begin_name o end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name s end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name method name end_name begin_operator EQ end_operator begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name method end_name end_type begin_name execute m end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name execute m end_name begin_operator EQ end_operator begin_call begin_name begin_name dispatchable end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get method end_name begin_argument_list begin_argument begin_expr begin_name method name end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name execute m end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name method name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name dispatchable end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name execute m end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name dispatchable end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name object end_name begin_index end_index end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name task end_name begin_operator UNP end_operator begin_name unknown element end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set real thing end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_then end_if end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no such method exception end_name end_type begin_name nsme end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name m name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name method end_name end_type begin_name execute m end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name execute m end_name begin_operator EQ end_operator begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get method end_name begin_argument_list begin_argument begin_expr begin_name method name end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name execute m end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name method name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name execute m end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name object end_name begin_index end_index end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name task end_name begin_operator UNP end_operator begin_name unknown element end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set real thing end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name invocation target exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name begin_init begin_expr begin_call begin_name begin_name ie end_name begin_operator DOT end_operator begin_name get target exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name t end_name begin_operator UNP end_operator begin_name build exception end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name build exception end_name begin_operator RPAR end_operator begin_name t end_name begin_operator RPAR end_operator end_expr end_throw end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no such method exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment fulfill the condition contract return true if the condition is true throws build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name length end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name length required end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name ell end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name mode end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ell end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name long end_name begin_argument_list begin_argument begin_expr begin_call begin_name get length end_name begin_argument_list begin_argument begin_expr begin_name string end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get trim end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name condition handler end_name end_type begin_name h end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name condition handler end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name handle resources end_name begin_argument_list begin_argument begin_expr begin_name h end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ell end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name long end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name h end_name begin_operator DOT end_operator begin_name get length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_return begin_expr begin_call begin_name begin_name when end_name begin_operator DOT end_operator begin_name evaluate end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ell end_name begin_operator DOT end_operator begin_name compare to end_name end_name begin_argument_list begin_argument begin_expr begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end test end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name arg 0 end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment process the given node adding any required attributes from this child node alone but em not em processing any children param node the xml node to parse param prefix a string to prepend to any properties that get added by this node param container optionally an object that a parent node generated that this node might belong to for example this node could be within a node that generated a path return the object created by this node generally this is either a string if this node resulted in setting an attribute or a path end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name process node end_name begin_parameter_list begin_param begin_decl begin_type begin_name node end_name end_type begin_name node end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name container end_name end_decl end_param end_parameter_list begin_block begin_comment parse the attribute s and text of this node adding end_comment begin_comment properties for each end_comment begin_comment if the path attribute is specified then return the created path end_comment begin_comment which will be passed to the children of this node end_comment begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name added path end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment the value of an id attribute of this node end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name id end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name has attributes end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name named node map end_name end_type begin_name node attributes end_name begin_init begin_expr begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get attributes end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment is there an id attribute end_comment begin_decl_stmt begin_decl begin_type begin_name node end_name end_type begin_name id node end_name begin_init begin_expr begin_call begin_name begin_name node attributes end_name begin_operator DOT end_operator begin_name get named item end_name end_name begin_argument_list begin_argument begin_expr begin_name id end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name id end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name semantic attributes end_name begin_operator UNP end_operator begin_name id node end_name begin_operator UNP end_operator begin_operator QM end_operator begin_call begin_name begin_name id node end_name begin_operator DOT end_operator begin_name get node value end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_comment now iterate through the attributes adding them end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name node attributes end_name begin_operator DOT end_operator begin_name get length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name node end_name end_type begin_name attribute node end_name begin_init begin_expr begin_call begin_name begin_name node attributes end_name begin_operator DOT end_operator begin_name item end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name semantic attributes end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name attribute name end_name begin_init begin_expr begin_call begin_name get attribute name end_name begin_argument_list begin_argument begin_expr begin_name attribute node end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name attribute value end_name begin_init begin_expr begin_call begin_name get attribute value end_name begin_argument_list begin_argument begin_expr begin_name attribute node end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add property end_name begin_argument_list begin_argument begin_expr begin_name prefix end_name begin_operator PLUS end_operator begin_name attribute name end_name end_expr end_argument begin_argument begin_expr begin_name attribute value end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name node name end_name begin_init begin_expr begin_call begin_name begin_name attribute node end_name begin_operator DOT end_operator begin_name get node name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name attribute value end_name begin_init begin_expr begin_call begin_name get attribute value end_name begin_argument_list begin_argument begin_expr begin_name attribute node end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name containing path end_name begin_init begin_expr begin_operator LPAR end_operator begin_name container end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name container end_name begin_operator UNP end_operator begin_name path end_name begin_operator QM end_operator begin_operator LPAR end_operator begin_name path end_name begin_operator RPAR end_operator begin_name container end_name begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_comment the main conditional logic if the attribute is somehow special i e it has known semantic meaning then deal with it appropriately end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name node name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name id end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment id has already been found above end_comment begin_continue end_continue end_block end_then begin_else begin_if begin_condition begin_expr begin_name containing path end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name node name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment a path attribute for a node within a path object end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name containing path end_name begin_operator DOT end_operator begin_name set path end_name end_name begin_argument_list begin_argument begin_expr begin_name attribute value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name container end_name begin_operator UNP end_operator begin_name path end_name begin_operator UNP end_operator begin_call begin_name begin_name node name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name ref id end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment a refid attribute for a node within a path object end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name containing path end_name begin_operator DOT end_operator begin_name set path end_name end_name begin_argument_list begin_argument begin_expr begin_name attribute value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name container end_name begin_operator UNP end_operator begin_name path end_name begin_operator UNP end_operator begin_call begin_name begin_name node name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment a location attribute for a node within a end_comment begin_comment path object end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name containing path end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name attribute value end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name node name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name pathid end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment a node identifying a new path end_comment begin_if begin_condition begin_expr begin_name container end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name added path end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add reference end_name begin_argument_list begin_argument begin_expr begin_name attribute value end_name end_expr end_argument begin_argument begin_expr begin_name added path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment an arbitrary attribute end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name attribute name end_name begin_init begin_expr begin_call begin_name get attribute name end_name begin_argument_list begin_argument begin_expr begin_name attribute node end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add property end_name begin_argument_list begin_argument begin_expr begin_name prefix end_name begin_operator PLUS end_operator begin_name attribute name end_name end_expr end_argument begin_argument begin_expr begin_name attribute value end_name end_expr end_argument begin_argument begin_expr begin_name id end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_block end_else end_if end_block end_for end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name node text end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name empty node end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name semantic empty override end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get node type end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name begin_name node end_name begin_operator DOT end_operator begin_name element node end_name end_name begin_operator UNP end_operator begin_name semantic attributes end_name begin_operator UNP end_operator begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name has attributes end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get attributes end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get named item end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get attributes end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get named item end_name begin_argument_list begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get attributes end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get named item end_name begin_argument_list begin_argument begin_expr begin_name ref id end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get attributes end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get named item end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get attributes end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get named item end_name begin_argument_list begin_argument begin_expr begin_name pathid end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name semantic empty override end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get node type end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name begin_name node end_name begin_operator DOT end_operator begin_name text node end_name end_name end_expr end_condition begin_then begin_block begin_comment for the text node add a property end_comment begin_expr_stmt begin_expr begin_name node text end_name begin_operator EQ end_operator begin_call begin_name get attribute value end_name begin_argument_list begin_argument begin_expr begin_name node end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get node type end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name begin_name node end_name begin_operator DOT end_operator begin_name element node end_name end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get child nodes end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get length end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get first child end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get node type end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name begin_name node end_name begin_operator DOT end_operator begin_name cdata section node end_name end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name node text end_name begin_operator EQ end_operator begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get first child end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get node value end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name node text end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_name semantic empty override end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name empty node end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get node type end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name begin_name node end_name begin_operator DOT end_operator begin_name element node end_name end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get child nodes end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get length end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_name semantic empty override end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name node text end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name empty node end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get node type end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name begin_name node end_name begin_operator DOT end_operator begin_name element node end_name end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get child nodes end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get length end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get first child end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get node type end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name begin_name node end_name begin_operator DOT end_operator begin_name text node end_name end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get first child end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get node value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_name semantic empty override end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name node text end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name empty node end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_else end_if end_else end_if end_else end_if begin_if begin_condition begin_expr begin_name node text end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment if the containing object was a string then use it as the id end_comment begin_if begin_condition begin_expr begin_name semantic attributes end_name begin_operator UNP end_operator begin_name id end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name container end_name begin_operator UNP end_operator begin_name string end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name id end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_name container end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name node text end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_name empty node end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add property end_name begin_argument_list begin_argument begin_expr begin_name prefix end_name end_expr end_argument begin_argument begin_expr begin_name node text end_name end_expr end_argument begin_argument begin_expr begin_name id end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_comment return the path we added or the id of this node for end_comment begin_comment children to reference if needed path objects are end_comment begin_comment definitely used by child path elements and id may be used end_comment begin_comment for a child text node end_comment begin_return begin_expr begin_operator LPAR end_operator begin_name added path end_name begin_operator UNP end_operator begin_operator QM end_operator begin_name added path end_name begin_operator DP end_operator begin_name id end_name begin_operator RPAR end_operator end_expr end_return end_block 
 begin_specifier end_specifier begin_name is signed test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filters file element end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convenient method to merge the tt j unit test tt s of this batchtest to a tt vector tt param v the vector to which should be added all individual tests of this batch test end_comment begin_type begin_name void end_name end_type begin_name add tests to end_name begin_parameter_list begin_param begin_decl begin_type begin_name vector end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name j unit test end_name begin_index end_index end_type begin_name tests end_name begin_init begin_expr begin_call begin_name create all j unit test end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name ensure capacity end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_name begin_name tests end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name tests end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name tests end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment set the system file attribute param value a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set system end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add arg end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr begin_name attr system end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the property to the absolute filename of the given file if the value of this attribute is an absolute path it is left unchanged with and characters converted to the current platforms conventions otherwise it is taken as a path relative to the project s basedir and expanded param location path to set ant attribute group name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set location end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name location end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name location end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the attribute map return attribute name to attribute value map since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name hashtable end_name end_type begin_name get attribute map end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name attribute map end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_name empty hashtable end_name begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list begin_argument begin_expr begin_name attribute map end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment get the descriptor handler param src dir the source file return the descriptor handler end_comment begin_type begin_specifier end_specifier begin_name descriptor handler end_name end_type begin_name get descriptor handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src dir end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name descriptor handler end_name end_type begin_name handler end_name begin_init begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get descriptor handler end_name end_name begin_argument_list begin_argument begin_expr begin_name src dir end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name toplink dtd end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name register dtd end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name toplink dtd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name register dtd end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name tl dtd loc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_return begin_expr begin_name handler end_name end_expr end_return end_block 
 begin_comment gets the leavetargetrevision flag return flag indicating if the target revision should be preserved end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is leave target revision end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name leavetargetrevision end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_switch begin_condition begin_expr begin_name action end_name end_expr end_condition begin_block begin_case begin_expr begin_name send files end_name end_expr begin_expr_stmt begin_expr begin_call begin_name send file end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument begin_argument begin_expr begin_name fdir end_name end_expr end_argument begin_argument begin_expr begin_name dsfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name get files end_name end_expr begin_expr_stmt begin_expr begin_call begin_name get file end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument begin_argument begin_expr begin_name fdir end_name end_expr end_argument begin_argument begin_expr begin_name dsfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name del files end_name end_expr begin_expr_stmt begin_expr begin_call begin_name del file end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument begin_argument begin_expr begin_name dsfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name list files end_name end_expr begin_expr_stmt begin_expr begin_call begin_name list file end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument begin_argument begin_expr begin_name fbw end_name end_expr end_argument begin_argument begin_expr begin_name dsfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name chmod end_name end_expr begin_expr_stmt begin_expr begin_call begin_name do site command end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_name chmod end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name dsfile end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name transferred end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_break end_break end_case begin_default begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name action end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_default end_block end_switch end_block 
 begin_comment set the class to compare against param c the class end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set class end_name begin_parameter_list begin_param begin_decl begin_type begin_name class end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name clazz end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name clazz end_name begin_operator EQ end_operator begin_name c end_name end_expr end_expr_stmt end_block 
 begin_comment set the address to send from param from the sender end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set from end_name begin_parameter_list begin_param begin_decl begin_type begin_name email address end_name end_type begin_name from end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name from end_name end_name begin_operator EQ end_operator begin_name from end_name end_expr end_expr_stmt end_block 
 begin_comment allows all selectors to indicate a setup error note that only the first error message is recorded param msg the error message any build exception should throw end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set error end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name errmsg end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name errmsg end_name begin_operator EQ end_operator begin_name msg end_name end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment return true if this resource is selected param r the resource to check return whether the resource was selected throws build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name clazz end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator EQT end_operator begin_operator LPAR end_operator begin_name type end_name begin_operator EQT end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name one only end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name c end_name begin_init begin_expr begin_name clazz end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name type end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name project end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name ant type definition end_name end_type begin_name d end_name begin_init begin_expr begin_call begin_name begin_name component helper end_name begin_operator DOT end_operator begin_name get component helper end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get definition end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name gen component name end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument begin_argument begin_expr begin_name type end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name d end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name type end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name inner get type class end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment execute the task throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name src file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name src file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name src file end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name dest file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name src file end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name force overwrite end_name begin_operator UNP end_operator begin_call begin_name begin_name src file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_call begin_name begin_name dest file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name copy file end_name begin_argument_list begin_argument begin_expr begin_name src file end_name end_expr end_argument begin_argument begin_expr begin_name dest file end_name end_expr end_argument begin_argument begin_expr begin_name filtering end_name end_expr end_argument begin_argument begin_expr begin_name force overwrite end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name src file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if end_block 
 begin_comment a synonym for tt depends tt set to true to transmit only new or changed files see the related attributes timediffmillis and timediffauto param newer if true only transfer newer files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set newer end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name newer end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name newer only end_name end_name begin_operator EQ end_operator begin_name newer end_name end_expr end_expr_stmt end_block 
 begin_comment execute the p 4 resolve throws build exception if there is a wrong resolve mode specified or no view specified end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name resolvemode end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name automatic end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name p 4 cmd opts end_name begin_operator EQ end_operator begin_name p 4 cmd opts end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name resolvemode end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name force end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name p 4 cmd opts end_name begin_operator EQ end_operator begin_name p 4 cmd opts end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name resolvemode end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name safe end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name p 4 cmd opts end_name begin_operator EQ end_operator begin_name p 4 cmd opts end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name resolvemode end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name theirs end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name p 4 cmd opts end_name begin_operator EQ end_operator begin_name p 4 cmd opts end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name resolvemode end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name yours end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name p 4 cmd opts end_name begin_operator EQ end_operator begin_name p 4 cmd opts end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if begin_if begin_condition begin_expr begin_name p 4 view end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name is redoall end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name p 4 cmd opts end_name begin_operator EQ end_operator begin_name p 4 cmd opts end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name is simulationmode end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name p 4 cmd opts end_name begin_operator EQ end_operator begin_name p 4 cmd opts end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name is forcetextmode end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name p 4 cmd opts end_name begin_operator EQ end_operator begin_name p 4 cmd opts end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name is markersforall end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name p 4 cmd opts end_name begin_operator EQ end_operator begin_name p 4 cmd opts end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name exec p 4 command end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name p 4 cmd opts end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name p 4 view end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name simple p 4 output handler end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the runtime configurable structure for this task return the runtime structure for this task end_comment begin_type begin_specifier end_specifier begin_name runtime configurable end_name end_type begin_name get wrapper end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name wrapper end_name end_expr end_return end_block 
 begin_comment find out the absolute path of the file return absolute path as string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get absolute path end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name curpwd end_name begin_operator PLUS end_operator begin_name remote file sep end_name begin_operator PLUS end_operator begin_call begin_name begin_name ftp file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name send out and err end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name out end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name err end_name end_decl end_param end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name formatters end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name j unit result formatter end_name end_type begin_name formatter end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name j unit result formatter end_name begin_operator RPAR end_operator begin_call begin_name begin_name formatters end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name formatter end_name begin_operator DOT end_operator begin_name set system output end_name end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name formatter end_name begin_operator DOT end_operator begin_name set system error end_name end_name begin_argument_list begin_argument begin_expr begin_name err end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment gets as descriptive as possible a name used for this datatype instance return code string code name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get data type name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name component helper end_name begin_operator DOT end_operator begin_name get element name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment get the command line used to run the tests return the command line since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name commandline java end_name end_type begin_name get commandline end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name commandline end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name commandline end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name commandline java end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name commandline end_name end_expr end_return end_block 
 begin_comment clear internal caches since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name clear caches end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file list map end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name include non patterns end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exclude non patterns end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name include patterns end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name exclude patterns end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name are non pattern sets ready end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment methods to override end_comment begin_comment sets a property any existing property of the same name is overwritten unless it is a user property will be called from set property if all helpers return false the property will be saved in the default properties table by set property param ns the namespace that the property is in currently not used param name the name of property to set must not be code null code param value the new value of the property must not be code null code param inherited true if this property is inherited an sub ant call property param user true if this property is a user property param is new true is this is a new property return true if this helper has stored the property false if it couldn t each helper should delegate to the next one unless it has a good reason not to end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name set property hook end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name ns end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name value end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name inherited end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name user end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name is new end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get next end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name subst end_name begin_init begin_expr begin_call begin_name get next end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set property hook end_name begin_argument_list begin_argument begin_expr begin_name ns end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr begin_name inherited end_name end_expr end_argument begin_argument begin_expr begin_name user end_name end_expr end_argument begin_argument begin_expr begin_name is new end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment if next has handled the property end_comment begin_if begin_condition begin_expr begin_name subst end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment get comment method return string containing the desired comment method end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get comment end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m comment end_name end_expr end_return end_block 
 begin_comment this method wraps the input stream with the corresponding decompression method param name provides location information for build exception param istream input stream return input stream with on the fly decompression exception io exception thrown by gzip input stream constructor exception build exception thrown if bzip stream does not start with expected magic values end_comment begin_type begin_specifier end_specifier begin_name input stream end_name end_type begin_name decompress end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name input stream end_name end_type begin_name istream end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name v end_name begin_init begin_expr begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name gzip end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name v end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name gzip input stream end_name begin_argument_list begin_argument begin_expr begin_name istream end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name bzip 2 end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name v end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name char end_name begin_index end_index end_type begin_name magic end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name char end_name begin_index end_index end_name begin_block begin_expr end_expr begin_expr end_expr end_block end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name magic end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name istream end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name begin_name magic end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_for begin_return begin_expr begin_operator UNP end_operator begin_call begin_name cb zip 2 input stream end_name begin_argument_list begin_argument begin_expr begin_name istream end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if end_block end_else end_if begin_return begin_expr begin_name istream end_name end_expr end_return end_block 
 begin_comment return the command line as a string return the command line end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name to string end_name begin_argument_list begin_argument begin_expr begin_call begin_name get commandline end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment set the argument to file name mapper set to param to the to attribute to pass to the file name mapper end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set to end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name to end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name to end_name end_name begin_operator EQ end_operator begin_name to end_name end_expr end_expr_stmt end_block 
 begin_comment find out if the server version supports log with s option return boolean indicating if the server version supports log with s option end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name supports cvs log with s option end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name server version end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name tokenizer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name server version end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name counter end_name begin_init begin_expr begin_name multiply end_name begin_operator STAR end_operator begin_name multiply end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name version end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name s end_name begin_init begin_expr begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_expr begin_name i end_name begin_operator EQ end_operator end_expr end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is digit end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if end_block end_for begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name s 2 end_name begin_init begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name version end_name begin_operator EQ end_operator begin_name version end_name begin_operator PLUS end_operator begin_name counter end_name begin_operator STAR end_operator begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name parse long end_name end_name begin_argument_list begin_argument begin_expr begin_name s 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name counter end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_expr_stmt begin_expr begin_name counter end_name begin_operator EQ end_operator begin_name counter end_name begin_operator SLASH end_operator begin_name multiply end_name end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_operator LPAR end_operator begin_name version end_name begin_operator GE end_operator begin_name version 1 11 2 end_name begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment get the size of this resource return the size as a long 0 if the resource does not exist for compatibility with java io file or unknown size if not known end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name get size end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get size end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name is exists end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator LPAR end_operator begin_name long end_name begin_operator RPAR end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test line separator character end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment support for nested lt param gt tags param key the key of the parameter param value the value of the parameter end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add param end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name key end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name parameter end_name end_type begin_name par end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name parameter end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name par end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name par end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name config parameter end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name par end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test apt new factory fork end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert processed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment set the version attribute param version the value to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set version end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name version end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name version end_name end_name begin_operator EQ end_operator begin_name version end_name end_expr end_expr_stmt end_block 
 begin_comment set the text using a file param file the file to use throws build exception if the file does not exist or cannot be read end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment non existing files are not allowed end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name file end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name reader end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name encoding end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name reader end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file reader end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name reader end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name encoding end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name read fully end_name end_name begin_argument_list begin_argument begin_expr begin_name reader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name reader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set system output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment the directory which holds the files whose permissions must be changed param src the directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name default set end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test cvs 112 format end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name parser end_name begin_operator DOT end_operator begin_name stdout end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name parser end_name begin_operator DOT end_operator begin_name stdout end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name parser end_name begin_operator DOT end_operator begin_name stdout end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name parser end_name begin_operator DOT end_operator begin_name stdout end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name parser end_name begin_operator DOT end_operator begin_name stdout end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name cvs entry end_name begin_index end_index end_type begin_name entries end_name begin_init begin_expr begin_call begin_name begin_name parser end_name begin_operator DOT end_operator begin_name get entry set as array end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name entries end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get author end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name calendar end_name end_type begin_name cal end_name begin_init begin_expr begin_call begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name time zone end_name begin_operator DOT end_operator begin_name get time zone end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name set end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name millisecond end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name set end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name june end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name date end_name end_type begin_name date end_name begin_init begin_expr begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name get time end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name date end_name end_expr end_argument begin_argument begin_expr begin_name begin_name entries end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get date end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a filelist to touch param list the code filelist code to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add filelist end_name begin_parameter_list begin_param begin_decl begin_type begin_name file list end_name end_type begin_name list end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name list end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment receive notification that character data has been found in the xml document param ch array of characters which have been found in the document param start starting index of the data found in the document param len the number of characters found in the document throws sax exception if the parser cannot process the document end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name characters end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name char end_name begin_index end_index end_name end_type begin_name ch end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name start end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name len end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name current text end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name substring end_name begin_argument_list begin_argument begin_expr begin_name start end_name end_expr end_argument begin_argument begin_expr begin_name start end_name begin_operator PLUS end_operator begin_name len end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment we bind to an existing test file because we are too lazy to write our own and we don t really care what it is end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test contains doesnt end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property unset end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the owning task param task the owning task instance end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set task end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name task end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name task end_name end_name begin_operator EQ end_operator begin_name task end_name end_expr end_expr_stmt end_block 
 begin_comment get keepcopy flag status return boolean containing status of keepcopy flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get keep copy end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m keep end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment factory method to provide a reader that removes the characters from a reader as part of a filter chain param reader the reader object return the chained reader object end_comment begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name chain end_name begin_parameter_list begin_param begin_decl begin_type begin_name reader end_name end_type begin_name reader end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_class begin_super begin_name base filter reader end_name end_super begin_argument_list begin_argument begin_expr begin_name reader end_name end_expr end_argument end_argument_list begin_block begin_comment return the next non delete character end_comment begin_function begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_while begin_condition begin_expr end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name c end_name end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name is delete character end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator begin_name c end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name c end_name end_expr end_return end_block end_then end_if end_block end_while end_block end_function end_block end_class end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name next end_name begin_parameter_list end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name no such element exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block 
 begin_comment set a user property which cannot be overwritten by set unset property calls any previous value is overwritten param name the name of property to set must not be code null code param value the new value of the property must not be code null code see set property string string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set user property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name property helper end_name begin_operator DOT end_operator begin_name get property helper end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set user property end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test head end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name expected end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_name expected end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment close the stream throws io exception if there is an error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name close end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name close current end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name eof end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment adds a collection of resources to style in addition to the given file or the implicit fileset param rc the collection of resources to style since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name rc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test d end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect name address 3 end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name email address end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns a string representation of the location return the string representation end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator PLUS end_operator begin_name location end_name begin_operator PLUS end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create an element writer xml namespaces will be ignored param xml declaration flag to indicate whether the xml declaration should be included param namespace policy the policy to use since ant 1 7 end_comment begin_specifier end_specifier begin_name dom element writer end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name xml declaration end_name end_decl end_param begin_param begin_decl begin_type begin_name xml namespace policy end_name end_type begin_name namespace policy end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name xml declaration end_name end_name begin_operator EQ end_operator begin_name xml declaration end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name namespace policy end_name end_name begin_operator EQ end_operator begin_name namespace policy end_name end_expr end_expr_stmt end_block 
 begin_comment adds a path to the classpath return a classpath end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name compile classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name compile classpath end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name compile classpath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment specify the directory where target files are to be placed param dest dir the file object representing the destination directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dest end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dest dir end_name end_name begin_operator EQ end_operator begin_name dest dir end_name end_expr end_expr_stmt end_block 
 begin_comment returns the filtered include patterns param p the current project return the filtered excluded patterns end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get exclude patterns end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get exclude patterns end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name read files end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name make array end_name begin_argument_list begin_argument begin_expr begin_name exclude list end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test explicit basedir 2 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dir 1 end_name begin_init begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dir 2 end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name test base dirs end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_call begin_name begin_name dir 1 end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr begin_operator UNP end_operator begin_expr begin_call begin_name begin_name dir 2 end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment resolves file ur is relative to the build file param public id the public identifier or code null code if none is available ignored in this implementation param system id the system identifier provided in the xml document will not be code null code return an inputsource for this identifier end_comment begin_type begin_specifier end_specifier begin_name input source end_name end_type begin_name resolve entity end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name public id end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name system id end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name system id end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name system id end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name from uri end_name end_name begin_argument_list begin_argument begin_expr begin_name system id end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is absolute end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name file end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get build file parent end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name system id end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get build file end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name input source end_name end_type begin_name input source end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name input source end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name input source end_name begin_operator DOT end_operator begin_name set system id end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name to uri end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name input source end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name file not found exception end_name end_type begin_name fne end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if begin_comment use default if not file or file not found end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block 
 begin_comment set comment string param comment the comment string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set comment end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name comment end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m comment end_name begin_operator EQ end_operator begin_name comment end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name delete mirror end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the timezone to use for displaying time the values are as defined by the java time zone class param id the timezone value see java util time zone end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set timezone end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name id end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name time zone end_name begin_operator EQ end_operator begin_call begin_name begin_name time zone end_name begin_operator DOT end_operator begin_name get time zone end_name end_name begin_argument_list begin_argument begin_expr begin_name id end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds direct command line to execute param c command line to execute end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured commandline end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name add configured commandline end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name compare end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name foo end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name bar end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name comparable end_name begin_operator RPAR end_operator begin_name foo end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name compare to end_name begin_argument_list begin_argument begin_expr begin_name bar end_name end_expr end_argument end_argument_list end_call begin_operator STAR end_operator begin_operator MINUS end_operator end_expr end_return end_block 
 begin_comment sets the environment variables for the subprocess to launch param env array of strings each element of which has an environment variable settings in format em key value em end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set environment end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name env end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name env end_name end_name begin_operator EQ end_operator begin_name env end_name end_expr end_expr_stmt end_block 
 begin_comment returns the file name line number a colon and a trailing space an error message can be appended easily for unknown locations an empty string is returned return a string of the form code file name line number code if both file name and line number are known code file name code if only the file name is known and the empty string for unknown locations end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name file name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name file name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name line number end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name line number end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment label to check out param label the label to check out ant attribute group vdl end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set label end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name label end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal label end_name end_name begin_argument_list begin_argument begin_expr begin_name label end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test null end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name do multiple calls end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name null end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_name void end_name end_type begin_name raw write end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment process a line while in get previous revision state param line the line to process end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process get previous revision end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal state exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name previous revision end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name save entry end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name revision end_name begin_operator EQ end_operator begin_name previous revision end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name status end_name begin_operator EQ end_operator begin_name get date end_name end_expr end_expr_stmt end_block 
 begin_comment cleans up any resources held by this classloader any open archive files are closed end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name cleanup end_name begin_parameter_list end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name zip files end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name zip file end_name end_type begin_name zip file end_name begin_init begin_expr begin_operator LPAR end_operator begin_name zip file end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_for begin_expr_stmt begin_expr begin_name zip files end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name project end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name remove build listener end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name project end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test scenario core selector settings end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name do scenario test end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the path of the configuration file to be used return the path of the config file end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get config end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name config end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name present selector test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment param qualify elements whether to qualify elements param qualify attributes whether to qualify elements end_comment begin_specifier end_specifier begin_name xml namespace policy end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name qualify elements end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name qualify attributes end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name qualify elements end_name end_name begin_operator EQ end_operator begin_name qualify elements end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name qualify attributes end_name end_name begin_operator EQ end_operator begin_name qualify attributes end_name end_expr end_expr_stmt end_block 
 begin_comment get the size of this resource return the size as a long 0 if the resource does not exist for compatibility with java io file or unknown size if not known end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name long end_name end_type begin_name get size end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get size end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_operator LPAR end_operator begin_name long end_name begin_operator RPAR end_operator begin_call begin_name get content end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_name long end_name end_type begin_name get length end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get accum end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_specifier end_specifier begin_name jakarta regexp matcher test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor of keep alive input stream param in an input stream value it should be standard input end_comment begin_specifier end_specifier begin_name keep alive input stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name in end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment perform the check for circular references and return the referenced files collection return code file collection code end_comment begin_type begin_specifier end_specifier begin_name files end_name end_type begin_name get ref end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name files end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set the tcp port to connect to default is 23 param p an code int code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set port end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name port end_name end_name begin_operator EQ end_operator begin_name p end_name end_expr end_expr_stmt end_block 
 begin_comment the message as an attribute param s a code string code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name task string end_name begin_operator UNP end_operator begin_name s end_name end_expr end_expr_stmt end_block 
 begin_comment support for i update i attribute param update new value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set update end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name update end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name update end_name end_name begin_operator EQ end_operator begin_name update end_name end_expr end_expr_stmt end_block 
 begin_comment create the watchdog to kill a runaway process return new watchdog throws build exception under unknown circumstances since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name execute watchdog end_name end_type begin_name create watchdog end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name timeout end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_operator UNP end_operator begin_call begin_name execute watchdog end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name timeout end_name begin_operator DOT end_operator begin_name long value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment iterate through all conditions return an enumeration to use for iteration since 1 1 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name enumeration end_name end_type begin_name get conditions end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name conditions end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test modification tests end_name begin_parameter_list end_parameter_list begin_block begin_comment get a time end_comment begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name first time end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment add some time we assume no os has a granularity this bad end_comment begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name second time end_name begin_init begin_expr begin_name first time end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_comment assert true same timestamp is up to date fu is up to date first time first time end_comment begin_comment check that older is up to date with a newer dest end_comment begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name is up to date end_name end_name begin_argument_list begin_argument begin_expr begin_name first time end_name end_expr end_argument begin_argument begin_expr begin_name second time end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment check that older is up to date with a newer dest end_comment begin_expr_stmt begin_expr begin_call begin_name assert false end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name is up to date end_name end_name begin_argument_list begin_argument begin_expr begin_name second time end_name end_expr end_argument begin_argument begin_expr begin_name first time end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name is up to date end_name end_name begin_argument_list begin_argument begin_expr begin_name first time end_name end_expr end_argument begin_argument begin_expr begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test unset end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property unset end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name property file test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add an arbitrary filter param filter the filter to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name filter end_name end_type begin_name filter end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filters end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name filter end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns a description of the type of the given element in relation to a given project this is used for logging purposes when the element is asked to cope with some data it has no way of handling param project the project the element is defined in must not be code null code param element the element to describe must not be code null code return a description of the element type end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get element name end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name element end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get element name end_name end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment aggregate all testsuites into a single document and write it to the specified directory and file throws build exception thrown if there is a serious error while writing the document end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name root element end_name begin_init begin_expr begin_call begin_name create document end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dest file end_name begin_init begin_expr begin_call begin_name get destination file end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment write the document end_comment begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name write dom tree end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name root element end_name begin_operator DOT end_operator begin_name get owner document end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name dest file end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_comment apply transformation end_comment begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name transformers end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name aggregate transformer end_name end_type begin_name transformer end_name begin_init begin_expr begin_operator LPAR end_operator begin_name aggregate transformer end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name transformer end_name begin_operator DOT end_operator begin_name set xml document end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name root element end_name begin_operator DOT end_operator begin_name get owner document end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name transformer end_name begin_operator DOT end_operator begin_name transform end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_comment if true replace an existing lock param replace the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set replace end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name replace end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m replace end_name begin_operator EQ end_operator begin_name replace end_name end_expr end_expr_stmt end_block 
 begin_comment create an instance of the approriate extra field falls back to link unrecognized extra field unrecognized extra field param header id the header identifier return an instance of the appropiate extra field exception instantiation exception if unable to instantiate the class exception illegal access exception if not allowed to instatiate the class since 1 1 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name zip extra field end_name end_type begin_name create extra field end_name begin_parameter_list begin_param begin_decl begin_type begin_name zip short end_name end_type begin_name header id end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name instantiation exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name c end_name begin_init begin_expr begin_operator LPAR end_operator begin_name class end_name begin_operator RPAR end_operator begin_call begin_name begin_name implementations end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name header id end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name c end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name zip extra field end_name begin_operator RPAR end_operator begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name unrecognized extra field end_name end_type begin_name u end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name unrecognized extra field end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name u end_name begin_operator DOT end_operator begin_name set header id end_name end_name begin_argument_list begin_argument begin_expr begin_name header id end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name u end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 8 using zip fileset end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test 8 end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test import same targets end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name message end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return end_return end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment performs a compile using the sj compiler from symantec return true if the compilation succeeded throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name begin_init begin_expr begin_call begin_name setup javac command end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name exec end_name begin_init begin_expr begin_call begin_name get javac end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get executable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_name exec end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_name exec end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name first file name end_name begin_init begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name begin_name compile list end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name execute external compile end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name first file name end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name testrvtype end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment tell if a file is a directory note that it will return false for symbolic links pointing to directories return code true code for directories end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is directory end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name ftp file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment get the formatters set for this test return the formatters as an array end_comment begin_type begin_specifier end_specifier begin_name formatter element end_name begin_index end_index end_type begin_name get formatters end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name formatter element end_name begin_index end_index end_type begin_name fes end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name formatter element end_name begin_index begin_expr begin_call begin_name begin_name formatters end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name formatters end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name fes end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name fes end_name end_expr end_return end_block 
 begin_comment gives the count of the number of selectors in this container return the number of selectors in this container end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name selector count end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name selector count end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name selector count end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment check style method name check off bc end_comment begin_comment reset all contents end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name clear end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name target type end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name src dir end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name listing end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name verbose end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name debug end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name output file end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name fail on error end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name resource file end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name extra options end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment sets the actual executable command to invoke instead of the binary code javadoc code found in ant s jdk param executable the command to invoke since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set executable end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name executable end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name executable end_name end_name begin_operator EQ end_operator begin_name executable end_name end_expr end_expr_stmt end_block 
 begin_comment marks the read limit of the string reader param limit the maximum limit of bytes that can be read before the mark position becomes invalid end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name mark end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name limit end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name mark end_name end_name begin_argument_list begin_argument begin_expr begin_name limit end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment extract an package specification from attributes param attributes attributes to searched return the new specification object or null end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name specification end_name end_type begin_name get specification end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name section end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name attributes end_name end_type begin_name attributes end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name parse exception end_name end_expr end_argument end_throws begin_block begin_comment warning we trim the values of all the attributes because end_comment begin_comment some extension declarations are badly defined ie have spaces end_comment begin_comment after version or vendor end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name get trimmed string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name specification title end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name name end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name spec vendor end_name begin_init begin_expr begin_call begin_name get trimmed string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name specification vendor end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name spec vendor end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name parse exception end_name begin_argument_list begin_argument begin_expr begin_name missing end_name begin_operator PLUS end_operator begin_name specification vendor end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name spec version end_name begin_init begin_expr begin_call begin_name get trimmed string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name specification version end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name spec version end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name parse exception end_name begin_argument_list begin_argument begin_expr begin_name missing end_name begin_operator PLUS end_operator begin_name specification version end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name imp title end_name begin_init begin_expr begin_call begin_name get trimmed string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name implementation title end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name imp title end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name parse exception end_name begin_argument_list begin_argument begin_expr begin_name missing end_name begin_operator PLUS end_operator begin_name implementation title end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name imp version end_name begin_init begin_expr begin_call begin_name get trimmed string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name implementation version end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name imp version end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name parse exception end_name begin_argument_list begin_argument begin_expr begin_name missing end_name begin_operator PLUS end_operator begin_name implementation version end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name imp vendor end_name begin_init begin_expr begin_call begin_name get trimmed string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name implementation vendor end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name imp vendor end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name parse exception end_name begin_argument_list begin_argument begin_expr begin_name missing end_name begin_operator PLUS end_operator begin_name implementation vendor end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_operator UNP end_operator begin_call begin_name specification end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name spec version end_name end_expr end_argument begin_argument begin_expr begin_name spec vendor end_name end_expr end_argument begin_argument begin_expr begin_name imp title end_name end_expr end_argument begin_argument begin_expr begin_name imp version end_name end_expr end_argument begin_argument begin_expr begin_name imp vendor end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name section end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment set the jvm version param value jvm version end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set jvm version end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get command line end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set vmversion end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test isfalse true end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property unset end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test resourcename with leading slash end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the scope to be processed this is an alternative to the use of the set public set private etc methods it gives better build file control over what scope is processed param at the scope to be processed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set access end_name begin_parameter_list begin_param begin_decl begin_type begin_name access type end_name end_type begin_name at end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name at end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add an attribute element param attribute an attribute nested element end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured attribute end_name begin_parameter_list begin_param begin_decl begin_type begin_name attribute end_name end_type begin_name attribute end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name text name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name attribute end_name end_type begin_name att end_name begin_init begin_expr begin_operator LPAR end_operator begin_name attribute end_name begin_operator RPAR end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name att end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name attribute end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set document locator end_name begin_parameter_list begin_param begin_decl begin_type begin_name locator end_name end_type begin_name locator end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment add a classpath to use when looking up a resource return the classpath to be configured end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check children allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get minor version end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment add text to the operation param instr the text to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add text end_name begin_parameter_list begin_param begin_decl begin_type begin_name text end_name end_type begin_name instr end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name instructions end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name instr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name load end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name concat descriptions end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name target end_name end_type begin_name t end_name end_decl end_param begin_param begin_decl begin_type begin_name string buffer end_name end_type begin_name description end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name t end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name tasks end_name begin_init begin_expr begin_call begin_name find element in target end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name t end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name tasks end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name tasks end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name task end_name end_type begin_name task end_name begin_init begin_expr begin_operator LPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_call begin_name begin_name tasks end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name task end_name begin_operator UNP end_operator begin_name unknown element end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name unknown element end_name end_type begin_name ue end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_name task end_name begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name desc comp end_name begin_init begin_expr begin_call begin_name begin_name ue end_name begin_operator DOT end_operator begin_name get wrapper end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get text end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name desc comp end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name description end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name replace properties end_name end_name begin_argument_list begin_argument begin_expr begin_name desc comp end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block 
 begin_comment set the value attribute param value a code string code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment constructs an exception with the given descriptive message param msg description of the exception which has occurred end_comment begin_specifier end_specifier begin_name ejbc exception end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name do site command end_name begin_argument_list begin_argument begin_expr begin_name lftp end_name end_expr end_argument begin_argument begin_expr begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name this end_name begin_operator DOT end_operator begin_name initial site command end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the whole testsuite started param suite the testsuite end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start test suite end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name suite end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name doc end_name begin_operator EQ end_operator begin_call begin_name get document builder end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name new document end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name root element end_name begin_operator EQ end_operator begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create element end_name end_name begin_argument_list begin_argument begin_expr begin_name testsuite end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name n end_name begin_init begin_expr begin_call begin_name begin_name suite end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name root element end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name attr name end_name end_expr end_argument begin_argument begin_expr begin_name n end_name begin_operator EQT end_operator begin_operator QM end_operator begin_name unknown end_name begin_operator DP end_operator begin_name n end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment add the timestamp end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name timestamp end_name begin_init begin_expr begin_call begin_name begin_name date utils end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name date end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name date utils end_name begin_operator DOT end_operator begin_name iso 8601 datetime pattern end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name root element end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name timestamp end_name end_expr end_argument begin_argument begin_expr begin_name timestamp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment and the hostname end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name root element end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name hostname end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get hostname end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment output properties end_comment begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name props element end_name begin_init begin_expr begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create element end_name end_name begin_argument_list begin_argument begin_expr begin_name properties end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name root element end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_name props element end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name props end_name begin_init begin_expr begin_call begin_name begin_name suite end_name begin_operator DOT end_operator begin_name get properties end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name props end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name property names end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name prop element end_name begin_init begin_expr begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create element end_name end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name prop element end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name attr name end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name prop element end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name attr value end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props element end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_name prop element end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_then end_if end_block 
 begin_comment get our project return owner project data end_comment begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name get project end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get jspc end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_specifier end_specifier begin_name java env utils test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add an environment variable to the launched process param var new environment variable end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add env end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name environment end_name begin_operator DOT end_operator begin_name variable end_name end_name end_type begin_name var end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name env end_name begin_operator DOT end_operator begin_name add variable end_name end_name begin_argument_list begin_argument begin_expr begin_name var end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment compiles the stub and skeletons for the specified ej bs if they need to be updated throws ejbc exception if the ejbc utility cannot be correctly configured or if one or more of the ejb source classes cannot be found in the destination directory throws io exception if the parser encounters a problem reading the xml file throws sax exception if the parser encounters a problem processing the xml descriptor it may wrap another exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name ejbc exception end_name end_expr end_argument begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name check configuration end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment throws ejbc exception if unsuccessful end_comment begin_decl_stmt begin_decl begin_type begin_name ejb info end_name begin_index end_index end_type begin_name ejbs end_name begin_init begin_expr begin_call begin_name get ejbs end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment returns list of ej bs for processing end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name ejbs end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name begin_name ejbs end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name ejbs end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name ejb info end_name end_type begin_name ejb end_name begin_init begin_expr begin_name begin_name ejbs end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ejb end_name begin_operator DOT end_operator begin_name check configuration end_name end_name begin_argument_list begin_argument begin_expr begin_name dest directory end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment throws ejbc exception end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name ejb end_name begin_operator DOT end_operator begin_name must be recompiled end_name end_name begin_argument_list begin_argument begin_expr begin_name dest directory end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ejb end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name arguments end_name begin_init begin_expr begin_call begin_name build argument list end_name begin_argument_list begin_argument begin_expr begin_name ejb end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name call ejbc end_name begin_argument_list begin_argument begin_expr begin_name arguments end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ejb end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test run fail foe fork end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the associated project should not normally be necessary use link reference reference project string param p the project to use since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set project end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name project end_name end_name begin_operator EQ end_operator begin_name p end_name end_expr end_expr_stmt end_block 
 begin_comment gets the filename for this cvs tag entry return the filename end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name filename end_name end_expr end_return end_block 
 begin_comment adds nested text p this means pre append text lt a gt b pre creates pre lt a gt b lt a gt pre p param parent element that will receive the new element as child param content text content since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name append text end_name begin_parameter_list begin_param begin_decl begin_type begin_name element end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name content end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name document end_name end_type begin_name doc end_name begin_init begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name get owner document end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name text end_name end_type begin_name t end_name begin_init begin_expr begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create text node end_name end_name begin_argument_list begin_argument begin_expr begin_name content end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment handles output send it the the new project if is present otherwise call the super class param output the string to output see task handle flush string since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle flush end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name callee end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name callee end_name begin_operator DOT end_operator begin_name handle flush end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name handle flush end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test ends with empty string end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment remove characters from a string param string the string to remove the characters from return the converted string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name filter end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name string end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name output end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name ch end_name begin_init begin_expr begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name is delete character end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_return begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_name echo end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment no arg constructor end_comment begin_specifier end_specifier begin_name pvcs project end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment build the command line br add label required parameters server name password database project label br add label optional parameters verbose comment br return commandline the generated command to be executed end_comment begin_type begin_specifier end_specifier begin_name commandline end_name end_type begin_name build cmd line end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name command line end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment add command add label to the commandline end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name begin_name sos cmd end_name begin_operator DOT end_operator begin_name flag command end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name begin_name sos cmd end_name begin_operator DOT end_operator begin_name command label end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get required attributes end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment a label is required end_comment begin_if begin_condition begin_expr begin_call begin_name get label end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name begin_name sos cmd end_name begin_operator DOT end_operator begin_name flag label end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get label end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment verbose end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get verbose end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment look for a comment end_comment begin_if begin_condition begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name begin_name sos cmd end_name begin_operator DOT end_operator begin_name flag comment end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name command line end_name end_expr end_return end_block 
 begin_comment returns the classname of the object we are defining may be code null code return the class name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get classname end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name classname end_name end_expr end_return end_block 
 begin_comment the j unit setup method end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment indicate if this analyzer can determine dependent files return true if the analyzer provides dependency file information end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name supports file dependencies end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment ignored param to ignored end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set to end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name to end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment convert the system properties to a hashtable use propertynames to get the list of properties including default ones end_comment begin_type begin_specifier end_specifier begin_name hashtable end_name end_type begin_name get all system properties end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name ret end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get properties end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name property names end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get properties end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name ret end_name end_expr end_return end_block 
 begin_comment returns the name of the user with the supplied id or a blank string if user not found param user id a user s id return the name of the user with id user id end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get user name end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name user id end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name user end_name end_type begin_name u end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name server end_name begin_operator DOT end_operator begin_name get user end_name end_name begin_argument_list begin_argument begin_expr begin_name user id end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name u end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name u end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 4 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test text end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the vob name param vob the vob name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set vob end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name vob end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m vob end_name begin_operator EQ end_operator begin_name vob end_name end_expr end_expr_stmt end_block 
 begin_comment creates an enumeration from an array of objects param array the array of object to enumerate return the enumeration over the array of objects end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name enumeration end_name end_type begin_name from array end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name object end_name begin_index end_index end_name end_type begin_name array end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name array enumeration end_name begin_argument_list begin_argument begin_expr begin_name array end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment sets an optional super grammar file param super grammar the super grammar file since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set glib end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name super grammar end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name super grammar end_name end_name begin_operator EQ end_operator begin_name super grammar end_name end_expr end_expr_stmt end_block 
 begin_comment returns dependency information on these two resources if src has been modified later than target it returns true if target doesn t exist it likewise returns true otherwise target is newer than src and is not out of date thus the method returns false it also returns false if the src file doesn t even exist since how could the target then be out of date param src the original resource param target the resource being compared against param granularity the long amount in seconds of slack we will give in determining out of dateness return whether the target is out of date end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is out of date end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name src end_name end_decl end_param begin_param begin_decl begin_type begin_name resource end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name granularity end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name is exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name is exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name get last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name granularity end_name begin_operator RPAR end_operator begin_operator GT end_operator begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name get last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment compare two resources param foo the first resource param bar the second resource return a negative integer zero or a positive integer as the first argument is less than equal to or greater than the second throws class cast exception if either resource is not an instance of file resource end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name resource compare end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name foo end_name end_decl end_param begin_param begin_decl begin_type begin_name resource end_name end_type begin_name bar end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name foofile end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name file resource end_name begin_operator RPAR end_operator begin_name foo end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get file end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name barfile end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name file resource end_name begin_operator RPAR end_operator begin_name bar end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get file end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name foofile end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name barfile end_name end_expr end_argument end_argument_list end_call begin_operator QM end_operator begin_operator DP end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name is leading path end_name end_name begin_argument_list begin_argument begin_expr begin_name foofile end_name end_expr end_argument begin_argument begin_expr begin_name barfile end_name end_expr end_argument end_argument_list end_call begin_operator QM end_operator begin_operator MINUS end_operator begin_operator DP end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name foofile end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name compare to end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name barfile end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment gets the user s password return the user s password end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get password end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name password end_name end_expr end_return end_block 
 begin_comment ignore end_comment begin_comment append specified extensions to specified attributes use the extension key to list the extensions usually extension list for required dependencies and optional extension list for optional dependencies note optional dependencies are not part of the specification param attributes the attributes to add extensions to param extensions the list of extensions throws build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name append library list end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name attributes end_name end_type begin_name attributes end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name list prefix end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name array list end_name end_type begin_name extensions end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_init begin_expr begin_call begin_name begin_name extensions end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name extension end_name end_type begin_name ext end_name begin_init begin_expr begin_operator LPAR end_operator begin_name extension end_name begin_operator RPAR end_operator begin_call begin_name begin_name extensions end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name prefix end_name begin_init begin_expr begin_name list prefix end_name begin_operator PLUS end_operator begin_name i end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name extension end_name begin_operator DOT end_operator begin_name add extension end_name end_name begin_argument_list begin_argument begin_expr begin_name ext end_name end_expr end_argument begin_argument begin_expr begin_name prefix end_name end_expr end_argument begin_argument begin_expr begin_name attributes end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test simple end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment get the fileset and its basedir end_comment begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fileset end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name base dir end_name begin_init begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name log end_name begin_init begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name base dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the resource to pack required param src resource to expand end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name src end_name begin_operator UNP end_operator begin_name file resource end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name source end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name file resource end_name begin_operator RPAR end_operator begin_name src end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get file end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name supports non file resources end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_else end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name src end_name end_name begin_operator EQ end_operator begin_name src end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filesmatch incomplete end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test echo to good file fail end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert good file end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment execute the task throws build exception is there is a problem in the task execution end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name regex end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name subs end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name options end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name flags end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name options end_name begin_operator UNP end_operator begin_name begin_name regexp end_name begin_operator DOT end_operator begin_name replace all end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name flags end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name options end_name begin_operator UNP end_operator begin_name begin_name regexp end_name begin_operator DOT end_operator begin_name match case insensitive end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name flags end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name options end_name begin_operator UNP end_operator begin_name begin_name regexp end_name begin_operator DOT end_operator begin_name match multiline end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name flags end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name options end_name begin_operator UNP end_operator begin_name begin_name regexp end_name begin_operator DOT end_operator begin_name match singleline end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name do replace end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name options end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then begin_else begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name sz end_name begin_init begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name sz end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name begin_init begin_expr begin_call begin_name file set end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name do replace end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument begin_argument begin_expr begin_name options end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for end_block end_for end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name condense text end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name text end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator LE end_operator begin_name max report nested text end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_name text end_name end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ends end_name begin_init begin_expr begin_operator LPAR end_operator begin_name max report nested text end_name begin_operator MINUS end_operator begin_call begin_name begin_name ellipsis end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator SLASH end_operator end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr begin_name ends end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name text end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name ends end_name end_expr end_argument begin_argument begin_expr begin_name ellipsis end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment do the work the work is actually done by creating a helper task this approach allows the classpath of the helper task to be set since the weblogic tools require the class files of the project s home and remote interfaces to be available in the classpath this also avoids having to start ant with the class path of the project it is building exception build exception if something goes wrong with the build end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name descriptor directory end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name descriptor directory end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name descriptor directory end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name generated files directory end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name generated files directory end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name generated files directory end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name args end_name begin_init begin_expr begin_name descriptor directory end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name generated files directory end_name end_expr end_init end_decl end_decl_stmt begin_comment get all the files in the descriptor directory end_comment begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name descriptor directory end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name args end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name system class path end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name exec class path end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name translate path end_name end_name begin_argument_list begin_argument begin_expr begin_name system class path end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name java end_name end_type begin_name dd creator task end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name java end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dd creator task end_name begin_operator DOT end_operator begin_name set fork end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dd creator task end_name begin_operator DOT end_operator begin_name set classname end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name argument end_name end_name end_type begin_name arguments end_name begin_init begin_expr begin_call begin_name begin_name dd creator task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name set line end_name end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dd creator task end_name begin_operator DOT end_operator begin_name set classpath end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name exec class path end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name dd creator task end_name begin_operator DOT end_operator begin_name execute java end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_name each handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name ps end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name ps end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment empty end_comment begin_comment empty implementation param ignore ignored end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set to end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name ignore end_name end_decl end_param end_parameter_list begin_block begin_comment empty end_comment end_block 
 begin_comment empty end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start test suite end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name suite end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment get the keep engine attribute return the attribute end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get keep engine end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name keep engine end_name end_expr end_return end_block 
 begin_comment set the directory param d a code string code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name d end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dir end_name end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name d end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name close end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name release end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment ignored end_comment begin_comment modifies a test listener when running j unit 4 treats assertion failed error as a failure not an error since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name test listener end_name end_type begin_name wrap listener end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name test listener end_name end_type begin_name test listener end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_class begin_super begin_name test listener end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add error end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name junit 4 end_name begin_operator UNP end_operator begin_name t end_name begin_operator UNP end_operator begin_name assertion failed error end_name end_expr end_condition begin_then begin_block begin_comment j unit 4 does not distinguish between errors and failures end_comment begin_comment even in the j unit 3 adapter end_comment begin_comment so we need to help it a bit to retain compatibility for j unit 3 tests end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name test listener end_name begin_operator DOT end_operator begin_name add failure end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name assertion failed error end_name begin_operator RPAR end_operator begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name junit 4 end_name begin_operator UNP end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment not strictly necessary but probably desirable end_comment begin_comment j unit 4 specific test gu is will show just failures end_comment begin_comment but ant s output shows failures vs errors end_comment begin_comment we would prefer to show failure for things that logically are end_comment begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name assertion failed error end_name end_type begin_name failure end_name begin_init begin_expr begin_name msg end_name begin_operator UNP end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name assertion failed error end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name assertion failed error end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment to compile on pre jdk 4 even though this should always succeed end_comment begin_decl_stmt begin_decl begin_type begin_name method end_name end_type begin_name init cause end_name begin_init begin_expr begin_call begin_name begin_name throwable end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get method end_name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name throwable end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name init cause end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name failure end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name t end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test listener end_name begin_operator DOT end_operator begin_name add failure end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name failure end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment rats end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment should not happen end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name test listener end_name begin_operator DOT end_operator begin_name add error end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name test listener end_name begin_operator DOT end_operator begin_name add error end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block end_function begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add failure end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name assertion failed error end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name test listener end_name begin_operator DOT end_operator begin_name add failure end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_function begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add failure end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_comment pre 3 4 end_comment begin_if begin_condition begin_expr begin_name t end_name begin_operator UNP end_operator begin_name assertion failed error end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name test listener end_name begin_operator DOT end_operator begin_name add failure end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name assertion failed error end_name begin_operator RPAR end_operator begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name test listener end_name begin_operator DOT end_operator begin_name add error end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_function begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end test end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name test listener end_name begin_operator DOT end_operator begin_name end test end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_function begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start test end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name test listener end_name begin_operator DOT end_operator begin_name start test end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_function end_block end_class end_expr end_return end_block 
 begin_comment utility method for nested scripts throws a build exception with the given message param message text to pass to the build exception throws build exception always since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name fail end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment returns the task field a server deploy object return an server deploy representing the parent task end_comment begin_type begin_specifier end_specifier begin_name server deploy end_name end_type begin_name get task end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name task end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test c end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect name address 3 end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name email address end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name iterator end_name end_type begin_name iterator end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name basedir exists end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name begin_name resources end_name begin_operator DOT end_operator begin_name empty iterator end_name end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name dirname test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment close a writer without throwing any exception if something went wrong do not attempt to close it if the argument is null param device output writer can be null end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name close end_name begin_parameter_list begin_param begin_decl begin_type begin_name writer end_name end_type begin_name device end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name device end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name device end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioex end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_then end_if end_block 
 begin_comment this is the most hammered method of this class p this is the version using unrolled loops normally i never use such ones in java code the unrolling has shown a noticable performance improvement on jre 1 4 2 linux i 586 hot spot client of course it depends on the jit compiler of the vm p end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name main simple sort end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name data end_name end_type begin_name data shadow end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name lo end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name hi end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name d end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name big n end_name begin_init begin_expr begin_name hi end_name begin_operator MINUS end_operator begin_name lo end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name big n end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name first attempt end_name end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name work done end_name end_name begin_operator GT end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name work limit end_name end_name begin_operator RPAR end_operator end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name hp end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name begin_name incs end_name begin_index begin_expr begin_name hp end_name end_expr end_index end_name begin_operator LT end_operator begin_name big n end_name end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name hp end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_while begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name begin_index end_index end_type begin_name fmap end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name fmap end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name char end_name begin_index end_index end_type begin_name quadrant end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name quadrant end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name block end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name block end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name last shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name last end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name last plus 1 end_name begin_init begin_expr begin_name last shadow end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name first attempt shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name first attempt end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name work limit shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name work limit end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name work done shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name work done end_name end_name end_expr end_init end_decl end_decl_stmt begin_comment following block contains unrolled code which could be shortened by end_comment begin_comment coding it in additional loops end_comment begin_label begin_name hp end_name end_label begin_while begin_condition begin_expr begin_operator MMINUS end_operator begin_name hp end_name begin_operator GE end_operator end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name h end_name begin_init begin_expr begin_name begin_name incs end_name begin_index begin_expr begin_name hp end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name mj end_name begin_init begin_expr begin_name lo end_name begin_operator PLUS end_operator begin_name h end_name begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name lo end_name begin_operator PLUS end_operator begin_name h end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LE end_operator begin_name hi end_name end_expr end_condition begin_incr end_incr begin_block begin_comment copy end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name k end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_operator LPAR end_operator begin_name i end_name begin_operator LE end_operator begin_name hi end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator MMINUS end_operator begin_name k end_name begin_operator GE end_operator begin_operator RPAR end_operator end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name v end_name begin_init begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name vd end_name begin_init begin_expr begin_name v end_name begin_operator PLUS end_operator begin_name d end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr begin_name i end_name end_expr end_init end_decl end_decl_stmt begin_comment for int a end_comment begin_comment j mj main gt u a fmap j h d vd end_comment begin_comment block quadrant last shadow end_comment begin_comment j h end_comment begin_comment fmap j a end_comment begin_comment end_comment begin_comment end_comment begin_comment unrolled version end_comment begin_comment start inline main gtu end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name once runned end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name a end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_label begin_name hammer end_name end_label begin_while begin_condition begin_expr end_expr end_condition begin_block begin_if begin_condition begin_expr begin_name once runned end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name begin_operator EQ end_operator begin_name a end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name j end_name begin_operator UNP end_operator begin_name h end_name begin_operator RPAR end_operator begin_operator LE end_operator begin_name mj end_name end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name once runned end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name a end_name begin_operator EQ end_operator begin_name begin_name fmap end_name begin_index begin_expr begin_name j end_name begin_operator MINUS end_operator begin_name h end_name end_expr end_index end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name i 1 end_name begin_init begin_expr begin_name a end_name begin_operator PLUS end_operator begin_name d end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name i 2 end_name begin_init begin_expr begin_name vd end_name end_expr end_init end_decl end_decl_stmt begin_comment following could be done in a loop but end_comment begin_comment unrolled it for performance end_comment begin_if begin_condition begin_expr begin_name begin_name block end_name begin_index begin_expr begin_name i 1 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQT end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 2 end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name begin_name block end_name begin_index begin_expr begin_name i 1 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQT end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 2 end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name begin_name block end_name begin_index begin_expr begin_name i 1 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQT end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 2 end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name begin_name block end_name begin_index begin_expr begin_name i 1 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQT end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 2 end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name begin_name block end_name begin_index begin_expr begin_name i 1 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQT end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 2 end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name begin_name block end_name begin_index begin_expr begin_operator LPAR end_operator begin_name i 1 end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_index end_name begin_operator EQT end_operator begin_name begin_name block end_name begin_index begin_expr begin_operator LPAR end_operator begin_name i 2 end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_index end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name x end_name begin_init begin_expr begin_name last shadow end_name end_expr end_init end_decl end_decl_stmt begin_label begin_name x end_name end_label begin_while begin_condition begin_expr begin_name x end_name begin_operator GT end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name x end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name block end_name begin_index begin_expr begin_name i 1 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQT end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 2 end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name begin_name quadrant end_name begin_index begin_expr begin_name i 1 end_name end_expr end_index end_name begin_operator EQT end_operator begin_name begin_name quadrant end_name begin_index begin_expr begin_name i 2 end_name end_expr end_index end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name begin_name block end_name begin_index begin_expr begin_name i 1 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQT end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 2 end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name begin_name quadrant end_name begin_index begin_expr begin_name i 1 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQT end_operator begin_name begin_name quadrant end_name begin_index begin_expr begin_name i 2 end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name begin_name block end_name begin_index begin_expr begin_name i 1 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQT end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 2 end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name begin_name quadrant end_name begin_index begin_expr begin_name i 1 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQT end_operator begin_name begin_name quadrant end_name begin_index begin_expr begin_name i 2 end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name begin_name block end_name begin_index begin_expr begin_name i 1 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQT end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 2 end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name begin_name quadrant end_name begin_index begin_expr begin_name i 1 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQT end_operator begin_name begin_name quadrant end_name begin_index begin_expr begin_name i 2 end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name i 1 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator GE end_operator begin_name last plus 1 end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name i 1 end_name begin_operator UNP end_operator begin_name last plus 1 end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name i 2 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator GE end_operator begin_name last plus 1 end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name i 2 end_name begin_operator UNP end_operator begin_name last plus 1 end_name end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name work done shadow end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_continue end_continue end_block end_then begin_else begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name begin_name quadrant end_name begin_index begin_expr begin_name i 1 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator GT end_operator begin_name begin_name quadrant end_name begin_index begin_expr begin_name i 2 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then begin_else begin_block begin_break end_break end_block end_else end_if end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 1 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator GT end_operator begin_operator LPAR end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 2 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then begin_else begin_block begin_break end_break end_block end_else end_if end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name begin_name quadrant end_name begin_index begin_expr begin_name i 1 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator GT end_operator begin_name begin_name quadrant end_name begin_index begin_expr begin_name i 2 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then begin_else begin_block begin_break end_break end_block end_else end_if end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 1 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator GT end_operator begin_operator LPAR end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 2 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then begin_else begin_block begin_break end_break end_block end_else end_if end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name begin_name quadrant end_name begin_index begin_expr begin_name i 1 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator GT end_operator begin_name begin_name quadrant end_name begin_index begin_expr begin_name i 2 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then begin_else begin_block begin_break end_break end_block end_else end_if end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 1 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator GT end_operator begin_operator LPAR end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 2 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then begin_else begin_block begin_break end_break end_block end_else end_if end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name begin_name quadrant end_name begin_index begin_expr begin_name i 1 end_name end_expr end_index end_name begin_operator GT end_operator begin_name begin_name quadrant end_name begin_index begin_expr begin_name i 2 end_name end_expr end_index end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then begin_else begin_block begin_break end_break end_block end_else end_if end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 1 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator GT end_operator begin_operator LPAR end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 2 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then begin_else begin_block begin_break end_break end_block end_else end_if end_else end_if end_block end_while begin_break end_break end_block end_then begin_comment while x 0 end_comment begin_else begin_block begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 1 end_name end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator GT end_operator begin_operator LPAR end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 2 end_name end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then begin_else begin_block begin_break end_break end_block end_else end_if end_block end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 1 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator GT end_operator begin_operator LPAR end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 2 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then begin_else begin_block begin_break end_break end_block end_else end_if end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 1 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator GT end_operator begin_operator LPAR end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 2 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then begin_else begin_block begin_break end_break end_block end_else end_if end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 1 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator GT end_operator begin_operator LPAR end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 2 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then begin_else begin_block begin_break end_break end_block end_else end_if end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 1 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator GT end_operator begin_operator LPAR end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 2 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then begin_else begin_block begin_break end_break end_block end_else end_if end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 1 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator GT end_operator begin_operator LPAR end_operator begin_name begin_name block end_name begin_index begin_expr begin_name i 2 end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then begin_else begin_block begin_break end_break end_block end_else end_if end_else end_if end_block end_while begin_comment hammer end_comment begin_comment end inline main gtu end_comment begin_expr_stmt begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name begin_operator EQ end_operator begin_name v end_name end_expr end_expr_stmt end_block end_for begin_if begin_condition begin_expr begin_name first attempt shadow end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name i end_name begin_operator LE end_operator begin_name hi end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name work done shadow end_name begin_operator GT end_operator begin_name work limit shadow end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if end_block end_for end_block end_while begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name work done end_name end_name begin_operator EQ end_operator begin_name work done shadow end_name end_expr end_expr_stmt begin_return begin_expr begin_name first attempt shadow end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name work done shadow end_name begin_operator GT end_operator begin_name work limit shadow end_name begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment set whether to ignore nonexistent files from filelists param b whether to ignore missing files since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set ignoremissing end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name ignore missing end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
