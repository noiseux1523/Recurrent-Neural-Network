 begin_specifier end_specifier begin_name zip entry test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment helper method to get the implementation version param clazz the class to get the information from return null if there is no package or implementation version for jdk 1 0 or 1 1 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get implementation version end_name begin_parameter_list begin_param begin_decl begin_type begin_name class end_name end_type begin_name clazz end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name package end_name end_type begin_name pkg end_name begin_init begin_expr begin_call begin_name begin_name clazz end_name begin_operator DOT end_operator begin_name get package end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name pkg end_name begin_operator DOT end_operator begin_name get implementation version end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name message logged end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name build event end_name end_type begin_name actual end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name actual end_name begin_operator DOT end_operator begin_name get priority end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_condition begin_then begin_return end_return end_then end_if begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name actual end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name actual end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name build event end_name end_type begin_name expected end_name begin_init begin_expr begin_operator LPAR end_operator begin_name build event end_name begin_operator RPAR end_operator begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name remove element at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name expected end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name actual end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name expected end_name begin_operator DOT end_operator begin_name get priority end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name actual end_name begin_operator DOT end_operator begin_name get priority end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment support for nested param name value tags parameter named i cache i i algorithm i i comparator i or i update i are mapped to the respective set method parameter which names starts with i cache i or i algorithm i or i comparator i are tried to set on the appropriate object via its set methods other parameters are invalid and an build exception will be thrown param parameter key and value as parameter object end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name use parameter end_name begin_parameter_list begin_param begin_decl begin_type begin_name parameter end_name end_type begin_name parameter end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key end_name begin_init begin_expr begin_call begin_name begin_name parameter end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name begin_name parameter end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name cache name end_name end_type begin_name cn end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name cache name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cn end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set cache end_name begin_argument_list begin_argument begin_expr begin_name cn end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name algorithm name end_name end_type begin_name an end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name algorithm name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name an end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set algorithm end_name begin_argument_list begin_argument begin_expr begin_name an end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name comparator name end_name end_type begin_name cn end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name comparator name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cn end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set comparator end_name begin_argument_list begin_argument begin_expr begin_name cn end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name update value end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name set update end_name begin_argument_list begin_argument begin_expr begin_name update value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name update value end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name set delay update end_name begin_argument_list begin_argument begin_expr begin_name update value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name sd value end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name set seldirs end_name begin_argument_list begin_argument begin_expr begin_name sd value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name try to set a parameter end_name begin_argument_list begin_argument begin_expr begin_name cache end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name try to set a parameter end_name begin_argument_list begin_argument begin_expr begin_name algorithm end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name try to set a parameter end_name begin_argument_list begin_argument begin_expr begin_name comparator end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_block 
 begin_comment load ant s tasks end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init tasks end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name class loader end_name begin_init begin_expr begin_call begin_name get class loader end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name props end_name begin_init begin_expr begin_call begin_name get default definitions end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name property names end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name class name end_name begin_init begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name ant type definition end_name end_type begin_name def end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name ant type definition end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name set class name end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name set class loader end_name end_name begin_argument_list begin_argument begin_expr begin_name class loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name set adapt to class end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name task end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name set adapter class end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name task adapter end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ant type table end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name def end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_comment create the factory element to configure a trax liaison return the newly created factory element throws build exception if the element is created more than one time end_comment begin_type begin_specifier end_specifier begin_name factory end_name end_type begin_name create factory end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name factory end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name factory end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name factory end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name factory end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name object hash code end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name o end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name o end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_call begin_name begin_name o end_name begin_operator DOT end_operator begin_name hash code end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_comment check for errors throws build exception if we are not configured right end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate end_name begin_parameter_list end_parameter_list begin_block begin_comment validation end_comment begin_if begin_condition begin_expr begin_name property end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error no property end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name file end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name paths end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error no files end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test resourcesmatch none exist end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test delay end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a stream pumper to copy the given input stream to the given output stream used for standard input since ant 1 6 3 end_comment begin_comment protected end_comment begin_type begin_name stream pumper end_name end_type begin_name create input pump end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name end_decl end_param begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name os end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name close when exhausted end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name stream pumper end_name end_type begin_name pumper end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name stream pumper end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument begin_argument begin_expr begin_name os end_name end_expr end_argument begin_argument begin_expr begin_name close when exhausted end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pumper end_name begin_operator DOT end_operator begin_name set autoflush end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name pumper end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name send mtf values 0 end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name n groups end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name alpha size end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index begin_index end_index end_type begin_name len end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name begin_operator DOT end_operator begin_name send mtf values len end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name begin_index end_index end_type begin_name mtf freq end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name begin_operator DOT end_operator begin_name mtf freq end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name rem f end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name n mtf end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name gs end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name n part end_name begin_init begin_expr begin_name n groups end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name n part end_name begin_operator GT end_operator end_expr end_condition begin_incr begin_expr begin_name n part end_name begin_operator MMINUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name t freq end_name begin_init begin_expr begin_name rem f end_name begin_operator SLASH end_operator begin_name n part end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ge end_name begin_init begin_expr begin_name gs end_name begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name a freq end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name a end_name begin_init begin_expr begin_name alpha size end_name begin_operator MINUS end_operator end_expr end_init end_decl end_init begin_condition begin_expr begin_operator LPAR end_operator begin_name a freq end_name begin_operator LT end_operator begin_name t freq end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name ge end_name begin_operator LT end_operator begin_name a end_name begin_operator RPAR end_operator end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_name a freq end_name begin_operator UNP end_operator begin_name begin_name mtf freq end_name begin_index begin_expr begin_operator PPLUS end_operator begin_name ge end_name end_expr end_index end_name end_expr end_expr_stmt end_block end_for begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name ge end_name begin_operator GT end_operator begin_name gs end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name n part end_name begin_operator UNP end_operator begin_name n groups end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name n part end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name n groups end_name begin_operator MINUS end_operator begin_name n part end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name a freq end_name begin_operator UNP end_operator begin_name begin_name mtf freq end_name begin_index begin_expr begin_name ge end_name begin_operator MMINUS end_operator end_expr end_index end_name end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name len np end_name begin_init begin_expr begin_name begin_name len end_name begin_index begin_expr begin_name n part end_name begin_operator MINUS end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name v end_name begin_init begin_expr begin_name alpha size end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_operator MMINUS end_operator begin_name v end_name begin_operator GE end_operator end_expr end_condition begin_incr end_incr begin_block begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name v end_name begin_operator GE end_operator begin_name gs end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name v end_name begin_operator LE end_operator begin_name ge end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name len np end_name begin_index begin_expr begin_name v end_name end_expr end_index end_name begin_operator EQ end_operator begin_name lesser icost end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name begin_name len np end_name begin_index begin_expr begin_name v end_name end_expr end_index end_name begin_operator EQ end_operator begin_name greater icost end_name end_expr end_expr_stmt end_block end_else end_if end_block end_for begin_expr_stmt begin_expr begin_name gs end_name begin_operator EQ end_operator begin_name ge end_name begin_operator PLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name rem f end_name begin_operator UNP end_operator begin_name a freq end_name end_expr end_expr_stmt end_block end_for end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name print res end_name begin_parameter_list begin_param begin_decl begin_type begin_name array list end_name end_type begin_name ar end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name header end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name header end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name ar end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name ar end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 9 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test flush single bytes end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name write single bytes end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stream end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stream end_name begin_operator DOT end_operator begin_name assert invoked end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the source file return the source file end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name file end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name expected end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name testdate end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get pbranch flag status return boolean containing status of pbranch flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get pbranch end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m pbranch end_name end_expr end_return end_block 
 begin_comment the j unit setup method end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment used when called by scriptdef param loader the loader used by scriptdef end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set class loader end_name begin_parameter_list begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name loader end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name script loader end_name begin_operator EQ end_operator begin_name loader end_name end_expr end_expr_stmt end_block 
 begin_comment return code true code if the first version number is greater than or equal to the second otherwise return code false code param first first version number dotted decimal param second second version number dotted decimal end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is compatible end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name dewey decimal end_name end_type begin_name first end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name dewey decimal end_name end_type begin_name second end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name first end_name begin_operator DOT end_operator begin_name is greater than or equal end_name end_name begin_argument_list begin_argument begin_expr begin_name second end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment reads characters into a portion of an array this method will block until some input is available an i o error occurs or the end of the stream is reached param cbuf destination buffer to write characters to must not be code null code param off offset at which to start storing characters param len maximum number of characters to read return the number of characters read or 1 if the end of the stream has been reached exception io exception if an i o error occurs end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name begin_name char end_name begin_index end_index end_name end_type begin_name cbuf end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name off end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name len end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name len end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name ch end_name begin_init begin_expr begin_call begin_name read end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name i end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator MINUS end_operator end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_name i end_name end_expr end_return end_block end_else end_if end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name cbuf end_name begin_index begin_expr begin_name off end_name begin_operator PLUS end_operator begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator begin_name ch end_name end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name len end_name end_expr end_return end_block 
 begin_comment creates a new connection as using the driver url userid and password specified the calling method is responsible for closing the connection return connection the newly created connection throws build exception if the user id password url is not set or there is no suitable driver or the driver fails to load end_comment begin_type begin_specifier end_specifier begin_name connection end_name end_type begin_name get connection end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name user id end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name password end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name url end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get url end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name info end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name info end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get user id end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name info end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get password end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name connection end_name end_type begin_name conn end_name begin_init begin_expr begin_call begin_name get driver end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name connect end_name begin_argument_list begin_argument begin_expr begin_call begin_name get url end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name info end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name conn end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment driver doesn t understand the url end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name sql exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name conn end_name begin_operator DOT end_operator begin_name set auto commit end_name end_name begin_argument_list begin_argument begin_expr begin_name autocommit end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name conn end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name sql exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment check if a classloader has a classname resource param loader the classloader to look it param class name the name of the class to look for return true if the classexists false otherwise since ant 1 7 0 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name class exists end_name begin_parameter_list begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name loader end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name class name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name get resource end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name class name to resource end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_return end_block 
 begin_comment get the name attribute return the name attribute end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_comment return the set of global filters return the set of global filters end_comment begin_type begin_specifier end_specifier begin_name filter set end_name end_type begin_name get global filter set end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name global filter set end_name end_expr end_return end_block 
 begin_comment test parser end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test parse end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name zip extra field end_name begin_index end_index end_type begin_name ze end_name begin_init begin_expr begin_call begin_name begin_name extra field utils end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_name data end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name ze end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name ze end_name begin_index begin_expr end_expr end_index end_name begin_operator UNP end_operator begin_name asi extra field end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name asi extra field end_name begin_operator RPAR end_operator begin_name begin_name ze end_name begin_index begin_expr end_expr end_index end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get mode end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name ze end_name begin_index begin_expr end_expr end_index end_name begin_operator UNP end_operator begin_name unrecognized extra field end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name ze end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get local file data length end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name data 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_name begin_name data end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name data end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name data 2 end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name data 2 end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name extra field utils end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_name data 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_operator PLUS end_operator begin_name begin_name a local end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator RPAR end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment returns the current ant handler object return the current ant handler end_comment begin_type begin_specifier end_specifier begin_name ant handler end_name end_type begin_name get current ant handler end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name current handler end_name end_expr end_return end_block 
 begin_comment get an output stream for the resource return an output stream to which content can be written throws io exception if unable to provide the content of this resource as a stream throws unsupported operation exception if output streams are not supported for this resource type end_comment begin_type begin_specifier end_specifier begin_name output stream end_name end_type begin_name get output stream end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name begin_init begin_expr begin_call begin_name get resource end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name out end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator begin_call begin_name wrap stream end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name out end_name end_expr end_return end_block 
 begin_comment add a selector type entry on the selector list param selector the code type selector code to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add type end_name begin_parameter_list begin_param begin_decl begin_type begin_name type selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the type specifier string return the type kind type name vob specifier end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get type specifier end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name tkind end_name begin_init begin_expr begin_call begin_name get type kind end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name tname end_name begin_init begin_expr begin_call begin_name get type name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name type spec end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment return the type selector end_comment begin_expr_stmt begin_expr begin_name type spec end_name begin_operator EQ end_operator begin_name tkind end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name tname end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get vob end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name type spec end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_call begin_name get vob end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name type spec end_name end_expr end_return end_block 
 begin_comment construct a archive resource representing the specified entry in the specified archive param a the archive as file param with entry if the entry has been specified end_comment begin_specifier end_specifier begin_name archive resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name a end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name with entry end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set archive end_name begin_argument_list begin_argument begin_expr begin_name a end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name have entry end_name begin_operator EQ end_operator begin_name with entry end_name end_expr end_expr_stmt end_block 
 begin_comment trim filter param filter the trim filter end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add trim end_name begin_parameter_list begin_param begin_decl begin_type begin_name trim end_name end_type begin_name filter end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filters end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name filter end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment checks whether the current java vm is kaffe return true if the current java vm is kaffe since ant 1 6 3 see a href http www kaffe org http www kaffe org a end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is kaffe end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name kaffe detected end_name end_expr end_return end_block 
 begin_comment gets the comment string ccomment text return a comment of if comment is not set end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get comment end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name comment end_name begin_operator UNP end_operator begin_operator QM end_operator begin_name flag comment end_name begin_operator PLUS end_operator begin_name comment end_name begin_operator DP end_operator begin_name flag comment end_name begin_operator PLUS end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start document end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block end_block 
 begin_comment get the variable list as an array return array of key value assignment strings throws build exception if any variable is misconfigured end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get variables end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name variables end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name variables end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name result end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name variable end_name begin_operator RPAR end_operator begin_call begin_name begin_name variables end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get content end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment try to clone and reconfigure the object referenced by oldkey in the parent project and add it to the new project with the key newkey p if we cannot clone it copy the referenced object itself and keep our fingers crossed p param old key the reference id in the current project param new key the reference id in the new project end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name copy reference end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name old key end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name new key end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name orig end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr begin_name old key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name orig end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name old key end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name new key end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name orig end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name copy end_name begin_init begin_expr begin_name orig end_name end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name method end_name end_type begin_name clone m end_name begin_init begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name clone m end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name copy end_name begin_operator EQ end_operator begin_call begin_name begin_name clone m end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name orig end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name old key end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment not clonable end_comment end_block end_catch end_try begin_if begin_condition begin_expr begin_name copy end_name begin_operator UNP end_operator begin_name project component end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name project component end_name begin_operator RPAR end_operator begin_name copy end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set project end_name begin_argument_list begin_argument begin_expr begin_name new project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name method end_name end_type begin_name set project m end_name begin_init begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name set project m end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name set project m end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name copy end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name new project end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no such method exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore this if the class being referenced does not have end_comment begin_comment a set project method end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e 2 end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name old key end_name end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name e 2 end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name new project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr begin_name new key end_name end_expr end_argument begin_argument begin_expr begin_name copy end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test dir set end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name dir set end_name end_type begin_name d end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name dir set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name add dirset end_name end_name begin_argument_list begin_argument begin_expr begin_name d end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name l end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment zip a resource to an output stream param resource the resource to zip param z out the output stream throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name zip resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name resource end_name end_decl end_param begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name z out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name r in end_name begin_init begin_expr begin_call begin_name begin_name resource end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name zip file end_name begin_argument_list begin_argument begin_expr begin_name r in end_name end_expr end_argument begin_argument begin_expr begin_name z out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name r in end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name run end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param begin_param begin_decl begin_type begin_name project component end_name end_type begin_name log end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name n 2 a main end_name begin_init begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name class end_name begin_index end_index end_type begin_name param end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name string end_name begin_index end_index end_name begin_operator DOT end_operator begin_name class end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name method end_name end_type begin_name convert end_name begin_init begin_expr begin_call begin_name begin_name n 2 a main end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name param end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name convert end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name n 2 a main end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name boolean end_name begin_operator RPAR end_operator begin_call begin_name begin_name convert end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name o end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name get arguments end_name end_name begin_argument_list end_argument_list end_call end_expr end_block end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name boolean value end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_comment rethrow end_comment begin_throw begin_expr begin_name ex end_name end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_comment wrap end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert src is java resource end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name src end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name src end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name java resource end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name src end_name begin_operator UNP end_operator begin_name java resource end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_else end_if end_block 
 begin_comment add a file set param fs the code file set code to add end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name resource collection end_name begin_operator RPAR end_operator begin_name fs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns a vector of matched groups found in the argument p group 0 will be the full match the rest are the parenthesized subexpressions p param input the string to match against param options the regex options to use return the vector of groups throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name get groups end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name input end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name options end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name pattern end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name get compiled pattern end_name begin_argument_list begin_argument begin_expr begin_name options end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name matcher end_name end_type begin_name matcher end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name matcher end_name end_name begin_argument_list begin_argument begin_expr begin_name input end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name matcher end_name begin_operator DOT end_operator begin_name find end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name v end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name cnt end_name begin_init begin_expr begin_call begin_name begin_name matcher end_name begin_operator DOT end_operator begin_name group count end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LE end_operator begin_name cnt end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name match end_name begin_init begin_expr begin_call begin_name begin_name matcher end_name begin_operator DOT end_operator begin_name group end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment treat non matching groups as empty matches end_comment begin_if begin_condition begin_expr begin_name match end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name match end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name match end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name v end_name end_expr end_return end_block 
 begin_comment get value of label return string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get label end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name label end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filter 6 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for the build file test object param name string to pass up to test case constructor end_comment begin_specifier end_specifier begin_name extended taskdef test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_name sorted bag end_name begin_parameter_list begin_param begin_decl begin_type begin_name comparator end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name t end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name tree map end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set whether to search nested then system path environment variables for the executable param search path if true search pat hs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set search path end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name search path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name search path end_name end_name begin_operator EQ end_operator begin_name search path end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name ant class loader test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment does the given argument match the pattern param argument the string to match against return true if the pattern matches throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name matches end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name argument end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_call begin_name matches end_name begin_argument_list begin_argument begin_expr begin_name argument end_name end_expr end_argument begin_argument begin_expr begin_name match default end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment get the extension s path return the path to be used to load the extension may be code null code end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name get path end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name path end_name end_expr end_return end_block 
 begin_comment reads from the code reader code into a byte array param b the byte array to read into param off the offset in the byte array param len the length in the byte array to fill return the actual number read into the byte array 1 at the end of the stream exception io exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name b end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name off end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name len end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name in end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name len end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_while begin_condition begin_expr begin_name slack end_name begin_operator EQT end_operator end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name char end_name begin_index end_index end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name char end_name begin_index begin_expr begin_name len end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_comment might read too much end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name n end_name begin_init begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name n end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator MINUS end_operator end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name n end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name slack end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name n end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_while begin_if begin_condition begin_expr begin_name len end_name begin_operator GT end_operator begin_name begin_name slack end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator begin_name begin end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name len end_name begin_operator EQ end_operator begin_name begin_name slack end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator begin_name begin end_name end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name slack end_name end_expr end_argument begin_argument begin_expr begin_name begin end_name end_expr end_argument begin_argument begin_expr begin_name b end_name end_expr end_argument begin_argument begin_expr begin_name off end_name end_expr end_argument begin_argument begin_expr begin_name len end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name begin end_name begin_operator UNP end_operator begin_name len end_name begin_operator RPAR end_operator begin_operator GE end_operator begin_name begin_name slack end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name slack end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name len end_name end_expr end_return end_block 
 begin_name taskdef for making bed end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment message to write param msg sets the value for the message variable end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set message end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name message end_name end_name begin_operator EQ end_operator begin_name msg end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name get timestamp end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name millis end_name begin_operator LT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name millis end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name untar test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the revision number of the rcs file return the revision number as string end_comment begin_type begin_name string end_name end_type begin_name get revision end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name revision end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name one failure ftp end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test and fails end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property unset end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment end_comment begin_comment predefined tokenizers end_comment begin_comment end_comment begin_comment add a line tokenizer this is the default param tokenizer the line tokenizer end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add line tokenizer end_name begin_parameter_list begin_param begin_decl begin_type begin_name line tokenizer end_name end_type begin_name tokenizer end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name tokenizer end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment reference element identifying a data type to carry over to the invoked target param r the specified code ant reference code since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add reference end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name ant end_name begin_operator DOT end_operator begin_name reference end_name end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name callee end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name init end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name callee end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the classpath by reference param r a reference to a path instance to be used as the classpath value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get class path delegate end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set classpathref end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment performs the tasks within this target if the conditions are met firing target started target finished messages around a call to execute see execute end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name perform tasks end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name runtime exception end_name end_type begin_name thrown end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name fire target started end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name execute end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name runtime exception end_name end_type begin_name exc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name thrown end_name begin_operator EQ end_operator begin_name exc end_name end_expr end_expr_stmt begin_throw begin_expr begin_name exc end_name end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name fire target finished end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name thrown end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment check that having no suite generates no errors end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no suite end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name test runner end_name end_type begin_name runner end_name begin_init begin_expr begin_call begin_name create runner end_name begin_argument_list begin_argument begin_expr begin_name begin_name no suite test case end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name runner end_name begin_operator DOT end_operator begin_name run end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name runner end_name begin_operator DOT end_operator begin_name get formatter end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get error end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name j unit test runner end_name begin_operator DOT end_operator begin_name success end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name runner end_name begin_operator DOT end_operator begin_name get ret code end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check the options has a particular flag set param options an code int code value param flag an code int code value return true if the flag is set end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name has flag end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name options end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name flag end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name options end_name begin_operator UNP end_operator begin_name flag end_name begin_operator RPAR end_operator begin_operator GT end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the url attribute param url the url of the request end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set url end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name url end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name spec end_name begin_operator EQ end_operator begin_name url end_name end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set system error end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name err end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name system error end_name begin_operator EQ end_operator begin_name err end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment send a quot task started quot event to the build listeners for this project param task the target which is starting to execute must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name fire task started end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name task end_name end_decl end_param end_parameter_list begin_block begin_comment register this as the current task on the current thread end_comment begin_expr_stmt begin_expr begin_call begin_name register thread task end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name current thread end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name build event end_name end_type begin_name event end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name build event end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name listeners end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name build listener end_name end_type begin_name listener end_name begin_init begin_expr begin_operator LPAR end_operator begin_name build listener end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name listener end_name begin_operator DOT end_operator begin_name task started end_name end_name begin_argument_list begin_argument begin_expr begin_name event end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_comment returns the next character in the filtered stream only including lines from the original stream which contain all of the specified words return the next character in the resulting stream or 1 if the end of the resulting stream has been reached exception io exception if the underlying stream throws an io exception during reading end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get initialized end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name initialize end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set initialized end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ch end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name line end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name contains size end_name begin_init begin_expr begin_call begin_name begin_name contains end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name read line end_name begin_argument_list end_argument_list end_call end_expr end_init begin_condition begin_expr begin_name line end_name begin_operator UNP end_operator end_expr end_condition begin_incr begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name read line end_name begin_argument_list end_argument_list end_call end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name matches end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name matches end_name begin_operator UNP end_operator begin_name i end_name begin_operator LT end_operator begin_name contains size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name contains str end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name contains end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name matches end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name contains str end_name end_expr end_argument end_argument_list end_call begin_operator GE end_operator end_expr end_expr_stmt end_block end_for begin_if begin_condition begin_expr begin_name matches end_name begin_operator UNP end_operator begin_call begin_name is negated end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_name line end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name read end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if end_block end_else end_if begin_return begin_expr begin_name ch end_name end_expr end_return end_block 
 begin_comment return the namespace of the xml element associated with this component return namespace uri used in the xmlns declaration end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get namespace end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name namespace end_name end_expr end_return end_block 
 begin_comment send a quot message logged quot event to the build listeners for this project param event the event to send this should be built up with the appropriate task target project by the caller so that this method can set the message and priority then send the event must not be code null code param message the message to send should not be code null code param priority the priority of the message end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name fire message logged event end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name priority end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name end index end_name begin_init begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name set message end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name end index end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name priority end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name set message end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name priority end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_synchronized begin_expr begin_name this end_name end_expr begin_block begin_if begin_condition begin_expr begin_name logging message end_name end_expr end_condition begin_then begin_block begin_comment one of the listeners has attempted to access system err or system out we used to throw an exception in this case but sometimes listeners can t prevent it like our own log 4 j listener which invokes get logger which in turn wants to write to the console see http marc theaimsgroup com t 110538624200006 r 1 w 2 we now ant 1 7 and 1 6 3 simply swallow the message end_comment begin_return end_return end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_name logging message end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name listeners end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name build listener end_name end_type begin_name listener end_name begin_init begin_expr begin_operator LPAR end_operator begin_name build listener end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name listener end_name begin_operator DOT end_operator begin_name message logged end_name end_name begin_argument_list begin_argument begin_expr begin_name event end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block begin_finally begin_block begin_expr_stmt begin_expr begin_name logging message end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_finally end_try end_block end_synchronized end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no time out end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name process end_name end_type begin_name process end_name begin_init begin_expr begin_call begin_name get process end_name begin_argument_list begin_argument begin_expr begin_name time out end_name begin_operator SLASH end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name watchdog end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list begin_argument begin_expr begin_name process end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ret code end_name begin_init begin_expr begin_call begin_name wait for end end_name begin_argument_list begin_argument begin_expr begin_name process end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name watchdog end_name begin_operator DOT end_operator begin_name killed process end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert false end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name is failure end_name end_name begin_argument_list begin_argument begin_expr begin_name ret code end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment construct the listener and make sure that a log factory can be obtained end_comment begin_specifier end_specifier begin_name commons logging listener end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment creates a pvcs object end_comment begin_specifier end_specifier begin_name pvcs end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name pvcs project end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name pvcs projects end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name workspace end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name repository end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name pvcsbin end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name force end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name promotiongroup end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name label end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ignorerc end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name update only end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name line start end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name filename format end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment the header id return the value for the header id for this extrafield since 1 1 end_comment begin_type begin_specifier end_specifier begin_name zip short end_name end_type begin_name get header id end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name header id end_name end_expr end_return end_block 
 begin_comment computes a value for a file content with the specified digest algorithm param file file object for which the value should be evaluated return the value for that file end_comment begin_comment implementation adapted from taskdefs checksum thanks to magesh for hint end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get value end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name init message digest end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name checksum end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name can read end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file input stream end_name end_type begin_name fis end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_name read buffer size end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name message digest end_name begin_operator DOT end_operator begin_name reset end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name fis end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name digest input stream end_name end_type begin_name dis end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name digest input stream end_name begin_argument_list begin_argument begin_expr begin_name fis end_name end_expr end_argument begin_argument begin_expr begin_name message digest end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name dis end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name read buffer size end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_block begin_comment do nothing end_comment end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name dis end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fis end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name fis end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name file digest end_name begin_init begin_expr begin_call begin_name begin_name message digest end_name begin_operator DOT end_operator begin_name digest end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name checksum sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name file digest end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name hex str end_name begin_init begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name to hex string end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name file digest end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name hex str end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name checksum sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name checksum sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name hex str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_name checksum end_name begin_operator EQ end_operator begin_call begin_name begin_name checksum sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block end_catch end_try end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block end_catch end_try begin_return begin_expr begin_name checksum end_name end_expr end_return end_block 
 begin_comment returns the loader id of the class path delegate return the loader id end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get loader id end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get delegate end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class load id end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment file mode of this file return the file mode since 1 1 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get mode end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name mode end_name end_expr end_return end_block 
 begin_comment this is just a quick sanity check to run the trace option and make sure that it doesn t throw any funny exceptions end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 12 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructs an code exit status exception code param status the associated status code end_comment begin_specifier end_specifier begin_name exit status exception end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name status end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name status end_name end_name begin_operator EQ end_operator begin_name status end_name end_expr end_expr_stmt end_block 
 begin_comment fulfill the resource collection contract return whether this resource is a file resource since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is filesystem only end_name begin_parameter_list end_parameter_list begin_block begin_comment default false end_comment begin_return begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name is filesystem only end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set the number of points to be used param p an integer value as a string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set point end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name point end_name begin_operator EQ end_operator begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment write the data to the buffer and flush the buffer if a line separator is detected param cc data to log byte throws io exception if there is an error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name cc end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte end_name end_type begin_name c end_name begin_init begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator begin_name cc end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name c end_name begin_operator EQT end_operator begin_name lf end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name c end_name begin_operator EQT end_operator begin_name cr end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name skip end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name process buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name cc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name skip end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name c end_name begin_operator EQT end_operator begin_name cr end_name begin_operator RPAR end_operator end_expr end_expr_stmt end_block 
 begin_comment indicates whether a retry was done return whether a retry was done end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name retry end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_specifier end_specifier begin_name make url test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment override allowed on available end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name timer end_name end_type begin_name timer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name timer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name timer end_name begin_operator DOT end_operator begin_name stop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name trace end_name end_expr end_condition begin_then begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name timer end_name begin_operator DOT end_operator begin_name time end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_then end_if begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name timer end_name begin_operator DOT end_operator begin_name time end_name end_name begin_argument_list end_argument_list end_call begin_operator GE end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment corresponds to code lt ant gt code s code inheritall code attribute param b the new value for this boolean flag end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set inheritall end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name inherit all end_name end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment param flags the regex flags end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set flags end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name flags end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name flags end_name end_name begin_operator EQ end_operator begin_name flags end_name end_expr end_expr_stmt end_block 
 begin_type begin_name assertion failed error end_name end_type begin_name get error end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name error end_name end_expr end_return end_block 
 begin_comment same logic as on algorithm no testcases created end_comment begin_comment test the interface semantic of caches this method does some common test for cache implementations a cache must return a stored value and a valid iterator after calling the delete the cache must be empty param algo configured test object end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name do test end_name begin_parameter_list begin_param begin_decl begin_type begin_name cache end_name end_type begin_name cache end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name is valid end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key 1 end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value 1 end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key 2 end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value 2 end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment given cache must be empty end_comment begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name it 1 end_name begin_init begin_expr begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert false end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name it 1 end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment cache must return a stored value end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name key 1 end_name end_expr end_argument begin_argument begin_expr begin_name value 1 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name key 2 end_name end_expr end_argument begin_argument begin_expr begin_name value 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name value 1 end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name key 1 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name value 2 end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name key 2 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment test the iterator end_comment begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name it 2 end_name begin_init begin_expr begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name returned end_name begin_init begin_expr begin_call begin_name begin_name it 2 end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name ok end_name begin_init begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name key 1 end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name returned end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name key 2 end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name returned end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name key 1 end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name returned end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name key 2 end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name returned end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name returned end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name ok end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name ok end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment clear the cache end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name it 3 end_name begin_init begin_expr begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert false end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name it 1 end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test value works end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment equality method for this definition param other another definition param project the current project return true if the definitions are the same end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name same definition end_name begin_parameter_list begin_param begin_decl begin_type begin_name ant type definition end_name end_type begin_name other end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name same definition end_name end_name begin_argument_list begin_argument begin_expr begin_name other end_name end_expr end_argument begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name my ant type definition end_name end_type begin_name other def end_name begin_init begin_expr begin_operator LPAR end_operator begin_name my ant type definition end_name begin_operator RPAR end_operator begin_name other end_name end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name macro def end_name begin_operator DOT end_operator begin_name same definition end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name other def end_name begin_operator DOT end_operator begin_name macro def end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test full path matches case sensitive end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name login suceeded end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name change remote dir end_name begin_argument_list begin_argument begin_expr begin_name remote tmp dir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name ftp directory scanner end_name end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name my ftp task end_name begin_operator DOT end_operator begin_name new scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment here is a comment with an embedded tab end_comment begin_if begin_condition begin_expr begin_name mybool end_name end_expr end_condition begin_then begin_block begin_comment here is a multi line with embedded tab comment end_comment begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name mychar end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment tab end_comment end_block end_then end_if begin_comment end of if mybool end_comment end_block 
 begin_specifier end_specifier begin_name xml parser test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment renames the file code src code to code dest code exception org apache tools ant build exception the exception is thrown if the rename operation fails end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name dest end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name src end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name replace end_name begin_operator UNP end_operator begin_call begin_name begin_name dest end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name dest end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name rename end_name end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument begin_argument begin_expr begin_name dest end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name src end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name dest end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment add an extended selector entry on the selector list param selector the selector to be added end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add custom end_name begin_parameter_list begin_param begin_decl begin_type begin_name extend selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name used matching task end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name add custom end_name end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the feature value to true or false param value feature value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name attribute value end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test single file path end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the current task associated with a thread if any param thread the thread for which the task is required return the task which is currently registered for the given thread or null if no task is registered end_comment begin_type begin_specifier end_specifier begin_name task end_name end_type begin_name get thread task end_name begin_parameter_list begin_param begin_decl begin_type begin_name thread end_name end_type begin_name thread end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name task end_name end_type begin_name task end_name begin_init begin_expr begin_operator LPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_call begin_name begin_name thread tasks end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name thread end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name task end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name thread group end_name end_type begin_name group end_name begin_init begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name get thread group end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name task end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name group end_name begin_operator UNP end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name task end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_call begin_name begin_name thread group tasks end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name group end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name group end_name begin_operator EQ end_operator begin_call begin_name begin_name group end_name begin_operator DOT end_operator begin_name get parent end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_then end_if begin_return begin_expr begin_name task end_name end_expr end_return end_block 
 begin_comment assuming skip otherwise end_comment begin_comment don t warn if skip has been requested explicitly warn if user end_comment begin_comment didn t set the attribute end_comment begin_comment hide warning also as it makes no sense since end_comment begin_comment the filesetmanifest attribute itself has been end_comment begin_comment hidden end_comment begin_comment int log level fileset manifest config null end_comment begin_comment project msg warn project msg verbose end_comment begin_comment log file file end_comment begin_comment includes a meta inf manifest mf which will be ignored end_comment begin_comment to include this file set fileset manifest to a value other end_comment begin_comment than skip log level end_comment begin_comment collect the resources that are newer than the corresponding entries or missing in the original archive p if we are going to recreate the archive instead of updating it all resources should be considered as new if a single one is because of this subclasses overriding this method must call code super get resources to add code and indicate with the third arg if they already know that the archive is out of date p param rcs the resource collections to grab resources from param zip file intended archive file may or may not exist param needs update whether we already know that the archive is out of date subclasses overriding this method are supposed to set this value correctly in their call to super get resources to add return an array of resources to add for each fileset passed in as well as a flag that indicates whether the archive is uptodate exception build exception if it likes end_comment begin_type begin_specifier end_specifier begin_name archive state end_name end_type begin_name get resources to add end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name resource collection end_name begin_index end_index end_name end_type begin_name rcs end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name zip file end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name needs update end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment need to handle manifest as a special check end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment if it doesn t exist it will get created anyway don t end_comment begin_comment bother with any up to date checks end_comment begin_try begin_block begin_expr_stmt begin_expr begin_name original manifest end_name begin_operator EQ end_operator begin_call begin_name get manifest from jar end_name begin_argument_list begin_argument begin_expr begin_name zip file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name original manifest end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name needs update end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name manifest end_name end_type begin_name mf end_name begin_init begin_expr begin_call begin_name create manifest end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name mf end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name original manifest end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name needs update end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name needs update end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_catch end_try end_block end_then begin_else begin_block begin_comment no existing archive end_comment begin_expr_stmt begin_expr begin_name needs update end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name create empty end_name begin_operator EQ end_operator begin_name needs update end_name end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get resources to add end_name end_name begin_argument_list begin_argument begin_expr begin_name rcs end_name end_expr end_argument begin_argument begin_expr begin_name zip file end_name end_expr end_argument begin_argument begin_expr begin_name needs update end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment sets project handler param handler new project handler end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set project handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name ant handler end_name end_type begin_name handler end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name project handler end_name begin_operator EQ end_operator begin_name handler end_name end_expr end_expr_stmt end_block 
 begin_comment constructor that takes the name of the task in the task name param task name the name of the task since ant 1 7 end_comment begin_specifier end_specifier begin_name condition base end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name task name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name task name end_name end_name begin_operator EQ end_operator begin_name task name end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirect 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set to do an unlocked checkout optional default is false if true file will be unlocked so that other users may change it if false lock status will not change param v true means do an unlocked checkout false means leave status alone end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set unlocked end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name v end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name lock status end_name end_name begin_operator EQ end_operator begin_name begin_name item end_name begin_operator DOT end_operator begin_name lock type end_name begin_operator DOT end_operator begin_name unlocked end_name end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name lock status end_name end_name begin_operator EQ end_operator begin_name begin_name item end_name begin_operator DOT end_operator begin_name lock type end_name begin_operator DOT end_operator begin_name unchanged end_name end_name end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment set the color of the text param c the color name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set color end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name color end_name begin_operator EQ end_operator begin_name c end_name end_expr end_expr_stmt end_block 
 begin_comment sets the debugging flag param debug true to turn on debugging end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set debug end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name debug end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_operator EQ end_operator begin_name debug end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name buffer end_name begin_operator DOT end_operator begin_name set debug end_name end_name begin_argument_list begin_argument begin_expr begin_name debug end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return a string describing this object end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name user provided expression end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment no arg constructor end_comment begin_specifier end_specifier begin_name default native 2 ascii end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment output an empty string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment shorthand to set the cc address element param list comma separated list of addresses end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set cc list end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name list end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name tokens end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name list end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name tokens end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cc list end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name email address end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name tokens end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_comment tells if the resource is a directory return boolean flag indicating if the resource is a directory end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is directory end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get resource end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name is directory end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test multiple targets end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the parent task param task an server deploy object representing the parent task ant attribute ignored true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set task end_name begin_parameter_list begin_param begin_decl begin_type begin_name server deploy end_name end_type begin_name task end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set task end_name end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name java end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name java end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the code orb code to construct classpath param a string rmi jeremie or david end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set orb end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name a string end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name orb end_name begin_operator EQ end_operator begin_name a string end_name end_expr end_expr_stmt end_block 
 begin_comment get the user information return the user information end_comment begin_type begin_specifier end_specifier begin_name ssh user info end_name end_type begin_name get user info end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name user info end_name end_expr end_return end_block 
 begin_comment composes a stream from a string with the specified encoding param source the string to read from must not be code null code param encoding the encoding scheme also must not be code null code end_comment begin_specifier end_specifier begin_name string input stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name source end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string reader end_name begin_argument_list begin_argument begin_expr begin_name source end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name p end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name init end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the output file required param dest file the destination file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dest file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dest file end_name end_name begin_operator EQ end_operator begin_name dest file end_name end_expr end_expr_stmt end_block 
 begin_comment add a replacestring filter param filter a code token filter replace string code value since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add replace string end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name token filter end_name begin_operator DOT end_operator begin_name replace string end_name end_name end_type begin_name filter end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filter readers end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name filter end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the file to direct standard error from the command param error a file to which stderr should go end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set error end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name error end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name error end_name end_name begin_operator EQ end_operator begin_name error end_name end_expr end_expr_stmt end_block 
 begin_comment return the line ending character s for the current line end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get post token end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name include delims end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_name line end end_name end_expr end_return end_block 
 begin_comment get the local file return the local file end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get local file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name local file end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name accept end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test with url resource end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect file contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment processes the given input xml file and stores the result in the given result file param base dir the base directory for resolving files param xml file the input file param dest dir the destination directory param stylesheet the stylesheet to use exception build exception if the processing fails end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name base dir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name xml file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest dir end_name end_decl end_param begin_param begin_decl begin_type begin_name resource end_name end_type begin_name stylesheet end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name out f end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name in f end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name style sheet last modified end_name begin_init begin_expr begin_call begin_name begin_name stylesheet end_name begin_operator DOT end_operator begin_name get last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name in f end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument begin_argument begin_expr begin_name xml file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name in f end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name in f end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file name mapper end_name end_type begin_name mapper end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name mapper element end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name mapper end_name begin_operator EQ end_operator begin_call begin_name begin_name mapper element end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name mapper end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name style mapper end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name out file name end_name begin_init begin_expr begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name map file name end_name end_name begin_argument_list begin_argument begin_expr begin_name xml file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name out file name end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name begin_name out file name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name in file end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name out file name end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name begin_name out file name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name in file end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if end_else end_if begin_expr_stmt begin_expr begin_name out f end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dest dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name out file name end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name force end_name begin_operator UNP end_operator begin_call begin_name begin_name in f end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_call begin_name begin_name out f end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name style sheet last modified end_name begin_operator GT end_operator begin_call begin_name begin_name out f end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name ensure directory for end_name begin_argument_list begin_argument begin_expr begin_name out f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name in f end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name out f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name configure liaison end_name begin_argument_list begin_argument begin_expr begin_name stylesheet end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set liaison dynamic file parameters end_name begin_argument_list begin_argument begin_expr begin_name liaison end_name end_expr end_argument begin_argument begin_expr begin_name in f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name liaison end_name begin_operator DOT end_operator begin_name transform end_name end_name begin_argument_list begin_argument begin_expr begin_name in f end_name end_expr end_argument begin_argument begin_expr begin_name out f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_comment if failed to process document must delete target document end_comment begin_comment or it will not attempt to process it the second time end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name in file end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name out f end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out f end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test move with empty end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment retrieves the command line arguments enabled for the current facade implementation return an array of command line arguements end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get args end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name tmp end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name implementation specific argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name implementation specific argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name curr end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get parts end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get implementation end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name curr end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tmp end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name curr end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_for begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name res end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name tmp end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tmp end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name res end_name end_expr end_return end_block 
 begin_comment returns the name of this target return the name of this target or code null code if the name has not been set yet end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set lock status end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name v end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name new status end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name v end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name lock status end_name end_name begin_operator EQT end_operator begin_name begin_name item end_name begin_operator DOT end_operator begin_name lock type end_name begin_operator DOT end_operator begin_name unchanged end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name lock status end_name end_name begin_operator EQ end_operator begin_name new status end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name lock status end_name end_name begin_operator UNP end_operator begin_name new status end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_else end_if end_block end_then end_if end_block 
 begin_comment ensure all references loaded by the project are valid end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name ensure references end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name input file end_name end_decl end_param begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name references end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name reference key enum end_name begin_init begin_expr begin_call begin_name begin_name references end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name reference key enum end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name current key end_name begin_init begin_expr begin_call begin_name begin_name reference key enum end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name current value end_name begin_init begin_expr begin_call begin_name begin_name references end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name current key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name current value end_name begin_operator UNP end_operator begin_name path end_name end_expr end_condition begin_then begin_block end_block end_then begin_else begin_if begin_condition begin_expr begin_name current value end_name begin_operator UNP end_operator begin_name string end_name end_expr end_condition begin_then begin_block end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name current key end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_name msg end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name input file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name current key end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_else end_if end_block end_while end_block 
 begin_comment get comment method return string containing the desired comment method end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get comment end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m comment end_name end_expr end_return end_block 
 begin_comment test nested xmlcatalog definitions end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test xml catalog nested end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment complete redirection this operation will close any streams and create any specified property values throws io exception if the output properties cannot be read from their output streams end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name complete end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name input stream end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name input stream end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name output stream end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name output stream end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name error stream end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name error stream end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment wait for the stream pumpers to finish end_comment begin_while begin_condition begin_expr begin_call begin_name begin_name thread group end_name begin_operator DOT end_operator begin_name active count end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name managing task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name thread group end_name begin_operator DOT end_operator begin_name active count end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name thread end_name begin_index end_index end_type begin_name thread end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name thread end_name begin_index begin_expr begin_call begin_name begin_name thread group end_name begin_operator DOT end_operator begin_name active count end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name thread group end_name begin_operator DOT end_operator begin_name enumerate end_name end_name begin_argument_list begin_argument begin_expr begin_name thread end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name thread end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator UNP end_operator begin_name begin_name thread end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name managing task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name thread end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name null pointer exception end_name end_type begin_name en pea ex end_name end_decl end_param end_parameter_list begin_block begin_comment ignore exception end_comment end_block end_catch end_try end_block end_for begin_expr_stmt begin_expr begin_call begin_name wait end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name eye ex end_name end_decl end_param end_parameter_list begin_block begin_comment ignore exception end_comment end_block end_catch end_try end_block end_while begin_expr_stmt begin_expr begin_call begin_name set properties end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name input stream end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name output stream end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name error stream end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name out print stream end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name error print stream end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment the filename format attribute defines a message format string used to parse the output of the pcli command it defaults to code 0 arc 1 code repositories where the archive extension is not arc should set this return the filename format attribute end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get filename format end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name filename format end_name end_expr end_return end_block 
 begin_comment override point for delimiting definitions return the definitions limiter i e end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get definitions delimiter end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment normalize a source location param source the source location to be normalized return the normalized source location end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name file end_name end_type begin_name normalize source end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name source end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name source end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name source end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name source end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment relative path end_comment end_block end_catch end_try end_block end_then end_if begin_return begin_expr begin_name source end_name end_expr end_return end_block 
 begin_comment a test started param test a test end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start test end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment do the work the work is actually done by creating a separate jvm to run a helper task this approach allows the classpath of the helper task to be set since the weblogic tools require the class files of the project s home and remote interfaces to be available in the classpath this also avoids having to start ant with the class path of the project it is building exception build exception if someting goes wrong with the build end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name weblogic system home end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name weblogic system home end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name weblogic system home end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name bea home end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name execute wls 6 end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name execute wls end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 6 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name classname end_name end_type begin_name get home end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name home end_name end_expr end_return end_block 
 begin_comment gets the bootclasspath that will be used to compile the classes against return the boot path end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name get bootclasspath end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name bootclasspath end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name glob mapper test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add an and selector entry on the selector list param selector the code and selector code to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add and end_name begin_parameter_list begin_param begin_decl begin_type begin_name and selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name comparison end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 4 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name timer end_name end_type begin_name timer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name timer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name timer end_name begin_operator DOT end_operator begin_name stop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name trace end_name end_expr end_condition begin_then begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name timer end_name begin_operator DOT end_operator begin_name time end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_then end_if begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name timer end_name begin_operator DOT end_operator begin_name time end_name end_name begin_argument_list end_argument_list end_call begin_operator GE end_operator begin_operator LPAR end_operator begin_operator MINUS end_operator begin_name error range end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name timer end_name begin_operator DOT end_operator begin_name time end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name dummy task ok non task end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment set whether the tempfile created by this task should be set for deletion on normal vm exit param delete on exit boolean flag end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set delete on exit end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name delete on exit end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name delete on exit end_name end_name begin_operator EQ end_operator begin_name delete on exit end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name ant version test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name b end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name off end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name len end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_synchronized begin_expr begin_name begin_name output stream funneler end_name begin_operator DOT end_operator begin_name this end_name end_name end_expr begin_block begin_expr_stmt begin_expr begin_call begin_name die if closed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument begin_argument begin_expr begin_name off end_name end_expr end_argument begin_argument begin_expr begin_name len end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_synchronized end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name testpropertyoutput 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set new property end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name property resource end_name end_type begin_name r end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name property resource end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name testoutput end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name immutable resource exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name assert property equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set system output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name system output end_name begin_operator EQ end_operator begin_name out end_name end_expr end_expr_stmt end_block 
 begin_comment get the vendor of the specification return the vendor of the specification end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get specification vendor end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name specification vendor end_name end_expr end_return end_block 
 begin_comment set the string to use as input param input string the string which is used as the input source end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set input string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name input string end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name input end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name input string end_name end_name begin_operator EQ end_operator begin_name input string end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name incompatible with spawn end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment utility method to throw a not supported exception param project the project instance param parent the object which doesn t support a requested element param element name the name of the element which is trying to be created end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name throw not supported end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name element name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get element name end_name end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name element name end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name unsupported element exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name element name end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment closes this output stream and releases any system resources associated with the stream exception io exception if an i o error occurs since 1 14 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name close end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name finish end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name raf end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name raf end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name out end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment set the hidden file attribute param value a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set hidden end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add arg end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr begin_name attr hidden end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the value param value string value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment add a path to the factory path attribute return a path to be configured end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create factory path end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name factory path end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name factory path end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name factory path end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment return the values as an array of strings end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 7 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create the execute stream handler instance that will be used during execution return code execute stream handler code throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name execute stream handler end_name end_type begin_name create handler end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment if we have a redirector element return a decoy end_comment begin_return begin_expr begin_operator LPAR end_operator begin_name redirector element end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name create handler end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name pump stream handler end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment method that gets called when adding from code java io file code instances p this implementation delegates to the six arg version p param file the file to add to the archive param z out the stream to write to param v path the name this entry shall have in the archive param mode the unix permissions to set throws io exception on error since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name zip file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param begin_param begin_decl begin_type begin_name zip output stream end_name end_type begin_name z out end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name v path end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name mode end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name zip file end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file input stream end_name end_type begin_name f in end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_comment zi ps store time with a granularity of 2 seconds round up end_comment begin_expr_stmt begin_expr begin_call begin_name zip file end_name begin_argument_list begin_argument begin_expr begin_name f in end_name end_expr end_argument begin_argument begin_expr begin_name z out end_name end_expr end_argument begin_argument begin_expr begin_name v path end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name round up end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name mode end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f in end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment this method gets the name of the executable return the name of the executable end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get executable end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name executable end_name end_expr end_return end_block 
 begin_comment appends code excludes code to the current list of include patterns param excludes array containing the exclude patterns since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name append excludes end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name excludes end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name excludes end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name excludes end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name default patterns end_name begin_operator DOT end_operator begin_name create exclude end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set name end_name begin_argument_list begin_argument begin_expr begin_name begin_name excludes end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_name directory scanner end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the base dir for cvs param input dir the new dir value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dir end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name input dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name input dir end_name end_name begin_operator EQ end_operator begin_name input dir end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 5 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test append end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test 3 end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name temp file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name orig size end_name begin_init begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name temp file 2 end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name new size end_name begin_init begin_expr begin_call begin_name begin_name file 2 end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name orig size end_name begin_operator STAR end_operator end_expr end_argument begin_argument begin_expr begin_name new size end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name buffer line end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name eol str end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name next end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name column end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name line end_name end_name begin_operator EQ end_operator begin_name line end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name eol str end_name end_name begin_operator EQ end_operator begin_name eol str end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test fullpath differs in case scanning sensitive end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name directory scanner end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment constructor for jakarta oro matcher end_comment begin_specifier end_specifier begin_name jakarta oro matcher end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name identity stack end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment responds to a build being started by just remembering the current time param event ignored end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name start time end_name begin_operator EQ end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment checks whether a cache file is created end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test create properties cache via modified selector end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name cachefile end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_comment initialize test environment called bed end_comment begin_expr_stmt begin_expr begin_call begin_name make bed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment configure the selector end_comment begin_decl_stmt begin_decl begin_type begin_name modified selector end_name end_type begin_name s end_name begin_init begin_expr begin_operator LPAR end_operator begin_name modified selector end_name begin_operator RPAR end_operator begin_call begin_name get selector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set delay update end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name add param end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name cachefile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name modified selector end_name begin_operator DOT end_operator begin_name cache name end_name end_name end_type begin_name cache name end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name modified selector end_name begin_operator DOT end_operator begin_name cache name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cache name end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set cache end_name end_name begin_argument_list begin_argument begin_expr begin_name cache name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set update end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment does the selection end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name results end_name begin_init begin_expr begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment evaluate correctness end_comment begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name cachefile end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name cleanup bed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name cachefile end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_expr_stmt begin_expr begin_call begin_name begin_name cachefile end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_then end_if end_block end_finally end_try end_block 
 begin_specifier end_specifier begin_name implementation specific argument test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set how to handle long files those with a path gt 100 chars optional default warn p allowable values are ul li truncate paths are truncated to the maximum length li fail paths greater than the maximum cause a build exception li warn paths greater than the maximum cause a warning and gnu is used li gnu gnu extensions are used for any paths greater than the maximum li omit paths greater than the maximum are omitted from the archive ul param mode the mode string to handle long files deprecated since 1 5 x set long file string is deprecated and is replaced with set long file tar tar long file mode to make ant s introspection mechanism do the work and also to encapsulate operations on the mode in its own class end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set longfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name mode end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name long file mode end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name tar long file mode end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name long file mode end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name mode end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get comment file return string containing the path to the comment file end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get comment file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m cfile end_name end_expr end_return end_block 
 begin_comment executes the i planet application server ejbc command line utility param arguments command line arguments to be passed to the ejbc utility end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name call ejbc end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name arguments end_name end_decl end_param end_parameter_list begin_block begin_comment concatenate all of the command line arguments into a single string end_comment begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name args end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name arguments end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment if an i as home directory is specified prepend it to the commmand end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name command end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ias home dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name command end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name command end_name begin_operator EQ end_operator begin_call begin_name begin_name ias home dir end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name command end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name command end_name begin_operator PLUS end_operator begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment use the runtime object to execute an external command use the redirect output inner class to direct the standard and error output from the command to the jre s standard output end_comment begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name process end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name begin_name runtime end_name begin_operator DOT end_operator begin_name get runtime end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exec end_name begin_argument_list begin_argument begin_expr begin_name command end_name begin_operator PLUS end_operator begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name redirect output end_name end_type begin_name output end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name redirect output end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name redirect output end_name end_type begin_name error end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name redirect output end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get error stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name error end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name wait for end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name destroy end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment do nothing end_comment end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test verify jar unsigned end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name verify jar end_name begin_operator DOT end_operator begin_name error no verify end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sends the email using the apache mail message class see org apache tools mail mail message end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name send end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name mail message end_name end_type begin_name mail message end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name mail message end_name begin_argument_list begin_argument begin_expr begin_name host end_name end_expr end_argument begin_argument begin_expr begin_name port end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mail message end_name begin_operator DOT end_operator begin_name from end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name e end_name begin_operator EQ end_operator begin_call begin_name begin_name reply to list end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name mail message end_name begin_operator DOT end_operator begin_name replyto end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name e end_name begin_operator EQ end_operator begin_call begin_name begin_name to list end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name mail message end_name begin_operator DOT end_operator begin_name to end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name e end_name begin_operator EQ end_operator begin_call begin_name begin_name cc list end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name mail message end_name begin_operator DOT end_operator begin_name cc end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name e end_name begin_operator EQ end_operator begin_call begin_name begin_name bcc list end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name mail message end_name begin_operator DOT end_operator begin_name bcc end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_if begin_condition begin_expr begin_name subject end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name mail message end_name begin_operator DOT end_operator begin_name set subject end_name end_name begin_argument_list begin_argument begin_expr begin_name subject end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name mail message end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get date end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name get charset end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name mail message end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name get charset end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name mail message end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name e end_name begin_operator EQ end_operator begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name header end_name end_type begin_name h end_name begin_init begin_expr begin_operator LPAR end_operator begin_name header end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mail message end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name h end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name h end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_decl_stmt begin_decl begin_type begin_name print stream end_name end_type begin_name out end_name begin_init begin_expr begin_call begin_name begin_name mail message end_name begin_operator DOT end_operator begin_name get print stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name e end_name begin_operator EQ end_operator begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name attach end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name mail message end_name begin_operator DOT end_operator begin_name send and close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment add a majority selector entry on the selector list param selector the selector to be added end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add majority end_name begin_parameter_list begin_param begin_decl begin_type begin_name majority selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name used matching task end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name add majority end_name end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test resourcesmatch error end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check to see if the class or super interfaces implement java rmi remote end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is valid rmi remote end_name begin_parameter_list begin_param begin_decl begin_type begin_name class end_name end_type begin_name test class end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name get remote interface end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_return end_block 
 begin_comment should we expect more input param line the line to check return true if there are more lines to check end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has more lines end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator UNP end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_return end_block 
 begin_comment constructor for tee output stream param left one of the output streams param right the other output stream end_comment begin_specifier end_specifier begin_name tee output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name left end_name end_decl end_param begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name right end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name left end_name end_name begin_operator EQ end_operator begin_name left end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name right end_name end_name begin_operator EQ end_operator begin_name right end_name end_expr end_expr_stmt end_block 
 begin_comment indicates whether there are any patterns here return whether any patterns are in this container end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name has patterns end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name has patterns end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name default patterns end_name begin_operator DOT end_operator begin_name has patterns end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name additional patterns end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name pattern set end_name end_type begin_name ps end_name begin_init begin_expr begin_operator LPAR end_operator begin_name pattern set end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name ps end_name begin_operator DOT end_operator begin_name has patterns end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_while begin_return begin_expr end_expr end_return end_block 
 begin_comment check style visibility modifier on end_comment begin_comment the name of the label optional default ant label param name the name of the label end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment constructor for visual basic compile end_comment begin_specifier end_specifier begin_name visual basic compile end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name clear end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment assert that the given message has been logged with a priority gt verbose when running the given target end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name expect debuglog end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name log end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name real log end_name begin_init begin_expr begin_call begin_name get full log end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name log end_name end_expr end_argument begin_argument begin_expr begin_name real log end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name notest failing adapter end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name rmic end_name begin_operator DOT end_operator begin_name error rmic failed end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment tries to find the name of the class which a test represents across j unit 3 and 4 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get test case class name end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name class name end_name begin_init begin_expr begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name test end_name begin_operator UNP end_operator begin_name begin_name j unit task mirror impl end_name begin_operator DOT end_operator begin_name vm exit error test end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name class name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name begin_name j unit task mirror impl end_name begin_operator DOT end_operator begin_name vm exit error test end_name end_name begin_operator RPAR end_operator begin_name test end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get class name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name class name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment j unit 4 wraps solo tests this way we can extract end_comment begin_comment the original test name with a little hack end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name paren end_name begin_init begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name paren end_name begin_operator UNP end_operator begin_operator MINUS end_operator begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name class name end_name begin_operator EQ end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name paren end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_else end_if begin_return begin_expr begin_name class name end_name end_expr end_return end_block 
 begin_comment whether default exclusions should be used or not return the default exclusions value since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name get defaultexcludes end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get defaultexcludes end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name use default excludes end_name end_expr end_return end_block 
 begin_comment if true includes ant s own classpath in the classpath param include if true includes ant s own classpath in the classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set includeantruntime end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name include end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name include ant runtime end_name begin_operator EQ end_operator begin_name include end_name end_expr end_expr_stmt end_block 
 begin_comment sets the system type key attribute method for setting code ftp client config code remote system key param system key the key to be set but if blank the default value of null which signifies autodetect will be kept see org apache commons net ftp ftp client config end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set system type key end_name begin_parameter_list begin_param begin_decl begin_type begin_name ftp system type end_name end_type begin_name system key end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name system key end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name system key end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name system type key end_name end_name begin_operator EQ end_operator begin_name system key end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name configuration has been set end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment whether to ignore case in the string being searched param casesensitive whether to pay attention to case sensitivity end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set casesensitive end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name casesensitive end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name casesensitive end_name end_name begin_operator EQ end_operator begin_name casesensitive end_name end_expr end_expr_stmt end_block 
 begin_comment set the reference to an optional classpath to the xsl processor param r the id of the ant path instance to act as the classpath for loading the xsl processor end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set refid end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the classpath to load the file name mapper through via reference attribute param ref the reference to the file name mapper end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name ref end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name create classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set refid end_name begin_argument_list begin_argument begin_expr begin_name ref end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment allow a formatter nested element param elem a formatter nested element end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add formatter end_name begin_parameter_list begin_param begin_decl begin_type begin_name formatter element end_name end_type begin_name elem end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name formatters end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name elem end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment establishes the object that contains the files to be merged into the output return a path to be configured end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create mergefiles end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name mergefiles end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name mergefiles end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name mergefiles end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment does the command line argument processing for classic and adds the files to compile as well param debug level check if true set the debug level with the g switch return the command line end_comment begin_type begin_specifier end_specifier begin_name commandline end_name end_type begin_name setup javac command end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name debug level check end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name setup javac commandline switches end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr begin_name debug level check end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log and add files to compile end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name cmd end_name end_expr end_return end_block 
 begin_comment the j unit setup method end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check if a given file exists and matches the required type end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name check file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name f end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name type end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name type end_name begin_operator DOT end_operator begin_name is dir end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name text end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name type end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name text end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if end_else end_if end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name text end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment compare this file resource to another resource param another the other resource against which to compare return a negative integer zero or a positive integer as this file resource is less than equal to or greater than the specified resource end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name compare to end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name another end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name comparable end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name compare to end_name begin_argument_list begin_argument begin_expr begin_name another end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name another end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name another end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file resource end_name end_type begin_name otherfr end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file resource end_name begin_operator RPAR end_operator begin_name another end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name get file end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name f end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator MINUS end_operator end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name of end_name begin_init begin_expr begin_call begin_name begin_name otherfr end_name begin_operator DOT end_operator begin_name get file end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name of end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name compare to end_name end_name begin_argument_list begin_argument begin_expr begin_name of end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name compare to end_name end_name begin_argument_list begin_argument begin_expr begin_name another end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment defines the language required param language the scripting language name for the script end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set language end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name language end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name language end_name end_name begin_operator EQ end_operator begin_name language end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator MINUS end_operator end_expr end_return end_block 
 begin_comment creates a new line contains using the passed in reader for instantiation param rdr a reader object providing the underlying stream must not be code null code return a new filter based on this configuration but filtering the specified reader end_comment begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name chain end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name rdr end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name line contains end_name end_type begin_name new filter end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name line contains end_name begin_argument_list begin_argument begin_expr begin_name rdr end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new filter end_name begin_operator DOT end_operator begin_name set contains end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get contains end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new filter end_name begin_operator DOT end_operator begin_name set negate end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name is negated end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name new filter end_name end_expr end_return end_block 
 begin_comment set this entry s group name param group name this entry s new group name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set group name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name group name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name group name end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_name group name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name children end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name unknown element end_name end_type begin_name el end_name begin_init begin_expr begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name el end_name begin_operator DOT end_operator begin_name maybe configure end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name child end_name end_type begin_name child end_name begin_init begin_expr begin_operator LPAR end_operator begin_name child end_name begin_operator RPAR end_operator begin_call begin_name begin_name el end_name begin_operator DOT end_operator begin_name get real thing end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name inject parent end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name perform end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment add a code mapper code param mapper the code mapper code to add since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured mapper end_name begin_parameter_list begin_param begin_decl begin_type begin_name mapper end_name end_type begin_name mapper end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the class name of the file name mapper to use param classname the name of the class end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classname end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classname end_name end_name begin_operator EQ end_operator begin_name classname end_name end_expr end_expr_stmt end_block 
 begin_comment the address and port of source off site server for example 192 168 0 1 8888 param sos server path the new sos server path value ant attribute group required end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set sos server path end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name sos server path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name sos server path end_name end_name begin_operator EQ end_operator begin_name sos server path end_name end_expr end_expr_stmt end_block 
 begin_comment store replace attribute this determines whether the target file should be overwritten if present param replace if true overwrite any target files that exist end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set replace end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name replace end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_operator EQ end_operator begin_name replace end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name send mtf values 3 end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name n groups end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name alpha size end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name begin_index end_index begin_index end_index end_type begin_name code end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name begin_operator DOT end_operator begin_name send mtf values code end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index begin_index end_index end_type begin_name len end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name begin_operator DOT end_operator begin_name send mtf values len end_name end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name t end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name t end_name begin_operator LT end_operator begin_name n groups end_name end_expr end_condition begin_incr begin_expr begin_name t end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name min len end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name max len end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name len t end_name begin_init begin_expr begin_name begin_name len end_name begin_index begin_expr begin_name t end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name alpha size end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_operator MMINUS end_operator begin_name i end_name begin_operator GE end_operator end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name l end_name begin_init begin_expr begin_name begin_name len t end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name l end_name begin_operator GT end_operator begin_name max len end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name max len end_name begin_operator EQ end_operator begin_name l end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name l end_name begin_operator LT end_operator begin_name min len end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name min len end_name begin_operator EQ end_operator begin_name l end_name end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_comment assert max len 20 max len end_comment begin_comment assert min len 1 min len end_comment begin_expr_stmt begin_expr begin_call begin_name hb assign codes end_name begin_argument_list begin_argument begin_expr begin_name begin_name code end_name begin_index begin_expr begin_name t end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name len end_name begin_index begin_expr begin_name t end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name min len end_name end_expr end_argument begin_argument begin_expr begin_name max len end_name end_expr end_argument begin_argument begin_expr begin_name alpha size end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment controls whether error output of exec is logged this is only useful when output is being redirected and error output is desired in the ant log param log error set to true to log error output in the normal ant log end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set log error end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name log error end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set log error end_name end_name begin_argument_list begin_argument begin_expr begin_name log error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name incompatible with spawn end_name begin_operator UNP end_operator begin_name log error end_name end_expr end_expr_stmt end_block 
 begin_comment check if classpath attributes have been set to be called before get cp delegate is used return true if cp delegate has been created end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has cp delegate end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name cp delegate end_name begin_operator UNP end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test exactly end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment write a target level message to the log with the given log level param target the target to use in the log must not be code null code param message the text to log should not be code null code param msg level the log priority level to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log end_name begin_parameter_list begin_param begin_decl begin_type begin_name target end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name msg level end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name msg level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set content type end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name type end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name type end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name type end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment prints the header of the generated output p basically this prints the xml declaration defines some entities and the project element p end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name print head end_name begin_parameter_list begin_param begin_decl begin_type begin_name print writer end_name end_type begin_name out end_name end_decl end_param begin_param begin_decl begin_type begin_name enumeration end_name end_type begin_name tasks end_name end_decl end_param begin_param begin_decl begin_type begin_name enumeration end_name end_type begin_name types end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name first end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name tasks end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name t name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name tasks end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name first end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name first end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name t name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name first end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name types end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name type name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name types end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name first end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name first end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name type name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name tasks end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name types end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment demux an input request to the correct task param buffer the buffer into which data is to be read param offset the offset into the buffer at which data is stored param length the amount of data to read return the number of bytes read exception io exception if the data cannot be read since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name demux input end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name buffer end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name offset end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name length end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name task end_name end_type begin_name task end_name begin_init begin_expr begin_call begin_name get thread task end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name current thread end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name task end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name default input end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name handle input end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_comment format this restrict collection as a string return the string value of this collection end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name die on circular reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set message end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name message end_name begin_operator EQ end_operator begin_name s end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test append end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name rec in end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name rec dir end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get location end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get line number end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute targets end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name target names end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name execute sorted targets end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name topo sort end_name end_name begin_argument_list begin_argument begin_expr begin_name target names end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get targets end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the number of passes to make is this being used return number of passes how many filesets end_comment begin_type begin_name int end_name end_type begin_name get passes end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set the optional classpath to the xsl processor param classpath the classpath to use when loading the xsl processor end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test circular reference check end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_comment dummy 1 dummy 2 dummy 3 dummy 1 end_comment begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p 1 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name p 1 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p 2 end_name begin_init begin_expr begin_call begin_name begin_name p 1 end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name p 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p 3 end_name begin_init begin_expr begin_call begin_name begin_name p 2 end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name p 3 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p 3 end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name p 1 end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_comment dummy 1 dummy 2 dummy 3 with path a end_comment begin_expr_stmt begin_expr begin_name p 1 end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name p 1 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name p 2 end_name begin_operator EQ end_operator begin_call begin_name begin_name p 1 end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name p 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name p 3 end_name begin_operator EQ end_operator begin_call begin_name begin_name p 2 end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name p 3 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p 3 end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name l end_name begin_init begin_expr begin_call begin_name begin_name p 1 end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name is unix style end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name is net ware end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name substring end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block 
 begin_comment create a bound task param owner owner end_comment begin_specifier end_specifier begin_name java end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name owner end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name bind to owner end_name begin_argument_list begin_argument begin_expr begin_name owner end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment how many assertions are made will resolve references before returning return total of commands to make end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name assertions end_name end_type begin_name clause end_name begin_init begin_expr begin_call begin_name get final reference end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name clause end_name begin_operator DOT end_operator begin_name get final size end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr begin_name build xml end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a file to the list of files param file a file to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set three end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment make package scoped code visible to the current assembly only default false net does not have package scoping instead it has assembly private and public by default package content is public to all param secure scoping a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set secure scoping end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name secure scoping end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name secure scoping end_name end_name begin_operator EQ end_operator begin_name secure scoping end_name end_expr end_expr_stmt end_block 
 begin_comment sets a flag param simulationmode set to true lists the integrations which would be performed without actually doing them end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set simulationmode end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name simulationmode end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name simulationmode end_name end_name begin_operator EQ end_operator begin_name simulationmode end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name java env utils end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment specify how carriage return cr characters are to be handled param attr valid values ul li add ensure that there is a cr before every lf li asis leave cr characters alone li remove remove all cr characters ul deprecated since 1 4 x use link set eol set eol instead end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set cr end_name begin_parameter_list begin_param begin_decl begin_type begin_name add asis remove end_name end_type begin_name attr end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name option end_name begin_init begin_expr begin_call begin_name begin_name attr end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name cr lf end_name end_type begin_name c end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name cr lf end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name option end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name option end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment must be add end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if begin_expr_stmt begin_expr begin_call begin_name set eol end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filter reader no args end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name expected end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_name expected end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test ipv 4 localhost end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set from uri end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name from uri end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name from uri end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name exactly one end_name begin_argument_list begin_argument begin_expr begin_name from attrs end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name from uri end_name end_name begin_operator EQ end_operator begin_name from uri end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test custom cache end_name begin_parameter_list end_parameter_list begin_block begin_comment same logic as on algorithm no testcases created end_comment end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check end_name begin_argument_list begin_argument begin_expr begin_name event end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set what type of file is required either directory or file param type an instance of the file dir enumerated attribute indicating whether the file required is to be a directory or a plain file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set type end_name begin_parameter_list begin_param begin_decl begin_type begin_name file dir end_name end_type begin_name type end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name type end_name end_name begin_operator EQ end_operator begin_name type end_name end_expr end_expr_stmt end_block 
 begin_comment controls whether weblogic will keep the generated java files used to build the class files added to the jar this can be useful when debugging default is false param in value either true or false end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set keepgenerated end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name in value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name keepgenerated end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_name in value end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name boolean value end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the name of the output file return the name of the output file end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get outfile end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name outfile end_name end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_return end_block 
 begin_comment add a deployment tool to the list of deployment tools that will be processed param deployment tool a deployment tool instance to which descriptors will be passed for processing end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add deployment tool end_name begin_parameter_list begin_param begin_decl begin_type begin_name ejb deployment tool end_name end_type begin_name deployment tool end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name deployment tool end_name begin_operator DOT end_operator begin_name set task end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name deployment tools end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name deployment tool end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if set system properties will be copied to the cloned vm as well as the bootclasspath unless you have explicitly specified a bootclaspath p doesn t have any effect unless fork is true p param clone vm if true copy system properties since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set clone vm end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name clone vm end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get command line end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set clone vm end_name begin_argument_list begin_argument begin_expr begin_name clone vm end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test bad name end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name rmic adapter factory end_name begin_operator DOT end_operator begin_name error unknown compiler end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the cvs command to execute this should be deprecated it is better to use the commandline class antoine ll july 23 d 2003 param c a command as string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set command end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name command end_name end_name begin_operator EQ end_operator begin_name c end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test trim file end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds path to classpath used for tests return reference to the classpath in the embedded java command line since ant 1 2 end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get commandline end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create classpath end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create path end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle resources end_name begin_parameter_list begin_param begin_decl begin_type begin_name handler end_name end_type begin_name h end_name end_decl end_param end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name resource end_name end_type begin_name r end_name begin_init begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name is exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name r end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name r end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name h end_name begin_operator DOT end_operator begin_name handle end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name h end_name begin_operator DOT end_operator begin_name complete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment initialises the class param file file used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name current file end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name failed end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment using our front end task set up the command line switches param cmd command line to set up end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set apt commandline switches end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name apt end_name end_type begin_name apt end_name begin_init begin_expr begin_call begin_name get apt end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name set apt commandline switches end_name begin_argument_list begin_argument begin_expr begin_name apt end_name end_expr end_argument begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the namespace return the namespace end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get namespace end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name namespace end_name end_expr end_return end_block 
 begin_comment value accessor return value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test bad no property end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property unset end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment see build listener task started end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name initialized end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name task end_name end_type begin_name task end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get task end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name logger end_name end_type begin_name log end_name begin_init begin_expr begin_call begin_name begin_name logger end_name begin_operator DOT end_operator begin_name get logger end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name info end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get task name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment return the group name string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get group end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name tar file set end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get group end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_name group name end_name end_expr end_return end_block 
 begin_comment handles output by logging it with the info priority param output the output to log should not be code null code since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle flush end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name handle output end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns true the file is selected only if the if property if any exists the unless property if any doesn t exist and the contained selector if any selects the file if there is no contained selector return true because we assume that the point was to test the if and unless conditions param basedir the base directory the scan is being done from param filename the name of the file to check param file a java io file object for the filename that the selector can use return whether the file should be selected or not end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name basedir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment deal with if and unless properties first end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name passes conditions end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name selector elements end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file selector end_name end_type begin_name f end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file selector end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name filename end_name end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_name add asis remove end_name end_type begin_name resolve end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name illegal state exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name asis end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name asis end_name end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name add end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name add end_name end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name remove end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name remove end_name end_expr end_return end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal state exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name planar image end_name end_type begin_name execute draw operation end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name buffered image end_name end_type begin_name bi end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered image end_name begin_argument_list begin_argument begin_expr begin_name width end_name end_expr end_argument begin_argument begin_expr begin_name height end_name end_expr end_argument begin_argument begin_expr begin_name begin_name buffered image end_name begin_operator DOT end_operator begin_name type 4 byte abgr pre end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name graphics 2 d end_name end_type begin_name graphics end_name begin_init begin_expr begin_operator LPAR end_operator begin_name graphics 2 d end_name begin_operator RPAR end_operator begin_call begin_name begin_name bi end_name begin_operator DOT end_operator begin_name get graphics end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name stroke end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name basic stroke end_name end_type begin_name b stroke end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name basic stroke end_name begin_argument_list begin_argument begin_expr begin_name stroke width end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name graphics end_name begin_operator DOT end_operator begin_name set color end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name color mapper end_name begin_operator DOT end_operator begin_name get color by name end_name end_name begin_argument_list begin_argument begin_expr begin_name stroke end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name graphics end_name begin_operator DOT end_operator begin_name set stroke end_name end_name begin_argument_list begin_argument begin_expr begin_name b stroke end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name graphics end_name begin_operator DOT end_operator begin_name draw end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name ellipse 2 d end_name begin_operator DOT end_operator begin_name double end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name width end_name end_expr end_argument begin_argument begin_expr begin_name height end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name fill end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name graphics end_name begin_operator DOT end_operator begin_name set color end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name color mapper end_name begin_operator DOT end_operator begin_name get color by name end_name end_name begin_argument_list begin_argument begin_expr begin_name fill end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name graphics end_name begin_operator DOT end_operator begin_name fill end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name ellipse 2 d end_name begin_operator DOT end_operator begin_name double end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name width end_name end_expr end_argument begin_argument begin_expr begin_name height end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name instructions end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name image operation end_name end_type begin_name instr end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name image operation end_name begin_operator RPAR end_operator begin_call begin_name begin_name instructions end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name instr end_name begin_operator UNP end_operator begin_name draw operation end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name planar image end_name end_type begin_name img end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name draw operation end_name begin_operator RPAR end_operator begin_name instr end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name execute draw operation end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name graphics end_name begin_operator DOT end_operator begin_name draw image end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name img end_name begin_operator DOT end_operator begin_name get as buffered image end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name instr end_name begin_operator UNP end_operator begin_name transform operation end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name graphics end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name graphics 2 d end_name begin_operator RPAR end_operator begin_call begin_name begin_name bi end_name begin_operator DOT end_operator begin_name get graphics end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name planar image end_name end_type begin_name image end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name transform operation end_name begin_operator RPAR end_operator begin_name instr end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name execute transform operation end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name planar image end_name begin_operator DOT end_operator begin_name wrap rendered image end_name end_name begin_argument_list begin_argument begin_expr begin_name bi end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name bi end_name begin_operator EQ end_operator begin_call begin_name begin_name image end_name begin_operator DOT end_operator begin_name get as buffered image end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_block end_for begin_return begin_expr begin_call begin_name begin_name planar image end_name begin_operator DOT end_operator begin_name wrap rendered image end_name end_name begin_argument_list begin_argument begin_expr begin_name bi end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment add a regular expression selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add contains regexp end_name begin_parameter_list begin_param begin_decl begin_type begin_name contains regexp selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test handle doller match end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name has regex end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_return end_return end_then end_if begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the message digest algorithm provider to be used to calculate the checksum param provider a code string code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set provider end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name provider end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name provider end_name end_name begin_operator EQ end_operator begin_name provider end_name end_expr end_expr_stmt end_block 
 begin_comment get the name of the interface method return the name of the interface method end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get interface method name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name interface method name end_name end_expr end_return end_block 
 begin_comment read a constant pool entry from a class stream param cp stream the data input stream which contains the constant pool entry to be read exception io exception if there is a problem reading the entry from the stream end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name read end_name begin_parameter_list begin_param begin_decl begin_type begin_name data input stream end_name end_type begin_name cp stream end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name float end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cp stream end_name begin_operator DOT end_operator begin_name read float end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name clone vm end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name clone vm end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment receive notification about the process writing to standard output param line the line to process end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name stdout end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_switch begin_condition begin_expr begin_name status end_name end_expr end_condition begin_block begin_case begin_expr begin_name get file end_name end_expr begin_comment make sure attributes are reset when end_comment begin_comment working on a new file end_comment begin_expr_stmt begin_expr begin_call begin_name reset end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name process file end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name get revision end_name end_expr begin_expr_stmt begin_expr begin_call begin_name process revision end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name get date end_name end_expr begin_expr_stmt begin_expr begin_call begin_name process date end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name get comment end_name end_expr begin_expr_stmt begin_expr begin_call begin_name process comment end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name get previous rev end_name end_expr begin_expr_stmt begin_expr begin_call begin_name process get previous revision end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_default begin_comment do nothing end_comment begin_break end_break end_default end_block end_switch end_block 
 begin_comment sets the name to use in logging messages param name the name to use in logging messages should not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set task name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name task name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment get the current block number zero based return the current zero based block number end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get current block num end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr blk idx end_name end_name end_expr end_return end_block 
 begin_comment add an argument tuple to the arg list if the file parameter aint null param cmd the command line param argument the argument param file the parameter end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add arg end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline java end_name end_type begin_name cmd end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name argument end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name argument end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set file end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment constructor for scp to message param session the scp session to use param a directory list a list of directories param a remote path the remote path end_comment begin_specifier end_specifier begin_name scp to message by sftp end_name begin_parameter_list begin_param begin_decl begin_type begin_name session end_name end_type begin_name session end_name end_decl end_param begin_param begin_decl begin_type begin_name list end_name end_type begin_name a directory list end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name a remote path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name session end_name end_expr end_argument begin_argument begin_expr begin_name a directory list end_name end_expr end_argument begin_argument begin_expr begin_name a remote path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test taskdef end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the string token to replace required unless a nested code replacetoken code element or the code replacefilterfile code attribute is used param token token code string code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set token end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name token end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create replace token end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add text end_name begin_argument_list begin_argument begin_expr begin_name token end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the extension which converted files should have if unset files will not be renamed param ext file extension to use for converted files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set ext end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name ext end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name extension end_name end_name begin_operator EQ end_operator begin_name ext end_name end_expr end_expr_stmt end_block 
 begin_comment set the command this is not allowed for chmod param cmdl ignored throws build exception always ant attribute ignore true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmdl end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task type end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test find jar name no match end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert null end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name jar end_name begin_operator DOT end_operator begin_name find jar name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test delete characters end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name contents end_name begin_init begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert string not contains end_name begin_argument_list begin_argument begin_expr begin_name contents end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert string not contains end_name begin_argument_list begin_argument begin_expr begin_name contents end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert string contains end_name begin_argument_list begin_argument begin_expr begin_name contents end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get output end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name clean buffer end_name begin_argument_list begin_argument begin_expr begin_name out buffer end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test dest is dir end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name wsdl to dotnet end_name begin_operator DOT end_operator begin_name error dest file is dir end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add an arbitary selector param selector the selector to add since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name file selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets ending token to identify keys required param end token ending token to identify keys end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set end token end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name end token end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name end token end_name end_name begin_operator EQ end_operator begin_name end token end_name end_expr end_expr_stmt end_block 
 begin_comment output filename for the fraction of web xml that lists servlets param webinc the new webinc value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set webinc end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name webinc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name webinc end_name end_name begin_operator EQ end_operator begin_name webinc end_name end_expr end_expr_stmt end_block 
 begin_comment access the locator return locator end_comment begin_type begin_specifier end_specifier begin_name locator end_name end_type begin_name get locator end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name locator end_name end_expr end_return end_block 
 begin_comment set the max wait time unit param unit an enumerated code unit code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set max wait unit end_name begin_parameter_list begin_param begin_decl begin_type begin_name unit end_name end_type begin_name unit end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name max wait multiplier end_name begin_operator EQ end_operator begin_call begin_name begin_name unit end_name begin_operator DOT end_operator begin_name get multiplier end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the header id return the header id end_comment begin_type begin_specifier end_specifier begin_name zip short end_name end_type begin_name get header id end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name id end_name end_expr end_return end_block 
 begin_comment if true suppress the load error report and set the the failonerror value to false param quiet the new quiet value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set quiet end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name quiet end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name quiet end_name end_name begin_operator EQ end_operator begin_name quiet end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name quiet end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name fail on error end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment test that verifies that iiop compiles throws exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test iiop end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment construct a new code pump stream handler code param out and err the output error code output stream code end_comment begin_specifier end_specifier begin_name pump stream handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out and err end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name out and err end_name end_expr end_argument begin_argument begin_expr begin_name out and err end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the message as nested text param s the nested text end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add text end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set string end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace properties end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the update only attribute return the update only attribute end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get update only end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name update only end_name end_expr end_return end_block 
 begin_comment sole constructor end_comment begin_specifier end_specifier begin_name tag argument end_name begin_parameter_list end_parameter_list begin_block begin_comment empty end_comment end_block 
 begin_comment tells which sources should be reprocessed based on the last modification date of targets param log to where to send more or less interesting output param source resource collection param mapper filename mapper indicating how to find the target resources param targets object able to map a relative path as a resource param granularity the number of milliseconds leeway to give before deciding a target is out of date return resource collection since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name resource collection end_name end_type begin_name select out of date sources end_name begin_parameter_list begin_param begin_decl begin_type begin_name project component end_name end_type begin_name log to end_name end_decl end_param begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name source end_name end_decl end_param begin_param begin_decl begin_type begin_name file name mapper end_name end_type begin_name mapper end_name end_decl end_param begin_param begin_decl begin_type begin_name resource factory end_name end_type begin_name targets end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name granularity end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name source end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log to end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name begin_name resources end_name begin_operator DOT end_operator begin_name none end_name end_name end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name source end_name begin_operator EQ end_operator begin_call begin_name begin_name union end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list begin_argument begin_expr begin_name source end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log future end_name begin_argument_list begin_argument begin_expr begin_name log to end_name end_expr end_argument begin_argument begin_expr begin_name source end_name end_expr end_argument begin_argument begin_expr begin_name granularity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name union end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name union end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name source end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name resource end_name end_type begin_name sr end_name begin_init begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name sr name end_name begin_init begin_expr begin_call begin_name begin_name sr end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name sr name end_name begin_operator EQ end_operator begin_name sr name end_name begin_operator EQT end_operator begin_operator QM end_operator begin_name sr name end_name begin_operator DP end_operator begin_call begin_name begin_name sr name end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name targetnames end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name targetnames end_name begin_operator EQ end_operator begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name map file name end_name end_name begin_argument_list begin_argument begin_expr begin_name sr name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log to end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name e end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name sr end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_name targetnames end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name begin_name targetnames end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log to end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_name sr end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name union end_name end_type begin_name target coll end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name union end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name targetnames end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name target coll end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name targets end_name begin_operator DOT end_operator begin_name get resource end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name targetnames end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment find the out of date targets end_comment begin_decl_stmt begin_decl begin_type begin_name restrict end_name end_type begin_name r end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name restrict end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name and end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name resource selector end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name type end_name begin_operator DOT end_operator begin_name file end_name end_name end_expr begin_operator UNP end_operator begin_expr begin_operator UNP end_operator begin_call begin_name or end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name resource selector end_name begin_index end_index end_name begin_block begin_expr begin_name not exists end_name end_expr begin_operator UNP end_operator begin_expr begin_operator UNP end_operator begin_call begin_name outdated end_name begin_argument_list begin_argument begin_expr begin_name sr end_name end_expr end_argument begin_argument begin_expr begin_name granularity end_name end_expr end_argument end_argument_list end_call end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name target coll end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name sr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name resource end_name end_type begin_name t end_name begin_init begin_expr begin_call begin_name resource end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name next end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log to end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sr end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator LPAR end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name is exists end_name end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_then end_if begin_comment log uptodateness of all targets end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name log to end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sr end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name target coll end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator LPAR end_operator begin_call begin_name begin_name target coll end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment to be used by tasks that just finished executing the parts subject to these permissions end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name restore security manager end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name active end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set security manager end_name end_name begin_argument_list begin_argument begin_expr begin_name orig sm end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get file string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment gets the depend flag return the depend flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get depend end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name depend end_name end_expr end_return end_block 
 begin_comment ignore end_comment begin_comment finds a system class which should be loaded from the same classloader as the ant core for jdk 1 1 compatibility this uses the find system class method if no parent classloader has been specified param name the name of the class to be loaded must not be code null code return the required class object exception class not found exception if the requested class does not exist on this loader s classpath end_comment begin_type begin_specifier end_specifier begin_name class end_name end_type begin_name find base class end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name class not found exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name parent end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name find system class end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name load class end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_comment if true report only and don t change any files param ne if true report only and do not change any files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set noexec end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name ne end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name noexec end_name begin_operator EQ end_operator begin_name ne end_name end_expr end_expr_stmt end_block 
 begin_comment get the hash code for this resource return hash code as int end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name hash code end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get resource end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name hash code end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment if set to true attempts a textual merge even for binary files return flag value end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is forcetextmode end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name forcetextmode end_name end_expr end_return end_block 
 begin_comment adds a new jvm argument return create a new jvm argument so that any argument can be passed to the jvm see set fork boolean end_comment begin_type begin_specifier end_specifier begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name argument end_name end_name end_type begin_name create jvmarg end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create vm argument end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment compares the contents of two files param f 1 the file whose content is to be compared param f 2 the other file whose content is to be compared return true if the content of the files is the same throws io exception if the files cannot be read end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name content equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name f 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name f 2 end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_call begin_name content equals end_name begin_argument_list begin_argument begin_expr begin_name f 1 end_name end_expr end_argument begin_argument begin_expr begin_name f 2 end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment test that multi leve inner class dependencies trigger deletion of the outer class end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test inner inner end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get result files end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment indicate that this entry is a symbolic link to the given filename param name name of the file this entry links to empty string if it is not a symbolic link since 1 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set linked file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name link end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name mode end_name begin_operator EQ end_operator begin_call begin_name get mode end_name begin_argument_list begin_argument begin_expr begin_name mode end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create a new exec delegate the delegate task is populated so that it appears in the logs to be the same task as this one return the delegate throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name exec task end_name end_type begin_name create exec end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name exec task end_name end_type begin_name exec end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name exec task end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name exec end_name end_expr end_return end_block 
 begin_comment sets the code keepgeneric code flag param a boolean code true code if the flag must be set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set keepgeneric end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name a boolean end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name keepgeneric end_name begin_operator EQ end_operator begin_name a boolean end_name end_expr end_expr_stmt end_block 
 begin_name property checker end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name key end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name values end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name key end_name end_name begin_operator EQ end_operator begin_name key end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name expected values end_name end_name begin_operator EQ end_operator begin_name values end_name end_expr end_expr_stmt end_block 
 begin_comment assertions to enable in this program if fork true since ant 1 6 param asserts assertion set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add assertions end_name begin_parameter_list begin_param begin_decl begin_type begin_name assertions end_name end_type begin_name asserts end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get commandline end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get assertions end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name get commandline end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set assertions end_name begin_argument_list begin_argument begin_expr begin_name asserts end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a none selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add none end_name begin_parameter_list begin_param begin_decl begin_type begin_name none selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the string representation of this resource return this file resource formatted as a string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name absolute path end_name begin_init begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_name absolute path end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment creates a new root handler instance param context the context for the handler param root handler the handler for the root element end_comment begin_specifier end_specifier begin_name root handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name ant xml context end_name end_type begin_name context end_name end_decl end_param begin_param begin_decl begin_type begin_name ant handler end_name end_type begin_name root handler end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name current handler end_name begin_operator EQ end_operator begin_name root handler end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ant handlers end_name begin_operator DOT end_operator begin_name push end_name end_name begin_argument_list begin_argument begin_expr begin_name current handler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name context end_name end_name begin_operator EQ end_operator begin_name context end_name end_expr end_expr_stmt end_block 
 begin_comment validate attributes and get down to business end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name validate and execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name saved file ext end_name begin_init begin_expr begin_name fileext end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name file end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name resources end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name resources end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name is filesystem only end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name totalproperty end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name property end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name fileext end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name property end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name force overwrite end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ct end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name resources end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ct end_name begin_operator UNP end_operator begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ct end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name ct end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name verify property end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name is condition end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name verify property end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name force overwrite end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name is condition end_name begin_operator UNP end_operator begin_name force overwrite end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name message digest end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name provider end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name message digest end_name begin_operator EQ end_operator begin_call begin_name begin_name message digest end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list begin_argument begin_expr begin_name algorithm end_name end_expr end_argument begin_argument begin_expr begin_name provider end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no such algorithm exception end_name end_type begin_name noalgo end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name noalgo end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no such provider exception end_name end_type begin_name noprovider end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name noprovider end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then begin_else begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name message digest end_name begin_operator EQ end_operator begin_call begin_name begin_name message digest end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list begin_argument begin_expr begin_name algorithm end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no such algorithm exception end_name end_type begin_name noalgo end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name noalgo end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_else end_if begin_if begin_condition begin_expr begin_name message digest end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name fileext end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name fileext end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name algorithm end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name fileext end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_else end_if begin_try begin_block begin_if begin_condition begin_expr begin_name resources end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file resource end_name end_type begin_name fr end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name src end_name begin_init begin_expr begin_call begin_name begin_name fr end_name begin_operator DOT end_operator begin_name get file end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name totalproperty end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name todir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment use to calculate digest based on file name end_comment begin_comment this is required in order to get the same result end_comment begin_comment on different platforms end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name relative file paths end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name fr end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name add to include file map end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name totalproperty end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name todir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name relative file paths end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name add to include file map end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name generate checksums end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_finally begin_block begin_expr_stmt begin_expr begin_name fileext end_name begin_operator EQ end_operator begin_name saved file ext end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name include file map end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment verifies that the user selections are valid throws build exception if the user selections are invalid end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check configuration end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name ejbdescriptor end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name ejbdescriptor end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name ejbdescriptor end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_name ejbdescriptor end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name iasdescriptor end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name iasdescriptor end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name iasdescriptor end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_name iasdescriptor end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name dest end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name dest end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name dest end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_name dest end_name begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name iashome end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name iashome end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name iashome end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructs an exception with the given descriptive message param message a description of or information about the exception should not be code null code end_comment begin_specifier end_specifier begin_name build exception end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the character encoding for output files param encoding the output character encoding since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name output encoding end_name end_name begin_operator EQ end_operator begin_name encoding end_name end_expr end_expr_stmt end_block 
 begin_comment ant attribute ignore true param proceed inverse of failoferror end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set proceed end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name proceed end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name fail on error end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name proceed end_name end_expr end_expr_stmt end_block 
 begin_comment add a resource comparator to this sort resource collection if multiple resource comparators are added they will be processed in lifo order param c the resource comparator to add end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource comparator end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fail fast end_name begin_operator DOT end_operator begin_name invalidate end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this method is to be overridden by extending unarchival tasks param file utils the file utils param src f the source file param dir the destination directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name expand file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file utils end_name end_type begin_name file utils end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name src f end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name src f end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name zip file end_name end_type begin_name zf end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file name mapper end_name end_type begin_name mapper end_name begin_init begin_expr begin_call begin_name get mapper end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name zf end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name zip file end_name begin_argument_list begin_argument begin_expr begin_name src f end_name end_expr end_argument begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name zf end_name begin_operator DOT end_operator begin_name get entries end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name zip entry end_name end_type begin_name ze end_name begin_init begin_expr begin_operator LPAR end_operator begin_name zip entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name extract file end_name begin_argument_list begin_argument begin_expr begin_name file utils end_name end_expr end_argument begin_argument begin_expr begin_name src f end_name end_expr end_argument begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name zf end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list begin_argument begin_expr begin_name ze end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name date end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get time end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name mapper end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name src f end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name close quietly end_name end_name begin_argument_list begin_argument begin_expr begin_name zf end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment only sets the name p this is a dummy used for not existing resources p param name relative path of the resource expects quot quot to be used as the directory separator end_comment begin_specifier end_specifier begin_name resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name already init end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name regexp end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name factory end_name begin_operator DOT end_operator begin_name new regexp end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name already init end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment autoresponce behaviour valid options are y and n param response the auto response value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set autoresponse end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name response end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal auto response end_name end_name begin_argument_list begin_argument begin_expr begin_name response end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the number of resources to be included default is 1 return the count as code int count end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name get count end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name count end_name end_expr end_return end_block 
 begin_comment try to find the path from a resource jar file or directory name so that it can be used as a classpath to load the resource end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name find resource path end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name resource end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name resource end_name begin_operator EQ end_operator begin_call begin_name begin_name resource end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name url end_name begin_init begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class loader end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get resource end_name begin_argument_list begin_argument begin_expr begin_name resource end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name url end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name u end_name begin_init begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name u end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pling end_name begin_init begin_expr begin_call begin_name begin_name u end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name u end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name pling end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name u end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name tail end_name begin_init begin_expr begin_call begin_name begin_name u end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name resource end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name u end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name tail end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if end_else end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment the file in which the build number is stored defaults to build number if not specified param file the file in which build number is stored end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name my file end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block 
 begin_comment returns the name of the star team server return the name of the star team server see get url end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get servername end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name servername end_name end_name end_expr end_return end_block 
 begin_comment set the classname attribute param classname the name of the class to check end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classname end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classname end_name end_name begin_operator EQ end_operator begin_name classname end_name end_expr end_expr_stmt end_block 
 begin_comment shorthand to set the to address element param list comma separated list of addresses end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set to list end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name list end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name tokens end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name list end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name tokens end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to list end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name email address end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name tokens end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_comment should we want to trim the arguments before comparing them param b if true trim the arguments since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set trim end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name trim end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment return a string describing this object end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name targetdir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name targetdir end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name destmustexist end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name map end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name map end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name mapper element end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name mapper element end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirect 3 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name expected out end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name expected out end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name expected out end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the classname of the definition param class name the classname of this definition end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set class name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name class name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name class name end_name end_name begin_operator EQ end_operator begin_name class name end_name end_expr end_expr_stmt end_block 
 begin_comment adds a code regexp code element param reg exp the code regexp code element to add must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured regexp end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name regular expression end_name end_type begin_name reg exp end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name regexps end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name reg exp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name script def end_name end_type begin_name get script end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name get task type end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name map end_name end_type begin_name script repository end_name begin_init begin_expr begin_operator LPAR end_operator begin_name map end_name begin_operator RPAR end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name script repository end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name script repository end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name script def end_name end_type begin_name definition end_name begin_init begin_expr begin_operator LPAR end_operator begin_name script def end_name begin_operator RPAR end_operator begin_call begin_name begin_name script repository end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task type end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name definition end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_name definition end_name end_expr end_return end_block 
 begin_comment list the files present in one directory param directory full path on the remote side param changedir if true change to directory directory before listing return array of ftp file end_comment begin_type begin_specifier end_specifier begin_name ftp file end_name begin_index end_index end_type begin_name list files end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name directory end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name changedir end_name end_decl end_param end_parameter_list begin_block begin_comment get project log listing files in directory directory project msg debug end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name current path end_name begin_init begin_expr begin_name directory end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name changedir end_name end_expr end_condition begin_then begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name change working directory end_name end_name begin_argument_list begin_argument begin_expr begin_name directory end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name result end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name current path end_name begin_operator EQ end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name print working directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name file list map end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_name current path end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name begin_name ftp file end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name file list map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name current path end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name ftp file end_name begin_index end_index end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name list files end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name file list map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name current path end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name remote sensitivity checked end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name check remote sensitivity end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name directory end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment construct a new code files code collection shallowly cloned from the specified code files code param f the code files code to use as a template end_comment begin_specifier end_specifier begin_name files end_name begin_parameter_list begin_param begin_decl begin_type begin_name files end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name default patterns end_name end_name begin_operator EQ end_operator begin_name begin_name f end_name begin_operator DOT end_operator begin_name default patterns end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name additional patterns end_name end_name begin_operator EQ end_operator begin_name begin_name f end_name begin_operator DOT end_operator begin_name additional patterns end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name selectors end_name end_name begin_operator EQ end_operator begin_name begin_name f end_name begin_operator DOT end_operator begin_name selectors end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name use default excludes end_name end_name begin_operator EQ end_operator begin_name begin_name f end_name begin_operator DOT end_operator begin_name use default excludes end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name case sensitive end_name end_name begin_operator EQ end_operator begin_name begin_name f end_name begin_operator DOT end_operator begin_name case sensitive end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name follow symlinks end_name end_name begin_operator EQ end_operator begin_name begin_name f end_name begin_operator DOT end_operator begin_name follow symlinks end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ds end_name end_name begin_operator EQ end_operator begin_name begin_name f end_name begin_operator DOT end_operator begin_name ds end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set project end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment concatenates the resulting header or source files for all the classes listed into this file param output file the output file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name output file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name output file end_name end_name begin_operator EQ end_operator begin_name output file end_name end_expr end_expr_stmt end_block 
 begin_comment gets the token attribute of the filter object return the token value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get token end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name token end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name annotation processor end_name end_type begin_name get processor for end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name set end_name begin_argument_list begin_argument begin_name begin_name com end_name begin_operator DOT end_operator begin_name sun end_name begin_operator DOT end_operator begin_name mirror end_name begin_operator DOT end_operator begin_name declaration end_name begin_operator DOT end_operator begin_name annotation type declaration end_name end_name end_argument end_argument_list end_name end_type begin_name annotation type declarations end_name end_decl end_param begin_param begin_decl begin_type begin_name annotation processor environment end_name end_type begin_name env end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name distributed annotation processor end_name begin_argument_list begin_argument begin_expr begin_name env end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name wait for end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment tells the net rexx compiler that the source is in utf 8 valid true values are on or true anything else sets the flag to false the default value is false param utf 8 a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set utf 8 end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name utf 8 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name utf 8 end_name end_name begin_operator EQ end_operator begin_name utf 8 end_name end_expr end_expr_stmt end_block 
 begin_comment return code true code if the specified code extension code which represents an optional package required by an application is satisfied by this code extension code which represents an optional package that is already installed otherwise return code false code param required description of the required optional package return true if the specified extension is compatible with this extension end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is compatible with end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name extension end_name end_type begin_name required end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name compatible end_name begin_operator EQT end_operator begin_call begin_name get compatibility with end_name begin_argument_list begin_argument begin_expr begin_name required end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test pre and postfix end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name glob pattern mapper end_name end_type begin_name m end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name glob pattern mapper end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set from end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name map file name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name map file name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name result end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment and a little longer end_comment begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name map file name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name result end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment and a little shorter end_comment begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name map file name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name result end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the extension used for the report file return the extension end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get extension end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name extension end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name add type test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the attribute s value return the attribute s value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name values end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name full value end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name get values end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name full value end_name begin_operator UNP end_operator begin_name value end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_call begin_name begin_name full value end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment return the type of task return the type of task end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get task type end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name task type end_name end_expr end_return end_block 
 begin_comment the grammar file to process param target the gramer file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set target end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name target file end_name end_name begin_operator EQ end_operator begin_name target end_name end_expr end_expr_stmt end_block 
 begin_comment adds a set of files to sign param set a set of files to sign since ant 1 4 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add fileset end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file set end_name end_type begin_name set end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the classpath to load the file name mapper through nested element return a path object to be configured end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 8 using zip entry end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test 8 end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name file utils test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the script text param text a component of the script text to be added end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add text end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name add text end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test case insensitive match end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name regexp matcher end_name begin_operator DOT end_operator begin_name match case insensitive end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment indicates if the task is adding new files into the archive as opposed to copying back unchanged files from the backup copy return true if adding new files end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is adding new files end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name adding new files end_name end_expr end_return end_block 
 begin_comment find out the parent build file of this build file return the parent build file of this build file end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get build file parent end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name build file parent end_name end_expr end_return end_block 
 begin_comment 900000 byte end_comment begin_comment end_comment begin_comment 4560782 byte end_comment begin_comment end_comment begin_name data end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name block size 100 k end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ll 8 end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_name block size 100 k end_name begin_operator STAR end_operator begin_name begin_name b zip 2 constants end_name begin_operator DOT end_operator begin_name base block size end_name end_name end_expr end_index end_name end_expr end_expr_stmt end_block 
 begin_comment set the specification vendor of extension param specification vendor the specification vendor of extension end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set specification vendor end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name specification vendor end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name verify not a reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name specification vendor end_name end_name begin_operator EQ end_operator begin_name specification vendor end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test entry reference end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name public id end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name sysid end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment catalog 2 catalog 1 catalog end_comment begin_decl_stmt begin_decl begin_type begin_name resource location end_name end_type begin_name dtd end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name resource location end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dtd end_name begin_operator DOT end_operator begin_name set public id end_name end_name begin_argument_list begin_argument begin_expr begin_name public id end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dtd end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_name sysid end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name catalog end_name begin_operator DOT end_operator begin_name add dtd end_name end_name begin_argument_list begin_argument begin_expr begin_name dtd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dtd file end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name sysid end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name uri end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name uri loc end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name resource location end_name end_type begin_name entity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name resource location end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entity end_name begin_operator DOT end_operator begin_name set public id end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entity end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_name uri loc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name catalog end_name begin_operator DOT end_operator begin_name add entity end_name end_name begin_argument_list begin_argument begin_expr begin_name entity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name xml file end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name uri loc end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name catalog end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name xml catalog end_name end_type begin_name catalog 1 end_name begin_init begin_expr begin_call begin_name new catalog end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name catalog 1 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name xml catalog end_name end_type begin_name catalog 2 end_name begin_init begin_expr begin_call begin_name new catalog end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name catalog 1 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name catalog 1 end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name catalog 2 end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name input source end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name catalog 2 end_name begin_operator DOT end_operator begin_name resolve entity end_name end_name begin_argument_list begin_argument begin_expr begin_name public id end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name to url string end_name begin_argument_list begin_argument begin_expr begin_name dtd file end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name get system id end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name source end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name catalog end_name begin_operator DOT end_operator begin_name resolve end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name to url string end_name begin_argument_list begin_argument begin_expr begin_name xml file end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name get system id end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment add a depends selector entry on the selector list param selector the selector to be added end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add depend end_name begin_parameter_list begin_param begin_decl begin_type begin_name depend selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name used matching task end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name add depend end_name end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for dummy instances see base filter reader base filter reader end_comment begin_specifier end_specifier begin_name head filter end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment appends code includes code to the current list of include patterns param includes array containing the include patterns since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name append includes end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name includes end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name includes end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name includes end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name default patterns end_name begin_operator DOT end_operator begin_name create include end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set name end_name begin_argument_list begin_argument begin_expr begin_name begin_name includes end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_name directory scanner end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment execute the task throws build exception if errors occur end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name sources end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name targets end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment no sources nothing to compare no targets nothing to delete end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name sources end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator UNP end_operator begin_call begin_name begin_name targets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name uptodate end_name begin_argument_list begin_argument begin_expr begin_name sources end_name end_expr end_argument begin_argument begin_expr begin_name targets end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name delete end_name end_type begin_name delete end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name delete end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name delete end_name begin_operator DOT end_operator begin_name bind to owner end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name delete end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name targets end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name delete end_name begin_operator DOT end_operator begin_name perform end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment get whether recursive token expansion is enabled return code boolean code whether enabled end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is recurse end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name recurse end_name end_expr end_return end_block 
 begin_comment set the name of the star team project to be acted on required if tt url tt is not set param projectname the name of the star team project to be acted on see set url string end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set projectname end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name projectname end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name projectname end_name end_name begin_operator EQ end_operator begin_name projectname end_name end_expr end_expr_stmt end_block 
 begin_comment set whether or not you want the process to be spawned default is false param spawn if true you do not want ant to wait for the end of the process since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set spawn end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name spawn end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name spawn end_name end_name begin_operator EQ end_operator begin_name spawn end_name end_expr end_expr_stmt end_block 
 begin_comment set the hostname or address of the remote server param m a code string code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set server end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name m end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name server end_name end_name begin_operator EQ end_operator begin_name m end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name message logged end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name action performed end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment special back door for subclasses internal access to the hashtables return the live hashtable inherited properties end_comment begin_type begin_specifier end_specifier begin_name hashtable end_name end_type begin_name get internal inherited properties end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name inherited properties end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test precedence rules end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name facade task helper end_name end_type begin_name fth end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name facade task helper end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name fth end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fth end_name begin_operator DOT end_operator begin_name set magic value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name fth end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name fth end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name facade task helper end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name fth end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name fth end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name facade task helper end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name fth end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name fth end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name facade task helper end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fth end_name begin_operator DOT end_operator begin_name set magic value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fth end_name begin_operator DOT end_operator begin_name set implementation end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name fth end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a depends selector entry on the selector list param selector the code depend selector code to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add depend end_name begin_parameter_list begin_param begin_decl begin_type begin_name depend selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the password for smtp auth this requires java mail param password the string password since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set password end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name password end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name password end_name end_name begin_operator EQ end_operator begin_name password end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test adjust to long end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name long end_name begin_operator RPAR end_operator begin_name begin_name integer end_name begin_operator DOT end_operator begin_name max value end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name zip output stream end_name begin_operator DOT end_operator begin_name adjust to long end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name integer end_name begin_operator DOT end_operator begin_name max value end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name long end_name begin_operator RPAR end_operator begin_name begin_name integer end_name begin_operator DOT end_operator begin_name max value end_name end_name begin_operator RPAR end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name zip output stream end_name begin_operator DOT end_operator begin_name adjust to long end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name integer end_name begin_operator DOT end_operator begin_name max value end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name long end_name begin_operator RPAR end_operator begin_name begin_name integer end_name begin_operator DOT end_operator begin_name max value end_name end_name begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name zip output stream end_name begin_operator DOT end_operator begin_name adjust to long end_name end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator begin_name begin_name integer end_name begin_operator DOT end_operator begin_name max value end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name values end_name end_expr end_return end_block 
 begin_comment execute the read exec task param rexec the task to use throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list begin_param begin_decl begin_type begin_name ant r exec client end_name end_type begin_name rexec end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name rexec end_name begin_operator DOT end_operator begin_name wait for string end_name end_name begin_argument_list begin_argument begin_expr begin_name task string end_name end_expr end_argument begin_argument begin_expr begin_name timeout end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true include ant jar optional jar and junit jar in the forked vm param b include ant run time yes or no since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set includeantruntime end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name include ant runtime end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment call a target verify named property is true param target build file target param property property name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name expect property set end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument begin_argument begin_expr begin_name property end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set a default timeout in seconds to wait for a response zero means forever the default param i an code integer code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set timeout end_name begin_parameter_list begin_param begin_decl begin_type begin_name integer end_name end_type begin_name i end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name default timeout end_name end_name begin_operator EQ end_operator begin_name i end_name end_expr end_expr_stmt end_block 
 begin_comment returns a vector of matched groups found in the argument p group 0 will be the full match the rest are the parenthesized subexpressions p param input the string to match against param options the regex options to use return the vector of groups throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name get groups end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name input end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name options end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name matches end_name begin_argument_list begin_argument begin_expr begin_name input end_name end_expr end_argument begin_argument begin_expr begin_name options end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name v end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name match result end_name end_type begin_name mr end_name begin_init begin_expr begin_call begin_name begin_name matcher end_name begin_operator DOT end_operator begin_name get match end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name cnt end_name begin_init begin_expr begin_call begin_name begin_name mr end_name begin_operator DOT end_operator begin_name groups end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name cnt end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name match end_name begin_init begin_expr begin_call begin_name begin_name mr end_name begin_operator DOT end_operator begin_name group end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment treat non matching groups as empty matches end_comment begin_if begin_condition begin_expr begin_name match end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name match end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name match end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name v end_name end_expr end_return end_block 
 begin_comment add a head filter filter param head filter a code head filter code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add head filter end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name head filter end_name end_type begin_name head filter end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filter readers end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name head filter end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a new helper instance from the name of the class it ll first try the thread class loader then class for name will load from the same loader that loaded this class param helper class the name of the class to create an instance of must not be code null code return a new instance of the specified class exception build exception if the class cannot be found or cannot be appropriate instantiated end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name project helper end_name end_type begin_name new helper end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name helper class end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name class loader end_name begin_init begin_expr begin_call begin_name begin_name loader utils end_name begin_operator DOT end_operator begin_name get context class loader end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name clazz end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name class loader end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name clazz end_name begin_operator EQ end_operator begin_call begin_name begin_name class loader end_name begin_operator DOT end_operator begin_name load class end_name end_name begin_argument_list begin_argument begin_expr begin_name helper class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_comment try next method end_comment end_block end_catch end_try end_block end_then end_if begin_if begin_condition begin_expr begin_name clazz end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name clazz end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name helper class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name project helper end_name begin_operator RPAR end_operator begin_call begin_name begin_name clazz end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name setup block end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name begin_index end_index end_type begin_name cftab end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name begin_operator DOT end_operator begin_name cftab end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name begin_index end_index end_type begin_name tt end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name begin_operator DOT end_operator begin_name init tt end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name last end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name ll 8 end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name begin_operator DOT end_operator begin_name ll 8 end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name cftab end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name begin_operator DOT end_operator begin_name unzftab end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name cftab end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init begin_operator UNP end_operator begin_name c end_name begin_init begin_expr begin_name begin_name cftab end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LE end_operator end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator UNP end_operator begin_name begin_name cftab end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name cftab end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_name c end_name end_expr end_expr_stmt end_block end_for begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init begin_operator UNP end_operator begin_name last shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name last end_name end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LE end_operator begin_name last shadow end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name tt end_name begin_index begin_expr begin_name begin_name cftab end_name begin_index begin_expr begin_name begin_name ll 8 end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name i end_name end_expr end_expr_stmt end_block end_for begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name orig ptr end_name end_name begin_operator LT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name orig ptr end_name end_name begin_operator GE end_operator begin_name begin_name tt end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su t pos end_name end_name begin_operator EQ end_operator begin_name begin_name tt end_name begin_index begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name orig ptr end_name end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su count end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su i 2 end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su ch 2 end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment not a char and not eof end_comment begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name block randomised end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su r n to go end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su r t pos end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name setup rand part a end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name setup no rand part a end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test ignore case end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name download end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name from ssh uri end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name to path end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name j sch exception end_name end_expr end_argument begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file end_name begin_init begin_expr begin_call begin_name parse uri end_name begin_argument_list begin_argument begin_expr begin_name from ssh uri end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name session end_name end_type begin_name session end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name session end_name begin_operator EQ end_operator begin_call begin_name open session end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name scp from message end_name end_type begin_name message end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name is sftp end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name message end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name scp from message end_name begin_argument_list begin_argument begin_expr begin_call begin_name get verbose end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name session end_name end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name to path end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name from ssh uri end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name message end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name scp from message by sftp end_name begin_argument_list begin_argument begin_expr begin_call begin_name get verbose end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name session end_name end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name to path end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name from ssh uri end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name set log listener end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name session end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name session end_name begin_operator DOT end_operator begin_name disconnect end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name fail fast end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name set end_name end_type begin_name s end_name begin_init begin_expr begin_call begin_name set end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name f end_name begin_operator DOT end_operator begin_name parent end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name s end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name hash set end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name f end_name begin_operator DOT end_operator begin_name parent end_name end_name end_expr end_argument begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get notco flag status return boolean containing status of notco flag since ant 1 6 1 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get notco end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m notco end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test source with default end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set new property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name get source end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the log the build file test object only valid if configure project has been called pre log buffer null return the log value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get log end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name log buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test exception end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns a reference to the server which may be used for informational purposes by subclasses return a reference to the server end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name server end_name end_type begin_name get server end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name server end_name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test constructor mixed style end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name l end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name is unix style end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name is net ware end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name base end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name base end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name base end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name base end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name do single transfer end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name j sch exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name channel sftp end_name end_type begin_name channel end_name begin_init begin_expr begin_call begin_name open sftp channel end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name connect end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name send file to remote end_name begin_argument_list begin_argument begin_expr begin_name channel end_name end_expr end_argument begin_argument begin_expr begin_name local file end_name end_expr end_argument begin_argument begin_expr begin_name remote path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name sftp exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j sch exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name channel end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name disconnect end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment fulfill the resource collection contract return an iterator of resources end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name iterator end_name end_type begin_name iterator end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name restrict end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name die on circular reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_specifier end_specifier begin_name no vm crash end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the entry s type tag return the tag value of this entry end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get tag end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name tag end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filter 4 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return a string that describes the command and arguments suitable for verbose output before a call to code runtime exec string code return the description string since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name describe command end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name describe command end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get commandline end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirector 16 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the string return the string contents of the resource since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment send an ack param out the output stream to use throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name send ack end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name buf end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invocation target exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name enumerated attribute end_name end_type begin_name ea end_name begin_init begin_expr begin_operator LPAR end_operator begin_name enumerated attribute end_name begin_operator RPAR end_operator begin_call begin_name begin_name reflected arg end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ea end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name ea end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ie end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment return the qname of the xml element associated with this component return namespace qname used in the element declaration end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get q name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name qname end_name end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name once end_name end_expr begin_operator UNP end_operator begin_expr begin_name per test end_name end_expr begin_operator UNP end_operator begin_expr begin_name per batch end_name end_expr end_block end_expr end_return end_block 
 begin_comment add the resource comparator to reverse param c the resource comparator to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource comparator end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name nested end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name one nested end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name nested end_name begin_operator EQ end_operator begin_name c end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name language code end_name end_type begin_name get default end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name language code end_name end_type begin_name lc end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name language code end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name lc end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name lc end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment run the task throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment load command line with optional attributes end_comment begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_comment check the target is a file end_comment begin_if begin_condition begin_expr begin_name target file end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name target file end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name target file end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment use the directory containing the target as the output directory end_comment begin_if begin_condition begin_expr begin_name output directory end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name output directory end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name target file end_name begin_operator DOT end_operator begin_name get parent end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name output directory end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name output directory end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment determine if the generated java file is up to date end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name java file end_name begin_init begin_expr begin_call begin_name get output java file end_name begin_argument_list begin_argument begin_expr begin_name output directory end_name end_expr end_argument begin_argument begin_expr begin_name target file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name java file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name target file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator begin_call begin_name begin_name java file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name target file end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name target file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name classpath end_name begin_init begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name create classpath end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name javacc jar end_name begin_init begin_expr begin_call begin_name begin_name java cc end_name begin_operator DOT end_operator begin_name get archive file end_name end_name begin_argument_list begin_argument begin_expr begin_name javacc home end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name create path element end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set path end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name javacc jar end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name add java runtime end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name set classname end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name java cc end_name begin_operator DOT end_operator begin_name get main class end_name end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument begin_argument begin_expr begin_name begin_name java cc end_name begin_operator DOT end_operator begin_name taskdef type javacc end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name argument end_name end_name end_type begin_name arg end_name begin_init begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name create vm argument end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name javacc home end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name run command end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return true if the property exists exception build exception if the property attribute is not set end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name property end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_return end_block 
 begin_comment set this entry s modification time the parameter passed to this method is in java time param time this entry s new modification time end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set mod time end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name time end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name mod time end_name end_name begin_operator EQ end_operator begin_name time end_name begin_operator SLASH end_operator begin_name millis per second end_name end_expr end_expr_stmt end_block 
 begin_comment set the output format xml or text param ea an enumerated code format attribute code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set format end_name begin_parameter_list begin_param begin_decl begin_type begin_name format attribute end_name end_type begin_name ea end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name format end_name begin_operator EQ end_operator begin_call begin_name begin_name ea end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the class name attribute param class name a code string code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set class name end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name class name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name class name end_name end_name begin_operator EQ end_operator begin_name class name end_name end_expr end_expr_stmt end_block 
 begin_comment treat empty nested text as no text p depending on the xml parser add text may have been called for quot ignorable whitespace quot as well p end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name sanitize text end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name text buffer end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name text buffer end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name text buffer end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment add a selector date entry on the selector list param selector the code date selector code to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add date end_name begin_parameter_list begin_param begin_decl begin_type begin_name date selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the string that renamed files will end with on completion param to the extension of the renamed files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set to extension end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name to end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name to extension end_name begin_operator EQ end_operator begin_name to end_name end_expr end_expr_stmt end_block 
 begin_comment return the list of nested unknown elements for this unknown element end_comment begin_type begin_specifier end_specifier begin_name list end_name end_type begin_name get children end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name children end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name pattern set test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor which just delegates to the superconstructor param parent handler the handler which should be restored to the parser at the end of the element must not be code null code end_comment begin_specifier end_specifier begin_name target handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name project helper impl end_name end_type begin_name helper impl end_name end_decl end_param begin_param begin_decl begin_type begin_name document handler end_name end_type begin_name parent handler end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name helper impl end_name end_expr end_argument begin_argument begin_expr begin_name parent handler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment checks to make sure all settings are kosher in this case it means that the pattern attribute has been set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name verify settings end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name contains end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name push end_name begin_parameter_list begin_param begin_decl begin_type begin_name char end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name push end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name int end_name begin_operator RPAR end_operator begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the separator between name value arguments in set keys by default it is param sep the separator string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set sep end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name sep end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name sep end_name end_name begin_operator EQ end_operator begin_name sep end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test is container end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator EQT end_operator begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name is container end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment converts the buffer to a string and sends it to code process line code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process buffer end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name process end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name reset end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 6 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment indicate whether only public classes and members are to be included in the scope processed param b true if scope is to be public end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set public end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add arg if end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inspired by bug 22541 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test directory date does not change end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name my file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name project path end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name time stamp before end_name begin_init begin_expr begin_call begin_name begin_name my file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name time stamp after end_name begin_init begin_expr begin_call begin_name begin_name my file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name time stamp before end_name end_expr end_argument begin_argument begin_expr begin_name time stamp after end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the contains string param contains the contains string to set must not be code null code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name contains end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_name contains end_name end_expr end_expr_stmt end_block 
 begin_comment gets the classpath field return a path representing the classpath attribute end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name get classpath end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name classpath end_name end_expr end_return end_block 
 begin_comment read a character from the current reader object advance to the next if the reader is finished return the character read 1 for eof on the last reader exception io exception possibly thrown by the read for a reader object end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name need add separator end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ret end_name begin_init begin_expr begin_call begin_name begin_name eol string end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name last pos end_name begin_operator PPLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name last pos end_name begin_operator GE end_operator begin_call begin_name begin_name eol string end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name last pos end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name need add separator end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name ret end_name end_expr end_return end_block end_then end_if begin_while begin_condition begin_expr begin_call begin_name get reader end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ch end_name begin_init begin_expr begin_call begin_name get reader end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name read end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name next reader end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name fix last line end_name begin_operator UNP end_operator begin_call begin_name is missing end of line end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name need add separator end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name last pos end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name add last char end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator begin_name ch end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name ch end_name end_expr end_return end_block end_else end_if end_block end_while begin_return begin_expr begin_operator MINUS end_operator end_expr end_return end_block 
 begin_comment get the next element return the next element throws no such element exception if there is no more end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name next element end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name no such element exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name has more elements end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name no such element exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name buffer line end_name end_type begin_name tmp line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffer line end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name eol str end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name next line end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name tmp line end_name end_expr end_return end_block 
 begin_comment sets the new name of the file param dest the new name of the file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dest end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dest end_name end_name begin_operator EQ end_operator begin_name dest end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name get project end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name e end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name get project end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_name f end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 5 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment from attribute not supported param from a string throws build exception always end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set from end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name from end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name unsupported attribute exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment handles the start of a project element a project handler is created and initialised with the element name and attributes param tag the name of the element being started will not be code null code param attrs attributes of the element being started will not be code null code exception sax parse exception if the tag given is not code project code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name tag end_name end_decl end_param begin_param begin_decl begin_type begin_name attribute list end_name end_type begin_name attrs end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax parse exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name tag end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name project handler end_name begin_argument_list begin_argument begin_expr begin_name helper impl end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name init end_name begin_argument_list begin_argument begin_expr begin_name tag end_name end_expr end_argument begin_argument begin_expr begin_name attrs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name sax parse exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name helper impl end_name begin_operator DOT end_operator begin_name locator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block 
 begin_comment test that passes xnew to sun s rmic running in a different vm throws exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test xnew forked end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator GT end_operator end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator MMINUS end_operator end_expr end_incr begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name msg end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name mail message end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name test port end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name net end_name begin_operator DOT end_operator begin_name connect exception end_name end_name end_type begin_name ce end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name sleep end_name end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name fail end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name fail message end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name ioe end_name end_expr end_expr_stmt begin_return end_return end_block end_catch end_try begin_if begin_condition begin_expr begin_name msg end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_name msg end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name fail end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name fail message end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name from end_name end_name begin_argument_list begin_argument begin_expr begin_name from end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name e end_name begin_operator EQ end_operator begin_call begin_name begin_name reply to list end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name replyto end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name e end_name begin_operator EQ end_operator begin_call begin_name begin_name to list end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name to end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name e end_name begin_operator EQ end_operator begin_call begin_name begin_name cc list end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name cc end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name e end_name begin_operator EQ end_operator begin_call begin_name begin_name bcc list end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name bcc end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_if begin_condition begin_expr begin_name subject end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name set subject end_name end_name begin_argument_list begin_argument begin_expr begin_name subject end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name message end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name print stream end_name end_type begin_name out end_name begin_init begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name get print stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name send and close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name fail end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name fail message end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name ioe end_name end_expr end_expr_stmt begin_return end_return end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name testcontent end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get no checkout flag status return boolean containing status of noco flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get no checkout end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m noco end_name end_expr end_return end_block 
 begin_comment get the location of the parser return path or null for trouble in tracking it down end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get xml parser location end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name sax parser end_name end_type begin_name sax parser end_name begin_init begin_expr begin_call begin_name get sax parser end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name sax parser end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name location end_name begin_init begin_expr begin_call begin_name get class location end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sax parser end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name location end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test nested 4 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name specific message end_name begin_init begin_expr begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name char end_name begin_index end_index end_type begin_name c end_name begin_init begin_expr begin_block begin_expr end_expr begin_expr end_expr begin_expr end_expr end_block end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name target end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name c end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name set char at end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name c end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name specific message end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment constructor for ant sound player end_comment begin_specifier end_specifier begin_name ant sound player end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_name object end_name end_type begin_name create end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name child end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invocation target exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument begin_argument begin_expr begin_name instantiation exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name child end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name child end_name begin_operator EQ end_operator begin_call begin_name begin_name constructor end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name constructor end_name begin_operator DOT end_operator begin_name get parameter types end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name length end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block end_block begin_operator DP end_operator begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name project end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name child end_name begin_operator UNP end_operator begin_name begin_name pre set def end_name begin_operator DOT end_operator begin_name pre set definition end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name child end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name begin_name pre set def end_name begin_operator DOT end_operator begin_name pre set definition end_name end_name begin_operator RPAR end_operator begin_name child end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name create object end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name behavior end_name begin_operator EQT end_operator begin_name add end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name istore end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name child end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name child end_name end_expr end_return end_block 
 begin_comment fired when a task finishes building this adds the time taken and any error stacktrace to the appropriate task element in the log param event an event with any relevant extra information will not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name task end_name end_type begin_name task end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get task end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name timed element end_name end_type begin_name task element end_name begin_init begin_expr begin_operator LPAR end_operator begin_name timed element end_name begin_operator RPAR end_operator begin_call begin_name begin_name tasks end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name task element end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name total time end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name begin_name task element end_name begin_operator DOT end_operator begin_name start time end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name task element end_name begin_operator DOT end_operator begin_name element end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name time attr end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name default logger end_name begin_operator DOT end_operator begin_name format time end_name end_name begin_argument_list begin_argument begin_expr begin_name total time end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name target end_name end_type begin_name target end_name begin_init begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get owning target end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name timed element end_name end_type begin_name target element end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name target end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name target element end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name timed element end_name begin_operator RPAR end_operator begin_call begin_name begin_name targets end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name target element end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name build element end_name begin_operator DOT end_operator begin_name element end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name task element end_name begin_operator DOT end_operator begin_name element end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name target element end_name begin_operator DOT end_operator begin_name element end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name task element end_name begin_operator DOT end_operator begin_name element end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name stack end_name end_type begin_name thread stack end_name begin_init begin_expr begin_call begin_name get stack end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name thread stack end_name begin_operator DOT end_operator begin_name empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name timed element end_name end_type begin_name popped stack end_name begin_init begin_expr begin_operator LPAR end_operator begin_name timed element end_name begin_operator RPAR end_operator begin_call begin_name begin_name thread stack end_name begin_operator DOT end_operator begin_name pop end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name popped stack end_name begin_operator UNP end_operator begin_name task element end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name popped stack end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name task element end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name tasks end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name task end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name tasks end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block 
 begin_comment add an image operation to chain param instr the image operation to append to the chain since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name image operation end_name end_type begin_name instr end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add image operation end_name begin_argument_list begin_argument begin_expr begin_name instr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_name script command launcher end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name script end_name end_decl end_param begin_param begin_decl begin_type begin_name command launcher end_name end_type begin_name launcher end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name launcher end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name my script end_name begin_operator EQ end_operator begin_name script end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test time iso end_name begin_parameter_list end_parameter_list begin_block begin_comment make sure that elapsed time in ms works end_comment begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name ms end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator STAR end_operator begin_operator PLUS end_operator begin_operator STAR end_operator begin_operator PLUS end_operator begin_operator RPAR end_operator begin_operator STAR end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name text end_name begin_init begin_expr begin_call begin_name begin_name date utils end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_name ms end_name end_expr end_argument begin_argument begin_expr begin_name begin_name date utils end_name begin_operator DOT end_operator begin_name iso 8601 time pattern end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment prints whether the build succeeded or failed any errors the occurred during the build and how long the build took param event an event with any relevant extra information must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name error end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name message end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name error end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get build successful message end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get build failed message end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name begin_operator LE end_operator begin_name msg output level end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name error end_name begin_operator UNP end_operator begin_name build exception end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name get stack trace end_name end_name begin_argument_list begin_argument begin_expr begin_name error end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name error end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name l sep end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name format time end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name start time end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name error end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name print message end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name print message end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name err end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment use the reference to locate the loader if the loader is not found taskdef will use the specified classpath and register it with the specified name this allow multiple taskdef typedef to use the same class loader so they can be used together it eliminate the need to put them in the classpath param r the reference to locate the loader end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set loader ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name loader end_name begin_operator EQ end_operator begin_name r end_name end_expr end_expr_stmt end_block 
 begin_comment set the mail server port param port the port to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set mailport end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name port end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name port end_name end_name begin_operator EQ end_operator begin_name port end_name end_expr end_expr_stmt end_block 
 begin_comment adds a nested cdata section p this means pre append cdata lt a gt b pre creates pre lt a gt lt cdata b gt lt a gt pre p param parent element that will receive the new element as child param content text content since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name append cdata end_name begin_parameter_list begin_param begin_decl begin_type begin_name element end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name content end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name document end_name end_type begin_name doc end_name begin_init begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name get owner document end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name cdata section end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create cdata section end_name end_name begin_argument_list begin_argument begin_expr begin_name content end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a selector filename entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add filename end_name begin_parameter_list begin_param begin_decl begin_type begin_name filename selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name add filename end_name end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the log command param cmd containing the command line string with or without the log flag and path appended end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get log command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then begin_else begin_block begin_comment had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes this breaks clearcase end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag log end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment group specified packages together in overview page param src the group packages a command separated list of group specs each one being a group name and package specification separated by a space end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set group end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name group end_name begin_operator EQ end_operator begin_name src end_name end_expr end_expr_stmt end_block 
 begin_comment get the current value of the conditon return true if the condition end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name value end_name end_expr end_return end_block 
 begin_comment set the quot from quot attribute of the map entry param from the prefix string to search for required note that this value is case insensitive when the build is running on a windows platform and case sensitive when running on a unix platform end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set from end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name from end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name from end_name end_name begin_operator EQ end_operator begin_name from end_name end_expr end_expr_stmt end_block 
 begin_comment if true compress the files otherwise only store them param compress a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set compress end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name compress end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name do compress end_name begin_operator EQ end_operator begin_name compress end_name end_expr end_expr_stmt end_block 
 begin_comment workspace to use optional by specifying a workspace the files are extracted to that location a pvcs workspace is a name for a location of the workfiles and isn t as such the location itself you define the location for a workspace using the pvcs gui clients if this isn t specified the default workspace for the current user is used param ws string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set workspace end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name ws end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name workspace end_name begin_operator EQ end_operator begin_name ws end_name end_expr end_expr_stmt end_block 
 begin_comment write a block of characters to the output stream param b the array containing the data param off the offset into the array where data starts param len the length of block throws io exception if the data cannot be written into the stream end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name b end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name off end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name len end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment find the line breaks and pass other chars through in blocks end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name offset end_name begin_init begin_expr begin_name off end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name block start offset end_name begin_init begin_expr begin_name offset end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name remaining end_name begin_init begin_expr begin_name len end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name buffer info end_name end_type begin_name buffer info end_name begin_init begin_expr begin_call begin_name get buffer info end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name remaining end_name begin_operator GT end_operator end_expr end_condition begin_block begin_while begin_condition begin_expr begin_name remaining end_name begin_operator GT end_operator begin_operator UNP end_operator begin_name begin_name b end_name begin_index begin_expr begin_name offset end_name end_expr end_index end_name begin_operator UNP end_operator begin_name lf end_name begin_operator UNP end_operator begin_name begin_name b end_name begin_index begin_expr begin_name offset end_name end_expr end_index end_name begin_operator UNP end_operator begin_name cr end_name end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name offset end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name remaining end_name begin_operator MMINUS end_operator end_expr end_expr_stmt end_block end_while begin_comment either end of buffer or a line separator char end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name block length end_name begin_init begin_expr begin_name offset end_name begin_operator MINUS end_operator begin_name block start offset end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name block length end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buffer info end_name begin_operator DOT end_operator begin_name buffer end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument begin_argument begin_expr begin_name block start offset end_name end_expr end_argument begin_argument begin_expr begin_name block length end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_while begin_condition begin_expr begin_name remaining end_name begin_operator GT end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name begin_name b end_name begin_index begin_expr begin_name offset end_name end_expr end_index end_name begin_operator EQT end_operator begin_name lf end_name begin_operator UNP end_operator begin_name begin_name b end_name begin_index begin_expr begin_name offset end_name end_expr end_index end_name begin_operator EQT end_operator begin_name cr end_name begin_operator RPAR end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name write end_name begin_argument_list begin_argument begin_expr begin_name begin_name b end_name begin_index begin_expr begin_name offset end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name remaining end_name begin_operator MMINUS end_operator end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name block start offset end_name begin_operator EQ end_operator begin_name offset end_name end_expr end_expr_stmt end_block end_while end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds a system specific extension to the name of an executable since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name add extension end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name command end_name end_decl end_param end_parameter_list begin_block begin_comment this is the most common extension case exe for windows and os 2 end_comment begin_comment nothing for nix end_comment begin_return begin_expr begin_name command end_name begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name is dos end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test dupes end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the group id return the group id since 1 1 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get group id end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name gid end_name end_expr end_return end_block 
 begin_comment set comment string param comment the comment string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set comment end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name comment end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m comment end_name begin_operator EQ end_operator begin_name comment end_name end_expr end_expr_stmt end_block 
 begin_comment specifies the encoding that the files are to be written in same as input encoding by default param output encoding string output encoding name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output encoding end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name output encoding end_name end_name begin_operator EQ end_operator begin_name output encoding end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test multiple targets one doesnt exist fo etrue end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the sscommand string ss or c path to ss return the path to ss exe or just ss if sscommand is not set end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get ss command end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name ss dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name ss exe end_name end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name ss dir end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call begin_operator QM end_operator begin_name ss dir end_name begin_operator PLUS end_operator begin_name ss exe end_name begin_operator DP end_operator begin_name ss dir end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_name ss exe end_name end_expr end_return end_block 
 begin_comment constructs user prompt from a request p this implementation adds choice 1 choice 2 choice 3 to the prompt for code multiple choice input request code s p param request the request to construct the prompt for must not be code null code return the prompt to ask the user end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get prompt end_name begin_parameter_list begin_param begin_decl begin_type begin_name input request end_name end_type begin_name request end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name prompt end_name begin_init begin_expr begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get prompt end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name def end_name begin_init begin_expr begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get default value end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name request end_name begin_operator UNP end_operator begin_name multiple choice input request end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_name prompt end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name multiple choice input request end_name begin_operator RPAR end_operator begin_name request end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get choices end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name elements end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name first end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name first end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name next end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name next end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name def end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name next end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name next end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name def end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name first end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name def end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name prompt end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name def end_name begin_operator PLUS end_operator end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_name prompt end_name end_expr end_return end_block end_else end_if end_else end_if end_block 
 begin_comment get the debug level return the jvm debug level may be null end_comment begin_type begin_specifier end_specifier begin_name integer end_name end_type begin_name get jvm debug level end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name jvm debug level end_name end_expr end_return end_block 
 begin_comment get the classpath to the websphere classpaths return the websphere classpath end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create was classpath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name was classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name was classpath end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name was classpath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment this is the name location of where to create the file param file the path of the zip file since ant 1 5 deprecated since 1 5 x use set dest file file instead ant attribute ignore true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set dest file end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment searches for and load a class on the classpath of this class loader param name the name of the class to be loaded must not be code null code return the required class object exception class not found exception if the requested class does not exist on this loader s classpath end_comment begin_type begin_specifier end_specifier begin_name class end_name end_type begin_name find class end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name class not found exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name find class in components end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment override the properties in the new project with the one explicitly defined as nested elements here throws build exception under unknown circumstances end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name override properties end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment remove duplicate properties last property wins end_comment begin_comment needed for backward compatibility end_comment begin_decl_stmt begin_decl begin_type begin_name set end_name end_type begin_name set end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hash set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator GE end_operator end_expr end_condition begin_incr begin_expr begin_operator MMINUS end_operator begin_name i end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name property end_name end_type begin_name p end_name begin_init begin_expr begin_operator LPAR end_operator begin_name property end_name begin_operator RPAR end_operator begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name set end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name set end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block end_for begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name property end_name end_type begin_name p end_name begin_init begin_expr begin_operator LPAR end_operator begin_name property end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name new project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name copy inherited properties end_name begin_argument_list begin_argument begin_expr begin_name new project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the password field return a string representing the password attribute end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get password end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name password end_name end_expr end_return end_block 
 begin_comment bugzilla report 18886 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test directory retaining end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the boot classpath to use param path the boot classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set bootclasspath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name bootclasspath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name bootclasspath end_name begin_operator EQ end_operator begin_name path end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name bootclasspath end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment adds a nested code lt fileset gt code element param fs a code file set code to be added to the path throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add fileset end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name fs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment removing something from the defaults end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name expected end_name begin_init begin_expr begin_block begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_comment cvs missing end_comment begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr end_block end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name execute target end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name expected end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name directory scanner end_name begin_operator DOT end_operator begin_name get default excludes end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name assertion failed error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment the cvsroot variable param root the cvsroot variable end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set cvs root end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name root end_name end_decl end_param end_parameter_list begin_block begin_comment check if not real cvsroot set it to null end_comment begin_if begin_condition begin_expr begin_name root end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name root end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name root end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name cvs root end_name end_name begin_operator EQ end_operator begin_name root end_name end_expr end_expr_stmt end_block 
 begin_comment retrieves the implementation return the implementation end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get implementation end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name user choice end_name begin_operator UNP end_operator begin_operator QM end_operator begin_name user choice end_name begin_operator DP end_operator begin_operator LPAR end_operator begin_name magic value end_name begin_operator UNP end_operator begin_operator QM end_operator begin_name magic value end_name begin_operator DP end_operator begin_name default value end_name begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment returns the next character in the filtered stream only including lines from the original stream which don t start with any of the specified comment prefixes return the next character in the resulting stream or 1 if the end of the resulting stream has been reached exception io exception if the underlying stream throws an io exception during reading end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get initialized end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name initialize end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set initialized end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ch end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name line end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name read line end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name comments size end_name begin_init begin_expr begin_call begin_name begin_name comments end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name line end_name begin_operator UNP end_operator end_expr end_condition begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name comments size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name comment end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name comments end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name comment end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_name line end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment line started with comment end_comment begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name read line end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_break end_break end_block end_else end_if end_block end_while begin_if begin_condition begin_expr begin_name line end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name read end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if end_block end_else end_if begin_return begin_expr begin_name ch end_name end_expr end_return end_block 
 begin_comment check if parameter combinations can be supported todo make sure the unit attribute is only specified on date fields end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check parameters end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name type end_name begin_operator EQT end_operator begin_name begin_name type end_name begin_operator DOT end_operator begin_name string type end_name end_name begin_operator UNP end_operator begin_name operation end_name begin_operator EQT end_operator begin_name begin_name operation end_name begin_operator DOT end_operator begin_name decrement oper end_name end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name key end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name value end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name default value end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name key end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name key end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name type end_name begin_operator EQT end_operator begin_name begin_name type end_name begin_operator DOT end_operator begin_name string type end_name end_name begin_operator UNP end_operator begin_name pattern end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name key end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment constructor for ssh user info end_comment begin_specifier end_specifier begin_name ssh user info end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name trust all certificates end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test faster end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment see directory scanner get included directories end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get included directories end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr end_expr end_index end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 4 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment tests a permission that is granted per default end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test default granted end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name perms end_name begin_operator DOT end_operator begin_name set security manager end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name s end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name perms end_name begin_operator DOT end_operator begin_name restore security manager end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment convert a dos date time field to a date object param zip dos time contains the stored dos time return a date instance corresponding to the given time end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name date end_name end_type begin_name from dos time end_name begin_parameter_list begin_param begin_decl begin_type begin_name zip long end_name end_type begin_name zip dos time end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name dos time end_name begin_init begin_expr begin_call begin_name begin_name zip dos time end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator UNP end_operator begin_call begin_name date end_name begin_argument_list begin_argument begin_expr begin_call begin_name dos to java time end_name begin_argument_list begin_argument begin_expr begin_name dos time end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment get the actions return the actions of the permission end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get actions end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name action string end_name end_expr end_return end_block 
 begin_comment enables dependency tracking for compilers that support this jikes and classic param depend if true enable dependency tracking end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set depend end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name depend end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name depend end_name end_name begin_operator EQ end_operator begin_name depend end_name end_expr end_expr_stmt end_block 
 begin_comment get the basename path of the item in a clearcase view return basename end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get view path basename end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name mview path end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment constructor for the condition test object param name we dont know end_comment begin_specifier end_specifier begin_name condition test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the central data return the central data if present else return the local file data end_comment begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name get central directory data end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name central data end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name central data end_name end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name get local file data data end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the error reporting grammar option param error reporting a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set errorreporting end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name error reporting end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name error reporting end_name end_expr end_argument begin_argument begin_expr begin_name error reporting end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end test suite end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name suite end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block end_block 
 begin_comment the whole testsuite ended param suite the testsuite throws build exception if there is an error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end test suite end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name suite end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name new line end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name suite end_name begin_operator DOT end_operator begin_name run count end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name suite end_name begin_operator DOT end_operator begin_name failure count end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name suite end_name begin_operator DOT end_operator begin_name error count end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name nf end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name suite end_name begin_operator DOT end_operator begin_name get run time end_name end_name begin_argument_list end_argument_list end_call begin_operator SLASH end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name new line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name with out and err end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name system output end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name system output end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name new line end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name system output end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name new line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name system error end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name system error end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name new line end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name system error end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name new line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name ioex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name out end_name begin_operator UNP end_operator begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name end_name begin_operator UNP end_operator begin_name out end_name begin_operator UNP end_operator begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name end_name end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment do not propagate old environment when new environment variables are specified param newenv if true do not propagate old environment when new environment variables are specified end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set newenvironment end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name newenv end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name new environment end_name begin_operator EQ end_operator begin_name newenv end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test complete directory move file and fileset end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process element end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name current element end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment get the filename of vendor specific descriptor end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file name with meta end_name begin_init begin_expr begin_name current text end_name end_expr end_init end_decl end_decl_stmt begin_comment trim the meta inf off of the file name end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file name end_name begin_init begin_expr begin_call begin_name begin_name file name with meta end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name meta dir end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file name with meta end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name descriptor file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name src dir end_name end_expr end_argument begin_argument begin_expr begin_name file name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ejb files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name file name with meta end_name end_expr end_argument begin_argument begin_expr begin_name descriptor file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment helper method to check to see if a weblogic ebj 1 1 jar needs to be rebuilt using ejbc called from write jar it sees if the bean classes are the only thing that needs to be updated and either updates the jar with the bean classfile or returns true saying that the whole weblogic jar needs to be regened with ejbc this allows faster build times for working developers p the way weblogic ejbc works is it creates wrappers for the publicly defined methods as they are exposed in the remote interface if the actual bean changes without changing the the method signatures then only the bean classfile needs to be updated and the rest of the weblogic jar file can remain the same if the interfaces ie the method signatures change or if the xml deployment descriptors changed the whole jar needs to be rebuilt with ejbc this is not strictly true for the xml files if the jndi name changes then the jar doesnt have to be rebuild but if the resources references change then it does at this point the weblogic jar gets rebuilt if the xml files change at all param generic jar file java io file the generic jar file param weblogic jar file java io file the weblogic jar file to check to see if it needs to be rebuilt return true if the jar needs to be rebuilt end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is rebuild required end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name generic jar file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name weblogic jar file end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name rebuild end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name jar file end_name end_type begin_name generic jar end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name jar file end_name end_type begin_name wl jar end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name new wl jar file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name jar output stream end_name end_type begin_name new jar stream end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name generic loader end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name weblogic jar file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment only go forward if the generic and the weblogic file both exist end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name generic jar file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name generic jar file end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name weblogic jar file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name weblogic jar file end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment open jar files end_comment begin_expr_stmt begin_expr begin_name generic jar end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name jar file end_name begin_argument_list begin_argument begin_expr begin_name generic jar file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name wl jar end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name jar file end_name begin_argument_list begin_argument begin_expr begin_name weblogic jar file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name generic entries end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name wl entries end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name replace entries end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment get the list of generic jar entries end_comment begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name generic jar end_name begin_operator DOT end_operator begin_name entries end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name jar entry end_name end_type begin_name je end_name begin_init begin_expr begin_operator LPAR end_operator begin_name jar entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name generic entries end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name je end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name je end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment get the list of weblogic jar entries end_comment begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name wl jar end_name begin_operator DOT end_operator begin_name entries end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name jar entry end_name end_type begin_name je end_name begin_init begin_expr begin_operator LPAR end_operator begin_name jar entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name wl entries end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name je end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name je end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment cycle through generic and make sure its in weblogic end_comment begin_expr_stmt begin_expr begin_name generic loader end_name begin_operator EQ end_operator begin_call begin_name get class loader from jar end_name begin_argument_list begin_argument begin_expr begin_name generic jar file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name generic entries end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name filepath end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name wl entries end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_name filepath end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment file name path match end_comment begin_comment check files see if same end_comment begin_decl_stmt begin_decl begin_type begin_name jar entry end_name end_type begin_name generic entry end_name begin_init begin_expr begin_operator LPAR end_operator begin_name jar entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name generic entries end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name filepath end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name jar entry end_name end_type begin_name wl entry end_name begin_init begin_expr begin_operator LPAR end_operator begin_name jar entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name wl entries end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name filepath end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name generic entry end_name begin_operator DOT end_operator begin_name get crc end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name wl entry end_name begin_operator DOT end_operator begin_name get crc end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name generic entry end_name begin_operator DOT end_operator begin_name get size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name wl entry end_name begin_operator DOT end_operator begin_name get size end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name generic entry end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment file are different see if its an object or an interface end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name classname end_name begin_init begin_expr begin_call begin_name begin_name generic entry end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name classname end_name begin_operator EQ end_operator begin_call begin_name begin_name classname end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name classname end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name genclass end_name begin_init begin_expr begin_call begin_name begin_name generic loader end_name begin_operator DOT end_operator begin_name load class end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name genclass end_name begin_operator DOT end_operator begin_name is interface end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment interface changed rebuild jar end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name genclass end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name rebuild end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_break end_break end_block end_then begin_else begin_block begin_comment object class changed update it end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name replace entries end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name filepath end_name end_expr end_argument begin_argument begin_expr begin_name generic entry end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_comment is it the manifest if so ignore it end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name generic entry end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment file other then class changed rebuild end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name generic entry end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name rebuild end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_else end_if end_block end_then end_if end_block end_then begin_else begin_block begin_comment a file doesnt exist rebuild end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name filepath end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name rebuild end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_break end_break end_block end_else end_if end_block end_for begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name rebuild end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name new wl jar file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name weblogic jar file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name new wl jar file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name new wl jar file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name new jar stream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name jar output stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name new wl jar file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new jar stream end_name begin_operator DOT end_operator begin_name set level end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment copy files from old weblogic jar end_comment begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name wl entries end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_name default buffer size end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name bytes read end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name jar entry end_name end_type begin_name je end_name begin_init begin_expr begin_operator LPAR end_operator begin_name jar entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name je end_name begin_operator DOT end_operator begin_name get compressed size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator begin_operator UNP end_operator begin_call begin_name begin_name je end_name begin_operator DOT end_operator begin_name get compressed size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_call begin_name begin_name je end_name begin_operator DOT end_operator begin_name get size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name new jar stream end_name begin_operator DOT end_operator begin_name set level end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name new jar stream end_name begin_operator DOT end_operator begin_name set level end_name end_name begin_argument_list begin_argument begin_expr begin_name jar compress level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_comment update with changed bean class end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name replace entries end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name je end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name je end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment use the entry from the generic jar end_comment begin_expr_stmt begin_expr begin_name je end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name jar entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name replace entries end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name je end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name is end_name begin_operator EQ end_operator begin_call begin_name begin_name generic jar end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list begin_argument begin_expr begin_name je end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment use fle from original weblogic jar end_comment begin_expr_stmt begin_expr begin_name is end_name begin_operator EQ end_operator begin_call begin_name begin_name wl jar end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list begin_argument begin_expr begin_name je end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name new jar stream end_name begin_operator DOT end_operator begin_name put next entry end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name jar entry end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name je end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name bytes read end_name begin_operator EQ end_operator begin_call begin_name begin_name is end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name new jar stream end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name bytes read end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name is end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name rebuild end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name cnfe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name cnfmsg end_name begin_init begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name cnfe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name cnfmsg end_name end_expr end_argument begin_argument begin_expr begin_name cnfe end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_comment need to close files and perhaps rename output end_comment begin_if begin_condition begin_expr begin_name generic jar end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name generic jar end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name close exception end_name end_decl end_param end_parameter_list begin_block begin_comment empty end_comment end_block end_catch end_try end_block end_then end_if begin_if begin_condition begin_expr begin_name wl jar end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name wl jar end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name close exception end_name end_decl end_param end_parameter_list begin_block begin_comment empty end_comment end_block end_catch end_try end_block end_then end_if begin_if begin_condition begin_expr begin_name new jar stream end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name new jar stream end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name close exception end_name end_decl end_param end_parameter_list begin_block begin_comment empty end_comment end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name rename end_name end_name begin_argument_list begin_argument begin_expr begin_name new wl jar file end_name end_expr end_argument begin_argument begin_expr begin_name weblogic jar file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name rename exception end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name rename exception end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name rebuild end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if begin_if begin_condition begin_expr begin_name generic loader end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name generic loader end_name begin_operator UNP end_operator begin_name ant class loader end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name ant class loader end_name end_type begin_name loader end_name begin_init begin_expr begin_operator LPAR end_operator begin_name ant class loader end_name begin_operator RPAR end_operator begin_name generic loader end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name cleanup end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try begin_return begin_expr begin_name rebuild end_name end_expr end_return end_block 
 begin_comment sets whether default exclusions should be used or not param use default excludes true on yes when default exclusions should be used false off no when they shouldn t be used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set defaultexcludes end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name use default excludes end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name used matching task end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set defaultexcludes end_name end_name begin_argument_list begin_argument begin_expr begin_name use default excludes end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test long lines end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the exactly attribute this is of the form major minor point for example 1 7 0 param exactly the version to check against end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set exactly end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name exactly end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name exactly end_name end_name begin_operator EQ end_operator begin_name exactly end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name dummy task package end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test classname and jar end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test vss checkout required attributes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test checkout exceptions end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment methods below all add specific selectors end_comment begin_comment add a select selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add selector end_name begin_parameter_list begin_param begin_decl begin_type begin_name select selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment on dos and net ware the evaluation of certain file specifications is context dependent these are filenames beginning with a single separator relative to current root directory and filenames with a drive specification and no intervening separator relative to current directory of the specified root param filename the filename to evaluate return true if the filename is relative to system context throws java lang null pointer exception if filename is null since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is context relative path end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name on dos end_name begin_operator UNP end_operator begin_name on net ware end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name filename end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name sep end_name begin_init begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name filename end_name begin_operator EQ end_operator begin_call begin_name begin_name filename end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name sep end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name sep end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name filename end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name len end_name begin_init begin_expr begin_call begin_name begin_name filename end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator LPAR end_operator begin_name c end_name begin_operator EQT end_operator begin_name sep end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name len end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name filename end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name sep end_name begin_operator RPAR end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is letter end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name len end_name begin_operator GT end_operator begin_operator UNP end_operator begin_call begin_name begin_name filename end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name len end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name filename end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name sep end_name begin_operator RPAR end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment get the index of a given constant value entry in the constant pool param constant value the constant value for which the index is required return the index at which the given value entry occurs in the constant pool or 1 if the value does not occur end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get constant entry end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name constant value end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name index end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name element end_name begin_init begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name element end_name begin_operator UNP end_operator begin_name constant cp info end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name constant cp info end_name end_type begin_name constant entry end_name begin_init begin_expr begin_operator LPAR end_operator begin_name constant cp info end_name begin_operator RPAR end_operator begin_name element end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name constant entry end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name constant value end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name index end_name begin_operator EQ end_operator begin_name i end_name end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_for begin_return begin_expr begin_name index end_name end_expr end_return end_block 
 begin_comment whether the task should suppress the method argument is not used in strictargs mode which can not be suppressed by the compiler itself the warning is logged as verbose message though param suppress method argument not used a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set suppress method argument not used end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name suppress method argument not used end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name suppress method argument not used end_name end_name begin_operator EQ end_operator begin_name suppress method argument not used end_name end_expr end_expr_stmt end_block 
 begin_comment gets the attribute value return the feature value end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name attribute value end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test assert raised end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_assert begin_expr begin_operator EQT end_operator end_expr end_assert begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name assertion error end_name end_type begin_name asserto end_name end_decl end_param end_parameter_list begin_block begin_comment if we got here all was well end_comment end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test rc up to date end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return an array of code package specification code objects if there are no such optional packages a zero length array is returned param manifest manifest to be parsed return the package specifications extensions in specified manifest throws parse exception if the attributes of the specifications cannot be parsed according to their expected formats end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name specification end_name begin_index end_index end_type begin_name get specifications end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name manifest end_name end_type begin_name manifest end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name parse exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name manifest end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name specification end_name begin_index begin_expr end_expr end_index end_name end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name array list end_name end_type begin_name results end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name map end_name end_type begin_name entries end_name begin_init begin_expr begin_call begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name get entries end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name iterator end_name end_type begin_name keys end_name begin_init begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name key set end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name keys end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name key end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name keys end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name attributes end_name end_type begin_name attributes end_name begin_init begin_expr begin_operator LPAR end_operator begin_name attributes end_name begin_operator RPAR end_operator begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name specification end_name end_type begin_name specification end_name begin_init begin_expr begin_call begin_name get specification end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument begin_argument begin_expr begin_name attributes end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name specification end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name specification end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name array list end_name end_type begin_name trimmed results end_name begin_init begin_expr begin_call begin_name remove duplicates end_name begin_argument_list begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator LPAR end_operator begin_name begin_name specification end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name trimmed results end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name specification end_name begin_index begin_expr begin_call begin_name begin_name trimmed results end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment add a system property param sysp a property to be set in the jvm end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add sysproperty end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name environment end_name begin_operator DOT end_operator begin_name variable end_name end_name end_type begin_name sysp end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sys properties end_name begin_operator DOT end_operator begin_name add variable end_name end_name begin_argument_list begin_argument begin_expr begin_name sysp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment delete any java output files that are empty this is to get around a little defect in jasper when it fails it leaves incomplete files around end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name delete empty java files end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name java files end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name java files end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while end_block end_then end_if end_block 
 begin_comment constructor for forked test configuration param filter trace param halt on error param halt on failure param error property param failure property end_comment begin_name forked test configuration end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name filter trace end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name halt on error end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name halt on failure end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name error property end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name failure property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name filter trace end_name end_name begin_operator EQ end_operator begin_name filter trace end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name halt on error end_name end_name begin_operator EQ end_operator begin_name halt on error end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name halt on failure end_name end_name begin_operator EQ end_operator begin_name halt on failure end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name error property end_name end_name begin_operator EQ end_operator begin_name error property end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name failure property end_name end_name begin_operator EQ end_operator begin_name failure property end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor end_comment begin_specifier end_specifier begin_name java cc end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name set vm end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get jre executable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the file or dir mode for this resource return integer representation of unix permission mask end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get mode end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name archive resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get mode end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name check entry end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name mode end_name end_expr end_return end_block 
 begin_comment get the pathname to be locked return string containing the pathname to be locked end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get pname end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m pname end_name end_expr end_return end_block 
 begin_comment convert a date object to a dos date time field p stolen from info zip s code fileio c code p param t number of milliseconds since the epoch return the date as a byte array since 1 26 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name to dos time end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name date end_name end_type begin_name time end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name date end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name year end_name begin_init begin_expr begin_call begin_name begin_name time end_name begin_operator DOT end_operator begin_name get year end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name year end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name dos time min end_name end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name month end_name begin_init begin_expr begin_call begin_name begin_name time end_name begin_operator DOT end_operator begin_name get month end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name value end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name year end_name begin_operator MINUS end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name month end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name time end_name begin_operator DOT end_operator begin_name get date end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name time end_name begin_operator DOT end_operator begin_name get hours end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name time end_name begin_operator DOT end_operator begin_name get minutes end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name time end_name begin_operator DOT end_operator begin_name get seconds end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name zip long end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment this is an override point the message that indicates that a build succeeded subclasses can change enhance the message return the classic build successful end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get build successful message end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment return a string that describes the command and arguments suitable for verbose output before a call to code runtime exec string code return a string that describes the command and arguments since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name describe command end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name describe command end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment determine if the weblogic ejb support classes need to be regenerated for a given deployment descriptor this process attempts to determine if the support classes need to be rebuilt it does this by examining only some of the support classes which are typically generated if the ejbc task is interrupted generating the support classes for a bean all of the support classes should be removed to force regeneration of the support classes param descriptor file the serialised deployment descriptor return true if the support classes need to be regenerated throws io exception if the descriptor file cannot be closed end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is regen required end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name descriptor file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment read in the descriptor under weblogic the descriptor is a weblogic end_comment begin_comment specific subclass which has references to the implementation classes end_comment begin_comment these classes must therefore be in the classpath when the deployment end_comment begin_comment descriptor is loaded from the ser file end_comment begin_decl_stmt begin_decl begin_type begin_name file input stream end_name end_type begin_name fis end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name fis end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name descriptor file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name object input stream end_name end_type begin_name ois end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name object input stream end_name begin_argument_list begin_argument begin_expr begin_name fis end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name deployment descriptor end_name end_type begin_name dd end_name begin_init begin_expr begin_operator LPAR end_operator begin_name deployment descriptor end_name begin_operator RPAR end_operator begin_call begin_name begin_name ois end_name begin_operator DOT end_operator begin_name read object end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fis end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name home interface path end_name begin_init begin_expr begin_call begin_name begin_name dd end_name begin_operator DOT end_operator begin_name get home interface class name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name remote interface path end_name begin_init begin_expr begin_call begin_name begin_name dd end_name begin_operator DOT end_operator begin_name get remote interface class name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name primary key class path end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name dd end_name begin_operator UNP end_operator begin_name entity descriptor end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name primary key class path end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name entity descriptor end_name begin_operator RPAR end_operator begin_name dd end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get primary key class name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name primary key class path end_name begin_operator EQ end_operator begin_call begin_name begin_name primary key class path end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name home interface source end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name source directory end_name end_expr end_argument begin_argument begin_expr begin_name home interface path end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name remote interface source end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name source directory end_name end_expr end_argument begin_argument begin_expr begin_name remote interface path end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name primary key class source end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name primary key class path end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name primary key class source end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name source directory end_name end_expr end_argument begin_argument begin_expr begin_name remote interface path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment are any of the above out of date end_comment begin_comment we find the implementation classes and see if they are older than any end_comment begin_comment of the above or the ser file itself end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name bean class base end_name begin_init begin_expr begin_call begin_name begin_name dd end_name begin_operator DOT end_operator begin_name get enterprise bean class name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name ejb implentation class end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name generated files directory end_name end_expr end_argument begin_argument begin_expr begin_name bean class base end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name home implementation class end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name generated files directory end_name end_expr end_argument begin_argument begin_expr begin_name bean class base end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name bean stub class end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name generated files directory end_name end_expr end_argument begin_argument begin_expr begin_name bean class base end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment if the implementation classes don t exist regenerate end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name ejb implentation class end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name home implementation class end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name bean stub class end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment is the ser file or any of the source files newer then the class files end_comment begin_comment firstly find the oldest of the two class files end_comment begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name class modification time end_name begin_init begin_expr begin_call begin_name begin_name ejb implentation class end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name home implementation class end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator begin_name class modification time end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name class modification time end_name begin_operator EQ end_operator begin_call begin_name begin_name home implementation class end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name bean stub class end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator begin_name class modification time end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name class modification time end_name begin_operator EQ end_operator begin_call begin_name begin_name bean stub class end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name descriptor file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_name class modification time end_name begin_operator UNP end_operator begin_call begin_name begin_name home interface source end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_name class modification time end_name begin_operator UNP end_operator begin_call begin_name begin_name remote interface source end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_name class modification time end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name primary key class source end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name primary key class source end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_name class modification time end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name descriptor load exception end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name descriptor file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment any problems just regenerate end_comment begin_return begin_expr end_expr end_return end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name fis end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fis end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test path end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the destination file param dest file the file to copy to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set tofile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dest file end_name end_name begin_operator EQ end_operator begin_name dest file end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 5 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the number of milliseconds associated with the attribute which can vary in some cases depending on the value of the action parameter param action send files or get files return the number of milliseconds associated with the attribute in the context of the supplied action end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name get milliseconds end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name action end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name granularity u end_name begin_init begin_expr begin_call begin_name get value end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to upper case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name granularity u end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name action end_name begin_operator EQT end_operator begin_name send files end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_name granularity minute end_name end_expr end_return end_block end_then end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name granularity u end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name granularity minute end_name end_expr end_return end_block end_then end_if end_else end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment specify how tab characters are to be handled param attr valid values ul li add convert sequences of spaces which span a tab stop to tabs li asis leave tab and space characters alone li remove convert tabs to spaces ul end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set tab end_name begin_parameter_list begin_param begin_decl begin_type begin_name add asis remove end_name end_type begin_name attr end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name tabs end_name begin_operator EQ end_operator begin_call begin_name begin_name attr end_name begin_operator DOT end_operator begin_name resolve end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a process that runs a command param project the project only used for logging purposes may be null param command the command to run param env the environment for the command param dir the working directory for the command param use vm use the built in exec command for jdk 1 3 if available return the process started throws io exception forwarded from the particular launcher used since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name process end_name end_type begin_name launch end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name command end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name env end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name use vm end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name dir end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name dir end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name command launcher end_name end_type begin_name launcher end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name use vm end_name begin_operator UNP end_operator begin_name vm launcher end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_name vm launcher end_name begin_operator DP end_operator begin_name shell launcher end_name begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name launcher end_name begin_operator DOT end_operator begin_name exec end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name command end_name end_expr end_argument begin_argument begin_expr begin_name env end_name end_expr end_argument begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name show end_name begin_parameter_list end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test resource collections end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert file exists end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment flag to set to preload file information from the server optional default true increases performance significantly for projects with many files and or folders param v value to assign to preload file information end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set preload file information end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name preload file information end_name end_name begin_operator EQ end_operator begin_name v end_name end_expr end_expr_stmt end_block 
 begin_comment see j unit result formatter set system error string end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set system error end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name err end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name system error end_name begin_operator EQ end_operator begin_name err end_name end_expr end_expr_stmt end_block 
 begin_comment converts the buffer to a string and sends it to code process line code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process buffer end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name process buffer end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment impossible since our process line doesn t throw an io exception end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment scans the directory looking for class files to be compiled the result is returned in the class variable compile list param base dir the base direction param files the list of files to scan param mapper the mapper of files to target files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name scan dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name base dir end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name files end_name end_decl end_param begin_param begin_decl begin_type begin_name file name mapper end_name end_type begin_name mapper end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name new files end_name begin_init begin_expr begin_name files end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name idl end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name iiop end_name begin_operator UNP end_operator begin_name iiop opts end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name iiop opts end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name source file scanner end_name end_type begin_name sfs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name source file scanner end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name new files end_name begin_operator EQ end_operator begin_call begin_name begin_name sfs end_name begin_operator DOT end_operator begin_name restrict end_name end_name begin_argument_list begin_argument begin_expr begin_name files end_name end_expr end_argument begin_argument begin_expr begin_name base dir end_name end_expr end_argument begin_argument begin_expr begin_name base dir end_name end_expr end_argument begin_argument begin_expr begin_name mapper end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name new files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_name begin_name new files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name compile list end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment print a readable version of the constant pool entry return the string representation of this constant pool entry end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator PLUS end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name index end_name begin_operator PLUS end_operator end_expr end_return end_block 
 begin_comment check the command line options end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check options end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is recurse end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag recurse end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment end of if end_comment begin_if begin_condition begin_expr begin_call begin_name is verbose end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag verbose end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment end of if end_comment begin_if begin_condition begin_expr begin_call begin_name get ccm project end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get ccm project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment configures this selector does this work only once per selector object p because some problems while configuring from custom selector the configuration is done in the following order ol li collect the configuration data li li wait for the first is selected call li li set the default values li li set values for name pattern update cache algorithm comparator li li set values for name pattern cache cachefile li ol p p this configuration algorithm is needed because you don t know the order of arriving config data e g if you first set the i cache cachefilename i and after that the i cache i itself the default value for cachefilename is used because setting the cache implies creating a new cache instance with its defaults p end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name configure end_name begin_parameter_list end_parameter_list begin_block begin_comment end_comment begin_comment the singleton end_comment begin_comment end_comment begin_if begin_condition begin_expr begin_name is configured end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name is configured end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment end_comment begin_comment set default values end_comment begin_comment end_comment begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name filename end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name cachefile end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name p end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment normal use inside ant end_comment begin_expr_stmt begin_expr begin_name cachefile end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment set self as a build listener to delay cachefile saves end_comment begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add build listener end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment no reference to project e g during normal j unit tests end_comment begin_expr_stmt begin_expr begin_name cachefile end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set delay update end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name cache end_name end_type begin_name default cache end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name propertiesfile cache end_name begin_argument_list begin_argument begin_expr begin_name cachefile end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name algorithm end_name end_type begin_name default algorithm end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name digest algorithm end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name comparator end_name end_type begin_name default comparator end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name equal comparator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name update end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name select directories end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment end_comment begin_comment set the main attributes pattern end_comment begin_comment end_comment begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name it config end_name begin_init begin_expr begin_call begin_name begin_name config parameter end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name it config end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name parameter end_name end_type begin_name par end_name begin_init begin_expr begin_operator LPAR end_operator begin_name parameter end_name begin_operator RPAR end_operator begin_call begin_name begin_name it config end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name par end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_comment this is a parameter for later use end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name special parameter end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name par end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name use parameter end_name begin_argument_list begin_argument begin_expr begin_name par end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for begin_expr_stmt begin_expr begin_name config parameter end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment specify the algorithm classname end_comment begin_if begin_condition begin_expr begin_name algo name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment use algorithm defined via name end_comment begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name algo name end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name algorithm end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name hashvalue algorithm end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name algo name end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name algorithm end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name digest algorithm end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name algo name end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name algorithm end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name checksum algorithm end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_else end_if end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name algorithm class end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment use algorithm specified by classname end_comment begin_expr_stmt begin_expr begin_name algorithm end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name algorithm end_name begin_operator RPAR end_operator begin_call begin_name load class end_name begin_argument_list begin_argument begin_expr begin_name algorithm class end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name algorithm end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment nothing specified use default end_comment begin_expr_stmt begin_expr begin_name algorithm end_name begin_operator EQ end_operator begin_name default algorithm end_name end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if begin_comment specify the cache classname end_comment begin_if begin_condition begin_expr begin_name cache name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment use cache defined via name end_comment begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cache name end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name cache end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name propertiesfile cache end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name cache class end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment use cache specified by classname end_comment begin_expr_stmt begin_expr begin_name cache end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name cache end_name begin_operator RPAR end_operator begin_call begin_name load class end_name begin_argument_list begin_argument begin_expr begin_name cache class end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name cache end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment nothing specified use default end_comment begin_expr_stmt begin_expr begin_name cache end_name begin_operator EQ end_operator begin_name default cache end_name end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if begin_comment specify the comparator classname end_comment begin_if begin_condition begin_expr begin_name comp name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment use algorithm defined via name end_comment begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name comp name end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comparator end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name equal comparator end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name comp name end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment todo there is a problem with the constructor for the rbc end_comment begin_comment you have to provide the rules in the constructors no setters end_comment begin_comment available end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw begin_comment have to think about lazy initialization here jhm end_comment begin_comment comparator new java text rule based collator end_comment end_block end_then end_if end_else end_if end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name comparator class end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment use algorithm specified by classname end_comment begin_expr_stmt begin_expr begin_name comparator end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name comparator end_name begin_operator RPAR end_operator begin_call begin_name load class end_name begin_argument_list begin_argument begin_expr begin_name comparator class end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name comparator end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment nothing specified use default end_comment begin_expr_stmt begin_expr begin_name comparator end_name begin_operator EQ end_operator begin_name default comparator end_name end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if begin_comment end_comment begin_comment set the special attributes pattern end_comment begin_comment end_comment begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name it special end_name begin_init begin_expr begin_call begin_name begin_name special parameter end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name it special end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name parameter end_name end_type begin_name par end_name begin_init begin_expr begin_operator LPAR end_operator begin_name parameter end_name begin_operator RPAR end_operator begin_call begin_name begin_name it special end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name use parameter end_name begin_argument_list begin_argument begin_expr begin_name par end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_name special parameter end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test international hebrew end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is at least java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 4 end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment sets the name param name the name to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no name end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment handles the start of an element within a target task containers will always use another task handler and all other tasks will always use a nested element handler param name the name of the element being started will not be code null code param attrs attributes of the element being started will not be code null code exception sax parse exception if an error occurs when initialising the appropriate child handler end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name attribute list end_name end_type begin_name attrs end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax parse exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name task end_name begin_operator UNP end_operator begin_name task container end_name end_expr end_condition begin_then begin_block begin_comment task can contain other tasks no other nested elements possible end_comment begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name task handler end_name begin_argument_list begin_argument begin_expr begin_name helper impl end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name task container end_name begin_operator RPAR end_operator begin_name task end_name end_expr end_argument begin_argument begin_expr begin_name wrapper end_name end_expr end_argument begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name init end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name attrs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name nested element handler end_name begin_argument_list begin_argument begin_expr begin_name helper impl end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name task end_name end_expr end_argument begin_argument begin_expr begin_name wrapper end_name end_expr end_argument begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name init end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name attrs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment adds any classes the user specifies using i support i nested elements to the code ejb files code hashtable param ejb files hashtable of ejb classes and other files that will be added to the completed jar file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add support classes end_name begin_parameter_list begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name ejb files end_name end_decl end_param end_parameter_list begin_block begin_comment add in support classes if any end_comment begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name project end_name begin_init begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name config end_name begin_operator DOT end_operator begin_name support file sets end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name support file set end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name support base dir end_name begin_init begin_expr begin_call begin_name begin_name support file set end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name support scanner end_name begin_init begin_expr begin_call begin_name begin_name support file set end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name support scanner end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name support files end_name begin_init begin_expr begin_call begin_name begin_name support scanner end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name support files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name j end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ejb files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name support files end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name support base dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name support files end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_for end_block 
 begin_comment the resource to pack required param src resource to expand end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name src end_name begin_operator UNP end_operator begin_name file resource end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name supports non file resources end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name src end_name end_name begin_operator EQ end_operator begin_name src end_name end_expr end_expr_stmt end_block 
 begin_comment add a resource collection to the container param c the resource collection to add throws build exception on error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name rc end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name one nested end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name rc end_name begin_operator EQ end_operator begin_name c end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set checked end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment accommodate windows bug encountered in both sun and ibm jd ks others possible if the delete does not work call system gc wait a little and try again end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name delete end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name gc end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name sleep end_name end_name begin_argument_list begin_argument begin_expr begin_name delete retry sleep millis end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_comment ignore exception end_comment end_block end_catch end_try begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name delete on exit end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name level end_name begin_init begin_expr begin_name quiet end_name begin_operator QM end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name begin_operator DP end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name f end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name delete on exit end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment set whether build exceptions should be passed back to the core param fail on error the new fail on error value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fail on error end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name fail on error end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name fail on error end_name end_name begin_operator EQ end_operator begin_name fail on error end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test output end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name interrupted exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name t end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_class begin_super begin_name runnable end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_function end_block end_class end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the number of nodes in the list return the length of the list end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get length end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name size end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process descriptor end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name descriptor name end_name end_decl end_param begin_param begin_decl begin_type begin_name sax parser end_name end_type begin_name sax parser end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name descriptor name end_name end_name begin_operator EQ end_operator begin_name descriptor name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ias descriptor name end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name descriptor name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get ias descriptor name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name process descriptor end_name end_name begin_argument_list begin_argument begin_expr begin_name descriptor name end_name end_expr end_argument begin_argument begin_expr begin_name sax parser end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test back trace off end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_catch end_try end_block 
 begin_comment adds a file set tranfer to remote host note either add file set or set file are required but not both param set file set to send to remote host end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add fileset end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name set end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name file sets end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name file sets end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name linked list end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name file sets end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name at least end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name exactly end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name at least end_name begin_operator UNP end_operator begin_operator EQT end_operator begin_name exactly end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_try begin_block begin_if begin_condition begin_expr begin_name at least end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name dewey decimal end_name begin_argument_list begin_argument begin_expr begin_name at least end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name dewey decimal end_name begin_argument_list begin_argument begin_expr begin_name exactly end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name number format exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment the partition device to check return end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get partition end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name partition end_name end_expr end_return end_block 
 begin_comment retrieves the extra data for the local file data return the extra data for local file since 1 1 end_comment begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name get local file data extra end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name extra end_name begin_init begin_expr begin_call begin_name get extra end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name extra end_name begin_operator UNP end_operator begin_operator QM end_operator begin_name extra end_name begin_operator DP end_operator begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr end_expr end_index end_name end_expr end_return end_block 
 begin_comment whether or not the message should be echoed to the log defaults to code true code param b a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set echo end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name echo string end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name dummy task without execute end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment wrapper over regexp matcher factory create instance that ensures that we are dealing with a regexp implementation param classname the name of the class to use return the instance throws build exception if there is a problem since 1 3 see regexp matcher factory create instance string end_comment begin_type begin_specifier end_specifier begin_name regexp end_name end_type begin_name create regexp instance end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name regexp matcher end_name end_type begin_name m end_name begin_init begin_expr begin_call begin_name create instance end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name m end_name begin_operator UNP end_operator begin_name regexp end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name regexp end_name begin_operator RPAR end_operator begin_name m end_name end_expr end_return end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name classname end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block 
 begin_comment return a tar file set that has the same properties as this one return the cloned tar file set end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name clone end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name tar file set end_name begin_operator RPAR end_operator begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name clone end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_comment set whether error output of exec is logged this is only useful when output is being redirected and error output is desired in the ant log param log error get in the ant log the messages coming from stderr in the case that fork true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set log error end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name log error end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set log error end_name end_name begin_argument_list begin_argument begin_expr begin_name log error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name incompatible with spawn end_name begin_operator UNP end_operator begin_name log error end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name supports symlinks end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment this fork s end_comment begin_comment the working directory of the process param d the working directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name d end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name workingdir end_name end_name begin_operator EQ end_operator begin_name d end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test attribute setters end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name assertion failed error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name assertion failed error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name assertion failed error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_name project basedir end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name project basedir end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name assertion failed error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name assertion failed error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name assertion failed error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name assertion failed error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name class not found exception end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name assertion failed error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name assertion failed error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name assertion failed error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name assertion failed error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name assertion failed error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name assertion failed error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment path of references to include wildcards should work param path another path to append end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set reference files end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_comment demand create pathlist end_comment begin_if begin_condition begin_expr begin_name reference files end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name reference files end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name reference files end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment implements base class abstract function to perform the checkout operation on the files in each folder of the tree param starteam folder the star team folder from which files to be checked out param target folder the local mapping of root starteam folder exception build exception if any error occurs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name visit end_name begin_parameter_list begin_param begin_decl begin_type begin_name folder end_name end_type begin_name starteam folder end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name target folder end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get root local folder end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name starteam folder end_name begin_operator DOT end_operator begin_name set alternate path fragment end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name target folder end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name target folder end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name is using revision label end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name create dirs end_name end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name target folder end_name begin_operator DOT end_operator begin_name mkdirs end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name target folder end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name target folder end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_then end_if end_block end_then end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name folder end_name begin_index end_index end_type begin_name folders list end_name begin_init begin_expr begin_call begin_name begin_name starteam folder end_name begin_operator DOT end_operator begin_name get sub folders end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name item end_name begin_index end_index end_type begin_name files list end_name begin_init begin_expr begin_call begin_name begin_name starteam folder end_name begin_operator DOT end_operator begin_name get items end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get type names end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name is using revision label end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment prune away any files not belonging to the revision label end_comment begin_comment this is one ugly api from starteam sdk end_comment begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name label items end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list begin_argument begin_expr begin_name begin_name files list end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name s end_name begin_init begin_expr begin_name begin_name files list end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name begin_index end_index end_type begin_name ids end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name int end_name begin_index begin_expr begin_name s end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name s end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name ids end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name files list end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get item id end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name label items end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr begin_name begin_name ids end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name int end_name begin_index end_index end_type begin_name found ids end_name begin_init begin_expr begin_call begin_name get label in use end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get labeled item i ds end_name begin_argument_list begin_argument begin_expr begin_name ids end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_name begin_name found ids end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name item end_name begin_index end_index end_type begin_name labeled files end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name item end_name begin_index begin_expr begin_name s end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name s end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name integer end_name end_type begin_name id end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr begin_name begin_name found ids end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name labeled files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name files list end_name begin_index begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name integer end_name begin_operator RPAR end_operator begin_call begin_name begin_name label items end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name id end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name int value end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_name files list end_name begin_operator EQ end_operator begin_name labeled files end_name end_expr end_expr_stmt end_block end_then end_if begin_comment note it s important to scan the items before we make the end_comment begin_comment unmatched file map because that creates a bunch of new end_comment begin_comment folders and files unattached to repository and we end_comment begin_comment don t want to include those in our traversal end_comment begin_decl_stmt begin_decl begin_type begin_name unmatched file map end_name end_type begin_name ufm end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name checkout map end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name init end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name target folder end_name begin_operator DOT end_operator begin_name get absolute file end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name starteam folder end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name folders list end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name folder end_name end_type begin_name st folder end_name begin_init begin_expr begin_name begin_name folders list end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name subfolder end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name begin_argument_list begin_argument begin_expr begin_name target folder end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name st folder end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ufm end_name begin_operator DOT end_operator begin_name remove controlled item end_name end_name begin_argument_list begin_argument begin_expr begin_name subfolder end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name is recursive end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name visit end_name begin_argument_list begin_argument begin_expr begin_name st folder end_name end_expr end_argument begin_argument begin_expr begin_name subfolder end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files list end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name com end_name begin_operator DOT end_operator begin_name starbase end_name begin_operator DOT end_operator begin_name starteam end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name st file end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name com end_name begin_operator DOT end_operator begin_name starbase end_name begin_operator DOT end_operator begin_name starteam end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator RPAR end_operator begin_name begin_name files list end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name process file end_name begin_argument_list begin_argument begin_expr begin_name st file end_name end_expr end_argument begin_argument begin_expr begin_name target folder end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ufm end_name begin_operator DOT end_operator begin_name remove controlled item end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name begin_argument_list begin_argument begin_expr begin_name target folder end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name st file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name delete uncontrolled end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ufm end_name begin_operator DOT end_operator begin_name process uncontrolled items end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment a property to be set with the value of the counter param property the name of a property to set with the value of the counter end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name property end_name end_name begin_operator EQ end_operator begin_name property end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name should set property end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name build exception end_name end_type begin_name exactly one end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name attrs end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name alt end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name begin_name attrs end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name attrs end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name begin_name attrs end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name alt end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name alt end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment sets case sensitivity of the file system param case sensitive code boolean code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set case sensitive end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name case sensitive end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name case sensitive end_name end_name begin_operator EQ end_operator begin_name case sensitive end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name directory scanner end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment adds text to the element using the wrapper param buf a character array of the text within the element will not be code null code param start the start element in the array param count the number of characters to read from the array end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name characters end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name char end_name begin_index end_index end_name end_type begin_name buf end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name start end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name count end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name child wrapper end_name begin_operator DOT end_operator begin_name add text end_name end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr begin_name start end_name end_expr end_argument begin_argument begin_expr begin_name count end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment cleans up the mirror testbed by calling a target in the code src etc testcases types selectors xml code file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name cleanup mirror end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name tbed end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tbed end_name begin_operator DOT end_operator begin_name delete mirror end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name tbed end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment set schema attributes in a jaxp 1 2 engine see a href http java sun com xml jaxp change requests 11 html jaxp 1 2 approved changes a return true on success false on failure end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name enable jaxp 12 schema validation end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_comment enable xsd end_comment begin_expr_stmt begin_expr begin_call begin_name set property end_name begin_argument_list begin_argument begin_expr begin_name begin_name xml constants end_name begin_operator DOT end_operator begin_name feature jaxp 12 schema language end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name xml constants end_name begin_operator DOT end_operator begin_name uri xsd end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment set the schema source for the doc end_comment begin_expr_stmt begin_expr begin_call begin_name set no namespace schema property end_name begin_argument_list begin_argument begin_expr begin_name begin_name xml constants end_name begin_operator DOT end_operator begin_name feature jaxp 12 schema source end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_catch end_try begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test copy and remove end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test copy and remove end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add an argument tuple to the argument list if the value aint null param cmd the command line param argument the argument param value the parameter end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add arg end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline java end_name end_type begin_name cmd end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name argument end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name value end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name argument end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment indicates whether the introspected class is a dynamic one supporting arbitrary nested elements and or attributes return code true code if the introspected class is dynamic code false code otherwise since ant 1 6 3 see dynamic element see dynamic element ns end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is dynamic end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name dynamic element end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name bean end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name dynamic element ns end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name bean end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name src file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name src dir end_name end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name last modified end_name begin_init begin_expr begin_call begin_name begin_name src file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dest d end_name begin_init begin_expr begin_name dest dir end_name begin_operator EQT end_operator begin_operator QM end_operator begin_name src dir end_name begin_operator DP end_operator begin_name dest dir end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name fcv end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name filter chain end_name end_type begin_name fc end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name filter chain end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fc end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name filter end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name fcv end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fcv end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name fc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name tmp file end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name create temp file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tmp file end_name begin_operator DOT end_operator begin_name delete on exit end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name copy file end_name end_name begin_argument_list begin_argument begin_expr begin_name src file end_name end_expr end_argument begin_argument begin_expr begin_name tmp file end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name fcv end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name encoding end_name end_expr end_argument begin_argument begin_expr begin_name output encoding end_name begin_operator EQT end_operator begin_operator QM end_operator begin_name encoding end_name begin_operator DP end_operator begin_name output encoding end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dest file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dest d end_name end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name dest is wrong end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name dest file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment compare the destination with the temp file end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name dest is wrong end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_name dest file end_name end_expr end_argument begin_argument begin_expr begin_name tmp file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name dest file end_name begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name dest is wrong end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name dest is wrong end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name rename end_name end_name begin_argument_list begin_argument begin_expr begin_name tmp file end_name end_expr end_argument begin_argument begin_expr begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name preserve last modified end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name set file last modified end_name end_name begin_argument_list begin_argument begin_expr begin_name dest file end_name end_expr end_argument begin_argument begin_expr begin_name last modified end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name tmp file end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment verifies that the user selections are valid param descriptor file name string representing the file name of an ejb descriptor to be processed param sax parser sax parser which may be used to parse the xml descriptor throws build exception if the user selections are invalid end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check configuration end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name descriptor file name end_name end_decl end_param begin_param begin_decl begin_type begin_name sax parser end_name end_type begin_name sax parser end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name start of name end_name begin_init begin_expr begin_call begin_name begin_name descriptor file name end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name std xml end_name begin_init begin_expr begin_call begin_name begin_name descriptor file name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name start of name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name std xml end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name ejb dd end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name get config end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name base jar name end_name begin_operator EQT end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name ias descriptor end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get config end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name descriptor dir end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get ias descriptor name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name ias descriptor end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name ias descriptor end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_name ias descriptor end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name iashome end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name iashome end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name iashome end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get file end_name begin_parameter_list begin_param begin_decl begin_type begin_name ftp client end_name end_type begin_name ftp end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name dir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name simulated failures left end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name simulated failures left end_name end_name begin_operator MMINUS end_operator end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get file end_name end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name invalid suite test case end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the comment command param cmd containing the command line string with or without the comment flag and string appended end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get comment command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes this breaks clearcase end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag comment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment query warn level return current value end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get warn level end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name warn level end_name end_expr end_return end_block 
 begin_comment fulfill the resource collection contract return an iterator of resources end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name iterator end_name end_type begin_name iterator end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name ensure directory scanner setup end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name fct end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files count end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name dct end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included dirs count end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name fct end_name begin_operator PLUS end_operator begin_name dct end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name empty iterator end_name end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file resource iterator end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file resource iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name fct end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add files end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name dct end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add files end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included directories end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment get the type signature of this entry return the type signature of this entry end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get type end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name type end_name end_expr end_return end_block 
 begin_comment executes the given classname with the given arguments in a separate vm param command string of command line arguments end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name spawn end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name command end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name execute end_name end_type begin_name exe end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name execute end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name setup executable end_name begin_argument_list begin_argument begin_expr begin_name exe end_name end_expr end_argument begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name spawn end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment ignore end_comment begin_comment close a stream without throwing any exception if something went wrong do not attempt to close it if the argument is null param device stream can be null end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name close end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name device end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name device end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name device end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioex end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_then end_if end_block 
 begin_comment sets locale specific variant of resource bundle optional param bundle variant locale variant of resource bundle end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set bundle variant end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name bundle variant end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bundle variant end_name end_name begin_operator EQ end_operator begin_name bundle variant end_name end_expr end_expr_stmt end_block 
 begin_comment return the full pathname of the single entry z in this fileset return the full pathname deprecated since 1 7 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get fullpath end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name fullpath end_name end_expr end_return end_block 
 begin_comment hashcode depending on the index return the index as the hashcode end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name hash code end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get index end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment add an lt equals gt condition param e an equals condition since 1 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name equals end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name conditions end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment p this is called from the uri resolver to set an entity resolver on the sax parser to be used for new xml documents that are encountered as a result of the document function xsl import or xsl include this is done because the xslt processor calls out to the sax parser factory itself to create a new sax parser to parse the new document the new parser does not automatically inherit the entity resolver of the original although arguably it should see below p tt if an application wants to set the error handler or entity resolver for an xml reader used during a transformation it should use a uri resolver to return the sax source which provides with get xml reader a reference to the xml reader tt p quoted from page 118 of the java api for xml processing 1 1 specification p end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set entity resolver end_name begin_parameter_list begin_param begin_decl begin_type begin_name sax source end_name end_type begin_name source end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name transformer exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name xml reader end_name end_type begin_name reader end_name begin_init begin_expr begin_call begin_name begin_name source end_name begin_operator DOT end_operator begin_name get xml reader end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name reader end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name sax parser factory end_name end_type begin_name sp factory end_name begin_init begin_expr begin_call begin_name begin_name sax parser factory end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sp factory end_name begin_operator DOT end_operator begin_name set namespace aware end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name reader end_name begin_operator EQ end_operator begin_call begin_name begin_name sp factory end_name begin_operator DOT end_operator begin_name new sax parser end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get xml reader end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name parser configuration exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name transformer exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name sax exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name transformer exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name set entity resolver end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name source end_name begin_operator DOT end_operator begin_name set xml reader end_name end_name begin_argument_list begin_argument begin_expr begin_name reader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the title attribute using a nested html value param text a code html code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add title end_name begin_parameter_list begin_param begin_decl begin_type begin_name html end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name title end_name begin_operator EQ end_operator begin_name text end_name end_expr end_expr_stmt end_block 
 begin_comment if true print the full path of files on errors param enabled the new full paths value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set full paths end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name enabled end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name fullpaths end_name begin_operator EQ end_operator begin_name enabled end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test echo prefix various end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name props end_name begin_init begin_expr begin_call begin_name load prop file end_name begin_argument_list begin_argument begin_expr begin_name prefix outfile end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the suffix for the rmic stub classes return the stub suffix end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get stub class suffix end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name wl rmi stub suffix end_name end_expr end_return end_block 
 begin_comment if true overwrite hijacked files param ow the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set overwrite end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name ow end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m overwrite end_name begin_operator EQ end_operator begin_name ow end_name end_expr end_expr_stmt end_block 
 begin_comment writes a single byte to zip entry p delegates to the three arg method p param b the byte to write since 1 14 throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name buff end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name buff end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name byte end_name begin_argument_list begin_argument begin_expr begin_name b end_name begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write end_name begin_argument_list begin_argument begin_expr begin_name buff end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment fired when a task starts building this pushes a timed element for the task onto the stack of elements for the current thread remembering the current time and the name of the task param event an event with any relevant extra information will not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name timed element end_name end_type begin_name task element end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name timed element end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name task element end_name begin_operator DOT end_operator begin_name start time end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name task element end_name begin_operator DOT end_operator begin_name element end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create element end_name end_name begin_argument_list begin_argument begin_expr begin_name task tag end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name task end_name end_type begin_name task end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get task end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get task end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name task element end_name begin_operator DOT end_operator begin_name element end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name name attr end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name task element end_name begin_operator DOT end_operator begin_name element end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name location attr end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get task end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get location end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tasks end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument begin_argument begin_expr begin_name task element end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get stack end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name push end_name begin_argument_list begin_argument begin_expr begin_name task element end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the assignable class for this definition not supported param adapt to class the assignable class end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set adapt to class end_name begin_parameter_list begin_param begin_decl begin_type begin_name class end_name end_type begin_name adapt to class end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the resource to wrap using a single element collection param a the resource to wrap as a single element resource collection end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name a end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check children allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name resource end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name resource end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name next end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment see org apache tools ant build listener build started build event end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set decompression algorithm to use default none allowable values are ul li none no compression li gzip gzip compression li bzip 2 bzip 2 compression ul param method compression method end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set compression end_name begin_parameter_list begin_param begin_decl begin_type begin_name untar compression method end_name end_type begin_name method end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name compression end_name begin_operator EQ end_operator begin_name method end_name end_expr end_expr_stmt end_block 
 begin_comment sets whether or not symbolic links should be followed param follow symlinks whether or not symbolic links should be followed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set follow symlinks end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name follow symlinks end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name used matching task end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set follow symlinks end_name end_name begin_argument_list begin_argument begin_expr begin_name follow symlinks end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name input stream end_name end_type begin_name get input stream end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name data end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name out end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name out end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name encoded out end_name begin_init begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name charset end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name data end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name data end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name begin_name data end_name begin_operator DOT end_operator begin_name concat end_name end_name begin_argument_list begin_argument begin_expr begin_name encoded out end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_name encoded out end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_operator UNP end_operator begin_call begin_name byte array input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name data end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name charset end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test standalone cr end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name test standalone cr end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name assertion failed error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try end_block 
 begin_comment sets the class to run code rmic code against optional param classname the name of the class for rmic to create code for end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classname end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classname end_name end_name begin_operator EQ end_operator begin_name classname end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test line with cariagereturn array end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name write byte array end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write as array end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stream end_name begin_operator DOT end_operator begin_name assert invoked end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the basedir for this file resource param b the basedir as file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set base dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name base dir end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment set the sourcepath to be used for this compilation param sourcepath the source path end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set sourcepath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name sourcepath end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name compile sourcepath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name compile sourcepath end_name begin_operator EQ end_operator begin_name sourcepath end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name compile sourcepath end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name sourcepath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment set parallel this is not allowed and it always throws a build exception param parallel ignored ant attribute ignore true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set parallel end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name parallel end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task type end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment executes the task return false always end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name get rmic end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name log message end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block 
 begin_comment test sos label required attributes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test label exceptions end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the configured object param real thing the configured object since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set real thing end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name real thing end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name real thing end_name end_name begin_operator EQ end_operator begin_name real thing end_name end_expr end_expr_stmt end_block 
 begin_comment builds the compilation classpath end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get compile classpath end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name classpath end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment add dest dir to classpath so that previously compiled and end_comment begin_comment untouched classes are on classpath end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name dest dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment add our classpath to the mix end_comment begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add existing to classpath end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment add the system classpath end_comment begin_comment add existing to classpath classpath system get property java class path end_comment begin_return begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment if true print one line statistics for each test or with out and err to also show standard output and error can take the values on off and with out and err param value tt true tt to print a summary tt with out and err tt to include the test apos s output as well tt false tt otherwise see summary j unit result formatter since ant 1 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set printsummary end_name begin_parameter_list begin_param begin_decl begin_type begin_name summary attribute end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name summary value end_name begin_operator EQ end_operator begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name summary end_name begin_operator EQ end_operator begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name as boolean end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment when running jj tree from an ant taskdesk the output directory must always be set but when output directory is set output file is handled as if relative of this output directory thus when the output file is absolute or contains a drive letter we have a problem param dest file param output dir return throws build exception end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name validate output file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name dest file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name output dir end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name dest file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name output dir end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name dest file end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name dest file end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name relative output file end_name begin_init begin_expr begin_call begin_name make output file relative end_name begin_argument_list begin_argument begin_expr begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name set outputfile end_name begin_argument_list begin_argument begin_expr begin_name relative output file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name relative output file end_name end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name root end_name begin_init begin_expr begin_call begin_name get root end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name root end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name dest file end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name root end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name root end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_name dest file end_name end_expr end_return end_block 
 begin_comment indicate whether all classes and members are to be included in the scope processed param b true if scope is to be private level end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set private end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add arg if end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the additional implementation specific command line arguments return array of command line arguments guaranteed to be non null since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get current compiler args end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get compiler end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name facade end_name begin_operator DOT end_operator begin_name get args end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment adds a element definition to the path param location the location of the element to add must not be code null code nor empty throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set location end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name location end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name create path element end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set location end_name begin_argument_list begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for dummy instances see base filter reader base filter reader end_comment begin_specifier end_specifier begin_name strip java comments end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the alias to sign under required param alias the alias to sign under end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set alias end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name alias end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name alias end_name end_name begin_operator EQ end_operator begin_name alias end_name end_expr end_expr_stmt end_block 
 begin_comment add an argument oneple to the argument list if the value aint null param cmd the command line param argument the argument end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add arg end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline java end_name end_type begin_name cmd end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name argument end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name argument end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name argument end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name argument end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment returns the topmost interface that extends remote for a given class if one exists param test class the class to be tested return the topmost interface that extends remote or null if there is none end_comment begin_type begin_specifier end_specifier begin_name class end_name end_type begin_name get remote interface end_name begin_parameter_list begin_param begin_decl begin_type begin_name class end_name end_type begin_name test class end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name remote end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name begin_index end_index end_type begin_name interfaces end_name begin_init begin_expr begin_call begin_name begin_name test class end_name begin_operator DOT end_operator begin_name get interfaces end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name interfaces end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name interfaces end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name remote end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name interfaces end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name interfaces end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_return end_block end_then end_if end_block end_for end_block end_then end_if end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment milliseconds to add to the sleep time param milliseconds the new milliseconds value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set milliseconds end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name milliseconds end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name milliseconds end_name end_name begin_operator EQ end_operator begin_name milliseconds end_name end_expr end_expr_stmt end_block 
 begin_comment sets the personal display name of the address param name the display name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment set the size to compare against param l the long resource size end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set size end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name l end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name size end_name begin_operator EQ end_operator begin_name l end_name end_expr end_expr_stmt end_block 
 begin_comment p add a new testsuite node to the document the main difference is that it split the previous fully qualified name into a package and a name p for example tt org apache whatever tt will be split into tt org apache tt and tt whatever tt param root the root element to which the tt testsuite tt node should be appended param testsuite the element to append to the given root it will slightly modify the original node to change the name attribute and add a package one end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add test suite end_name begin_parameter_list begin_param begin_decl begin_type begin_name element end_name end_type begin_name root end_name end_decl end_param begin_param begin_decl begin_type begin_name element end_name end_type begin_name testsuite end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name fullclassname end_name begin_init begin_expr begin_call begin_name begin_name testsuite end_name begin_operator DOT end_operator begin_name get attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name attr name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pos end_name begin_init begin_expr begin_call begin_name begin_name fullclassname end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment a missing might imply no package at all don t get fooled end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name pkg name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name pos end_name begin_operator EQT end_operator begin_operator MINUS end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_call begin_name begin_name fullclassname end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name pos end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name classname end_name begin_init begin_expr begin_operator LPAR end_operator begin_name pos end_name begin_operator EQT end_operator begin_operator MINUS end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_name fullclassname end_name begin_operator DP end_operator begin_call begin_name begin_name fullclassname end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name pos end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name copy end_name begin_init begin_expr begin_operator LPAR end_operator begin_name element end_name begin_operator RPAR end_operator begin_call begin_name begin_name dom util end_name begin_operator DOT end_operator begin_name import node end_name end_name begin_argument_list begin_argument begin_expr begin_name root end_name end_expr end_argument begin_argument begin_expr begin_name testsuite end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment modify the name attribute and set the package end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name copy end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name attr name end_name end_expr end_argument begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name copy end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name attr package end_name end_expr end_argument begin_argument begin_expr begin_name pkg name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name copy end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name attr id end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name generated id end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for scp to message param verbose if true do verbose logging param session the scp session to use param a remote path the remote path since ant 1 6 2 end_comment begin_specifier end_specifier begin_name scp to message by sftp end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name verbose end_name end_decl end_param begin_param begin_decl begin_type begin_name session end_name end_type begin_name session end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name a remote path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name verbose end_name end_expr end_argument begin_argument begin_expr begin_name session end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name remote path end_name end_name begin_operator EQ end_operator begin_name a remote path end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test property schema for invalid xml end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the atleast attribute this is of the form major minor point for example 1 7 0 param at least the version to check against end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set at least end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name at least end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name at least end_name end_name begin_operator EQ end_operator begin_name at least end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirector 14 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test tar file set end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name tools end_name begin_operator DOT end_operator begin_name zip end_name begin_operator DOT end_operator begin_name zip file end_name end_name end_type begin_name zf end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name zf end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name tools end_name begin_operator DOT end_operator begin_name zip end_name begin_operator DOT end_operator begin_name zip file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name tools end_name begin_operator DOT end_operator begin_name zip end_name begin_operator DOT end_operator begin_name zip entry end_name end_name end_type begin_name ze end_name begin_init begin_expr begin_call begin_name begin_name zf end_name begin_operator DOT end_operator begin_name get entry end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name unix stat end_name begin_operator DOT end_operator begin_name file flag end_name end_name begin_operator UNP end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get unix mode end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name zf end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name zf end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment the whole testsuite ended param suite the test suite end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end test suite end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name suite end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name suite end_name begin_operator DOT end_operator begin_name run count end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name suite end_name begin_operator DOT end_operator begin_name failure count end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name suite end_name begin_operator DOT end_operator begin_name error count end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name number format end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name suite end_name begin_operator DOT end_operator begin_name get run time end_name end_name begin_argument_list end_argument_list end_call begin_operator SLASH end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment append the err and output streams to the log end_comment begin_if begin_condition begin_expr begin_name system output end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name system output end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name system output end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name system error end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name system error end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name system error end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name output end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result writer end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name out end_name begin_operator UNP end_operator begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name end_name begin_operator UNP end_operator begin_name out end_name begin_operator UNP end_operator begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block end_then end_if end_block 
 begin_comment handle operations for type code date code param old value the current value read from the property file or code null code if the code key code was not contained in the property file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute date end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name old value end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name calendar end_name end_type begin_name current value end_name begin_init begin_expr begin_call begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name pattern end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name pattern end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name date format end_name end_type begin_name fmt end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name simple date format end_name begin_argument_list begin_argument begin_expr begin_name pattern end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name current string value end_name begin_init begin_expr begin_call begin_name get current value end_name begin_argument_list begin_argument begin_expr begin_name old value end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name current string value end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name current string value end_name begin_operator EQ end_operator begin_name default date value end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name current string value end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name current value end_name begin_operator DOT end_operator begin_name set time end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name date end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name current value end_name begin_operator DOT end_operator begin_name set time end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name fmt end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_name current string value end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name parse exception end_name end_type begin_name pe end_name end_decl end_param end_parameter_list begin_block begin_comment swallow end_comment end_block end_catch end_try end_block end_else end_if begin_if begin_condition begin_expr begin_name operation end_name begin_operator UNP end_operator begin_name begin_name operation end_name begin_operator DOT end_operator begin_name equals oper end_name end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name offset end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name offset end_name begin_operator EQ end_operator begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name operation end_name begin_operator EQT end_operator begin_name begin_name operation end_name begin_operator DOT end_operator begin_name decrement oper end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name offset end_name begin_operator EQ end_operator begin_operator MINUS end_operator begin_operator STAR end_operator begin_name offset end_name end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name number format exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name current value end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name field end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name new value end_name begin_operator EQ end_operator begin_call begin_name begin_name fmt end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name current value end_name begin_operator DOT end_operator begin_name get time end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this method is accessible by subclasses for historical purposes if you don t know what it does then you don t need it end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name hb make code lengths end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name char end_name begin_index end_index end_name end_type begin_name len end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name int end_name begin_index end_index end_name end_type begin_name freq end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name alpha size end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name max len end_name end_decl end_param end_parameter_list begin_block begin_comment nodes and heap entries run from 1 entry 0 for both the heap and nodes is a sentinel end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name begin_index end_index end_type begin_name heap end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name int end_name begin_index begin_expr begin_name max alpha size end_name begin_operator STAR end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name begin_index end_index end_type begin_name weight end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name int end_name begin_index begin_expr begin_name max alpha size end_name begin_operator STAR end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name begin_index end_index end_type begin_name parent end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name int end_name begin_index begin_expr begin_name max alpha size end_name begin_operator STAR end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name alpha size end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_operator MMINUS end_operator begin_name i end_name begin_operator GE end_operator end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name weight end_name begin_index begin_expr begin_name i end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name begin_name freq end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_name begin_name freq end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_expr_stmt end_block end_for begin_for begin_init begin_decl begin_type begin_name boolean end_name end_type begin_name too long end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name too long end_name end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_name too long end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name n nodes end_name begin_init begin_expr begin_name alpha size end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name n heap end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name weight end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name parent end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_operator MINUS end_operator end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LE end_operator begin_name alpha size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name parent end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator MINUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name n heap end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name n heap end_name end_expr end_index end_name begin_operator EQ end_operator begin_name i end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name zz end_name begin_init begin_expr begin_name n heap end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name tmp end_name begin_init begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name begin_name weight end_name begin_index begin_expr begin_name tmp end_name end_expr end_index end_name begin_operator LT end_operator begin_name begin_name weight end_name begin_index begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name begin_operator UNP end_operator end_expr end_index end_name end_expr end_index end_name end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name begin_operator UNP end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name zz end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name end_expr end_index end_name begin_operator EQ end_operator begin_name tmp end_name end_expr end_expr_stmt end_block end_for begin_comment assert n heap max alpha size 2 n heap end_comment begin_while begin_condition begin_expr begin_name n heap end_name begin_operator GT end_operator end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name n 1 end_name begin_init begin_expr begin_name begin_name heap end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name heap end_name begin_index begin_expr begin_name n heap end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name n heap end_name begin_operator MMINUS end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name yy end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name zz end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name tmp end_name begin_init begin_expr begin_name begin_name heap end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name yy end_name begin_operator EQ end_operator begin_name zz end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name yy end_name begin_operator GT end_operator begin_name n heap end_name end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name yy end_name begin_operator LT end_operator begin_name n heap end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name begin_name weight end_name begin_index begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name yy end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_index end_name begin_operator LT end_operator begin_name begin_name weight end_name begin_index begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name yy end_name end_expr end_index end_name end_expr end_index end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name yy end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name weight end_name begin_index begin_expr begin_name tmp end_name end_expr end_index end_name begin_operator LT end_operator begin_name begin_name weight end_name begin_index begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name yy end_name end_expr end_index end_name end_expr end_index end_name end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name heap end_name begin_index begin_expr begin_name yy end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name zz end_name begin_operator EQ end_operator begin_name yy end_name end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name end_expr end_index end_name begin_operator EQ end_operator begin_name tmp end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name n 2 end_name begin_init begin_expr begin_name begin_name heap end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name heap end_name begin_index begin_expr begin_name n heap end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name n heap end_name begin_operator MMINUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name yy end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name zz end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name tmp end_name begin_operator EQ end_operator begin_name begin_name heap end_name begin_index begin_expr end_expr end_index end_name end_expr end_expr_stmt begin_while begin_condition begin_expr end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name yy end_name begin_operator EQ end_operator begin_name zz end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name yy end_name begin_operator GT end_operator begin_name n heap end_name end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name yy end_name begin_operator LT end_operator begin_name n heap end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name begin_name weight end_name begin_index begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name yy end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_index end_name begin_operator LT end_operator begin_name begin_name weight end_name begin_index begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name yy end_name end_expr end_index end_name end_expr end_index end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name yy end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name weight end_name begin_index begin_expr begin_name tmp end_name end_expr end_index end_name begin_operator LT end_operator begin_name begin_name weight end_name begin_index begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name yy end_name end_expr end_index end_name end_expr end_index end_name end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name heap end_name begin_index begin_expr begin_name yy end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name zz end_name begin_operator EQ end_operator begin_name yy end_name end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name end_expr end_index end_name begin_operator EQ end_operator begin_name tmp end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name n nodes end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name parent end_name begin_index begin_expr begin_name n 1 end_name end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name parent end_name begin_index begin_expr begin_name n 2 end_name end_expr end_index end_name begin_operator EQ end_operator begin_name n nodes end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name weight n 1 end_name begin_init begin_expr begin_name begin_name weight end_name begin_index begin_expr begin_name n 1 end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name weight n 2 end_name begin_init begin_expr begin_name begin_name weight end_name begin_index begin_expr begin_name n 2 end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name weight end_name begin_index begin_expr begin_name n nodes end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name weight n 1 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name weight n 2 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name weight n 1 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator GT end_operator begin_operator LPAR end_operator begin_name weight n 2 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator LPAR end_operator begin_name weight n 1 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator DP end_operator begin_operator LPAR end_operator begin_name weight n 2 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator RPAR end_operator begin_operator RPAR end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name parent end_name begin_index begin_expr begin_name n nodes end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator MINUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name n heap end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name n heap end_name end_expr end_index end_name begin_operator EQ end_operator begin_name n nodes end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name tmp end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name zz end_name begin_operator EQ end_operator begin_name n heap end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name tmp end_name begin_operator EQ end_operator begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name end_expr end_index end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name weight tmp end_name begin_init begin_expr begin_name begin_name weight end_name begin_index begin_expr begin_name tmp end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name weight tmp end_name begin_operator LT end_operator begin_name begin_name weight end_name begin_index begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name begin_operator UNP end_operator end_expr end_index end_name end_expr end_index end_name end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name begin_operator UNP end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name zz end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name begin_name heap end_name begin_index begin_expr begin_name zz end_name end_expr end_index end_name begin_operator EQ end_operator begin_name tmp end_name end_expr end_expr_stmt end_block end_while begin_comment assert n nodes max alpha size 2 n nodes end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LE end_operator begin_name alpha size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name k end_name begin_init begin_expr begin_name i end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name parent k end_name end_decl end_init begin_condition begin_expr begin_operator LPAR end_operator begin_name parent k end_name begin_operator EQ end_operator begin_name begin_name parent end_name begin_index begin_expr begin_name k end_name end_expr end_index end_name begin_operator RPAR end_operator begin_operator GE end_operator end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_name k end_name begin_operator EQ end_operator begin_name parent k end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_name begin_name len end_name begin_index begin_expr begin_name i end_name begin_operator MINUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator begin_name j end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name j end_name begin_operator GT end_operator begin_name max len end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name too long end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_name too long end_name end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name alpha size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr begin_name begin_name weight end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name j end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name j end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name weight end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_name j end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_for end_block end_then end_if end_block end_for end_block 
 begin_comment creates a new instance of this class param parser the parser to which output is sent end_comment begin_specifier end_specifier begin_name redirecting output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name change log parser end_name end_type begin_name parser end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name parser end_name end_name begin_operator EQ end_operator begin_name parser end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fail message end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name fail message end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name fail message end_name end_name begin_operator EQ end_operator begin_name fail message end_name end_expr end_expr_stmt end_block 
 begin_comment topologically sort a set of targets param root code string code containing the names of the root targets the sort is created in such a way that the ordered sequence of targets is the minimum possible such sequence to the specified root targets must not be code null code param target table a map of names to targets string to target must not be code null code param return all code boolean code indicating whether to return all targets or the execution sequence only return a vector of target objects in sorted order exception build exception if there is a cyclic dependency among the targets or if a named target does not exist since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name vector end_name end_type begin_name topo sort end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name root end_name end_decl end_param begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name target table end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name return all end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name ret end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name state end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name stack end_name end_type begin_name visiting end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name stack end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment we first run a dfs based sort using each root as a starting node end_comment begin_comment this creates the minimum sequence of targets to the root node s end_comment begin_comment we then do a sort on any remaining un visited targets end_comment begin_comment this is unnecessary for doing our build but it catches end_comment begin_comment circular dependencies or missing targets on the entire end_comment begin_comment dependency tree not just on the targets that depend on the end_comment begin_comment build target end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name root end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name st end_name begin_init begin_expr begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name state end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name root end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name st end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name tsort end_name begin_argument_list begin_argument begin_expr begin_name begin_name root end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name target table end_name end_expr end_argument begin_argument begin_expr begin_name state end_name end_expr end_argument begin_argument begin_expr begin_name visiting end_name end_expr end_argument begin_argument begin_expr begin_name ret end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name st end_name begin_operator EQT end_operator begin_name visiting end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name root end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_else end_if end_block end_for begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name root end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name j end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name begin_name root end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ret end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name msg verbose end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name complete end_name begin_init begin_expr begin_operator LPAR end_operator begin_name return all end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_name ret end_name begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list begin_argument begin_expr begin_name ret end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name en end_name begin_init begin_expr begin_call begin_name begin_name target table end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name en end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name cur target end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name en end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name st end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name state end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name cur target end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name st end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name tsort end_name begin_argument_list begin_argument begin_expr begin_name cur target end_name end_expr end_argument begin_argument begin_expr begin_name target table end_name end_expr end_argument begin_argument begin_expr begin_name state end_name end_expr end_argument begin_argument begin_expr begin_name visiting end_name end_expr end_argument begin_argument begin_expr begin_name complete end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name st end_name begin_operator EQT end_operator begin_name visiting end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name cur target end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_else end_if end_block end_for begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name complete end_name end_expr end_argument begin_argument begin_expr begin_name msg verbose end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name ret end_name end_expr end_return end_block 
 begin_comment ignore end_comment begin_comment load the environment values param prefix prefix to place before them end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name load environment end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name props end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name prefix end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name prefix end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name prefix end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name os env end_name begin_init begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name get proc environment end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name os env end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name entry end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pos end_name begin_init begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name pos end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name entry end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name prefix end_name begin_operator PLUS end_operator begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name pos end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name pos end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for begin_expr_stmt begin_expr begin_call begin_name add properties end_name begin_argument_list begin_argument begin_expr begin_name props end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the resource file parameter attribute of the ilasm task return the resource file parameter value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get resource file parameter end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name resource file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name resource file end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr end_expr end_return end_block end_else end_if end_block 
 begin_comment create a set of permissions param delegate to old sm if code true code the old security manager will be used if the permission has not been explicitly granted or revoked in this instance end_comment begin_specifier end_specifier begin_name permissions end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name delegate to old sm end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name delegate to old sm end_name end_name begin_operator EQ end_operator begin_name delegate to old sm end_name end_expr end_expr_stmt end_block 
 begin_comment convert a file to a url param file to convert return the file converted to a url end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to url end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file to convert end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name url end_name end_decl end_decl_stmt begin_comment create the url end_comment begin_comment ant equivalent of file to convert to uri to url to external form end_comment begin_expr_stmt begin_expr begin_name url end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file utils end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to uri end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file to convert end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name url end_name end_expr end_return end_block 
 begin_comment create a param nested element return a dname param object to be configured end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name create param end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name dname param end_name end_type begin_name param end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name dname param end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name params end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name param end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name param end_name end_expr end_return end_block 
 begin_comment set the encoding used to create the tokens param encoding the encoding to use end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name encoding end_name end_name begin_operator EQ end_operator begin_name encoding end_name end_expr end_expr_stmt end_block 
 begin_comment constructs an exception with the given descriptive message param message a description of or information about the exception should not be code null code end_comment begin_specifier end_specifier begin_name launch exception end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment tests the system type key attribute end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test configuration 2 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name begin_index end_index end_type begin_name expected counts end_name begin_init begin_expr begin_block begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr end_block end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name perform config test end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name expected counts end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the tag parameter this argument represented return the tag parameter as a string exception build exception if either the name or description is code null code or empty end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get parameter end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get description end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name enabled end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_name scope end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get description end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name enabled end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_name scope end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name name end_name end_expr end_return end_block end_else end_if end_block 
 begin_comment add a collection of resources to touch param rc the collection to add since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name rc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the optimize flag return the optimize flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get optimize end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name optimize end_name end_expr end_return end_block 
 begin_comment validate configuration options end_comment begin_type begin_specifier end_specifier begin_name resource collection end_name end_type begin_name validate end_name begin_parameter_list end_parameter_list begin_block begin_comment treat empty nested text as no text end_comment begin_expr_stmt begin_expr begin_call begin_name sanitize text end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment if binary check if incompatible attributes are used end_comment begin_if begin_condition begin_expr begin_name binary end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name destination file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name text buffer end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name encoding end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name output encoding end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name filter chains end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name fix last line end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name header end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name footer end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name destination file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name output writer end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment sanity check our inputs end_comment begin_if begin_condition begin_expr begin_name rc end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name text buffer end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment nothing to concatenate end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name rc end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment if using resources disallow inline text this is similar to end_comment begin_comment using gnu cat with file arguments stdin is simply end_comment begin_comment ignored end_comment begin_if begin_condition begin_expr begin_name text buffer end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name restrict end_name end_type begin_name noexist rc end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name restrict end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name noexist rc end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name not exists end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name noexist rc end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name noexist rc end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_if begin_condition begin_expr begin_name destination file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name file resource end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name file resource end_name begin_operator RPAR end_operator begin_name o end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get file end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name file name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument begin_argument begin_expr begin_name destination file end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name f end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if end_block end_for end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name restrict end_name end_type begin_name exist rc end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name restrict end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exist rc end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name exists end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exist rc end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name outofdate end_name begin_init begin_expr begin_name destination file end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name force overwrite end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name outofdate end_name end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name exist rc end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_operator UNP end_operator begin_name outofdate end_name begin_operator UNP end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name resource end_name end_type begin_name r end_name begin_init begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name outofdate end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_call begin_name begin_name destination file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name outofdate end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name destination file end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return begin_comment no need to do anything end_comment end_block end_then end_if begin_return begin_expr begin_name exist rc end_name end_expr end_return end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name string resource end_name end_type begin_name s end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string resource end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name text buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name s end_name end_expr end_return end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_comment windows adds the drive letter in uppercase unless you run cygwin end_comment begin_expr_stmt begin_expr begin_name root end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to upper case end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the classpath to load the file name mapper through attribute param classpath the classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_name classpath end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment add the java runtime classes to this path instance end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add java runtime end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is kaffe end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment newer versions of kaffe 1 1 1 won t have this end_comment begin_comment but this will be sorted by file set anyway end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name kaffe share end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name kaffe share end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name kaffe jar files end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name kaffe jar files end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_name kaffe share end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name kaffe jar files end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add fileset end_name begin_argument_list begin_argument begin_expr begin_name kaffe jar files end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add existing end_name begin_argument_list begin_argument begin_expr begin_name system boot classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_if begin_condition begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_comment xxx is this code still necessary is there any 1 2 port end_comment begin_comment pull in zip from packages directory end_comment begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name ms zip files end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ms zip files end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ms zip files end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add fileset end_name begin_argument_list begin_argument begin_expr begin_name ms zip files end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment jdk 1 2 seems to set java home to the jre directory end_comment begin_expr_stmt begin_expr begin_call begin_name add existing end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment just keep the old version as well and let add existing end_comment begin_comment sort it out end_comment begin_expr_stmt begin_expr begin_call begin_name add existing end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment sun s and apple s 1 4 have jce and jsse in separate jars end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name sec jars end_name begin_init begin_expr begin_block begin_expr end_expr begin_expr end_expr end_block end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name sec jars end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name add existing end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_name begin_name sec jars end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add existing end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_name begin_name sec jars end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment ibm s 1 4 has rt jar split into 4 smaller jars and a combined end_comment begin_comment jce jsse in security jar end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name ibm jars end_name begin_init begin_expr begin_block begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr end_block end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name ibm jars end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name add existing end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_name begin_name ibm jars end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment added for mac os x end_comment begin_expr_stmt begin_expr begin_call begin_name add existing end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add existing end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name target end_name begin_parameter_list end_parameter_list begin_block begin_comment empty end_comment end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add the classpath for the user classes return a path to be configured end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name classpath end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment sets the name with which the task has been invoked param type the name the task has been invoked as should not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set task type end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name type end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name task type end_name end_name begin_operator EQ end_operator begin_name type end_name end_expr end_expr_stmt end_block 
 begin_comment data access end_comment begin_comment load the cache from underlying properties file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name load end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name cachefile end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name cachefile end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name cachefile end_name begin_operator DOT end_operator begin_name can read end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name buffered input stream end_name end_type begin_name bis end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name cachefile end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name load end_name end_name begin_argument_list begin_argument begin_expr begin_name bis end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bis end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if begin_comment after loading the cache is up to date with the file end_comment begin_expr_stmt begin_expr begin_name cache loaded end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name cache dirty end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment add a em new em target to the project param target name the name to use for the target must not be code null code param target the target to be added to the project must not be code null code exception build exception if the target already exists in the project see project add or replace target string target end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add target end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target name end_name end_decl end_param begin_param begin_decl begin_type begin_name target end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name targets end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name target name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name target name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name add or replace target end_name begin_argument_list begin_argument begin_expr begin_name target name end_name end_expr end_argument begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the destination directory of files to be compiled param dir name the new dest dir value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dest dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment constructor for jasper c param mangler a filename converter end_comment begin_specifier end_specifier begin_name jasper c end_name begin_parameter_list begin_param begin_decl begin_type begin_name jsp mangler end_name end_type begin_name mangler end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name mangler end_name end_name begin_operator EQ end_operator begin_name mangler end_name end_expr end_expr_stmt end_block 
 begin_comment url of a resource ur ls have no timestamp checking and are not validated param url the url string to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set url end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name url end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name url end_name end_name begin_operator EQ end_operator begin_name url end_name end_expr end_expr_stmt end_block 
 begin_comment return a string representation of the selector end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name has selectors end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment setter for the name of the property param name name of the property end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment a file to be attribed param src a file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name set file end_name end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add fileset end_name begin_argument_list begin_argument begin_expr begin_name fs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set comment file param cfile the path to the comment file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set comment file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name cfile end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m cfile end_name begin_operator EQ end_operator begin_name cfile end_name end_expr end_expr_stmt end_block 
 begin_comment get the name of the field return the field s name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get field name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name field name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test ends with jdk perf end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_call begin_name get filled buffer end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment prints the message onto an output stream param ps the print stream to write to throws io exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name print end_name begin_parameter_list begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name ps end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment we need character encoding aware printing here end_comment begin_comment so using print writer over output stream writer instead of print stream end_comment begin_decl_stmt begin_decl begin_type begin_name print writer end_name end_type begin_name out end_name begin_init begin_expr begin_name charset end_name begin_operator UNP end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name output stream writer end_name begin_argument_list begin_argument begin_expr begin_name ps end_name end_expr end_argument begin_argument begin_expr begin_name charset end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_name ps end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name message source end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment read message from a file end_comment begin_decl_stmt begin_decl begin_type begin_name file reader end_name end_type begin_name freader end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file reader end_name begin_argument_list begin_argument begin_expr begin_name message source end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name in end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_name freader end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace properties end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name freader end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace properties end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test one line end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment executes the target if the if and unless conditions are satisfied dependency checking should be done before calling this method as it does no checking of its own if either the if or unless test prevents this target from being executed a verbose message is logged giving the reason it is recommended that clients of this class call perform tasks rather than this method so that appropriate build events are fired exception build exception if any of the tasks fail or if a data type configuration fails see perform tasks see set if string see set unless string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name test if condition end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name test unless condition end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name task position end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name task position end_name begin_operator LT end_operator begin_call begin_name begin_name children end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name task position end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name children end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name task position end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name task end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name task end_name end_type begin_name task end_name begin_init begin_expr begin_operator LPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name perform end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name runtime configurable end_name end_type begin_name r end_name begin_init begin_expr begin_operator LPAR end_operator begin_name runtime configurable end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name maybe configure end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name test if condition end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name replace properties end_name end_name begin_argument_list begin_argument begin_expr begin_name if condition end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name replace properties end_name end_name begin_argument_list begin_argument begin_expr begin_name unless condition end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test fullpath differs in case scanning sensitive end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name login suceeded end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name change remote dir end_name begin_argument_list begin_argument begin_expr begin_name remote tmp dir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name ftp directory scanner end_name end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name my ftp task end_name begin_operator DOT end_operator begin_name new scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured configured end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name fileset end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment get preservetime flag status return boolean containing status of preservetime flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get preserve time end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m ptime end_name end_expr end_return end_block 
 begin_comment see build logger set message output level int end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set message output level end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name level end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name level end_name begin_operator GE end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name begin_operator UNP end_operator begin_name level end_name begin_operator LE end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name loglevel end_name begin_operator EQ end_operator begin_name level end_name end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment construct a new comparison with the specified value param value the enumerated attribute value end_comment begin_specifier end_specifier begin_name comparison end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the directory scanner associated with this file set if the archive file set defines a source archive file then a archive scanner is returned instead param p the project to use return a directory scanner end_comment begin_type begin_specifier end_specifier begin_name directory scanner end_name end_type begin_name get directory scanner end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get directory scanner end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name src end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name is exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name archive scanner end_name end_type begin_name as end_name begin_init begin_expr begin_call begin_name new archive scanner end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name as end_name begin_operator DOT end_operator begin_name set src end_name end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name setup directory scanner end_name begin_argument_list begin_argument begin_expr begin_name as end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name as end_name begin_operator DOT end_operator begin_name init end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name as end_name end_expr end_return end_block 
 begin_comment bind to a keystore if the attributes are there param cmd command to configure end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name bind to keystore end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name exec task end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name keystore end_name end_expr end_condition begin_then begin_block begin_comment is the keystore a file end_comment begin_expr_stmt begin_expr begin_call begin_name add value end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name loc end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name keystore file end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name keystore end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name keystore file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name loc end_name begin_operator EQ end_operator begin_call begin_name begin_name keystore file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment must be a url just pass as is end_comment begin_expr_stmt begin_expr begin_name loc end_name begin_operator EQ end_operator begin_name keystore end_name end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name add value end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr begin_name loc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name storetype end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add value end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add value end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr begin_name storetype end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment determine whether the bootclasspath has been specified and whether it shall really be used build sysclasspath could be set or the vm may not support it param log whether to log a warning if a bootclasspath has been specified but will be ignored return true if the bootclasspath is to be used since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name have bootclasspath end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name log end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name calculate bootclasspath end_name begin_argument_list begin_argument begin_expr begin_name log end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_return end_block 
 begin_comment set the package names to be processed param packages a comma separated list of packages specs may be wildcarded see add package for wildcard information end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set packagenames end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name packages end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name tok end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name packages end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name package name end_name end_type begin_name pn end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name package name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pn end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add package end_name begin_argument_list begin_argument begin_expr begin_name pn end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_comment end static class template element end_comment begin_comment same or similar equality method for macrodef ignores project and runtime info param obj an code object code value param same if true test for sameness otherwise just similiar return a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name same or similar end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name obj end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name same end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name obj end_name begin_operator EQT end_operator begin_name this end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name obj end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name obj end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name macro def end_name end_type begin_name other end_name begin_init begin_expr begin_operator LPAR end_operator begin_name macro def end_name begin_operator RPAR end_operator begin_name obj end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name other end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQT end_operator end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name other end_name begin_operator DOT end_operator begin_name name end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment allow two macro definitions with the same location end_comment begin_comment to be treated as similar bugzilla 31215 end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_name same end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name text end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name begin_name other end_name begin_operator DOT end_operator begin_name text end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name text end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name other end_name begin_operator DOT end_operator begin_name text end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name get uri end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name get uri end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get uri end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name ant core uri end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get uri end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get uri end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get uri end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name ant core uri end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get uri end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get uri end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_else end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name nested sequential end_name begin_operator DOT end_operator begin_name similar end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name other end_name begin_operator DOT end_operator begin_name nested sequential end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name other end_name begin_operator DOT end_operator begin_name attributes end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name elements end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name other end_name begin_operator DOT end_operator begin_name elements end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_type begin_name object end_name end_type begin_name get real object end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment execute all nested tasks end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name fileset end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name nested tasks end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name task end_name end_type begin_name nested task end_name begin_init begin_expr begin_operator LPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nested task end_name begin_operator DOT end_operator begin_name perform end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name nested echo end_name begin_operator DOT end_operator begin_name reconfigure end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nested echo end_name begin_operator DOT end_operator begin_name perform end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name test case end_name end_expr end_return end_block 
 begin_comment password file to add the entry to param pass file the password file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set passfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name pass file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name pass file end_name end_name begin_operator EQ end_operator begin_name pass file end_name end_expr end_expr_stmt end_block 
 begin_comment get keepcopy flag status return boolean containing status of keep flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get keep copy end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m keep end_name end_expr end_return end_block 
 begin_comment set the websphere classpath param was classpath the websphere classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set was classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name was classpath end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name was classpath end_name end_name begin_operator EQ end_operator begin_name was classpath end_name end_expr end_expr_stmt end_block 
 begin_comment return true if this resource is selected param r the resource to check return whether the resource was selected end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name get selectors end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource selector end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name is selected end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_comment set the second string param a 2 the second string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set arg 2 end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name a 2 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name arg 2 end_name begin_operator EQ end_operator begin_name a 2 end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name url end_name end_type begin_name new url end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name u end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_name u end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name malformed url exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment helper method to add a string jvm argument to a command param command param arg end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add vm argument end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline java end_name end_type begin_name command end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name arg end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name argument end_name end_name end_type begin_name argument end_name end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name argument end_name begin_operator EQ end_operator begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name create vm argument end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name argument end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name arg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment read a manifest file from the given reader param r is the reader from which the manifest is read throws manifest exception if the manifest is not valid according to the jar spec throws io exception if the manifest cannot be read from the reader end_comment begin_specifier end_specifier begin_name manifest end_name begin_parameter_list begin_param begin_decl begin_type begin_name reader end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name manifest exception end_name end_expr end_argument begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name reader end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment this should be the manifest version end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name next section name end_name begin_init begin_expr begin_call begin_name begin_name main section end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name reader end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name read manifest version end_name begin_init begin_expr begin_call begin_name begin_name main section end_name begin_operator DOT end_operator begin_name get attribute value end_name end_name begin_argument_list begin_argument begin_expr begin_name attribute manifest version end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name read manifest version end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name manifest version end_name begin_operator EQ end_operator begin_name read manifest version end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name main section end_name begin_operator DOT end_operator begin_name remove attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name attribute manifest version end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name section end_name end_type begin_name section end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name section end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name next section name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name attribute end_name end_type begin_name section name end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name attribute end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name section name end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name attribute name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name manifest exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name attribute name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name section name end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name next section name end_name begin_operator EQ end_operator begin_call begin_name begin_name section name end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment we have already started reading this section end_comment begin_comment this line is the first attribute set it and then end_comment begin_comment let the normal read handle the rest end_comment begin_decl_stmt begin_decl begin_type begin_name attribute end_name end_type begin_name first attribute end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name attribute end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name section end_name begin_operator DOT end_operator begin_name add attribute and check end_name end_name begin_argument_list begin_argument begin_expr begin_name first attribute end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name section end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr begin_name next section name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name next section name end_name begin_operator EQ end_operator begin_call begin_name begin_name section end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name reader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add configured section end_name begin_argument_list begin_argument begin_expr begin_name section end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test parent level 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name accept end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name extensions end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr begin_name begin_name extensions end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_comment may be used to specify the home directory for this i as installation the directory specified should typically be code install location iplanet ias 6 ias code param ias home dir the home directory for the user s i as installation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set ias home dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name ias home dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ias home dir end_name end_name begin_operator EQ end_operator begin_name ias home dir end_name end_expr end_expr_stmt end_block 
 begin_comment helper method to determine the archive location index param home the javacc home path directory throws build exception thrown if the home directory is invalid or if the archive could not be found despite attempts to do so return the archive location index end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name get archive location index end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name home end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name home end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name home end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name archive locations end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name home end_name end_expr end_argument begin_argument begin_expr begin_name begin_name archive locations end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name i end_name end_expr end_return end_block end_then end_if end_block end_for begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name home end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment set the refid attribute param r a reference value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set refid end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name ref end_name begin_operator EQ end_operator begin_name r end_name end_expr end_expr_stmt end_block 
 begin_comment copy all user properties that have been set on the command line or a gui tool from this instance to the project instance given as the argument p to copy all quot user quot properties you will also have to call link copy inherited properties copy inherited properties p param other the project to copy the properties to must not be null since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name copy user properties end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name other end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name property helper end_name end_type begin_name ph end_name begin_init begin_expr begin_call begin_name begin_name property helper end_name begin_operator DOT end_operator begin_name get property helper end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ph end_name begin_operator DOT end_operator begin_name copy user properties end_name end_name begin_argument_list begin_argument begin_expr begin_name other end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the file encoding to use on the files read and written by the task optional defaults to default jvm encoding param encoding the encoding to use on the files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name encoding end_name end_name begin_operator EQ end_operator begin_name encoding end_name end_expr end_expr_stmt end_block 
 begin_comment see org apache tools ant build listener target finished build event end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name time end_name begin_init begin_expr begin_call begin_name format time end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name target start time end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name time end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name flush end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment specifies the encoding ant expects the files to be in defaults to the platforms default encoding param encoding string encoding name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name encoding end_name end_name begin_operator EQ end_operator begin_name encoding end_name end_expr end_expr_stmt end_block 
 begin_comment constructor with another resource to wrap param other the resource to wrap end_comment begin_specifier end_specifier begin_name compressed resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name other end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add configured end_name begin_argument_list begin_argument begin_expr begin_name other end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test get nested elements end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name map end_name end_type begin_name elem map end_name begin_init begin_expr begin_call begin_name get expected nested elements end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name get nested elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name expect end_name begin_init begin_expr begin_operator LPAR end_operator begin_name class end_name begin_operator RPAR end_operator begin_call begin_name begin_name elem map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name expect end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name expect end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name get element type end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name elem map end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name elem map end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the name of this file resource if the basedir is set the name will be relative to that otherwise the basename only will be returned return the name of this resource end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name b end_name begin_init begin_expr begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name b end_name begin_operator EQT end_operator begin_operator QM end_operator begin_call begin_name get not null file end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name remove leading path end_name end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get not null file end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment use instead of test result get failure error count on j unit 4 since the adapter claims that all failures are errors since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name int end_name begin_index end_index end_type begin_name find j unit 4 failure error count end_name begin_parameter_list begin_param begin_decl begin_type begin_name test result end_name end_type begin_name res end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name failures end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name errors end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name failures end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name failures end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name e end_name begin_operator EQ end_operator begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name errors end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name test failure end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name thrown exception end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name t end_name begin_operator UNP end_operator begin_name assertion failed error end_name begin_operator UNP end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name failures end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name errors end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_else end_if end_block end_while begin_return begin_expr begin_operator UNP end_operator begin_name begin_name int end_name begin_index end_index end_name begin_block begin_expr begin_name failures end_name end_expr begin_operator UNP end_operator begin_expr begin_name errors end_name end_expr end_block end_expr end_return end_block 
 begin_comment if true checkout fails if the element is already checked out to the current view param notco the status to set the flag to since ant 1 6 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set notco end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name notco end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m notco end_name begin_operator EQ end_operator begin_name notco end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment writes all remaining throws io exception if an i o error occurs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name close end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name process buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds an implementation specific command line argument return a implementation specific argument to be configured since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name implementation specific argument end_name end_type begin_name create arg end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name implementation specific argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name implementation specific argument end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name facade end_name begin_operator DOT end_operator begin_name add implementation argument end_name end_name begin_argument_list begin_argument begin_expr begin_name arg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name arg end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirect 7 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test conversion to bytes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test to bytes end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name zip short end_name end_type begin_name zs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name zip short end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name zs end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name result end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name result end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test pass file duplicate entry end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name f end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name jakarta url end_name begin_operator PLUS end_operator begin_name eol end_name begin_operator PLUS end_operator begin_name tigris url end_name begin_operator PLUS end_operator begin_name eol end_name end_expr end_argument begin_argument begin_expr begin_call begin_name read file end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment log an error param e the exception to log end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name error end_name begin_parameter_list begin_param begin_decl begin_type begin_name transformer exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log error end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test recreate zipfileset without update newer file end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test recreate end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds the given string to a list contained in the given map the file is the key into the map end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name base dir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name map end_name end_type begin_name m end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name name end_name end_expr end_block end_expr end_argument begin_argument begin_expr begin_name m end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment add a majority selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add majority end_name begin_parameter_list begin_param begin_decl begin_type begin_name majority selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name add majority end_name end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the output property value end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name value end_name end_expr end_return end_block 
 begin_comment returns the wrapper used for runtime configuration return the wrapper used for runtime configuration this method will generate a new wrapper and cache it if one isn t set already end_comment begin_type begin_specifier end_specifier begin_name runtime configurable end_name end_type begin_name get runtime configurable wrapper end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name wrapper end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name wrapper end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name runtime configurable end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name wrapper end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test reference no inheritance end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p end_name begin_init begin_expr begin_name begin_name path end_name begin_operator DOT end_operator begin_name system classpath end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name test reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name boolean end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name test reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name boolean end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name test reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name boolean end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name test reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name boolean end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test the forking compiler end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name notest forking end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test patterns differ in case scanning sensitive end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name directory scanner end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the task which owns this tool param task the task to which this deployment tool is associated end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set task end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name task end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name task end_name end_name begin_operator EQ end_operator begin_name task end_name end_expr end_expr_stmt end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name regular expression end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment perform the copy operation exception build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name saved file end_name begin_init begin_expr begin_name file end_name end_expr end_init end_decl end_decl_stmt begin_comment may be altered in validate attributes end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name saved dest file end_name begin_init begin_expr begin_name dest file end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name saved dest dir end_name begin_init begin_expr begin_name dest dir end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name resource collection end_name end_type begin_name saved rc end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name file end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name dest file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name rcs end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment will be removed in validate attributes end_comment begin_expr_stmt begin_expr begin_name saved rc end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name resource collection end_name begin_operator RPAR end_operator begin_call begin_name begin_name rcs end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment make sure we don t have an illegal set of options end_comment begin_expr_stmt begin_expr begin_call begin_name validate attributes end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_comment deal with the single file end_comment begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name dest file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dest file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dest dir end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name force overwrite end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name dest file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name granularity end_name begin_operator GT end_operator begin_call begin_name begin_name dest file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file copy map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_call begin_name begin_name dest file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name dest file end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name failonerror end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_else end_if end_block end_then end_if begin_comment deal with the resource collections end_comment begin_comment for historical and performance reasons we have to do things in a rather complex way 1 move is optimized to move directories if a fileset has been included completely therefore file sets need a special treatment this is also required to support the fail on error semantice skip filesets with broken basedir but handle the remaining collections 2 we carry around a few protected methods that work on basedirs and arrays of names to optimize stuff all resources with the same basedir get collected in separate lists and then each list is handled in one go end_comment begin_decl_stmt begin_decl begin_type begin_name hash map end_name end_type begin_name files by basedir end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hash map end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hash map end_name end_type begin_name dirs by basedir end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hash map end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hash set end_name end_type begin_name base dirs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hash set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name array list end_name end_type begin_name non file resources end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name rcs end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name resource collection end_name end_type begin_name rc end_name begin_init begin_expr begin_operator LPAR end_operator begin_name resource collection end_name begin_operator RPAR end_operator begin_call begin_name begin_name rcs end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment step 1 beware of the zip file set end_comment begin_if begin_condition begin_expr begin_name rc end_name begin_operator UNP end_operator begin_name file set end_name begin_operator UNP end_operator begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name is filesystem only end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_name rc end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name ds end_name begin_operator EQ end_operator begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name failonerror end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name get message end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_name e end_name end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get message end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_else end_if end_block end_catch end_try begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name from dir end_name begin_init begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name src files end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name src dirs end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included directories end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name flatten end_name begin_operator UNP end_operator begin_name mapper element end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name is everything included end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name has patterns end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name complete dir map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name from dir end_name end_expr end_argument begin_argument begin_expr begin_name dest dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name from dir end_name end_expr end_argument begin_argument begin_expr begin_name src files end_name end_expr end_argument begin_argument begin_expr begin_name files by basedir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name from dir end_name end_expr end_argument begin_argument begin_expr begin_name src dirs end_name end_expr end_argument begin_argument begin_expr begin_name dirs by basedir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name base dirs end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name from dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment not a fileset or contains non file resources end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name is filesystem only end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name supports non file resources end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name resources end_name begin_init begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name resource end_name end_type begin_name r end_name begin_init begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name is exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name base dir end_name begin_init begin_expr begin_name null file placeholder end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name r end_name begin_operator UNP end_operator begin_name file resource end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file resource end_name end_type begin_name fr end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file resource end_name begin_operator RPAR end_operator begin_name r end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name base dir end_name begin_operator EQ end_operator begin_call begin_name get key file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name fr end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name fr end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_call begin_name begin_name fr end_name begin_operator DOT end_operator begin_name get file end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_comment copying of dirs is trivial and can be done end_comment begin_comment for non file resources as well as for real end_comment begin_comment files end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name r end_name begin_operator UNP end_operator begin_name file resource end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_name dirs by basedir end_name begin_operator DP end_operator begin_name files by basedir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name base dirs end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment a not directory file resource end_comment begin_comment needs special treatment end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name non file resources end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_while end_block end_else end_if end_block end_for begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name base dirs end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name files end_name begin_init begin_expr begin_operator LPAR end_operator begin_name list end_name begin_operator RPAR end_operator begin_call begin_name begin_name files by basedir end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name dirs end_name begin_init begin_expr begin_operator LPAR end_operator begin_name list end_name begin_operator RPAR end_operator begin_call begin_name begin_name dirs by basedir end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name src files end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name files end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name src files end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name begin_name string end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_name src files end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name src dirs end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name dirs end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name src dirs end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name begin_name string end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name dirs end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_name src dirs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name scan end_name begin_argument_list begin_argument begin_expr begin_name f end_name begin_operator EQT end_operator begin_name null file placeholder end_name begin_operator QM end_operator begin_operator DP end_operator begin_name f end_name end_expr end_argument begin_argument begin_expr begin_name dest dir end_name end_expr end_argument begin_argument begin_expr begin_name src files end_name end_expr end_argument begin_argument begin_expr begin_name src dirs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_comment do all the copy operations now end_comment begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name do file operations end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name failonerror end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get message end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_name e end_name end_expr end_throw end_block end_else end_if end_block end_catch end_try begin_if begin_condition begin_expr begin_call begin_name begin_name non file resources end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name resource end_name begin_index end_index end_type begin_name non files end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name resource end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name non file resources end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name resource end_name begin_index begin_expr begin_call begin_name begin_name non file resources end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment restrict to out of date resources end_comment begin_decl_stmt begin_decl begin_type begin_name map end_name end_type begin_name map end_name begin_init begin_expr begin_call begin_name scan end_name begin_argument_list begin_argument begin_expr begin_name non files end_name end_expr end_argument begin_argument begin_expr begin_name dest dir end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name do resource operations end_name begin_argument_list begin_argument begin_expr begin_name map end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name failonerror end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get message end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_name e end_name end_expr end_throw end_block end_else end_if end_block end_catch end_try end_block end_then end_if end_block begin_finally begin_block begin_comment clean up again so this instance can be used a second end_comment begin_comment time end_comment begin_expr_stmt begin_expr begin_name file end_name begin_operator EQ end_operator begin_name saved file end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name dest file end_name begin_operator EQ end_operator begin_name saved dest file end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name dest dir end_name begin_operator EQ end_operator begin_name saved dest dir end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name saved rc end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name rcs end_name begin_operator DOT end_operator begin_name insert element at end_name end_name begin_argument_list begin_argument begin_expr begin_name saved rc end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name file copy map end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dir copy map end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name complete dir map end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no tld end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_comment expect build exception containing test no tld end_comment begin_comment jasper found an error in a file end_comment begin_comment java returned 9 end_comment begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a web logic deployment tool for deployment to web logic servers p ant calls this method on creation to handle embedded weblogic elements in the server deploy task param tool an instance of web logic hot deployment tool passed in by ant end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add weblogic end_name begin_parameter_list begin_param begin_decl begin_type begin_name web logic hot deployment tool end_name end_type begin_name tool end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tool end_name begin_operator DOT end_operator begin_name set task end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vendor tools end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name tool end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment checks to make sure all settings are kosher in this case it means that the pattern attribute has been set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name verify settings end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name type end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment the number of milliseconds leeway to give before deciding a target is out of date p default is 0 milliseconds or 2 seconds on dos systems p param granularity a code long code value since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set granularity end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name granularity end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name my copy end_name begin_operator DOT end_operator begin_name set granularity end_name end_name begin_argument_list begin_argument begin_expr begin_name granularity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log test listener event end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name print stream end_name end_type begin_name out end_name begin_init begin_expr begin_name saved out end_name begin_operator UNP end_operator begin_operator QM end_operator begin_name saved out end_name begin_operator DP end_operator begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name log test listener events end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name j unit task end_name begin_operator DOT end_operator begin_name testlistener prefix end_name end_name begin_operator PLUS end_operator begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment create a diagnostics binding for a specific uri param destination dest to bind to throws build exception if the uri is malformed end_comment begin_specifier end_specifier begin_name proxy diagnostics end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name destination end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name destination end_name end_name begin_operator EQ end_operator begin_name destination end_name end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dest uri end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name uri end_name begin_argument_list begin_argument begin_expr begin_name destination end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name uri syntax exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment add a nested lt style gt element param rc the configured resources object represented as lt style gt since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured style end_name begin_parameter_list begin_param begin_decl begin_type begin_name resources end_name end_type begin_name rc end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name set xsl resource end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name next end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name resource end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment construct a new code lead pipe input stream code end_comment begin_specifier end_specifier begin_name lead pipe input stream end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the management password of the server optional and only applicable to wl 6 0 param password the management pasword of the server end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set password end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name password end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name management password end_name end_name begin_operator EQ end_operator begin_name password end_name end_expr end_expr_stmt end_block 
 begin_comment get the tab length to use return the length of tab in spaces end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get tablength end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name tab length end_name end_expr end_return end_block 
 begin_comment get the current target return current target end_comment begin_type begin_specifier end_specifier begin_name target end_name end_type begin_name get current target end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name current target end_name end_expr end_return end_block 
 begin_comment concatenate two strings together and add them as a single argument but only if argument 2 is non null and non zero length param argument 1 the first argument param argument 2 the second argument end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add argument end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name argument 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name argument 2 end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name argument 2 end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name argument 2 end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name argument 1 end_name begin_operator PLUS end_operator begin_name argument 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filesmatch different sizes end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property unset end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name flex integer end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment sets the reversebranchmappings flag param reversebranchmappings flag indicating if reverse branch mappings are sought end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set reversebranchmappings end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name reversebranchmappings end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name reversebranchmappings end_name end_name begin_operator EQ end_operator begin_name reversebranchmappings end_name end_expr end_expr_stmt end_block 
 begin_comment closes the archive throws io exception if an error occurs closing the archive end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name close end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name archive end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test log blank echo end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name echo test logger end_name end_type begin_name logger end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name echo test logger end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add build listener end_name begin_argument_list begin_argument begin_expr begin_name logger end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name logger end_name begin_operator DOT end_operator begin_name last logged message end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the current antlib classloader return the antlib classloader for the definition this is null if the definition is not used in an antlib end_comment begin_type begin_specifier end_specifier begin_name class loader end_name end_type begin_name get antlib class loader end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name antlib class loader end_name end_expr end_return end_block 
 begin_comment getter method that returns the set of files to include in the ejb jar return the map of files end_comment begin_type begin_specifier end_specifier begin_name hashtable end_name end_type begin_name get files end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name ejb files end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name ejb files end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name add nine end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment defines the language required param language the scripting language name for the script end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set language end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name language end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set language end_name end_name begin_argument_list begin_argument begin_expr begin_name language end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add the modified selector param selector the selector to add since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add modified end_name begin_parameter_list begin_param begin_decl begin_type begin_name modified selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name used matching task end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name add modified end_name end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment makes this instance in effect a reference to another extension adapter instance p you must not set another attribute or nest elements inside this element if you make it a reference p param reference the reference to which this instance is associated exception build exception if this instance already has been configured end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set refid end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reference end_name end_type begin_name reference end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name extension name end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name specification version end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name specification vendor end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name implementation version end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name implementation vendor id end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name implementation vendor end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name implementation url end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment change this to get the objects from the other reference end_comment begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name reference end_name begin_operator DOT end_operator begin_name get referenced object end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name extension adapter end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name extension adapter end_name end_type begin_name other end_name begin_init begin_expr begin_operator LPAR end_operator begin_name extension adapter end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name extension name end_name begin_operator EQ end_operator begin_name begin_name other end_name begin_operator DOT end_operator begin_name extension name end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name specification version end_name begin_operator EQ end_operator begin_name begin_name other end_name begin_operator DOT end_operator begin_name specification version end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name specification vendor end_name begin_operator EQ end_operator begin_name begin_name other end_name begin_operator DOT end_operator begin_name specification vendor end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name implementation version end_name begin_operator EQ end_operator begin_name begin_name other end_name begin_operator DOT end_operator begin_name implementation version end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name implementation vendor id end_name begin_operator EQ end_operator begin_name begin_name other end_name begin_operator DOT end_operator begin_name implementation vendor id end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name implementation vendor end_name begin_operator EQ end_operator begin_name begin_name other end_name begin_operator DOT end_operator begin_name implementation vendor end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name implementation url end_name begin_operator EQ end_operator begin_name begin_name other end_name begin_operator DOT end_operator begin_name implementation url end_name end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_call begin_name begin_name reference end_name begin_operator DOT end_operator begin_name get ref id end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_name reference end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name jakarta oro regexp test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the entry nested element return an entry nested element to be configured end_comment begin_type begin_specifier end_specifier begin_name entry end_name end_type begin_name create entry end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name entry end_name end_type begin_name e end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name entry end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name e end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirector 7 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name expected out end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name expected err end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name expected out end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name expected out end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name expected err end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name expected err end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the j unit setup method throws exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name project end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test basedir triple call end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dir 1 end_name begin_init begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dir 2 end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name test base dirs end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_call begin_name begin_name dir 1 end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr begin_operator UNP end_operator begin_expr begin_call begin_name begin_name dir 2 end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr begin_operator UNP end_operator begin_expr begin_call begin_name begin_name dir 1 end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test path end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment doesn t make sense for c l use the logger config end_comment begin_comment set the error print stream param err the error stream end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set error print stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name err end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name err end_name end_name begin_operator EQ end_operator begin_name err end_name end_expr end_expr_stmt end_block 
 begin_comment add an arbitrary resource collection param rc the resource collection to add since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name rc end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name get path end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment registers a local dtd that will be used when parsing an ejb descriptor when the dtd s public identifier is found in an xml document the parser will reference the local dtd rather than the remote dtd this enables xml documents to be processed even when the public dtd isn t available param public id the dtd s public identifier param location the location of the local dtd copy the location may either be a resource found on the classpath or a local file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name register dtd end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name public id end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name location end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name public id end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name location end_name begin_operator EQT end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name class loader end_name begin_operator DOT end_operator begin_name get system resource end_name end_name begin_argument_list begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name resource dtds end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name public id end_name end_expr end_argument begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dtd file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name dtd file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name dtd file end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file dtds end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name public id end_name end_expr end_argument begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name stop end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name stop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name get err end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name close end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get out end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name close end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment plain impossible end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment don t scan when we have no zipfile since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name scan end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name src end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the name of the package param name the package name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get method for the reference table it can be used to hook dynamic references and to modify some references on the fly for example for delayed evaluation it is important to make sure that the processing that is done inside is not calling get indirectly param key lookup key return mapped value end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name get end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name key end_name end_decl end_param end_parameter_list begin_block begin_comment system out println ant ref table get key end_comment begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name get real end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name unknown element end_name end_expr end_condition begin_then begin_block begin_comment make sure that end_comment begin_decl_stmt begin_decl begin_type begin_name unknown element end_name end_type begin_name ue end_name begin_init begin_expr begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ue end_name begin_operator DOT end_operator begin_name maybe configure end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name o end_name begin_operator EQ end_operator begin_call begin_name begin_name ue end_name begin_operator DOT end_operator begin_name get real thing end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name o end_name end_expr end_return end_block 
 begin_comment adds text to the task using the wrapper param buf a character array of the text within the element will not be code null code param start the start element in the array param count the number of characters to read from the array end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name characters end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name char end_name begin_index end_index end_name end_type begin_name buf end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name start end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name count end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name wrapper end_name begin_operator DOT end_operator begin_name add text end_name end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr begin_name start end_name end_expr end_argument begin_argument begin_expr begin_name count end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment executes the task p builds a command line to execute cleartool and then calls exec s run method to execute the command line throws build exception if the command fails and failonerr is set to true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name command line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name a proj end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment default the viewpath to basedir if it is not specified end_comment begin_if begin_condition begin_expr begin_call begin_name get view path end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set view path end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name a proj end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment build the command line from what we got the format is end_comment begin_comment cleartool update options viewpath end_comment begin_comment as specified in the cleartool exe help end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get clear tool command end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name command update end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment check the command line options end_comment begin_expr_stmt begin_expr begin_call begin_name check options end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment for debugging end_comment begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get fail on err end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get view path basename end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name run end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name is failure end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get fail on err end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment check if this object is configured correctly as a nested element end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name type end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name type end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name provider list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment pass output sent to system out to the new project param output a line of output since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name ant end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ant end_name begin_operator DOT end_operator begin_name handle output end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name handle output end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment do the work by building the command line and then calling it throws build exception if validation or execution failed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name net command end_name end_type begin_name command end_name begin_init begin_expr begin_call begin_name create net command end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment set up response file options end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name set automatic response file threshold end_name end_name begin_argument_list begin_argument begin_expr begin_name automatic response file threshold end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name set use response file end_name end_name begin_argument_list begin_argument begin_expr begin_name use response file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment fill in args end_comment begin_expr_stmt begin_expr begin_call begin_name fill in shared parameters end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add resources end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add compiler specific options end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name references out of date end_name begin_init begin_expr begin_call begin_name add reference filesets end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get output file timestamp end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment if the refs are out of date force a build end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name force build end_name begin_init begin_expr begin_name references out of date end_name begin_operator GT end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add files and execute end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument begin_argument begin_expr begin_name force build end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the number of failures return the number of failures end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name failure count end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name failures end_name end_expr end_return end_block 
 begin_comment if true stop the build process when there is an error in a test this property is applied on all batch test batchtest and j unit test test however it can possibly be overridden by their own properties param value tt true tt if it should halt otherwise tt false tt since ant 1 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set haltonerror end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name halt on error end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment loads a class through this class loader but defer to the parent class loader this ensures that instances of the returned class will be compatible with instances which have already been loaded on the parent loader param classname the name of the class to be loaded must not be code null code return the required class object exception class not found exception if the requested class does not exist on this loader s classpath end_comment begin_type begin_specifier end_specifier begin_name class end_name end_type begin_name force load system class end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name class not found exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name classname end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name the class end_name begin_init begin_expr begin_call begin_name find loaded class end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name the class end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name the class end_name begin_operator EQ end_operator begin_call begin_name find base class end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name the class end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test bad url end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name is reachable end_name begin_operator DOT end_operator begin_name error bad url end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment executes the task p builds a command line to execute cleartool and then calls exec s run method to execute the command line throws build exception if the command fails and failonerr is set to true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name command line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name a proj end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment default the viewpath to basedir if it is not specified end_comment begin_if begin_condition begin_expr begin_call begin_name get view path end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set view path end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name a proj end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment build the command line from what we got the format is end_comment begin_comment cleartool lock options end_comment begin_comment as specified in the cleartool exe help end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get clear tool command end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name command unlock end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment check the command line options end_comment begin_expr_stmt begin_expr begin_call begin_name check options end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment for debugging end_comment begin_comment system out println command line to string end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get fail on err end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get op type end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name run end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name is failure end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get fail on err end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment run the specified execute object param exe the execute instance representing the external process throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run exec end_name begin_parameter_list begin_param begin_decl begin_type begin_name execute end_name end_type begin_name exe end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name total files end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name total dirs end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name have executed end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name file names end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name base dirs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name current type end_name begin_init begin_expr begin_name type end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name abstract file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator LPAR end_operator begin_name abstract file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name fs end_name begin_operator UNP end_operator begin_name dir set end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file dir both end_name begin_operator DOT end_operator begin_name dir end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name type end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name type end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name current type end_name begin_operator EQ end_operator begin_name begin_name file dir both end_name begin_operator DOT end_operator begin_name dir end_name end_name end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name base end_name begin_init begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file dir both end_name begin_operator DOT end_operator begin_name dir end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name current type end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s end_name begin_init begin_expr begin_call begin_name get files end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument begin_argument begin_expr begin_name ds end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name s end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name total files end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file names end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name s end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name base dirs end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file dir both end_name begin_operator DOT end_operator begin_name file end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name current type end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s end_name begin_init begin_expr begin_call begin_name get dirs end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument begin_argument begin_expr begin_name ds end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name s end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name total dirs end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file names end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name s end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name base dirs end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name file names end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_name skip empty end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name included count end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name file dir both end_name begin_operator DOT end_operator begin_name dir end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name current type end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files count end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name file dir both end_name begin_operator DOT end_operator begin_name file end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name current type end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included dirs count end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name base end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name included count end_name begin_operator GT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name parallel end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name file names end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file names end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name s end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name command end_name begin_init begin_expr begin_call begin_name get commandline end_name begin_argument_list begin_argument begin_expr begin_name begin_name s end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name base end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name describe command end_name end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set commandline end_name end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name redirector element end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name setup redirector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name redirector element end_name begin_operator DOT end_operator begin_name configure end_name end_name begin_argument_list begin_argument begin_expr begin_name redirector end_name end_expr end_argument begin_argument begin_expr begin_name begin_name s end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name redirector element end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name have executed end_name end_expr end_condition begin_then begin_block begin_comment need to reset the stream handler to restart end_comment begin_comment reading of pipes end_comment begin_comment go ahead and do it always w nested redirectors end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set stream handler end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name create handler end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name run execute end_name begin_argument_list begin_argument begin_expr begin_name exe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name have executed end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name file names end_name begin_operator DOT end_operator begin_name remove all elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name base dirs end_name begin_operator DOT end_operator begin_name remove all elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_name resources end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name resource end_name end_type begin_name res end_name begin_init begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name is exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name ignore missing end_name end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name base end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name res end_name begin_operator UNP end_operator begin_name file resource end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file resource end_name end_type begin_name fr end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file resource end_name begin_operator RPAR end_operator begin_name res end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name base end_name begin_operator EQ end_operator begin_call begin_name begin_name fr end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name base end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_call begin_name begin_name fr end_name begin_operator DOT end_operator begin_name get file end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name restrict end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name name end_name end_expr end_expr_stmt end_block end_then end_if begin_operator UNP end_operator begin_expr_stmt begin_expr begin_name base end_name end_expr end_expr_stmt end_block begin_expr_stmt begin_expr begin_operator DOT end_operator begin_name length end_name begin_operator EQT end_operator end_expr end_expr_stmt end_while end_block begin_block begin_continue end_continue end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name is exists end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file dir both end_name begin_operator DOT end_operator begin_name dir end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name type end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name total files end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file dir both end_name begin_operator DOT end_operator begin_name file end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name type end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name total dirs end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_continue end_continue end_block end_else end_if end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name base dirs end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file names end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name parallel end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name command end_name begin_init begin_expr begin_call begin_name get commandline end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name base end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name describe command end_name end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set commandline end_name end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name redirector element end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name setup redirector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name redirector element end_name begin_operator DOT end_operator begin_name configure end_name end_name begin_argument_list begin_argument begin_expr begin_name redirector end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name redirector element end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name have executed end_name end_expr end_condition begin_then begin_block begin_comment need to reset the stream handler to restart end_comment begin_comment reading of pipes end_comment begin_comment go ahead and do it always w nested redirectors end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set stream handler end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name create handler end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name run execute end_name begin_argument_list begin_argument begin_expr begin_name exe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name have executed end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file names end_name begin_operator DOT end_operator begin_name remove all elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name base dirs end_name begin_operator DOT end_operator begin_name remove all elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_try end_block 
 begin_comment get a new document instance return the document since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name document end_name end_type begin_name new document end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name jaxp utils end_name begin_operator DOT end_operator begin_name get document builder end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name new document end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name rm dir end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument begin_argument begin_expr begin_name dsfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment format an elapsed time into a plurialization correct string it is limited only to report elapsed time in minutes and seconds and has the following behavior ul li minutes are not displayed when 0 ie 45 seconds li li seconds are always displayed in plural form ie 0 seconds or 10 seconds except for 1 ie 1 second li ul param millis the elapsed time to report in milliseconds return the formatted text in minutes seconds end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name format elapsed time end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name millis end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name seconds end_name begin_init begin_expr begin_name millis end_name begin_operator SLASH end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name minutes end_name begin_init begin_expr begin_name seconds end_name begin_operator SLASH end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name begin_index end_index end_type begin_name args end_name begin_init begin_expr begin_block begin_expr begin_operator UNP end_operator begin_call begin_name long end_name begin_argument_list begin_argument begin_expr begin_name minutes end_name end_expr end_argument end_argument_list end_call end_expr begin_expr begin_operator UNP end_operator begin_call begin_name long end_name begin_argument_list begin_argument begin_expr begin_name seconds end_name begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_block end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name minute seconds end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment the string that files must end in to be renamed param from the extension of files being renamed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set from extension end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name from end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name from extension end_name begin_operator EQ end_operator begin_name from end_name end_expr end_expr_stmt end_block 
 begin_comment ignore exception end_comment begin_comment flag controlling whether to break the build on an error param fail on error the new fail on error value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fail on error end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name fail on error end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name fail on error end_name end_name begin_operator EQ end_operator begin_name fail on error end_name end_expr end_expr_stmt end_block 
 begin_comment convert regex option flag characters to regex options dl li g regexp replace all li li i regexp match case insensitive li li m regexp match multiline li li s regexp match singleline li dl param flags the string containing the flags return the regexp option bits end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name convert regex options end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name flags end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name flags end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name options end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name flags end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name options end_name begin_operator UNP end_operator begin_name begin_name regexp end_name begin_operator DOT end_operator begin_name replace all end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name flags end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name options end_name begin_operator UNP end_operator begin_name begin_name regexp end_name begin_operator DOT end_operator begin_name match case insensitive end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name flags end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name options end_name begin_operator UNP end_operator begin_name begin_name regexp end_name begin_operator DOT end_operator begin_name match multiline end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name flags end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name options end_name begin_operator UNP end_operator begin_name begin_name regexp end_name begin_operator DOT end_operator begin_name match singleline end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name options end_name end_expr end_return end_block 
 begin_comment write a single attribute value out param writer the writer to which the attribute is written param value the attribute value throws io exception if the attribute value cannot be written end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write value end_name begin_parameter_list begin_param begin_decl begin_type begin_name print writer end_name end_type begin_name writer end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name name length end_name begin_init begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name jar encoding end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_name length end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name name length end_name begin_operator GT end_operator begin_name max name value length end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name name length end_name begin_operator GT end_operator begin_name max name length end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name eol end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name value end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name value end_name end_expr end_expr_stmt end_block end_else end_if begin_while begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name jar encoding end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_name length end_name begin_operator GT end_operator begin_name max section length end_name end_expr end_condition begin_block begin_comment try to find a max line length byte section end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name break index end_name begin_init begin_expr begin_name max section length end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name break index end_name begin_operator GE end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name break index end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name section end_name begin_init begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name break index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name section end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name jar encoding end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_name length end_name begin_operator GT end_operator begin_name max section length end_name begin_operator UNP end_operator begin_name break index end_name begin_operator GT end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name break index end_name begin_operator MMINUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name section end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name break index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_if begin_condition begin_expr begin_name break index end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name section end_name begin_operator PLUS end_operator begin_name eol end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name break index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name begin_operator PLUS end_operator begin_name eol end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment ignored end_comment begin_comment resolve the entity see org xml sax entity resolver resolve entity string string param public id the public identifier or code null code if none is available param system id the system identifier provided in the xml document will not be code null code return an inputsource for this identifier throws sax exception if there is a problem end_comment begin_type begin_specifier end_specifier begin_name input source end_name end_type begin_name resolve entity end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name public id end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name system id end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name public id end_name end_name begin_operator EQ end_operator begin_name public id end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dtd file end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name file dt ds end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name public id end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name dtd file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name owning task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name public id end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name dtd file end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_operator UNP end_operator begin_call begin_name input source end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name dtd file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name file not found exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name dtd resource name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name resource dt ds end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name public id end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name dtd resource name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get resource as stream end_name begin_argument_list begin_argument begin_expr begin_name dtd resource name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name is end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name owning task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name public id end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name dtd resource name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_operator UNP end_operator begin_call begin_name input source end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name dtd url end_name begin_init begin_expr begin_operator LPAR end_operator begin_name url end_name begin_operator RPAR end_operator begin_call begin_name begin_name url dt ds end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name public id end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name dtd url end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name begin_init begin_expr begin_call begin_name begin_name dtd url end_name begin_operator DOT end_operator begin_name open stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name owning task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name public id end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name dtd url end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_operator UNP end_operator begin_call begin_name input source end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name owning task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name public id end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name system id end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no empty schema namespace end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name schema validate end_name begin_operator DOT end_operator begin_name schema location end_name begin_operator DOT end_operator begin_name error no uri end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment search parent directories for the build file p takes the given target as a suffix to append to each parent directory in search of a build file once the root of the file system has been reached an exception is thrown param start leaf directory of search must not be code null code param suffix suffix filename to look for in parents must not be code null code return a handle to the build file if one is found exception build exception if no build file is found end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name find build file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name start end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name suffix end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name msg output level end_name begin_operator GE end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name suffix end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name parent end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name start end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name suffix end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment check if the target file exists in the current directory end_comment begin_while begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_comment change to parent directory end_comment begin_expr_stmt begin_expr begin_name parent end_name begin_operator EQ end_operator begin_call begin_name get parent file end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment if parent is null then we are at the root of the fs end_comment begin_comment complain that we can t find the build file end_comment begin_if begin_condition begin_expr begin_name parent end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment refresh our file handle end_comment begin_expr_stmt begin_expr begin_name file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name suffix end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_name file end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name error end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get input handler end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert same end_name begin_argument_list begin_argument begin_expr begin_name ih end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get input handler end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name assertion failed error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name error end_name begin_operator EQ end_operator begin_name e end_name end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if end_block 
 begin_comment factory method to create a class loader for loading classes from a given path param parent the parent classloader for the new loader param path the path from which classes are to be loaded return an appropriate classloader end_comment begin_type begin_specifier end_specifier begin_name ant class loader end_name end_type begin_name create class loader end_name begin_parameter_list begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name path end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name ant class loader end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get content type end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name type end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name type end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator UNP end_operator begin_call begin_name begin_name type end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name type end_name end_expr end_return end_block end_then end_if begin_comment must be like text plain charset windows 1251 end_comment begin_return begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_name type end_name begin_operator UNP end_operator begin_operator QM end_operator begin_name type end_name begin_operator DP end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name charset end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle flush end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name system out end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment return the component name uses project helper gen component name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get component name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name gen component name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get namespace end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get tag end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment run a target expect for any build exception param target target to run param cause information string to reader of report end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name expect build exception end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name cause end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument begin_argument begin_expr begin_name cause end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment write a properties file this method uses code properties store code and thus may throw exceptions that occur while writing the file param properties the properties object to be written param dir the directory for which we are writing the links end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write property file end_name begin_parameter_list begin_param begin_decl begin_type begin_name properties end_name end_type begin_name properties end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name buffered output stream end_name end_type begin_name bos end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name bos end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered output stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr begin_name link file name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name store end_name end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_name test runner end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name haltonerror end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name filtertrace end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name haltonfailure end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name haltonerror end_name end_expr end_argument begin_argument begin_expr begin_name filtertrace end_name end_expr end_argument begin_argument begin_expr begin_name haltonfailure end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name test runner end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get class loader end_name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment use the classloader that loaded this class otherwise end_comment begin_comment it will not be able to run inner classes if this test end_comment begin_comment is ran in non forked mode end_comment begin_expr_stmt begin_expr begin_call begin_name add formatter end_name begin_argument_list begin_argument begin_expr begin_name formatter end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the regular expression to match against param pattern the regular expression pattern end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set pattern end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name pattern end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name regular expression end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name regular expression end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name regular expression end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name regular expression end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr begin_name pattern end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for scp to message param session the scp session to use param a local file the local file param a remote path the remote path end_comment begin_specifier end_specifier begin_name scp to message end_name begin_parameter_list begin_param begin_decl begin_type begin_name session end_name end_type begin_name session end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name a local file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name a remote path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name session end_name end_expr end_argument begin_argument begin_expr begin_name a local file end_name end_expr end_argument begin_argument begin_expr begin_name a remote path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the elements of the catalog resource location objects return the elements of the catalog resource location objects end_comment begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name get elements end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name elements end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test run adapter error end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test resource end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test properties end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment overrides the version of data type to recurse on all data type child elements that may have been added param stk the stack of data types to use recursively param p the project to use to dereference the references throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name die on circular reference end_name begin_parameter_list begin_param begin_decl begin_type begin_name stack end_name end_type begin_name stk end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is checked end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name die on circular reference end_name end_name begin_argument_list begin_argument begin_expr begin_name stk end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name mapper end_name begin_index end_index end_type begin_name m end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name mapper end_name begin_index end_index end_name begin_block begin_expr begin_name input mapper end_name end_expr begin_expr begin_name output mapper end_name end_expr begin_expr begin_name error mapper end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name m end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name m end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name stk end_name begin_operator DOT end_operator begin_name push end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name m end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name m end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name die on circular reference end_name begin_argument_list begin_argument begin_expr begin_name stk end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stk end_name begin_operator DOT end_operator begin_name pop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_decl_stmt begin_decl begin_type begin_name vector end_name begin_index end_index end_type begin_name v end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name vector end_name begin_index end_index end_name begin_block begin_expr begin_name input filter chains end_name end_expr begin_expr begin_name output filter chains end_name end_expr begin_expr begin_name error filter chains end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name v end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name v end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name fci end_name begin_init begin_expr begin_name begin_name v end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name fci end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name filter chain end_name end_type begin_name fc end_name begin_init begin_expr begin_operator LPAR end_operator begin_name filter chain end_name begin_operator RPAR end_operator begin_call begin_name begin_name fci end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stk end_name begin_operator DOT end_operator begin_name push end_name end_name begin_argument_list begin_argument begin_expr begin_name fc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fc end_name begin_operator DOT end_operator begin_name die on circular reference end_name end_name begin_argument_list begin_argument begin_expr begin_name stk end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stk end_name begin_operator DOT end_operator begin_name pop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if end_block end_for begin_expr_stmt begin_expr begin_call begin_name set checked end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment write an entry s header information to a header buffer param outbuf the tar entry header buffer to fill in end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write entry header end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name outbuf end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name offset end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator EQ end_operator begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name get name bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name end_expr end_argument begin_argument begin_expr begin_name outbuf end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name namelen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator EQ end_operator begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name get octal bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name mode end_name end_name end_expr end_argument begin_argument begin_expr begin_name outbuf end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name modelen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator EQ end_operator begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name get octal bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name user id end_name end_name end_expr end_argument begin_argument begin_expr begin_name outbuf end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name uidlen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator EQ end_operator begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name get octal bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name group id end_name end_name end_expr end_argument begin_argument begin_expr begin_name outbuf end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name gidlen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator EQ end_operator begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name get long octal bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name size end_name end_name end_expr end_argument begin_argument begin_expr begin_name outbuf end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name sizelen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator EQ end_operator begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name get long octal bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name mod time end_name end_name end_expr end_argument begin_argument begin_expr begin_name outbuf end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name modtimelen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name cs offset end_name begin_init begin_expr begin_name offset end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name c end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name c end_name begin_operator LT end_operator begin_name chksumlen end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name c end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name outbuf end_name begin_index begin_expr begin_name offset end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_name begin_name outbuf end_name begin_index begin_expr begin_name offset end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name link flag end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator EQ end_operator begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name get name bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name link name end_name end_name end_expr end_argument begin_argument begin_expr begin_name outbuf end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name namelen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator EQ end_operator begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name get name bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name magic end_name end_name end_expr end_argument begin_argument begin_expr begin_name outbuf end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name magiclen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator EQ end_operator begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name get name bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name user name end_name end_name end_expr end_argument begin_argument begin_expr begin_name outbuf end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name unamelen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator EQ end_operator begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name get name bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name group name end_name end_name end_expr end_argument begin_argument begin_expr begin_name outbuf end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name gnamelen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator EQ end_operator begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name get octal bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dev major end_name end_name end_expr end_argument begin_argument begin_expr begin_name outbuf end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name devlen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator EQ end_operator begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name get octal bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dev minor end_name end_name end_expr end_argument begin_argument begin_expr begin_name outbuf end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name devlen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_name offset end_name begin_operator LT end_operator begin_name begin_name outbuf end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name begin_name outbuf end_name begin_index begin_expr begin_name offset end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_while begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name chk end_name begin_init begin_expr begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name compute check sum end_name end_name begin_argument_list begin_argument begin_expr begin_name outbuf end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name get check sum octal bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name chk end_name end_expr end_argument begin_argument begin_expr begin_name outbuf end_name end_expr end_argument begin_argument begin_expr begin_name cs offset end_name end_expr end_argument begin_argument begin_expr begin_name chksumlen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment does the adding and merging throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment be sure everything has been set end_comment begin_if begin_condition begin_expr begin_name outfile end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name have add files end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name have merge files end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name outfile end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name compress end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name jlink end_name end_type begin_name linker end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name jlink end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name linker end_name begin_operator DOT end_operator begin_name set outfile end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name outfile end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name linker end_name begin_operator DOT end_operator begin_name set compression end_name end_name begin_argument_list begin_argument begin_expr begin_name compress end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name have merge files end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name mergefiles end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name linker end_name begin_operator DOT end_operator begin_name add merge files end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name mergefiles end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name have add files end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name addfiles end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name linker end_name begin_operator DOT end_operator begin_name add add files end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name addfiles end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name linker end_name begin_operator DOT end_operator begin_name link end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test simple entry end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name resource location end_name end_type begin_name dtd end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name resource location end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dtd end_name begin_operator DOT end_operator begin_name set public id end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name sysid end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dtd end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_name sysid end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name catalog end_name begin_operator DOT end_operator begin_name add dtd end_name end_name begin_argument_list begin_argument begin_expr begin_name dtd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dtd file end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name sysid end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name input source end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name catalog end_name begin_operator DOT end_operator begin_name resolve entity end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name to url string end_name begin_argument_list begin_argument begin_expr begin_name dtd file end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name get system id end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add failure end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name assertion failed error end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment set the executable to run all file separators in the string are converted to the platform specific value param executable the string executable name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set executable end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name executable end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name executable end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name executable end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name executable end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name executable end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the haltonerror attribute param value a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set haltonerror end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name halt on error end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment sets the target object to proxy for param o the target object must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set proxy end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name o end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name proxy end_name end_name begin_operator EQ end_operator begin_name o end_name end_expr end_expr_stmt end_block 
 begin_comment get the uri root value return the value end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get uriroot end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name uriroot end_name end_expr end_return end_block 
 begin_comment get the dynamic attribute return true if the property set is to be evalulated each time it is used end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get dynamic end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_call begin_name get ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name dynamic end_name begin_operator DP end_operator begin_name dynamic end_name end_expr end_return end_block 
 begin_comment set the error encoding param error encoding code string code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set error encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name error encoding end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name error encoding end_name end_name begin_operator EQ end_operator begin_name error encoding end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test tail lines skip end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name expected end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_name expected end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment fails for the same reason as default mode in do end test 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test unix line separator end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name test unix line separator end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name assertion failed error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try end_block 
 begin_comment check style visibility modifier on end_comment begin_comment generate a report based on the document created by the merge return the report end_comment begin_type begin_specifier end_specifier begin_name aggregate transformer end_name end_type begin_name create report end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name aggregate transformer end_name end_type begin_name transformer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name aggregate transformer end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name transformers end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name transformer end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name transformer end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test file end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test properties end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a name entry on the include list return a name entry object to be configured end_comment begin_type begin_specifier end_specifier begin_name begin_name pattern set end_name begin_operator DOT end_operator begin_name name entry end_name end_name end_type begin_name create include end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name used matching task end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name create include end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment sets the comment string param comment the comment string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set comment end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name comment end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m comment end_name begin_operator EQ end_operator begin_name comment end_name end_expr end_expr_stmt end_block 
 begin_comment load default task or type definitions just the names no class loading caches results between calls to reduce overhead param type true for typedefs false for taskdefs return a mapping from definition names to class names throws build exception if there was some problem loading or parsing the definitions list end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name properties end_name end_type begin_name get default definitions end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name type end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name idx end_name begin_init begin_expr begin_name type end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name default definitions end_name begin_index begin_expr begin_name idx end_name end_expr end_index end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name resource end_name begin_init begin_expr begin_name type end_name begin_operator QM end_operator begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name typedefs properties resource end_name end_name begin_operator DP end_operator begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name taskdef properties resource end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name error string end_name begin_init begin_expr begin_name type end_name begin_operator QM end_operator begin_name error no type list load end_name begin_operator DP end_operator begin_name error no task list load end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name in end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name in end_name begin_operator EQ end_operator begin_call begin_name begin_name component helper end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get resource as stream end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name resource end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name in end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error string end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name load end_name end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name default definitions end_name begin_index begin_expr begin_name idx end_name end_expr end_index end_name begin_operator EQ end_operator begin_name p end_name end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error string end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block end_then end_if begin_return begin_expr begin_name begin_name default definitions end_name begin_index begin_expr begin_name idx end_name end_expr end_index end_name end_expr end_return end_block 
 begin_comment end_comment begin_comment static utility methods could be placed somewhere else end_comment begin_comment end_comment begin_comment xml does not do c like interpretation of strings i e n r t etc this method processes n r t f also subs s n r t f a trailing will be ignored param input raw string with possible embedded s return converted string end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name resolve back slash end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name input end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name resolve back slash end_name end_name begin_argument_list begin_argument begin_expr begin_name input end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment delegate the work to the ant task instance after setting it up throws build exception on validation failure or if the target didn t execute end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name callee end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name init end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name target set end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name callee end_name begin_operator DOT end_operator begin_name set antfile end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name callee end_name begin_operator DOT end_operator begin_name set inherit all end_name end_name begin_argument_list begin_argument begin_expr begin_name inherit all end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name callee end_name begin_operator DOT end_operator begin_name set inherit refs end_name end_name begin_argument_list begin_argument begin_expr begin_name inherit refs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name callee end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment handles the start of a project element a project handler is created and initialised with the element name and attributes param uri the namespace uri for this element param tag the name of the element being started will not be code null code param qname the qualified name for this element param attrs attributes of the element being started will not be code null code exception org xml sax sax parse exception if the tag given is not code project code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name tag end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name qname end_name end_decl end_param begin_param begin_decl begin_type begin_name attributes end_name end_type begin_name attrs end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax parse exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name ant handler end_name end_type begin_name next end_name begin_init begin_expr begin_call begin_name begin_name current handler end_name begin_operator DOT end_operator begin_name on start child end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument begin_argument begin_expr begin_name tag end_name end_expr end_argument begin_argument begin_expr begin_name qname end_name end_expr end_argument begin_argument begin_expr begin_name attrs end_name end_expr end_argument begin_argument begin_expr begin_name context end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ant handlers end_name begin_operator DOT end_operator begin_name push end_name end_name begin_argument_list begin_argument begin_expr begin_name current handler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name current handler end_name begin_operator EQ end_operator begin_name next end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name current handler end_name begin_operator DOT end_operator begin_name on start element end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument begin_argument begin_expr begin_name tag end_name end_expr end_argument begin_argument begin_expr begin_name qname end_name end_expr end_argument begin_argument begin_expr begin_name attrs end_name end_expr end_argument begin_argument begin_expr begin_name context end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment parse an entry s header information from a header buffer param header the tar entry header buffer to get information from end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name parse tar header end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name header end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name offset end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name parse name end_name end_name begin_argument_list begin_argument begin_expr begin_name header end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name namelen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator UNP end_operator begin_name namelen end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name mode end_name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name int end_name begin_operator RPAR end_operator begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name parse octal end_name end_name begin_argument_list begin_argument begin_expr begin_name header end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name modelen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator UNP end_operator begin_name modelen end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name user id end_name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name int end_name begin_operator RPAR end_operator begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name parse octal end_name end_name begin_argument_list begin_argument begin_expr begin_name header end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name uidlen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator UNP end_operator begin_name uidlen end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name group id end_name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name int end_name begin_operator RPAR end_operator begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name parse octal end_name end_name begin_argument_list begin_argument begin_expr begin_name header end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name gidlen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator UNP end_operator begin_name gidlen end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name size end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name parse octal end_name end_name begin_argument_list begin_argument begin_expr begin_name header end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name sizelen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator UNP end_operator begin_name sizelen end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name mod time end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name parse octal end_name end_name begin_argument_list begin_argument begin_expr begin_name header end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name modtimelen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator UNP end_operator begin_name modtimelen end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator UNP end_operator begin_name chksumlen end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name link flag end_name end_name begin_operator EQ end_operator begin_name begin_name header end_name begin_index begin_expr begin_name offset end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name link name end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name parse name end_name end_name begin_argument_list begin_argument begin_expr begin_name header end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name namelen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator UNP end_operator begin_name namelen end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name magic end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name parse name end_name end_name begin_argument_list begin_argument begin_expr begin_name header end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name magiclen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator UNP end_operator begin_name magiclen end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name user name end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name parse name end_name end_name begin_argument_list begin_argument begin_expr begin_name header end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name unamelen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator UNP end_operator begin_name unamelen end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name group name end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name parse name end_name end_name begin_argument_list begin_argument begin_expr begin_name header end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name gnamelen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator UNP end_operator begin_name gnamelen end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dev major end_name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name int end_name begin_operator RPAR end_operator begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name parse octal end_name end_name begin_argument_list begin_argument begin_expr begin_name header end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name devlen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name offset end_name begin_operator UNP end_operator begin_name devlen end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dev minor end_name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name int end_name begin_operator RPAR end_operator begin_call begin_name begin_name tar utils end_name begin_operator DOT end_operator begin_name parse octal end_name end_name begin_argument_list begin_argument begin_expr begin_name header end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name devlen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment clone our path and add all explicitly specified file sets as well patch in the jar attribute as a new fileset if it is defined return a path that contains all files to sign since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create unified source path end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p end_name begin_init begin_expr begin_name path end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_operator LPAR end_operator begin_name path end_name begin_operator RPAR end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name s end_name begin_init begin_expr begin_call begin_name create unified sources end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_name p end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set system error end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment add a propertyset to the total set param ps the new property set since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add sysproperties end_name begin_parameter_list begin_param begin_decl begin_type begin_name sys properties end_name end_type begin_name ps end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name variables end_name begin_operator DOT end_operator begin_name add all end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name ps end_name begin_operator DOT end_operator begin_name variables end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name property sets end_name begin_operator DOT end_operator begin_name add all end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name ps end_name begin_operator DOT end_operator begin_name property sets end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the size compared to by this size resource selector return the long resource size end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name get size end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name size end_name end_expr end_return end_block 
 begin_comment end_comment begin_comment core main body end_comment begin_comment the main execution throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name filename end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name filename end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment get the recorder entry end_comment begin_decl_stmt begin_decl begin_type begin_name recorder entry end_name end_type begin_name recorder end_name begin_init begin_expr begin_call begin_name get recorder end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment set the values on the recorder end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name recorder end_name begin_operator DOT end_operator begin_name set message output level end_name end_name begin_argument_list begin_argument begin_expr begin_name loglevel end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name recorder end_name begin_operator DOT end_operator begin_name set emacs mode end_name end_name begin_argument_list begin_argument begin_expr begin_name emacs mode end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name start end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name start end_name begin_operator DOT end_operator begin_name boolean value end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name recorder end_name begin_operator DOT end_operator begin_name reopen file end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name recorder end_name begin_operator DOT end_operator begin_name set record state end_name end_name begin_argument_list begin_argument begin_expr begin_name start end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name recorder end_name begin_operator DOT end_operator begin_name set record state end_name end_name begin_argument_list begin_argument begin_expr begin_name start end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name recorder end_name begin_operator DOT end_operator begin_name close file end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block 
 begin_comment if set to true the return value from executing the pvcs commands are ignored optional default false param b a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set ignore return code end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name ignorerc end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment returns the child wrapper at the specified position within the list param index the index of the child to return return the child wrapper at position code index code within the list end_comment begin_type begin_specifier end_specifier begin_name runtime configurable end_name end_type begin_name get child end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name index end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name runtime configurable end_name begin_operator RPAR end_operator begin_call begin_name begin_name children end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name index end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment creates a nested classpath element return classpath end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name compile classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name compile classpath end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name compile classpath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment return the core classloader to use for this project this may be code null code indicating that the parent classloader should be used return the core classloader to use for this project end_comment begin_type begin_specifier end_specifier begin_name class loader end_name end_type begin_name get core loader end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name core loader end_name end_expr end_return end_block 
 begin_comment construct a new code lead pipe input stream code with the specified buffer size param size the size of the circular buffer end_comment begin_specifier end_specifier begin_name lead pipe input stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name size end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set buffer size end_name begin_argument_list begin_argument begin_expr begin_name size end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment does the command line argument processing common to classic and modern doesn t add the files to compile param cmd the command line param use debug level if true set set the debug level with the g switch return the command line end_comment begin_type begin_specifier end_specifier begin_name commandline end_name end_type begin_name setup javac commandline switches end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name use debug level end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name begin_init begin_expr begin_call begin_name get compile classpath end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment for sourcepath use the sourcepath value if present end_comment begin_comment otherwise default to the srcdir value end_comment begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name sourcepath end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name compile sourcepath end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name sourcepath end_name begin_operator EQ end_operator begin_name compile sourcepath end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name sourcepath end_name begin_operator EQ end_operator begin_name src end_name end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name memory parameter prefix end_name begin_init begin_expr begin_call begin_name assume java 11 end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name memory initial size end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name is forked javac end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name memory parameter prefix end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name memory initial size end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name memory maximum size end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name is forked javac end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name memory parameter prefix end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name memory maximum size end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get nowarn end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name deprecation end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name dest dir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set file end_name begin_argument_list begin_argument begin_expr begin_name dest dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment just add sourcepath to classpath for jdk 1 1 end_comment begin_comment as well as bootclasspath and extdirs end_comment begin_if begin_condition begin_expr begin_call begin_name assume java 11 end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name cp end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name bp end_name begin_init begin_expr begin_call begin_name get boot class path end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name bp end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cp end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name bp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name extdirs end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cp end_name begin_operator DOT end_operator begin_name add extdirs end_name end_name begin_argument_list begin_argument begin_expr begin_name extdirs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name cp end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cp end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name sourcepath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set path end_name begin_argument_list begin_argument begin_expr begin_name cp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set path end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment if the buildfile specifies sourcepath then don t end_comment begin_comment output any sourcepath end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name sourcepath end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set path end_name begin_argument_list begin_argument begin_expr begin_name sourcepath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name target end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name bp end_name begin_init begin_expr begin_call begin_name get boot class path end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name bp end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set path end_name begin_argument_list begin_argument begin_expr begin_name bp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name extdirs end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name extdirs end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set path end_name begin_argument_list begin_argument begin_expr begin_name extdirs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if begin_if begin_condition begin_expr begin_name encoding end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name debug end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name use debug level end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name assume java 11 end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name debug level end_name begin_init begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get debug level end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name debug level end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name debug level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name get no debug argument end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get no debug argument end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_if begin_condition begin_expr begin_name optimize end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name depend end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name assume java 11 end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name assume java 12 end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name verbose end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name add current compiler args end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name cmd end_name end_expr end_return end_block 
 begin_comment ignore end_comment begin_comment certain set methods are part of the ant core interface to tasks and therefore not to be considered for introspection param name the name of the set method param type the type of the set method s parameter return true if the given set method is to be hidden end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is hidden set method end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name class end_name end_type begin_name type end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name tools end_name begin_operator DOT end_operator begin_name ant end_name begin_operator DOT end_operator begin_name location end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name equals end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name type end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name lang end_name begin_operator DOT end_operator begin_name string end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name equals end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name type end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment a flag that tells the compiler not to read in the compiler settings files csc rsp in its bin directory and then the local directory param enabled the new no config value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set no config end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name enabled end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name noconfig end_name begin_operator EQ end_operator begin_name enabled end_name end_expr end_expr_stmt end_block 
 begin_comment handle the project tag param uri the namespace uri param name the element tag param qname the element qualified name param attrs the attributes of the element param context the current context return the project handler that handles subelements of project exception sax parse exception if the qualified name is not project end_comment begin_type begin_specifier end_specifier begin_name ant handler end_name end_type begin_name on start child end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name qname end_name end_decl end_param begin_param begin_decl begin_type begin_name attributes end_name end_type begin_name attrs end_name end_decl end_param begin_param begin_decl begin_type begin_name ant xml context end_name end_type begin_name context end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax parse exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name ant core uri end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name project helper 2 end_name begin_operator DOT end_operator begin_name project handler end_name end_name end_expr end_return end_block end_then begin_else begin_block begin_comment if context importlevel 0 end_comment begin_comment we are in an imported file allow top level target end_comment begin_comment if qname equals target end_comment begin_comment return project helper 2 target handler end_comment begin_comment end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name qname end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name sax parse exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name uri end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name ant core uri end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get locator end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name sax parse exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name qname end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get locator end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_else end_if end_block 
 begin_comment adds a system property that tests can access this might be useful to tranfer ant properties to the testcases when jvm forking is not enabled since ant 1 3 deprecated since ant 1 6 param sysp environment variable to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add sysproperty end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name environment end_name begin_operator DOT end_operator begin_name variable end_name end_name end_type begin_name sysp end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get commandline end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add sysproperty end_name begin_argument_list begin_argument begin_expr begin_name sysp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true enables lexer tracing param enable a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set trace lexer end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name enable end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name trace lexer end_name begin_operator EQ end_operator begin_name enable end_name end_expr end_expr_stmt end_block 
 begin_comment set the code input stream code from which to read the standard error of the process param is the code input stream code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set process error stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name err end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name create process error pump end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument begin_argument begin_expr begin_name err end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment set the size of this resource param size the size as a long since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set size end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name size end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name size end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name long end_name begin_argument_list begin_argument begin_expr begin_name size end_name begin_operator GT end_operator begin_name unknown size end_name begin_operator QM end_operator begin_name size end_name begin_operator DP end_operator begin_name unknown size end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return a printable form of this object end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name if cond end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name unless cond end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name connector end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name if cond end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name if cond end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name connector end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name unless cond end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name connector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name unless cond end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment adds a new entry to the archive takes care of duplicates as well param in the stream to read data for the entry from param z out the stream to write to param v path the name this entry shall have in the archive param last modified last modification time for the entry param from archive the original archive we are copying this entry from will be null if we are not copying from an archive param mode the unix permissions to set since ant 1 5 2 throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name zip file end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name in end_name end_decl end_param begin_param begin_decl begin_type begin_name zip output stream end_name end_type begin_name z out end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name v path end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name last modified end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name from archive end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name mode end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name v path end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name duplicate end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name v path end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name duplicate end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name v path end_name begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_comment duplicate equal to add so we continue end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name v path end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name v path end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name v path end_name end_expr end_argument begin_argument begin_expr begin_name v path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name skip writing end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name zip entry end_name end_type begin_name ze end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name zip entry end_name begin_argument_list begin_argument begin_expr begin_name v path end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name set time end_name end_name begin_argument_list begin_argument begin_expr begin_name last modified end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name set method end_name end_name begin_argument_list begin_argument begin_expr begin_name do compress end_name begin_operator QM end_operator begin_name begin_name zip entry end_name begin_operator DOT end_operator begin_name deflated end_name end_name begin_operator DP end_operator begin_name begin_name zip entry end_name begin_operator DOT end_operator begin_name stored end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment zip output stream put next entry expects the zip entry to know its size and the crc sum before you start writing the data when using stored mode unless it is seekable this forces us to process the data twice end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name z out end_name begin_operator DOT end_operator begin_name is seekable end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_name do compress end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name size end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name crc 32 end_name end_type begin_name cal end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name crc 32 end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name mark supported end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment store data into a byte end_comment begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name bos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_operator STAR end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_do begin_block begin_expr_stmt begin_expr begin_name size end_name begin_operator UNP end_operator begin_name count end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name update end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name count end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name count end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name count end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_condition begin_expr begin_name count end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition end_do begin_expr_stmt begin_expr begin_name in end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name byte array input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name mark end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name integer end_name begin_operator DOT end_operator begin_name max value end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_operator STAR end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_do begin_block begin_expr_stmt begin_expr begin_name size end_name begin_operator UNP end_operator begin_name count end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name update end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name count end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name count end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_condition begin_expr begin_name count end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition end_do begin_expr_stmt begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name reset end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name set size end_name end_name begin_argument_list begin_argument begin_expr begin_name size end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name set crc end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name set unix mode end_name end_name begin_argument_list begin_argument begin_expr begin_name mode end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name z out end_name begin_operator DOT end_operator begin_name put next entry end_name end_name begin_argument_list begin_argument begin_expr begin_name ze end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_operator STAR end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_do begin_block begin_if begin_condition begin_expr begin_name count end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name z out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name count end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name count end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_condition begin_expr begin_name count end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition end_do end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name added files end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name v path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the name of the star team view to be acted on return the name of the star team view to be acted on see get url end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get viewname end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name viewname end_name end_name end_expr end_return end_block 
 begin_comment where to find the parser class optional see set classpath param r reference to a classpath defined elsewhere end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set refid end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the directory where ejbdeploy will write temporary files optional defaults to ejbdeploy temp param tempdir the directory name to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set tempdir end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name tempdir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name tempdir end_name end_name begin_operator EQ end_operator begin_name tempdir end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name create dynamic element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_specifier end_specifier begin_name date selector test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a sql transaction to execute return a transaction to be configured end_comment begin_type begin_specifier end_specifier begin_name transaction end_name end_type begin_name create transaction end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name transaction end_name end_type begin_name t end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name transaction end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name transactions end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name t end_name end_expr end_return end_block 
 begin_comment if true append to existing file param append if true append to existing file default is false end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set append end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name append end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name append end_name end_name begin_operator EQ end_operator begin_name append end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test negation incomplete end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test replace end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name original end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file input stream end_name end_type begin_name props file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name props file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name project path end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name original end_name begin_operator DOT end_operator begin_name load end_name end_name begin_argument_list begin_argument begin_expr begin_name props file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name props file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name props file end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name props file end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name original end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name after end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name props file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name project path end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name after end_name begin_operator DOT end_operator begin_name load end_name end_name begin_argument_list begin_argument begin_expr begin_name props file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name props file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name props file end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name props file end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try begin_expr_stmt begin_expr begin_call begin_name assert null end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name after end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name after end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name chain end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name rdr end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_class begin_super begin_name base filter reader end_name end_super begin_argument_list begin_argument begin_expr begin_name rdr end_name end_expr end_argument end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator begin_name replace end_name end_expr end_condition begin_then begin_return begin_expr begin_name with end_name end_expr end_return end_then begin_else begin_return begin_expr begin_name c end_name end_expr end_return end_else end_if end_block end_function end_block end_class end_expr end_return end_block 
 begin_comment helper method to check to see if a websphere ebj 1 1 jar needs to be rebuilt using ejbdeploy called from write jar it sees if the bean classes are the only thing that needs to be updated and either updates the jar with the bean classfile or returns true saying that the whole websphere jar needs to be regened with ejbdeploy this allows faster build times for working developers p the way websphere ejbdeploy works is it creates wrappers for the publicly defined methods as they are exposed in the remote interface if the actual bean changes without changing the the method signatures then only the bean classfile needs to be updated and the rest of the websphere jar file can remain the same if the interfaces ie the method signatures change or if the xml deployment descriptors changed the whole jar needs to be rebuilt with ejbdeploy this is not strictly true for the xml files if the jndi name changes then the jar doesnt have to be rebuild but if the resources references change then it does at this point the websphere jar gets rebuilt if the xml files change at all param generic jar file java io file the generic jar file param websphere jar file java io file the websphere jar file to check to see if it needs to be rebuilt return true if a rebuild is required end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is rebuild required end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name generic jar file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name websphere jar file end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name rebuild end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name jar file end_name end_type begin_name generic jar end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name jar file end_name end_type begin_name was jar end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name newwas jar file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name jar output stream end_name end_type begin_name new jar stream end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name websphere jar file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment only go forward if the generic and the websphere file both exist end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name generic jar file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name generic jar file end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name websphere jar file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name websphere jar file end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment open jar files end_comment begin_expr_stmt begin_expr begin_name generic jar end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name jar file end_name begin_argument_list begin_argument begin_expr begin_name generic jar file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name was jar end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name jar file end_name begin_argument_list begin_argument begin_expr begin_name websphere jar file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name generic entries end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name was entries end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name replace entries end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment get the list of generic jar entries end_comment begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name generic jar end_name begin_operator DOT end_operator begin_name entries end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name jar entry end_name end_type begin_name je end_name begin_init begin_expr begin_operator LPAR end_operator begin_name jar entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name generic entries end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name je end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name je end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment get the list of websphere jar entries end_comment begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name was jar end_name begin_operator DOT end_operator begin_name entries end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name jar entry end_name end_type begin_name je end_name begin_init begin_expr begin_operator LPAR end_operator begin_name jar entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name was entries end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name je end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name je end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment cycle through generic and make sure its in websphere end_comment begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name generic loader end_name begin_init begin_expr begin_call begin_name get class loader from jar end_name begin_argument_list begin_argument begin_expr begin_name generic jar file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name generic entries end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name filepath end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name was entries end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_name filepath end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment file name path match end_comment begin_comment check files see if same end_comment begin_decl_stmt begin_decl begin_type begin_name jar entry end_name end_type begin_name generic entry end_name begin_init begin_expr begin_operator LPAR end_operator begin_name jar entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name generic entries end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name filepath end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name jar entry end_name end_type begin_name was entry end_name begin_init begin_expr begin_operator LPAR end_operator begin_name jar entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name was entries end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name filepath end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name generic entry end_name begin_operator DOT end_operator begin_name get crc end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name was entry end_name begin_operator DOT end_operator begin_name get crc end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name generic entry end_name begin_operator DOT end_operator begin_name get size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name was entry end_name begin_operator DOT end_operator begin_name get size end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name generic entry end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment file are different see if its an object or an interface end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name classname end_name begin_init begin_expr begin_call begin_name begin_name generic entry end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name classname end_name begin_operator EQ end_operator begin_call begin_name begin_name classname end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name classname end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name genclass end_name begin_init begin_expr begin_call begin_name begin_name generic loader end_name begin_operator DOT end_operator begin_name load class end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name genclass end_name begin_operator DOT end_operator begin_name is interface end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment interface changed rebuild jar end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name genclass end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name rebuild end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_break end_break end_block end_then begin_else begin_block begin_comment object class changed update it end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name replace entries end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name filepath end_name end_expr end_argument begin_argument begin_expr begin_name generic entry end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_comment is it the manifest if so ignore it end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name generic entry end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment file other then class changed rebuild end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name generic entry end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name rebuild end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_break end_break end_block end_else end_if end_block end_then end_if end_block end_then begin_else begin_block begin_comment a file doesn t exist rebuild end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name filepath end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name rebuild end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_break end_break end_block end_else end_if end_block end_for begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name rebuild end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name newwas jar file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name websphere jar file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name newwas jar file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name newwas jar file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name new jar stream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name jar output stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name newwas jar file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new jar stream end_name begin_operator DOT end_operator begin_name set level end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment copy files from old websphere jar end_comment begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name was entries end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_name default buffer size end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name bytes read end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name jar entry end_name end_type begin_name je end_name begin_init begin_expr begin_operator LPAR end_operator begin_name jar entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name je end_name begin_operator DOT end_operator begin_name get compressed size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator begin_operator UNP end_operator begin_call begin_name begin_name je end_name begin_operator DOT end_operator begin_name get compressed size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_call begin_name begin_name je end_name begin_operator DOT end_operator begin_name get size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name new jar stream end_name begin_operator DOT end_operator begin_name set level end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name new jar stream end_name begin_operator DOT end_operator begin_name set level end_name end_name begin_argument_list begin_argument begin_expr begin_name jar compress level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_comment update with changed bean class end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name replace entries end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name je end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name je end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment use the entry from the generic jar end_comment begin_expr_stmt begin_expr begin_name je end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name jar entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name replace entries end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name je end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name is end_name begin_operator EQ end_operator begin_call begin_name begin_name generic jar end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list begin_argument begin_expr begin_name je end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment use fle from original websphere jar end_comment begin_expr_stmt begin_expr begin_name is end_name begin_operator EQ end_operator begin_call begin_name begin_name was jar end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list begin_argument begin_expr begin_name je end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name new jar stream end_name begin_operator DOT end_operator begin_name put next entry end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name jar entry end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name je end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name bytes read end_name begin_operator EQ end_operator begin_call begin_name begin_name is end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name new jar stream end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name bytes read end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name is end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name rebuild end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name cnfe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name cnfmsg end_name begin_init begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name cnfe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name cnfmsg end_name end_expr end_argument begin_argument begin_expr begin_name cnfe end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_comment need to close files and perhaps rename output end_comment begin_if begin_condition begin_expr begin_name generic jar end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name generic jar end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name close exception end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_then end_if begin_if begin_condition begin_expr begin_name was jar end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name was jar end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name close exception end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_then end_if begin_if begin_condition begin_expr begin_name new jar stream end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name new jar stream end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name close exception end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name rename end_name end_name begin_argument_list begin_argument begin_expr begin_name newwas jar file end_name end_expr end_argument begin_argument begin_expr begin_name websphere jar file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name rename exception end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name rename exception end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name rebuild end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if end_block end_finally end_try begin_return begin_expr begin_name rebuild end_name end_expr end_return end_block 
 begin_comment get the comment command param cmd containing the command line string with or without the comment flag and string appended end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get comment command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes this breaks clearcase end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag comment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment setter used to store the location of the sun s generic ejb dtd this can be a file on the system or a resource on the classpath param in string the string to use as the dtd location end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set ej bdtd end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name in string end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ejb 11 dtd end_name end_name begin_operator EQ end_operator begin_name in string end_name end_expr end_expr_stmt end_block 
 begin_comment get the parameter value return the parameter value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name value end_name end_expr end_return end_block 
 begin_comment called by the project to let the task initialize properly exception build exception if something goes wrong with the build end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name init end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name xml catalog end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_name reference checker end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name keys end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name boolean end_name begin_index end_index end_name end_type begin_name expect same end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_operator EQ end_operator begin_name keys end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name expect same end_name end_name begin_operator EQ end_operator begin_name expect same end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment build an appropriate exception detailing a specified circular dependency param end the dependency to stop at must not be code null code param stk a stack of dependencies must not be code null code return a build exception detailing the specified circular dependency end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name build exception end_name end_type begin_name make circular exception end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name end end_name end_decl end_param begin_param begin_decl begin_type begin_name stack end_name end_type begin_name stk end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name end end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name c end_name end_decl end_decl_stmt begin_do begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name stk end_name begin_operator DOT end_operator begin_name pop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name end end_name end_expr end_argument end_argument_list end_call end_expr end_condition end_do begin_return begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name sb end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment indicate if the given file is in this loader s path param component the file which is to be checked return true if the file is in the class path end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is in path end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name component end_name end_decl end_param end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name path components end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name path component end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name path component end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name component end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test ns goes out of scope end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name document end_name end_type begin_name d end_name begin_init begin_expr begin_call begin_name begin_name dom utils end_name begin_operator DOT end_operator begin_name new document end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name root end_name begin_init begin_expr begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name create element ns end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name child end_name begin_init begin_expr begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name create element ns end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name root end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_name child end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name child 2 end_name begin_init begin_expr begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name create element ns end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name root end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_name child 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name grand child end_name begin_init begin_expr begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name create element ns end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name child 2 end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_name grand child end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name child 3 end_name begin_init begin_expr begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name create element ns end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name root end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_name child 3 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string writer end_name end_type begin_name sw end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string writer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name dom element writer end_name end_type begin_name w end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name dom element writer end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name dom element writer end_name begin_operator DOT end_operator begin_name xml namespace policy end_name begin_operator DOT end_operator begin_name only qualify elements end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name root end_name end_expr end_argument begin_argument begin_expr begin_name sw end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name sw end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment handles output send it the the new project if is present otherwise call the super class param output the string output to output see task handle output string since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name callee end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name callee end_name begin_operator DOT end_operator begin_name handle output end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name handle output end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment add an attribute to the manifest it is added to the main section param attribute the attribute to be added exception manifest exception if the attribute is not valid end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured attribute end_name begin_parameter_list begin_param begin_decl begin_type begin_name attribute end_name end_type begin_name attribute end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name manifest exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get key end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get key end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name attribute manifest version end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name manifest version end_name begin_operator EQ end_operator begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name main section end_name begin_operator DOT end_operator begin_name add configured attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name attribute end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment constructor for dummy instances see base filter reader base filter reader end_comment begin_specifier end_specifier begin_name line contains end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment preset the attributes of the test before configuration in the build script this allows attributes in the junit task be be defaults for the tests but allows individual tests to override the defaults end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name pre configure end_name begin_parameter_list begin_param begin_decl begin_type begin_name base test end_name end_type begin_name test end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name set filtertrace end_name end_name begin_argument_list begin_argument begin_expr begin_name filter trace end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name set haltonerror end_name end_name begin_argument_list begin_argument begin_expr begin_name halt on error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name error property end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name set error property end_name end_name begin_argument_list begin_argument begin_expr begin_name error property end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name set haltonfailure end_name end_name begin_argument_list begin_argument begin_expr begin_name halt on fail end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name failure property end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name set failure property end_name end_name begin_argument_list begin_argument begin_expr begin_name failure property end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name set fork end_name end_name begin_argument_list begin_argument begin_expr begin_name fork end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string buffer end_name end_type begin_name get filled buffer end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name size end_name end_decl end_param begin_param begin_decl begin_type begin_name char end_name end_type begin_name ch end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_name size end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_empty_stmt end_empty_stmt begin_return begin_expr begin_name buf end_name end_expr end_return end_block 
 begin_comment flush the output stream if there is one end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log flush end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment print a property name value pair if the property is set print nothing if it is null param out stream to print on param key property name end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name print property end_name begin_parameter_list begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name out end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name key end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name value end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment interface test listener p an error occurred while running the test param test the test param t the error thrown by the test end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add error end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name test name end_name begin_init begin_expr begin_call begin_name begin_name j unit version helper end_name begin_operator DOT end_operator begin_name get test case name end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log test listener event end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name test name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name halt on error end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name stop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment load properties from a url param url url to load from throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name load url end_name begin_parameter_list begin_param begin_decl begin_type begin_name url end_name end_type begin_name url end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name props end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name url end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name begin_init begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name open stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name load end_name end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name is end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name is end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try begin_expr_stmt begin_expr begin_call begin_name add properties end_name begin_argument_list begin_argument begin_expr begin_name props end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment the current token return the string filtered by the script end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get token end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name token end_name end_expr end_return end_block 
 begin_comment ensures that the selector passes the conditions placed on it with code if code and code unless code properties param t the task the this formatter is used in return true if the formatter should be used end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name should use end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name if property end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name if property end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name unless property end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name unless property end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_else end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment scans an attribute list for the code id code attribute and stores a reference to the target object in the project if an id is found p this method was moved out of the configure method to allow it to be executed at parse time see configure object attribute list project end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name configure id end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name attribute list end_name end_type begin_name attr end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name id end_name begin_init begin_expr begin_call begin_name begin_name attr end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name id end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr begin_name id end_name end_expr end_argument begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment check if two definitions are the same param def the new definition param old the old definition return true if the two definitions are the same end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name same definition end_name begin_parameter_list begin_param begin_decl begin_type begin_name ant type definition end_name end_type begin_name def end_name end_decl end_param begin_param begin_decl begin_type begin_name ant type definition end_name end_type begin_name old end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name def valid end_name begin_init begin_expr begin_call begin_name valid definition end_name begin_argument_list begin_argument begin_expr begin_name def end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name same validity end_name begin_init begin_expr begin_operator LPAR end_operator begin_name def valid end_name begin_operator EQT end_operator begin_call begin_name valid definition end_name begin_argument_list begin_argument begin_expr begin_name old end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_comment must have same validity then if they are valid they must also be the same end_comment begin_return begin_expr begin_name same validity end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_name def valid end_name begin_operator UNP end_operator begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name same definition end_name end_name begin_argument_list begin_argument begin_expr begin_name old end_name end_expr end_argument begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment the teardown method for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the key param key string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set key end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name key end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name key end_name end_name begin_operator EQ end_operator begin_name key end_name end_expr end_expr_stmt end_block 
 begin_comment this validates the name checks the if and unless properties param p the current project used to check the presence or absence of a property return the name attribute or null if the if or unless properties are not are set end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name eval name end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name valid end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call begin_operator QM end_operator begin_name name end_name begin_operator DP end_operator end_expr end_return end_block 
 begin_comment execute the task throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name validate attributes end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment todo use antlr to parse the grammar file to do this end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name generated file end_name begin_init begin_expr begin_call begin_name get generated file end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name target is out of date end_name begin_init begin_expr begin_call begin_name begin_name target file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_call begin_name begin_name generated file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name super grammar is out of date end_name begin_init begin_expr begin_name super grammar end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name super grammar end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_call begin_name begin_name generated file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name target is out of date end_name begin_operator UNP end_operator begin_name super grammar is out of date end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name target is out of date end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name target file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name generated file end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name super grammar is out of date end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name target file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name super grammar end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name generated file end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_expr_stmt begin_expr begin_call begin_name populate attributes end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name target file end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name describe command end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name err end_name begin_init begin_expr begin_call begin_name run end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name err end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name err end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name output end_name begin_init begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name output end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name generated file end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment receive notification that the end of an xml element has been found param name string name of the element throws sax exception if the parser cannot process the document end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block begin_comment if this is a standard ejb 1 1 descriptor we are looking for one set of data while if this is an i as specific descriptor we re looking for different set of data hand the processing off to the appropriate method end_comment begin_if begin_condition begin_expr begin_name ias descriptor end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name ias characters end_name begin_argument_list begin_argument begin_expr begin_name current text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name std characters end_name begin_argument_list begin_argument begin_expr begin_name current text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_comment i need to pop the element off the string current loc which always represents my current location in the xml document end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name name length end_name begin_init begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_comment add one for the end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name loc length end_name begin_init begin_expr begin_call begin_name begin_name current loc end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name current loc end_name begin_operator EQ end_operator begin_call begin_name begin_name current loc end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name loc length end_name begin_operator MINUS end_operator begin_name name length end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the method attempts to figure out where the executable is so that we can feed the full path we first try basedir then the exec dir and then fallback to the straight executable name i e on the path param exec the name of the executable param must search path if true the executable will be looked up in the path environment and the absolute path is returned return the executable as a full path if it can be determined since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name resolve executable end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name exec end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name must search path end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name resolve executable end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_name exec end_name end_expr end_return end_block end_then end_if begin_comment try to find the executable end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name executable file end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name exec end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name executable file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name executable file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_comment now try to resolve against the dir if given end_comment begin_if begin_condition begin_expr begin_name dir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name executable file end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr begin_name exec end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name executable file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name executable file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if end_block end_then end_if begin_comment couldn t find it must be on path end_comment begin_if begin_condition begin_expr begin_name must search path end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name environment end_name begin_init begin_expr begin_call begin_name begin_name env end_name begin_operator DOT end_operator begin_name get variables end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name environment end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name environment end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name is path end_name begin_argument_list begin_argument begin_expr begin_name begin_name environment end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name p end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name environment end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name substring end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_name p end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name env vars end_name begin_init begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name get proc environment end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name env vars end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name is path end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name p end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_while end_block end_then end_if begin_if begin_condition begin_expr begin_name p end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name dirs end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name dirs end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name executable file end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name dirs end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name exec end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name executable file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name executable file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if end_block end_for end_block end_then end_if end_block end_then end_if begin_comment must search path is false or no path or not found keep our end_comment begin_comment fingers crossed end_comment begin_return begin_expr begin_name exec end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no file end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name schema validate end_name begin_operator DOT end_operator begin_name schema location end_name begin_operator DOT end_operator begin_name error no file end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test task definition contains key end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get task definitions end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name contains key end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment closes an unused connection after an error and doesn t rethrow a possible sql exception since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name close quietly end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is autocommit end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name conn end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name on error end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name conn end_name begin_operator DOT end_operator begin_name rollback end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name sql exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_then end_if end_block 
 begin_comment verify that the default value defaults to now end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test now end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name now end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name time end_name begin_init begin_expr begin_call begin_name get target time end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert times nearly match end_name begin_argument_list begin_argument begin_expr begin_name time end_name end_expr end_argument begin_argument begin_expr begin_name now end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment logs a message with the given priority this delegates the actual logging to the project param t the exception to be logged should not be code null code param msg level the message priority at which this message is to be logged since 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log end_name begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name msg level end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name t end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name t end_name end_expr end_argument begin_argument begin_expr begin_name msg level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment select the output encoding ascii utf 8 or unicode param encoding the enumerated value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name encoding types end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name encoding end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name encoding end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test multiple property file children end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name property checker end_name end_type begin_name pc bar end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name property checker end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name property checker end_name end_type begin_name pc foo end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name property checker end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add build listener end_name end_name begin_argument_list begin_argument begin_expr begin_name pc bar end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add build listener end_name end_name begin_argument_list begin_argument begin_expr begin_name pc foo end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name assertion failed error end_name end_type begin_name ae bar end_name begin_init begin_expr begin_call begin_name begin_name pc bar end_name begin_operator DOT end_operator begin_name get error end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ae bar end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_name ae bar end_name end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name assertion failed error end_name end_type begin_name ae foo end_name begin_init begin_expr begin_call begin_name begin_name pc foo end_name begin_operator DOT end_operator begin_name get error end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ae foo end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_name ae foo end_name end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name remove build listener end_name end_name begin_argument_list begin_argument begin_expr begin_name pc bar end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name remove build listener end_name end_name begin_argument_list begin_argument begin_expr begin_name pc foo end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the deployment descriptor to use web inf web xml required unless tt update true tt param descr the deployment descriptor file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set webxml end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name descr end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name deployment descriptor end_name begin_operator EQ end_operator begin_name descr end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name deployment descriptor end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name deployment descriptor end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment create a zip file set for this file and pass it up end_comment begin_decl_stmt begin_decl begin_type begin_name zip file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name zip file set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name set file end_name end_name begin_argument_list begin_argument begin_expr begin_name deployment descriptor end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name set fullpath end_name end_name begin_argument_list begin_argument begin_expr begin_name xml descriptor path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name add fileset end_name end_name begin_argument_list begin_argument begin_expr begin_name fs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name project end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a new task definition to the project attempting to override an existing definition with an equivalent one i e with the same classname results in a verbose log message attempting to override an existing definition with a different one results in a warning log message and invalidates any tasks which have already been created with the old definition param task name the name of the task to add must not be code null code param task class the full name of the class implementing the task must not be code null code exception build exception if the class is unsuitable for being an ant task an error level message is logged before this exception is thrown see check task class class end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add task definition end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name task name end_name end_decl end_param begin_param begin_decl begin_type begin_name class end_name end_type begin_name task class end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name component helper end_name begin_operator DOT end_operator begin_name get component helper end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add task definition end_name begin_argument_list begin_argument begin_expr begin_name task name end_name end_expr end_argument begin_argument begin_expr begin_name task class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name random failure ftp end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name random end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name next int end_name begin_argument_list begin_argument begin_expr begin_name begin_name short end_name begin_operator DOT end_operator begin_name max value end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the additional arguments to pass to the weblogic jvm param args the arguments to be passed to the jvm end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set jvmargs end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name additional jvm args end_name end_name begin_operator EQ end_operator begin_name args end_name end_expr end_expr_stmt end_block 
 begin_comment splits up a string into a list of lines it is equivalent to tt split data n tt param data the string to split up into lines return the list of lines available in the string end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name vector end_name end_type begin_name line split end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name data end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name split end_name begin_argument_list begin_argument begin_expr begin_name data end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment process xml end_comment begin_comment process the input file to the output file with the given stylesheet param in file the input file to process param out file the destination file param stylesheet the stylesheet to use exception build exception if the processing fails end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name in file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name out file end_name end_decl end_param begin_param begin_decl begin_type begin_name resource end_name end_type begin_name stylesheet end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name style sheet last modified end_name begin_init begin_expr begin_call begin_name begin_name stylesheet end_name begin_operator DOT end_operator begin_name get last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name in file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name in file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name out file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name out file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name xsl file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name style sheet last modified end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name force end_name begin_operator UNP end_operator begin_call begin_name begin_name in file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator GE end_operator begin_call begin_name begin_name out file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name style sheet last modified end_name begin_operator GE end_operator begin_call begin_name begin_name out file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name ensure directory for end_name begin_argument_list begin_argument begin_expr begin_name out file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name in file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name out file end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name configure liaison end_name begin_argument_list begin_argument begin_expr begin_name stylesheet end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set liaison dynamic file parameters end_name begin_argument_list begin_argument begin_expr begin_name liaison end_name end_expr end_argument begin_argument begin_expr begin_name in file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name liaison end_name begin_operator DOT end_operator begin_name transform end_name end_name begin_argument_list begin_argument begin_expr begin_name in file end_name end_expr end_argument begin_argument begin_expr begin_name out file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name in file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name out file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name stylesheet end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name in file end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name out file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment decodes an uri with characters the uri is escaped param uri string with the uri possibly containing characters return the decoded uri throws unsupported encoding exception if utf 8 is not available since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name decode uri end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name unsupported encoding exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name uri end_name end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name character iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string character iterator end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name char end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name first end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_name c end_name begin_operator UNP end_operator begin_name begin_name character iterator end_name begin_operator DOT end_operator begin_name done end_name end_name end_expr end_condition begin_incr begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name c 1 end_name begin_init begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name c 1 end_name begin_operator UNP end_operator begin_name begin_name character iterator end_name begin_operator DOT end_operator begin_name done end_name end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name i 1 end_name begin_init begin_expr begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name digit end_name end_name begin_argument_list begin_argument begin_expr begin_name c 1 end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name c 2 end_name begin_init begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name c 2 end_name begin_operator UNP end_operator begin_name begin_name character iterator end_name begin_operator DOT end_operator begin_name done end_name end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name i 2 end_name begin_init begin_expr begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name digit end_name end_name begin_argument_list begin_argument begin_expr begin_name c 2 end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name char end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name i 1 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_name i 2 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for begin_return begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name uri encoding end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment separates packages on the overview page into whatever groups you specify one group per table return a group argument to be configured end_comment begin_type begin_specifier end_specifier begin_name group argument end_name end_type begin_name create group end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name group argument end_name end_type begin_name ga end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name group argument end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name groups end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name ga end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name ga end_name end_expr end_return end_block 
 begin_comment make sure that neither the name or the value is null throws build exception if the attribute is invalid end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name name end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name value end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_else end_if end_block 
 begin_comment set the source resource param a the source resource collection since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name a end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name set src resource end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name next end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the extension of the output files param ext extension end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set extension end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name ext end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment flag to trigger turning a filename into a file url ignored for the mono compiler param b a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set make url end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name wsdl end_name begin_operator DOT end_operator begin_name set make url end_name end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds descriptive text to the project param text the descriptive text end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add text end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name project helper end_name end_type begin_name ph end_name begin_init begin_expr begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name get project helper end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name ph end_name begin_operator UNP end_operator begin_name project helper impl end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_comment new behavior for delayed task creation description end_comment begin_comment will be evaluated in project get description end_comment begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name current description end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get description end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name current description end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set description end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set description end_name begin_argument_list begin_argument begin_expr begin_name current description end_name begin_operator PLUS end_operator begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment if true generate separate write calls for each html line in the jsp param mapped a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set mapped end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name mapped end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name mapped end_name end_name begin_operator EQ end_operator begin_name mapped end_name end_expr end_expr_stmt end_block 
 begin_comment constructor of object this sets the force overwrite attribute of the copy parent class to true end_comment begin_specifier end_specifier begin_name move end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set overwrite end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get short filename from file param jsp file file in return file without any jsp extension end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name strip extension end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name jsp file end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name class name end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name filename end_name begin_init begin_expr begin_call begin_name begin_name jsp file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name filename end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name class name end_name begin_operator EQ end_operator begin_call begin_name begin_name filename end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name filename end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name class name end_name begin_operator EQ end_operator begin_name filename end_name end_expr end_expr_stmt end_block end_else end_if begin_return begin_expr begin_name class name end_name end_expr end_return end_block 
 begin_comment create the timestamps custom ones are done before the standard ones to get their retaliation in early throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name date end_name end_type begin_name d end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name date end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name custom formats end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name custom format end_name end_type begin_name cts end_name begin_init begin_expr begin_operator LPAR end_operator begin_name custom format end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cts end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name d end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_decl_stmt begin_decl begin_type begin_name simple date format end_name end_type begin_name dstamp end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name simple date format end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name set property end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name dstamp end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_name d end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name simple date format end_name end_type begin_name tstamp end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name simple date format end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name set property end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name tstamp end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_name d end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name simple date format end_name end_type begin_name today end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name simple date format end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name set property end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name today end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_name d end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment test the interface semantic of algorithms this method does some common test for algorithm implementations an algorithm must return always the same value for the same file and it must not return i null i param algo configured test object end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name do test end_name begin_parameter_list begin_param begin_decl begin_type begin_name algorithm end_name end_type begin_name algo end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name algo end_name begin_operator DOT end_operator begin_name is valid end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name make bed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_comment must not be a directory end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment get the hashvalues end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name hash 1 end_name begin_init begin_expr begin_call begin_name begin_name algo end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name hash 2 end_name begin_init begin_expr begin_call begin_name begin_name algo end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name hash 3 end_name begin_init begin_expr begin_call begin_name begin_name algo end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name hash 4 end_name begin_init begin_expr begin_call begin_name begin_name algo end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name hash 5 end_name begin_init begin_expr begin_call begin_name begin_name algo end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment assert null and equality end_comment begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name hash 1 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name hash 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name hash 3 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name hash 4 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name hash 5 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name hash 1 end_name end_expr end_argument begin_argument begin_expr begin_name hash 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name hash 1 end_name end_expr end_argument begin_argument begin_expr begin_name hash 3 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name hash 1 end_name end_expr end_argument begin_argument begin_expr begin_name hash 4 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name hash 1 end_name end_expr end_argument begin_argument begin_expr begin_name hash 5 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment if is file end_comment end_block end_for begin_comment for end_comment end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name cleanup bed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment declare the encoding to use when outputting to a file use for the platform s default encoding param encoding the character encoding to use since 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name encoding end_name end_name begin_operator EQ end_operator begin_name encoding end_name end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment construct a verbose progress reporter param out the output stream end_comment begin_specifier end_specifier begin_name verbose progress end_name begin_parameter_list begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out end_name end_name begin_operator EQ end_operator begin_name out end_name end_expr end_expr_stmt end_block 
 begin_comment get the name of the project return the name of the project end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_comment the filename to act upon if no file is specified then the tasks act upon the project param filename the new file value end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal filename end_name end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the line breaking characters param line breaks a string containing all the characters to be considered as line breaking end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set line breaks end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name line breaks end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name line breaks end_name end_name begin_operator EQ end_operator begin_name line breaks end_name end_expr end_expr_stmt end_block 
 begin_comment test to uri end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test to uri end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name dos root end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dos root end_name begin_operator EQ end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name substring end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment preserve case on cygwin when using 1 4 to uri end_comment begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name uri clazz end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name uri clazz end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ok java 1 3 end_comment begin_expr_stmt begin_expr begin_name dos root end_name begin_operator EQ end_operator begin_call begin_name begin_name dos root end_name begin_operator DOT end_operator begin_name to upper case end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name dos root end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name remove extraneous authority end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name to uri end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name remove extraneous authority end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name to uri end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name path separator char end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name remove extraneous authority end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name to uri end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name to uri end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name starts with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name to uri end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name dos root end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name remove extraneous authority end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name to uri end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name dos root end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name remove extraneous authority end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name to uri end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name path separator char end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name dos root end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name remove extraneous authority end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name to uri end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name to uri end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name starts with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name to uri end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name dos root end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name remove extraneous authority end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name to uri end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name dos root end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name remove extraneous authority end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name to uri end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_comment a test with ant for germans end_comment begin_comment the escaped character used for the test is the a umlaut end_comment begin_comment this is the fix for the bug 37348 end_comment begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name dos root end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name remove extraneous authority end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name to uri end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start test end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment list files dates and statuses as of this label optional the label must exist in starteam or an exception will be thrown if not specified the most recent version of each file will be listed param label the label to be listed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set label end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name label end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set label end_name begin_argument_list begin_argument begin_expr begin_name label end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the enablebaselessmerges flag return boolean indicating if baseless merges are desired end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is enable baseless merges end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name enablebaselessmerges end_name end_expr end_return end_block 
 begin_comment set the writable attribute param writable the value to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set internal writable end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name writable end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name writable end_name end_name begin_operator EQ end_operator begin_name writable end_name end_expr end_expr_stmt end_block 
 begin_comment print a readable version of the constant pool entry return the string representation of this constant pool entry end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name is resolved end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name interface method class name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name interface method name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name interface method type end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name class index end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name name and type index end_name end_expr end_expr_stmt end_block end_else end_if begin_return begin_expr begin_name value end_name end_expr end_return end_block 
 begin_comment sets a configuration file other than the default to be used these files have a cfg extension and are often found in archive or pvcsprop folders param f config file can be given absolute or relative to ant basedir end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set config end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name config end_name begin_operator EQ end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the value of the reverse attribute return the reverse attribute since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get reverse end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name reverse end_name end_expr end_return end_block 
 begin_comment set whether the name comparisons are case sensitive param b boolean case sensitivity flag end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set case sensitive end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name cs end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name print tail end_name begin_parameter_list begin_param begin_decl begin_type begin_name print writer end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name visited end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets whether the compiler messages will be written to net rexx c log as well as to the console valid true values are on or true anything else sets the flag to false the default value is false param savelog a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set savelog end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name savelog end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name savelog end_name end_name begin_operator EQ end_operator begin_name savelog end_name end_expr end_expr_stmt end_block 
 begin_comment create the pump to handle error output param is the input stream to copy from param os the output stream to copy to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name create process error pump end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name end_decl end_param begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name os end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name error thread end_name begin_operator EQ end_operator begin_call begin_name create pump end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument begin_argument begin_expr begin_name os end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr begin_name test build file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name mail message test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the next character in the filtered stream if the read ahead has been completed the next character in the buffer is returned otherwise the stream is read to the end and buffered with the buffer growing as necessary then the appropriate position in the buffer is set to read from return the next character in the resulting stream or 1 if the end of the resulting stream has been reached exception io exception if the underlying stream throws an io exception during reading end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get initialized end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name initialize end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set initialized end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_while begin_condition begin_expr begin_name line end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name line tokenizer end_name begin_operator DOT end_operator begin_name get token end_name end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name tail filter end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name line end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator MINUS end_operator end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name line pos end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_while begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ch end_name begin_init begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name line pos end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name line pos end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name line pos end_name begin_operator EQT end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name ch end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment makes sure that there is only one entry sets an error message if not end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name verify settings end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name selector count end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment if true fails if ilasm tool fails param b the new fail on error value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fail on error end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name fail on error end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invocation target exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name ce end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ce end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment get the name of this url resource its file component minus the leading separator return the name of this resource end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_call begin_name get url end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get file end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name substring end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment add a depends selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add depend end_name begin_parameter_list begin_param begin_decl begin_type begin_name depend selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment see build listener target finished end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name initialized end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name target name end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name logger end_name end_type begin_name cat end_name begin_init begin_expr begin_call begin_name begin_name logger end_name begin_operator DOT end_operator begin_name get logger end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get name end_name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cat end_name begin_operator DOT end_operator begin_name info end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name target name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cat end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name target name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block 
 begin_comment get the user id return the user id since 1 1 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get user id end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name uid end_name end_expr end_return end_block 
 begin_comment returns the keyfile return string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get keyfile end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name keyfile end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name collection end_name end_type begin_name cache collection end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name coll end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name is cache end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name coll end_name begin_operator EQ end_operator begin_call begin_name get collection end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name coll end_name end_expr end_return end_block 
 begin_comment p add a uri catalog entry to the controlling xml catalog instance apache catalog calls this for each uri entry found in an external catalog file p param uri the uri of the resource param alt uri the uri to which the resource should be mapped aka the location param base the base url of the resource if the alt uri specifies a relative url pathname it is resolved using the base the default base for an external catalog file is the directory in which the catalog is located end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add uri entry end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name alt uri end_name end_decl end_param begin_param begin_decl begin_type begin_name url end_name end_type begin_name base end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name resource location end_name end_type begin_name entity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name resource location end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entity end_name begin_operator DOT end_operator begin_name set base end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entity end_name begin_operator DOT end_operator begin_name set public id end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entity end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_name alt uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name xml catalog end_name begin_operator DOT end_operator begin_name add entity end_name end_name begin_argument_list begin_argument begin_expr begin_name entity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment print a report to the given stream param out the stream to print the report to end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name do report end_name begin_parameter_list begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name main end_name begin_operator DOT end_operator begin_name get ant version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name header end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get implementation version end_name begin_argument_list begin_argument begin_expr begin_name begin_name main end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name optional end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name optional end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get implementation version end_name begin_argument_list begin_argument begin_expr begin_name optional end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name ignore throwable end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name header end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name do report ant properties end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name header end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name do report ant home libraries end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name header end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name do report user home libraries end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name header end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name do report tasks availability end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name header end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name do report which end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name header end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name do report parser info end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name header end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name do report system properties end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name header end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name do report temp dir end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name header end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name do report locale end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name header end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name do report proxy end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the name of this header param name the name to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment run through the list of reference files and add them to the command param command the command to use param output timestamp timestamp to compare against return number of files out of date end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name add reference filesets end_name begin_parameter_list begin_param begin_decl begin_type begin_name net command end_name end_type begin_name command end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name output timestamp end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name files out of date end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name files to build end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name reference filesets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name reference filesets end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name files out of date end_name begin_operator UNP end_operator begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name scan one fileset end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name files to build end_name end_expr end_argument begin_argument begin_expr begin_name output timestamp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment bail out early if there were no files end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name files to build end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment now scan the hashtable and add the files end_comment begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name files to build end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name is file managed binary end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name is windows end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name reference option end_name begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_name reference option end_name begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name file end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_while begin_return begin_expr begin_name files out of date end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test andempty end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment whether this task can deal with non file resources p this implementation returns false p return false for this task since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name supports non file resources end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment set the rebuild flag to false to only update changes in the jar rather than rerunning ejbc optional default true this flag controls whether weblogic ejbc is always invoked to build the jar file in certain circumstances such as when only a bean class has been changed the jar can be generated by merely replacing the changed classes and not rerunning ejbc setting this to false will reduce the time to run ejbjar param rebuild a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set rebuild end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name rebuild end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name always rebuild end_name end_name begin_operator EQ end_operator begin_name rebuild end_name end_expr end_expr_stmt end_block 
 begin_comment set comment string param comment the comment string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set comment end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name comment end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m comment end_name begin_operator EQ end_operator begin_name comment end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test contains string end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name contents end_name begin_init begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert string contains end_name begin_argument_list begin_argument begin_expr begin_name contents end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert string not contains end_name begin_argument_list begin_argument begin_expr begin_name contents end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the type of target param ttype the new target type value exception build exception if target is not one of exe library module winexe end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set target type end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name ttype end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name ttype end_name begin_operator EQ end_operator begin_call begin_name begin_name ttype end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name ttype end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name ttype end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name ttype end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name ttype end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name target type end_name begin_operator EQ end_operator begin_name ttype end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ttype end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block 
 begin_comment test conversion from bytes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test from bytes end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name val end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index end_index end_name begin_block begin_expr end_expr begin_expr end_expr end_block end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name zip short end_name end_type begin_name zs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name zip short end_name begin_argument_list begin_argument begin_expr begin_name val end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name zs end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment remove a particular flag from an int value contains the option flags param options an code int code value param flag an code int code value return the options with the flag unset end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name remove flag end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name options end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name flag end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name options end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator MINUS end_operator begin_name flag end_name begin_operator RPAR end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment sets a flag to enable parse view debugging param enable a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set debug end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name enable end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_operator EQ end_operator begin_name enable end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set time to wait end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name time to wait end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name time to wait end_name end_name begin_operator EQ end_operator begin_name time to wait end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name time to wait end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment ensure that all the required arguments and other conditions have been set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check configuration end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name have owner end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name check configuration end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the filename to be acted upon return if it was set null if not end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get filename end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name filename end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name javadoc test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment calculates the relative path between two files p implementation note br this function my throw an io exception if an i o error occurs because its use of the canonical pathname may require filesystem queries p param from file the code file code to calculate the path from param to file the code file code to calculate the path to return the relative path between the files throws exception for undocumented reasons see file get canonical path since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get relative path end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name from file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name to file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name from path end_name begin_init begin_expr begin_call begin_name begin_name from file end_name begin_operator DOT end_operator begin_name get canonical path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name to path end_name begin_init begin_expr begin_call begin_name begin_name to file end_name begin_operator DOT end_operator begin_name get canonical path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment build the path stack info to compare end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name from path stack end_name begin_init begin_expr begin_call begin_name get path stack end_name begin_argument_list begin_argument begin_expr begin_name from path end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name to path stack end_name begin_init begin_expr begin_call begin_name get path stack end_name begin_argument_list begin_argument begin_expr begin_name to path end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LT end_operator begin_name begin_name to path stack end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator UNP end_operator begin_operator LT end_operator begin_name begin_name from path stack end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name begin_name from path stack end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name to path stack end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment not the same device would be on linux unix end_comment begin_return begin_expr begin_call begin_name get path end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arrays end_name begin_operator DOT end_operator begin_name as list end_name end_name begin_argument_list begin_argument begin_expr begin_name to path stack end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if end_block end_then begin_else begin_block begin_comment no comparison possible end_comment begin_return begin_expr begin_call begin_name get path end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arrays end_name begin_operator DOT end_operator begin_name as list end_name end_name begin_argument_list begin_argument begin_expr begin_name to path stack end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name min length end_name begin_init begin_expr begin_call begin_name begin_name math end_name begin_operator DOT end_operator begin_name min end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name from path stack end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name to path stack end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name same end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment get index of parts which are equal end_comment begin_for begin_init end_init begin_condition begin_expr begin_name same end_name begin_operator LT end_operator begin_name min length end_name end_expr end_condition begin_incr begin_expr begin_name same end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name begin_name from path stack end_name begin_index begin_expr begin_name same end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name to path stack end_name begin_index begin_expr begin_name same end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if end_block end_for begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name relative path stack end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment if from part is longer fill it up with end_comment begin_comment to reach path which is equal to both paths end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name same end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name from path stack end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name relative path stack end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment fill it up path with parts which were not equal end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name same end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name to path stack end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name relative path stack end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name to path stack end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_call begin_name get path end_name begin_argument_list begin_argument begin_expr begin_name relative path stack end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment set the classpath to search for classes to load this should not be changed once the classloader starts to server classes param classpath the search classpath consisting of directories and jar zip files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set class path end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name path components end_name begin_operator DOT end_operator begin_name remove all elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name classpath end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name actual classpath end_name begin_init begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name concat system classpath end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name path elements end_name begin_init begin_expr begin_call begin_name begin_name actual classpath end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name path elements end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name add path element end_name begin_argument_list begin_argument begin_expr begin_name begin_name path elements end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore path elements which are invalid end_comment begin_comment relative to the project end_comment end_block end_catch end_try end_block end_for end_block end_then end_if end_block 
 begin_comment write a character to the output stream this method looks to make sure that there isn t an error being reported and will flush each line of input out to the project s log stream param c the character to write throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name cc end_name begin_init begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator begin_name c end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name cc end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name cc end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment line feed end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name process line end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name cc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment apply this map entry to a given path element param elem path element to process return string updated path element after mapping end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name apply end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name elem end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name from end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name to end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment if we re on windows then do the comparison ignoring case end_comment begin_comment and treat the two directory characters the same end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name cmp elem end_name begin_init begin_expr begin_name on windows end_name begin_operator QM end_operator begin_call begin_name begin_name elem end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_name elem end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name cmp from end_name begin_init begin_expr begin_name on windows end_name begin_operator QM end_operator begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_name from end_name end_expr end_init end_decl end_decl_stmt begin_comment if the element starts with the configured prefix then end_comment begin_comment convert the prefix to the configured to value end_comment begin_return begin_expr begin_call begin_name begin_name cmp elem end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name cmp from end_name end_expr end_argument end_argument_list end_call begin_operator QM end_operator begin_name to end_name begin_operator PLUS end_operator begin_call begin_name begin_name elem end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_name elem end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test non existing file end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name property file end_name end_type begin_name props end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name property file end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name set file end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert false end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name mkdir test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create a new stream pumper param is input stream to read data from param os output stream to write data to param close when exhausted if true the output stream will be closed when the input is exhausted end_comment begin_specifier end_specifier begin_name stream pumper end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name end_decl end_param begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name os end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name close when exhausted end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name is end_name end_name begin_operator EQ end_operator begin_name is end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name os end_name end_name begin_operator EQ end_operator begin_name os end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name close when exhausted end_name end_name begin_operator EQ end_operator begin_name close when exhausted end_name end_expr end_expr_stmt end_block 
 begin_comment set the directory containing the source jsp s param dir name the directory containg the source jsp s end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name source directory end_name begin_operator EQ end_operator begin_name dir name end_name end_expr end_expr_stmt end_block 
 begin_comment specifies the location of the pvcs bin directory optional if on the path on some systems the pvcs executables i pcli i and i get i are not found in the path in such cases this attribute should be set to the bin directory of the pvcs installation containing the executables mentioned before if this attribute isn t specified the tag expects the executables to be found using the path environment variable param bin pvcs bin directory todo use a file setter and resolve paths end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set pvcsbin end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name bin end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name pvcsbin end_name begin_operator EQ end_operator begin_name bin end_name end_expr end_expr_stmt end_block 
 begin_comment the to attribute param to the replacement string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set replace end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name to end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name to end_name end_name begin_operator EQ end_operator begin_name to end_name end_expr end_expr_stmt end_block 
 begin_comment sets i append i attribute param append new value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set append end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name append end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name append end_name end_name begin_operator EQ end_operator begin_name append end_name end_expr end_expr_stmt end_block 
 begin_comment end_comment begin_comment accessor methods end_comment begin_comment return the name of the file the output is sent to end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get filename end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name filename end_name end_expr end_return end_block 
 begin_comment convenience overloaded version of link get class loader for path project path string boolean p assumes the logical false for the reverse loader p param p current ant project param path the path param loader id the loader id string return the class loader end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name class loader end_name end_type begin_name get class loader for path end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name path end_name end_type begin_name path end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name loader id end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name get class loader for path end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name path end_name end_expr end_argument begin_argument begin_expr begin_name loader id end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment gets the main class attribute return the main class value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get main class end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name main class end_name end_name end_expr end_return end_block 
 begin_comment convert the generic options to the regex compiler specific options param options the generic options return the specific options end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get compiler options end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name options end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name c options end_name begin_init begin_expr begin_name begin_name re end_name begin_operator DOT end_operator begin_name match normal end_name end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name regexp util end_name begin_operator DOT end_operator begin_name has flag end_name end_name begin_argument_list begin_argument begin_expr begin_name options end_name end_expr end_argument begin_argument begin_expr begin_name match case insensitive end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name c options end_name begin_operator UNP end_operator begin_name begin_name re end_name begin_operator DOT end_operator begin_name match caseindependent end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name regexp util end_name begin_operator DOT end_operator begin_name has flag end_name end_name begin_argument_list begin_argument begin_expr begin_name options end_name end_expr end_argument begin_argument begin_expr begin_name match multiline end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name c options end_name begin_operator UNP end_operator begin_name begin_name re end_name begin_operator DOT end_operator begin_name match multiline end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name regexp util end_name begin_operator DOT end_operator begin_name has flag end_name end_name begin_argument_list begin_argument begin_expr begin_name options end_name end_expr end_argument begin_argument begin_expr begin_name match singleline end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name c options end_name begin_operator UNP end_operator begin_name begin_name re end_name begin_operator DOT end_operator begin_name match singleline end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name c options end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name initial value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name hash map end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment get the haltonfailure attribute return the attribute end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get haltonfailure end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name halt on fail end_name end_expr end_return end_block 
 begin_comment fired before any targets are started end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment add a new reference fileset to the compilation param reference the files to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add reference end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name reference end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name reference filesets end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name reference end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment validate that the task parameters are valid throws build exception if parameters are invalid end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name my file end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name my file end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name default filename end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name my file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name create new file end_name end_name begin_argument_list begin_argument begin_expr begin_name my file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_name my file end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name my file end_name begin_operator DOT end_operator begin_name can read end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_name my file end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name my file end_name begin_operator DOT end_operator begin_name can write end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_name my file end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment name of proxy optional param proxy the name of the proxy host end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set proxy end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name proxy end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name proxy end_name end_name begin_operator EQ end_operator begin_name proxy end_name end_expr end_expr_stmt end_block 
 begin_comment set the source archive resource param a the archive as a single element resource collection end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name a end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name set src resource end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name next end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name byte end_name end_type begin_name med 3 end_name begin_parameter_list begin_param begin_decl begin_type begin_name byte end_name end_type begin_name a end_name end_decl end_param begin_param begin_decl begin_type begin_name byte end_name end_type begin_name b end_name end_decl end_param begin_param begin_decl begin_type begin_name byte end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name a end_name begin_operator LT end_operator begin_name b end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_operator LPAR end_operator begin_name b end_name begin_operator LT end_operator begin_name c end_name begin_operator QM end_operator begin_name b end_name begin_operator DP end_operator begin_name a end_name begin_operator LT end_operator begin_name c end_name begin_operator QM end_operator begin_name c end_name begin_operator DP end_operator begin_name a end_name begin_operator RPAR end_operator begin_operator DP end_operator begin_operator LPAR end_operator begin_name b end_name begin_operator GT end_operator begin_name c end_name begin_operator QM end_operator begin_name b end_name begin_operator DP end_operator begin_name a end_name begin_operator GT end_operator begin_name c end_name begin_operator QM end_operator begin_name c end_name begin_operator DP end_operator begin_name a end_name begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment convenience layer on top of restrict that returns the source files as file objects containing absolute paths if src dir is absolute param files the original set of files param src dir all files are relative to this directory param dest dir target files live here if null file names returned by the mapper are assumed to be absolute param mapper knows how to construct a target file names from source file names return an array of files end_comment begin_type begin_specifier end_specifier begin_name file end_name begin_index end_index end_type begin_name restrict as files end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name files end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name src dir end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest dir end_name end_decl end_param begin_param begin_decl begin_type begin_name file name mapper end_name end_type begin_name mapper end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name restrict as files end_name begin_argument_list begin_argument begin_expr begin_name files end_name end_expr end_argument begin_argument begin_expr begin_name src dir end_name end_expr end_argument begin_argument begin_expr begin_name dest dir end_name end_expr end_argument begin_argument begin_expr begin_name mapper end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file timestamp granularity end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment warn when a class is out of date but not deleted as its source is unknown msg warn is the normal level but we downgrade to msg verbose for rmi files if link warn on rmi stubs is false param affected class info info about the affectd class param affected class the name of the affected class file param class name the file that is triggering the out of dateness end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name warn out of date but not deleted end_name begin_parameter_list begin_param begin_decl begin_type begin_name class file info end_name end_type begin_name affected class info end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name affected class end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name class name end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name affected class info end_name begin_operator DOT end_operator begin_name is user warned end_name end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name level end_name begin_init begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name warn on rmi stubs end_name end_expr end_condition begin_then begin_block begin_comment downgrade warnings on rmi stublike classes as they are generated end_comment begin_comment by rmic so there is no need to tell the user that their source is end_comment begin_comment missing end_comment begin_if begin_condition begin_expr begin_call begin_name is rmi stub end_name begin_argument_list begin_argument begin_expr begin_name affected class end_name end_expr end_argument begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name level end_name begin_operator EQ end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name affected class end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name affected class info end_name begin_operator DOT end_operator begin_name absolute file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name class name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name affected class info end_name begin_operator DOT end_operator begin_name is user warned end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name get project end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name get project end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name skipped entity end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block end_block 
 begin_comment adds an extension that this library implements param extension adapter an extension that this library implements throws build exception if there is multiple extensions detected in the library end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured extension end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name extension adapter end_name end_type begin_name extension adapter end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name extension end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name extension end_name begin_operator EQ end_operator begin_call begin_name begin_name extension adapter end_name begin_operator DOT end_operator begin_name to extension end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the comment command param cmd containing the command line string with or without the comment flag and string appended end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get comment command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes this breaks clearcase end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag comment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment prompts and requests input may loop until a valid input has been entered param request the request to handle throws build exception if not possible to read from console end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle input end_name begin_parameter_list begin_param begin_decl begin_type begin_name input request end_name end_type begin_name request end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name prompt end_name begin_init begin_expr begin_call begin_name get prompt end_name begin_argument_list begin_argument begin_expr begin_name request end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name r end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name r end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_call begin_name get input stream end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_do begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name prompt end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name input end_name begin_init begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name set input end_name end_name begin_argument_list begin_argument begin_expr begin_name input end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name is input valid end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition end_do end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name r end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment set the policy on the web xml file that is whether or not it is needed param needxmlfile whether a web xml file is needed default true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set needxmlfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name needxmlfile end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name needxmlfile end_name end_name begin_operator EQ end_operator begin_name needxmlfile end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment here is a comment with an embedded tab end_comment begin_if begin_condition begin_expr begin_name mybool end_name end_expr end_condition begin_then begin_block begin_comment here is a multi line with embedded tab comment end_comment begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name mychar end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment tab end_comment end_block end_then end_if begin_comment end of if mybool end_comment end_block 
 begin_comment return the working directory return the directory as a file since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get working directory end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name working directory end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name ant working directory end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_name working directory end_name end_expr end_return end_block 
 begin_comment check the command line options end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check options end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag comment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get task end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get file end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test nested 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the destination directory into which the net rexx source files should be copied and then compiled param dest dir name the destination directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dest dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest dir name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name dest dir end_name begin_operator EQ end_operator begin_name dest dir name end_name end_expr end_expr_stmt end_block 
 begin_comment add a set of patterns return pattern set object to be configured end_comment begin_type begin_specifier end_specifier begin_name pattern set end_name end_type begin_name create pattern set end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name used matching task end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name create pattern set end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filesmatch existence end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property unset end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the redoall flag param redoall flag indicating whether one want to allow previously resolved files to be resolved again end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set redoall end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name redoall end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name redoall end_name end_name begin_operator EQ end_operator begin_name redoall end_name end_expr end_expr_stmt end_block 
 begin_comment set the vob name param vob the vob name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set vob end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name vob end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m vob end_name begin_operator EQ end_operator begin_name vob end_name end_expr end_expr_stmt end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name zip resource end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment clone the filterset return a deep clone of this filterset throws build exception if the clone cannot be performed end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name object end_name end_type begin_name clone end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name filter set end_name begin_operator RPAR end_operator begin_call begin_name get ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name clone end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name filter set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator LPAR end_operator begin_name filter set end_name begin_operator RPAR end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name fs end_name begin_operator DOT end_operator begin_name filters end_name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name get filters end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name clone end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name fs end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name clone not supported exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name bcc end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name bcc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name bcc list end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name bcc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the location of the error and the error message return the location of the error and the error message end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name location end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_call begin_name get message end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is active end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name star team list end_name begin_operator DOT end_operator begin_name this end_name begin_operator DOT end_operator begin_name list uncontrolled end_name end_name end_expr end_return end_block 
 begin_comment returns the tab length return the number of spaces used when converting a tab end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get tablength end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name tab length end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name have entries end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name p end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set comment string param comment the comment string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set comment end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name comment end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m comment end_name begin_operator EQ end_operator begin_name comment end_name end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment create a constant pool param data the data input containing the class throws io exception if there is an error end_comment begin_name constant pool end_name begin_parameter_list begin_param begin_decl begin_type begin_name data input end_name end_type begin_name data end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr begin_call begin_name begin_name data end_name begin_operator DOT end_operator begin_name read unsigned short end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name types end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_name count end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name values end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name object end_name begin_index begin_expr begin_name count end_name end_expr end_index end_name end_expr end_expr_stmt begin_comment read in all constant pool entries end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name count end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name byte end_name end_type begin_name type end_name begin_init begin_expr begin_call begin_name begin_name data end_name begin_operator DOT end_operator begin_name read byte end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name types end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_name type end_name end_expr end_expr_stmt begin_switch begin_condition begin_expr begin_name type end_name end_expr end_condition begin_block begin_case begin_expr begin_name utf 8 end_name end_expr begin_expr_stmt begin_expr begin_name begin_name values end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name begin_name data end_name begin_operator DOT end_operator begin_name read utf end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name unused end_name end_expr begin_break end_break end_case begin_case begin_expr begin_name integer end_name end_expr begin_expr_stmt begin_expr begin_name begin_name values end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name data end_name begin_operator DOT end_operator begin_name read int end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name float end_name end_expr begin_expr_stmt begin_expr begin_name begin_name values end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name float end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name data end_name begin_operator DOT end_operator begin_name read float end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name long end_name end_expr begin_expr_stmt begin_expr begin_name begin_name values end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name long end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name data end_name begin_operator DOT end_operator begin_name read long end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name double end_name end_expr begin_expr_stmt begin_expr begin_name begin_name values end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name double end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name data end_name begin_operator DOT end_operator begin_name read double end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name class end_name end_expr end_case begin_case begin_expr begin_name string end_name end_expr begin_expr_stmt begin_expr begin_name begin_name values end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name data end_name begin_operator DOT end_operator begin_name read unsigned short end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name fieldref end_name end_expr end_case begin_case begin_expr begin_name methodref end_name end_expr end_case begin_case begin_expr begin_name interfacemethodref end_name end_expr end_case begin_case begin_expr begin_name nameandtype end_name end_expr begin_expr_stmt begin_expr begin_name begin_name values end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name data end_name begin_operator DOT end_operator begin_name read int end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_default begin_comment do nothing end_comment end_default end_block end_switch end_block end_for end_block 
 begin_comment handles output by logging it with the info priority param output the output to log should not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment display the extensions and specifications contained within specified file param file the file to use while reporting param manifest the manifest of file throws build exception if fail to read file end_comment begin_type begin_name void end_name end_type begin_name display library end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name file end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name manifest end_name end_type begin_name manifest end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name extension end_name begin_index end_index end_type begin_name available end_name begin_init begin_expr begin_call begin_name begin_name extension end_name begin_operator DOT end_operator begin_name get available end_name end_name begin_argument_list begin_argument begin_expr begin_name manifest end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name extension end_name begin_index end_index end_type begin_name required end_name begin_init begin_expr begin_call begin_name begin_name extension end_name begin_operator DOT end_operator begin_name get required end_name end_name begin_argument_list begin_argument begin_expr begin_name manifest end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name extension end_name begin_index end_index end_type begin_name options end_name begin_init begin_expr begin_call begin_name begin_name extension end_name begin_operator DOT end_operator begin_name get options end_name end_name begin_argument_list begin_argument begin_expr begin_name manifest end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name specification end_name begin_index end_index end_type begin_name specifications end_name begin_init begin_expr begin_call begin_name get specifications end_name begin_argument_list begin_argument begin_expr begin_name manifest end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name begin_name available end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator UNP end_operator begin_operator EQT end_operator begin_name begin_name required end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator UNP end_operator begin_operator EQT end_operator begin_name begin_name options end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator UNP end_operator begin_operator EQT end_operator begin_name begin_name specifications end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_name file end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_init begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name print line end_name begin_argument_list begin_argument begin_expr begin_name size end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name print line end_name begin_argument_list begin_argument begin_expr begin_name size end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name begin_name available end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name available end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name extension end_name end_type begin_name extension end_name begin_init begin_expr begin_name begin_name available end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name extension end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name begin_name required end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name required end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name extension end_name end_type begin_name extension end_name begin_init begin_expr begin_name begin_name required end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name extension end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name begin_name options end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name options end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name extension end_name end_type begin_name extension end_name begin_init begin_expr begin_name begin_name options end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name extension end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name begin_name specifications end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name specifications end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name specification end_name end_type begin_name specification end_name begin_init begin_expr begin_name begin_name specifications end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name display specification end_name begin_argument_list begin_argument begin_expr begin_name specification end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test encoding end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name xsl end_name begin_init begin_expr begin_call begin_name get file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name liaison end_name begin_operator DOT end_operator begin_name set stylesheet end_name end_name begin_argument_list begin_argument begin_expr begin_name xsl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name in end_name begin_init begin_expr begin_call begin_name get file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name out end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name delete on exit end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment just to be sure end_comment begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name liaison end_name begin_operator DOT end_operator begin_name transform end_name end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name document end_name end_type begin_name doc end_name begin_init begin_expr begin_call begin_name parse xml end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name get document element end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get node name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name get document element end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get first child end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get node name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name get document element end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get first child end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get first child end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get node value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment empty end_comment begin_comment set the title attribute using a string param src a code string code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set title end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name html end_name end_type begin_name h end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name html end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name h end_name begin_operator DOT end_operator begin_name add text end_name end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add title end_name begin_argument_list begin_argument begin_expr begin_name h end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment ignore end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name stop end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test is failure end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment run the compilation return true if the compiler ran with a zero exit result ok exception build exception if the compilation has problems end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name begin_init begin_expr begin_call begin_name setup modern javac command end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment use reflection to be able to build on all jd ks 1 1 end_comment begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name compiler end_name begin_init begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name method end_name end_type begin_name compile end_name begin_init begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block end_block end_expr end_block end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt end_block end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test echo to bad file fail end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the comment string param comment the comment string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set comment end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name comment end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m comment end_name begin_operator EQ end_operator begin_name comment end_name end_expr end_expr_stmt end_block 
 begin_comment add a new single testcase param test a new single testcase see j unit test since ant 1 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add test end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name test end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name pre configure end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment has either a path or a fileset been specified return true if a path or fileset has been specified since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has resources end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name path end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_return end_block 
 begin_comment jdk 1 1 compatible access to the context class loader cut paste from jaxp deprecated since 1 6 x use loader utils get context class loader return the current context class loader or code null code if the context class loader is unavailable end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name class loader end_name end_type begin_name get context class loader end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name loader utils end_name begin_operator DOT end_operator begin_name is context loader available end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name loader utils end_name begin_operator DOT end_operator begin_name get context class loader end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment constructs a new javac output stream with the given project as the output source for messages end_comment begin_name task output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name task end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name msg output level end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name task end_name end_name begin_operator EQ end_operator begin_name task end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name msg output level end_name end_name begin_operator EQ end_operator begin_name msg output level end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the name of a property to set to the value of the current thread priority optional param current priority the property name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set current priority end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name current priority end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name current priority end_name end_name begin_operator EQ end_operator begin_name current priority end_name end_expr end_expr_stmt end_block 
 begin_comment ensure we have a consistent and legal set of attributes and set any internal flags necessary based on different combinations of attributes throws build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate attributes end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name dest dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error no destdir end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name mapper end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error no mapper end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name path end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error no path end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment fulfill the resource collection contract return whether this is a filesystem only resource collection end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is filesystem only end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name restrict end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name is filesystem only end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name die on circular reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is filesystem only end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment returns a description of the type of the given element p this is useful for logging purposes param o the element to describe must not be code null code param brief whether to use a brief description return a description of the element type since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get element name end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name o end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name brief end_name end_decl end_param end_parameter_list begin_block begin_comment pr i do not know what to do if the object class end_comment begin_comment has multiple defines end_comment begin_comment but this is for logging only end_comment begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name element class end_name begin_init begin_expr begin_call begin_name begin_name o end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name element classname end_name begin_init begin_expr begin_call begin_name begin_name element class end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name ant type table end_name begin_operator DOT end_operator begin_name values end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name ant type definition end_name end_type begin_name def end_name begin_init begin_expr begin_operator LPAR end_operator begin_name ant type definition end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name element classname end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name get class name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_name element class end_name begin_operator EQT end_operator begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name get exposed class end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name brief end_name begin_operator QM end_operator begin_name name end_name begin_operator DP end_operator begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr begin_call begin_name get unmapped element name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name o end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name brief end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment get type name string return string containing the type name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get type name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m type name end_name end_expr end_return end_block 
 begin_comment returns a print stream that can be used to write the body of the message a stream is used since email bodies are byte oriented a writer can be wrapped on top if necessary for internationalization this is actually done in message java return a printstream containing the data and the headers of the email exception io exception if there s any problem reported by the mail server see org apache tools ant taskdefs email message end_comment begin_type begin_specifier end_specifier begin_name print stream end_name end_type begin_name get print stream end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name set from header end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set reply to header end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set to header end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set cc header end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set header end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name send data end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name flush headers end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name out end_name end_expr end_return end_block 
 begin_comment get the make url attribute return the attribute end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is make url end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name make url end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test tsa localhost end_name begin_parameter_list end_parameter_list begin_block begin_comment only test on java 1 5 end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get java version number end_name end_name begin_argument_list end_argument_list end_call begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment constructor param title for logging errors param owner owner task param program app we are to run end_comment begin_specifier end_specifier begin_name net command end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name owner end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name title end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name program end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name owner end_name end_name begin_operator EQ end_operator begin_name owner end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name title end_name end_name begin_operator EQ end_operator begin_name title end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name program end_name end_name begin_operator EQ end_operator begin_name program end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name command line end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_name program end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment override allowed on available end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test bad ref end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the file for which the checksum is to be calculated param file a code file code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block 
 begin_comment get the status code return code int code end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get status end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name status end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name do delay update test end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name kind end_name end_decl end_param end_parameter_list begin_block begin_comment no check for 1 kind 3 only internal use therefore check it end_comment begin_comment while development end_comment begin_comment readable form of parameter kind end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name kinds end_name begin_init begin_expr begin_block begin_expr end_expr begin_expr end_expr begin_expr end_expr end_block end_expr end_init end_decl end_decl_stmt begin_comment setup the ant project end_comment begin_decl_stmt begin_decl begin_type begin_name mock project end_name end_type begin_name project end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name mock project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name base end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file 1 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment setup the selector end_comment begin_decl_stmt begin_decl begin_type begin_name modified selector end_name end_type begin_name sel end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name modified selector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sel end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sel end_name begin_operator DOT end_operator begin_name set update end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sel end_name begin_operator DOT end_operator begin_name set delay update end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment sorry otherwise we will get a class cast exception because the mock cache end_comment begin_comment is loaded by two different classloader end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name sel end_name begin_operator DOT end_operator begin_name set class loader end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class loader end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sel end_name begin_operator DOT end_operator begin_name add classpath end_name end_name begin_argument_list begin_argument begin_expr begin_name testclasses end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sel end_name begin_operator DOT end_operator begin_name set algorithm class end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sel end_name begin_operator DOT end_operator begin_name set cache class end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sel end_name begin_operator DOT end_operator begin_name configure end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment get the cache so we can check our things end_comment begin_decl_stmt begin_decl begin_type begin_name mock cache end_name end_type begin_name cache end_name begin_init begin_expr begin_operator LPAR end_operator begin_name mock cache end_name begin_operator RPAR end_operator begin_call begin_name begin_name sel end_name begin_operator DOT end_operator begin_name get cache end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment the test end_comment begin_expr_stmt begin_expr begin_call begin_name assert false end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name cache end_name begin_operator DOT end_operator begin_name saved end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sel end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name file 1 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert false end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name cache end_name begin_operator DOT end_operator begin_name saved end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sel end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name file 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert false end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name cache end_name begin_operator DOT end_operator begin_name saved end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_switch begin_condition begin_expr begin_name kind end_name end_expr end_condition begin_block begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name fire task finished end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name fire target finished end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name fire build finished end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case end_block end_switch begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name kinds end_name begin_index begin_expr begin_name kind end_name begin_operator MINUS end_operator end_expr end_index end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name cache end_name begin_operator DOT end_operator begin_name saved end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment mock cache doesnt create a file therefore no cleanup needed end_comment end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test windows line separator 2 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name test windows line separator 2 end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name assertion failed error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try end_block 
 begin_comment the output file param output the output file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name output end_name end_name begin_operator EQ end_operator begin_name output end_name end_expr end_expr_stmt end_block 
 begin_comment create a new instance of a data type param type name the name of the data type to create an instance of must not be code null code return an instance of the specified data type or code null code if the data type name is not recognised exception build exception if the data type name is recognised but instance creation fails end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name create data type end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name type name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_call begin_name begin_name component helper end_name begin_operator DOT end_operator begin_name get component helper end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create data type end_name begin_argument_list begin_argument begin_expr begin_name type name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment delete all the class files which are out of date by way of their dependency on a class which is out of date return the number of files deleted end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name delete all affected files end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name out of date classes end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name class name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name count end_name begin_operator UNP end_operator begin_call begin_name delete affected files end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name class file info end_name end_type begin_name class info end_name begin_init begin_expr begin_operator LPAR end_operator begin_name class file info end_name begin_operator RPAR end_operator begin_call begin_name begin_name class file info map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name class info end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name class info end_name begin_operator DOT end_operator begin_name absolute file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name class info end_name begin_operator DOT end_operator begin_name absolute file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name count end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_return begin_expr begin_name count end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filesmatch identical end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment find out the current project name return current project name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get current project name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name current project name end_name end_expr end_return end_block 
 begin_comment if true ejbc will keep the intermediate java files used to build the class files this can be useful when debugging param new keepgenerated a boolean as a string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set keepgenerated end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name new keepgenerated end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name keepgenerated end_name begin_operator EQ end_operator begin_call begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name new keepgenerated end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name boolean value end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment assert that the given message has been logged with a priority lt info when running the given target end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name expect log containing end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name log end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert log containing end_name begin_argument_list begin_argument begin_expr begin_name log end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment tests whether or not a given path matches the start of a given pattern up to the first p this is not a general purpose test and should only be used if you can live with false positives for example code pattern a code and code str b code will yield code true code param pattern the pattern to match against must not be code null code param str the path to match as a string must not be code null code return whether or not a given path matches the start of a given pattern up to the first end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name match pattern start end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name pattern end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name str end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name match pattern start end_name begin_argument_list begin_argument begin_expr begin_name pattern end_name end_expr end_argument begin_argument begin_expr begin_name str end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment returns whether or not the process destroyer is registered as as shutdown hook return true if this is currently added as shutdown hook end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is added as shutdown hook end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name added end_name end_expr end_return end_block 
 begin_comment remove a particular command from a vector of command lines param c command line which should be removed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name remove commandline end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name vec commandlines end_name begin_operator DOT end_operator begin_name remove element end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name get end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name key end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name key end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name key end_name end_expr end_return end_block 
 begin_comment get the diagnostics for proxy information return the information end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name proxy selector end_name end_type begin_name selector end_name begin_init begin_expr begin_call begin_name begin_name proxy selector end_name begin_operator DOT end_operator begin_name get default end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name list end_name begin_init begin_expr begin_call begin_name begin_name selector end_name begin_operator DOT end_operator begin_name select end_name end_name begin_argument_list begin_argument begin_expr begin_name dest uri end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name proxies end_name begin_init begin_expr begin_call begin_name begin_name list end_name begin_operator DOT end_operator begin_name list iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name proxies end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name proxy end_name end_type begin_name proxy end_name begin_init begin_expr begin_operator LPAR end_operator begin_name proxy end_name begin_operator RPAR end_operator begin_call begin_name begin_name proxies end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name socket address end_name end_type begin_name address end_name begin_init begin_expr begin_call begin_name begin_name proxy end_name begin_operator DOT end_operator begin_name address end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name address end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name proxy end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name address end_name begin_operator UNP end_operator begin_name inet socket address end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name inet socket address end_name end_type begin_name ina end_name begin_init begin_expr begin_operator LPAR end_operator begin_name inet socket address end_name begin_operator RPAR end_operator begin_name address end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ina end_name begin_operator DOT end_operator begin_name get host name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ina end_name begin_operator DOT end_operator begin_name get port end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name ina end_name begin_operator DOT end_operator begin_name is unresolved end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name inet address end_name end_type begin_name addr end_name begin_init begin_expr begin_call begin_name begin_name ina end_name begin_operator DOT end_operator begin_name get address end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name addr end_name begin_operator DOT end_operator begin_name get host address end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_while begin_return begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test create sv fformat end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the display name of the ejb if a display name has not been set it returns the ejb implementation classname if the implementation class is not set it returns unnamed return the display name for the ejb end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name implementation end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_call begin_name begin_name implementation end_name begin_operator DOT end_operator begin_name get class name end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_else end_if end_block end_then end_if begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_comment setter used to store whether the task will include the generate client task see borland generate client task param b if true generate the client task end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set generateclient end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name generateclient end_name end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test kaffe end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the list of source files to process param src a comma separated list of source files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set sourcefiles end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name tok end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name source file end_name end_type begin_name sf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name source file end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sf end_name begin_operator DOT end_operator begin_name set file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add source end_name begin_argument_list begin_argument begin_expr begin_name sf end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_specifier end_specifier begin_name length test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment query automatic reference inclusion flag return true if flag is turned on end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get include default references end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name include default references end_name end_expr end_return end_block 
 begin_comment if true keeps a copy of the file with a keep extension param keep the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set keep copy end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name keep end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m keep end_name begin_operator EQ end_operator begin_name keep end_name end_expr end_expr_stmt end_block 
 begin_comment sets the node factory grammar option param node factory a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set nodefactory end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name node factory end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name node factory end_name end_expr end_argument begin_argument begin_expr begin_name node factory end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds a deployment tool for j on as server return the deployment tool instance to be configured end_comment begin_type begin_specifier end_specifier begin_name jonas deployment tool end_name end_type begin_name create jonas end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name jonas deployment tool end_name end_type begin_name tool end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name jonas deployment tool end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add deployment tool end_name begin_argument_list begin_argument begin_expr begin_name tool end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name tool end_name end_expr end_return end_block 
 begin_comment hashcode based on the rules for equality return a hashcode end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name hash code end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name hash code end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_name v end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name hash code end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test mapping end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name un package name mapper end_name end_type begin_name mapper end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name un package name mapper end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name set from end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name map file name end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call begin_index begin_expr end_expr end_index end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name expected end_name begin_init begin_expr begin_call begin_name fixup path end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name expected end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test empty end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment property name whose value should be set to the error of the process param error property the name of the property to be set with the error output end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set error property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name error property end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name error property end_name end_name begin_operator EQ end_operator begin_name error property end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name basedir exists end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name basedir end_name begin_init begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment trick to evoke basedir not set if null end_comment begin_return begin_expr begin_name basedir end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name basedir end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment call a method on the object with no parameters param method name the name of the method to call return the object returned by the method end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name invoke end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name method name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name reflect util end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name obj end_name end_expr end_argument begin_argument begin_expr begin_name method name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment command line argument param arg an argument to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add implementation argument end_name begin_parameter_list begin_param begin_decl begin_type begin_name implementation specific argument end_name end_type begin_name arg end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name arg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the packages as a collon separated list return the packages as a string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get packages end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name packages end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name i end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name packages end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set the list of exclude patterns to use all and characters are replaced by code file separator char code so the separator used need not match code file separator char code p when a pattern ends with a or is appended param excludes a list of exclude patterns may be code null code indicating that no files should be excluded if a non code null code list is given all elements must be non code null code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set excludes end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name excludes end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name excludes end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name excludes end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name excludes end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_name begin_name excludes end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_index end_name end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name excludes end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name excludes end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name normalize pattern end_name begin_argument_list begin_argument begin_expr begin_name begin_name excludes end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_else end_if end_block 
 begin_comment construct a manifest from ant s default manifest file return the default manifest exception build exception if there is a problem loading the default manifest end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name manifest end_name end_type begin_name get default manifest end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name in end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream reader end_name end_type begin_name insr end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name def manifest end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name in end_name begin_operator EQ end_operator begin_call begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get resource as stream end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name def manifest end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name in end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name def manifest end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_name insr end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name manifest end_name end_type begin_name default manifest end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name manifest end_name begin_argument_list begin_argument begin_expr begin_name insr end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name attribute end_name end_type begin_name created by end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name attribute end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name default manifest end_name begin_operator DOT end_operator begin_name get main section end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name store attribute end_name begin_argument_list begin_argument begin_expr begin_name created by end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name default manifest end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unsupported encoding exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name insr end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_operator UNP end_operator begin_call begin_name manifest end_name begin_argument_list begin_argument begin_expr begin_name insr end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_catch end_try end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name manifest exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name insr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment registers the location of a local dtd file or resource by registering a local dtd ejb descriptors can be parsed even when the remote servers which contain the public dt ds cannot be accessed param public id the public dtd identifier found in an xml document param location the file or resource name for the appropriate dtd stored on the local machine end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name register dtd end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name public id end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name location end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name register dtd end_name end_name begin_argument_list begin_argument begin_expr begin_name public id end_name end_expr end_argument begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment attaches the build listeners of the current project to the new project configures a possible logfile transfers task and data type definitions transfers properties either all or just the ones specified as user properties to the current project depending on inheritall transfers the input handler end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name initialize project end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name new project end_name begin_operator DOT end_operator begin_name set input handler end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get input handler end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name get build listeners end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name new project end_name begin_operator DOT end_operator begin_name add build listener end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name build listener end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_if begin_condition begin_expr begin_name output end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name outfile end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name dir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name outfile end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name outfile end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_try begin_block begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name outfile end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name default logger end_name end_type begin_name logger end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name default logger end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name logger end_name begin_operator DOT end_operator begin_name set message output level end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name logger end_name begin_operator DOT end_operator begin_name set output print stream end_name end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name logger end_name begin_operator DOT end_operator begin_name set error print stream end_name end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new project end_name begin_operator DOT end_operator begin_name add build listener end_name end_name begin_argument_list begin_argument begin_expr begin_name logger end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if begin_comment set user defined properties end_comment begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name copy user properties end_name begin_argument_list begin_argument begin_expr begin_name new project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name inherit all end_name end_expr end_condition begin_then begin_block begin_comment set java built in properties separately end_comment begin_comment b c we won t inherit them end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name new project end_name begin_operator DOT end_operator begin_name set system properties end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment set all properties from calling project end_comment begin_expr_stmt begin_expr begin_call begin_name add almost all end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get properties end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name property sets end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name property set end_name end_type begin_name ps end_name begin_init begin_expr begin_operator LPAR end_operator begin_name property set end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add almost all end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ps end_name begin_operator DOT end_operator begin_name get properties end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_comment return the index of the selected value in the array see get values end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name get index end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name index end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test a end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect name address 3 end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name email address end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment flag optional default false to remove the sources after the build see the tt rmsource tt option of rpmbuild param rs a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set remove source end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name rs end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name remove source end_name begin_operator EQ end_operator begin_name rs end_name end_expr end_expr_stmt end_block 
 begin_comment get an iterator to the arguments list since ant 1 7 return an iterator end_comment begin_type begin_specifier end_specifier begin_name iterator end_name end_type begin_name iterator end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment receive notification of a recoverable error param exception the error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name error end_name begin_parameter_list begin_param begin_decl begin_type begin_name sax parse exception end_name end_type begin_name exception end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name failed end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name do log end_name begin_argument_list begin_argument begin_expr begin_name exception end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test reparse end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test reparse end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_comment crc manually calculated sorry end_comment begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name data end_name begin_init begin_expr begin_block begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_expr end_expr begin_expr end_expr begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_comment crc end_comment begin_expr end_expr begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_comment mode end_comment begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_comment link length end_comment begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr end_block end_expr end_init end_decl end_decl_stmt begin_comment uid gid end_comment begin_decl_stmt begin_decl begin_type begin_name asi extra field end_name end_type begin_name a end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name asi extra field end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name parse from local file data end_name end_name begin_argument_list begin_argument begin_expr begin_name data end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name data end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name data end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name get local file data length end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name is link end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name file flag end_name begin_operator UNP end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name get mode end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name get user id end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name get group id end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name data end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name byte end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_operator UNP end_operator begin_comment crc end_comment begin_expr end_expr begin_operator UNP end_operator begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_operator UNP end_operator begin_comment mode end_comment begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_comment link length end_comment begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_comment uid gid end_comment begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_operator UNP end_operator begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_operator UNP end_operator begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_operator UNP end_operator begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr end_block end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name a end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name asi extra field end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name parse from local file data end_name end_name begin_argument_list begin_argument begin_expr begin_name data end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name data end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name data end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name get local file data length end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name is link end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name link flag end_name begin_operator UNP end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name get mode end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name get user id end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name get group id end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name get linked file end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name data end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name byte end_name begin_index end_index end_name begin_block begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_operator UNP end_operator begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_operator UNP end_operator begin_comment crc end_comment begin_expr end_expr begin_operator UNP end_operator begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_operator UNP end_operator begin_comment mode end_comment begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_comment link end_comment begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_expr_stmt begin_comment uid gid end_comment begin_expr_stmt begin_expr begin_name a end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name asi extra field end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name parse from local file data end_name end_name begin_argument_list begin_argument begin_expr begin_name data end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name data end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name data end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name get local file data length end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name is link end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name dir flag end_name begin_operator UNP end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name get mode end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name get user id end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name get group id end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name data end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name byte end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_comment bad crc end_comment begin_expr end_expr begin_operator UNP end_operator begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_operator UNP end_operator begin_comment mode end_comment begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_comment link end_comment begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_expr_stmt begin_comment uid gid end_comment begin_expr_stmt begin_expr begin_name a end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name asi extra field end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name parse from local file data end_name end_name begin_argument_list begin_argument begin_expr begin_name data end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name data end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_specifier end_specifier begin_name commandline java test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the executable name of the java compiler end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get system javac end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get jdk executable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment end_comment begin_comment ensure that an external entity resolves as expected with no end_comment begin_comment xml catalog involvement end_comment begin_comment end_comment begin_comment transform an xml file that refers to the entity into a text end_comment begin_comment file stuff result into property val 1 end_comment begin_comment end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test entity no catalog end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set whether to attempt to resolve the executable to a file param resolve executable if true attempt to resolve the path of the executable end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set resolve executable end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name resolve executable end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name resolve executable end_name end_name begin_operator EQ end_operator begin_name resolve executable end_name end_expr end_expr_stmt end_block 
 begin_comment opens the given file for reading assuming the specified encoding for file names param f the archive param encoding the encoding to use for file names throws io exception if an error occurs while reading the file end_comment begin_specifier end_specifier begin_name zip file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name f end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name encoding end_name end_name begin_operator EQ end_operator begin_name encoding end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name archive end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name random access file end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name populate from central directory end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name resolve local file header data end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name archive end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e 2 end_name end_decl end_param end_parameter_list begin_block begin_comment swallow throw the original exception instead end_comment end_block end_catch end_try begin_throw begin_expr begin_name e end_name end_expr end_throw end_block end_catch end_try end_block 
 begin_comment buildpath to use by reference param r a reference to an ant path object containing the buildpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set buildpath ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create buildpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set refid end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set a property any existing property of the same name is overwritten unless it is a user property param name the name of property to set must not be code null code param value the new value of the property must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name property helper end_name begin_operator DOT end_operator begin_name get property helper end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set property end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment do the execution throws build exception if a target tries to call itself probably also if a build exception is thrown by the new project end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name saved dir end_name begin_init begin_expr begin_name dir end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name saved ant file end_name begin_init begin_expr begin_name ant file end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name locals end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list begin_argument begin_expr begin_name targets end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name get new project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name dir end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name inherit all end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dir end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name initialize project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name dir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name new project end_name begin_operator DOT end_operator begin_name set base dir end_name end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name saved dir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment has been set explicitly end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name new project end_name begin_operator DOT end_operator begin_name set inherited property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name project basedir end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name dir end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name override properties end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name ant file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ant file end_name begin_operator EQ end_operator begin_name begin_name main end_name begin_operator DOT end_operator begin_name default build filename end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr begin_name ant file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name ant file end_name begin_operator EQ end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_call begin_name begin_name locals end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name begin_name locals end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name ant file end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new project end_name begin_operator DOT end_operator begin_name set user property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant file end_name end_name end_expr end_argument begin_argument begin_expr begin_name ant file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name this ant file end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant file end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment are we trying to call the target in which we are defined or end_comment begin_comment the build file if this is a top level task end_comment begin_if begin_condition begin_expr begin_name this ant file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name this ant file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get owning target end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name get owning target end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name configure project end_name end_name begin_argument_list begin_argument begin_expr begin_name new project end_name end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name add location to build exception end_name end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_if begin_condition begin_expr begin_call begin_name begin_name locals end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name default target end_name begin_init begin_expr begin_call begin_name begin_name new project end_name begin_operator DOT end_operator begin_name get default target end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name default target end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name locals end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name default target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name new project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant file end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant file end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get owning target end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name owning target name end_name begin_init begin_expr begin_call begin_name get owning target end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name locals end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name owning target name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name circular end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name it end_name begin_init begin_expr begin_call begin_name begin_name locals end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_operator UNP end_operator begin_name circular end_name begin_operator UNP end_operator begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name target end_name end_type begin_name other end_name begin_init begin_expr begin_call begin_name target end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get targets end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name circular end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name other end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name depends on end_name end_name begin_argument_list begin_argument begin_expr begin_name owning target name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_expr_stmt end_block end_for begin_if begin_condition begin_expr begin_name circular end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name owning target name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name add references end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name locals end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name locals end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name locals end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ant file end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new project end_name begin_operator DOT end_operator begin_name fire sub build started end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new project end_name begin_operator DOT end_operator begin_name execute targets end_name end_name begin_argument_list begin_argument begin_expr begin_name locals end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name be end_name begin_operator EQ end_operator begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name add location to build exception end_name end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_name be end_name end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ant file end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new project end_name begin_operator DOT end_operator begin_name fire sub build finished end_name end_name begin_argument_list begin_argument begin_expr begin_name be end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block end_then end_if end_block begin_finally begin_block begin_comment help the gc end_comment begin_expr_stmt begin_expr begin_name new project end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name property end_name end_type begin_name p end_name begin_init begin_expr begin_operator LPAR end_operator begin_name property end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_if begin_condition begin_expr begin_name output end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name out end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_then end_if begin_expr_stmt begin_expr begin_name dir end_name begin_operator EQ end_operator begin_name saved dir end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ant file end_name begin_operator EQ end_operator begin_name saved ant file end_name end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment implement the user info interface param password prompt ignored return true the first time this is called false otherwise end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name prompt password end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name password prompt end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment a substitution pattern you can use this element to refer to a previously defined substitution pattern datatype instance return the substitution pattern object to be configured as an element end_comment begin_type begin_specifier end_specifier begin_name substitution end_name end_type begin_name create substitution end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name subs end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name subs end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name substitution end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name subs end_name end_expr end_return end_block 
 begin_comment reset the classloader if it already exists a new loader will be created and all the references to the old one will be removed it is not possible to remove paths from a loader the new path will be used param b true if the loader is to be reset end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set reset end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name reset end_name end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment creates the real object instance and child elements then configures the attributes and text of the real object this unknown element is then replaced with the real object in the containing target s list of children exception build exception if the configuration fails end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name maybe configure end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name real thing end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name configure end_name begin_argument_list begin_argument begin_expr begin_call begin_name make object end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get wrapper end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the attribute s key its name in lower case return the attribute s key end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get key end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment stores a named nested element using a storage method determined by the initial introspection if no appropriate storage method is available this method returns immediately param project ignored in this implementation may be code null code param parent parent instance to store the child in must not be code null code param child child instance to store in the parent should not be code null code param element name name of the child element to store may be code null code in which case this method returns immediately exception build exception if the storage method fails end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name store element end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name child end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name element name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name element name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name nested creator end_name end_type begin_name ns end_name begin_init begin_expr begin_operator LPAR end_operator begin_name nested creator end_name begin_operator RPAR end_operator begin_call begin_name begin_name nested creators end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name element name end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ns end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ns end_name begin_operator DOT end_operator begin_name store end_name end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name child end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_comment impossible as get methods should only return public methods end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ie end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name ine end_name end_decl end_param end_parameter_list begin_block begin_comment impossible as get methods should only return public methods end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ine end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name invocation target exception end_name end_type begin_name ite end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name begin_init begin_expr begin_call begin_name begin_name ite end_name begin_operator DOT end_operator begin_name get target exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name t end_name begin_operator UNP end_operator begin_name build exception end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator LPAR end_operator begin_name build exception end_name begin_operator RPAR end_operator begin_name t end_name end_expr end_throw end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment the heart of the matter this is where the selector gets to decide on the inclusion of a file in a particular fileset param basedir the base directory the scan is being done from param filename is the name of the file to check param file is a java io file object the selector can use return whether the file should be selected or not end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name basedir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_comment throw build exception on error end_comment begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name type end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file type end_name begin_operator DOT end_operator begin_name dir end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_call begin_name begin_name type end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file type end_name begin_operator DOT end_operator begin_name file end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_comment return code true code if this code container mapper code or any of its sub elements contains the specified code file name mapper code param file name mapper the code file name mapper code to search for return code boolean code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name contains end_name begin_parameter_list begin_param begin_decl begin_type begin_name file name mapper end_name end_type begin_name file name mapper end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name foundit end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name mappers end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_name foundit end_name end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file name mapper end_name end_type begin_name next end_name begin_init begin_expr begin_call begin_name file name mapper end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name foundit end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name next end_name begin_operator EQT end_operator begin_name file name mapper end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name next end_name begin_operator UNP end_operator begin_name container mapper end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name container mapper end_name begin_operator RPAR end_operator begin_name next end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name contains end_name begin_argument_list begin_argument begin_expr begin_name file name mapper end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator RPAR end_operator end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name foundit end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test full path matches case insensitive end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name directory scanner end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set case sensitive end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns code true code if the file exists and is signed with the signature specified or if code name code wasn t specified if the file contains a signature return true if the file is signed end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name r end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name r end_name begin_operator EQ end_operator begin_call begin_name is signed end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name e end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_name r end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name r end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no overwrite end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name temp file 2 end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name size end_name begin_init begin_expr begin_call begin_name begin_name file 2 end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name size end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment from attribute not supported param to a string throws build exception always end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set to end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name to end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name unsupported attribute exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test immutable end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return time in millis of the build end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name get time elapsed end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name time finished end_name begin_operator DOT end_operator begin_name get time end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get time end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_call begin_name begin_name time started end_name begin_operator DOT end_operator begin_name get time end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get time end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test greedy inline handler classname end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name stdin end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns an enumerator for accessing the set of selectors return an enumerator that goes through each of the selectors end_comment begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name selector elements end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name selector elements end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name selector elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment launches the given command in a new process in the given working directory param project the ant project param cmd the command line to execute as an array of strings param env the environment to set as an array of strings param working dir working directory where the command should run return the created process throws io exception forwarded from the exec method of the command launcher end_comment begin_type begin_specifier end_specifier begin_name process end_name end_type begin_name exec end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name cmd end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name env end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name working dir end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name working dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name exec end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr begin_name env end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get properties end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name put end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name working dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_return begin_expr begin_call begin_name exec end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr begin_name env end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get properties end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name put end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name ant working directory end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment set the maximum memory to be used by all forked jv ms param max the value as defined by tt mx tt or tt xmx tt in the java command line options since ant 1 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set maxmemory end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name max end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get commandline end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set maxmemory end_name begin_argument_list begin_argument begin_expr begin_name max end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment construct a archive resource representing the specified entry in the specified archive param a the archive as resource param with entry if the entry has been specified end_comment begin_specifier end_specifier begin_name archive resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name a end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name with entry end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add configured end_name begin_argument_list begin_argument begin_expr begin_name a end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name have entry end_name begin_operator EQ end_operator begin_name with entry end_name end_expr end_expr_stmt end_block 
 begin_comment ensures that the selector passes the conditions placed on it with code if code and code unless code return true if conditions are passed end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name passes conditions end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name if property end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name if property end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name unless property end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name unless property end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_else end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment set the default path separator string defaults to current jvm link java io file path separator file path separator param sep path separator string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set path sep end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name sep end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name path sep end_name begin_operator EQ end_operator begin_name sep end_name end_expr end_expr_stmt end_block 
 begin_comment return the count of included directories return code int code since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name get included dirs count end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name dirs included end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal state exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name dirs included end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment execute the concat task end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name resource collection end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_comment do nothing if no resources including nested text end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator begin_operator UNP end_operator begin_name header end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name footer end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name binary end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name binary cat end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name cat end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set project end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name project end_name end_name begin_operator EQ end_operator begin_name project end_name end_expr end_expr_stmt end_block 
 begin_comment attribute specifing whether to ignore the case difference in the names param case sensitive a boolean default is false since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set case sensitive end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name case sensitive end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name case sensitive end_name end_name begin_operator EQ end_operator begin_name case sensitive end_name end_expr end_expr_stmt end_block 
 begin_comment sets the password for the user param password the new password value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set password end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name password end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name user info end_name begin_operator DOT end_operator begin_name set password end_name end_name begin_argument_list begin_argument begin_expr begin_name password end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment restrict this execution to a single os family param os family the family to restrict to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set os family end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name os family end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name os family end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name os family end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment property defining the need to resolve the change list param needs resolve property a property which will be set if the change needs resolve since ant 1 6 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set needs resolve property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name needs resolve property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name needs resolve property end_name end_name begin_operator EQ end_operator begin_name needs resolve property end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name location end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name location end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name project end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name tstamp end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name tstamp end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tstamp end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tstamp end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a new zip entry with fields taken from the specified zip entry param entry the entry to get fields from since 1 1 throws zip exception on error end_comment begin_specifier end_specifier begin_name zip entry end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name util end_name begin_operator DOT end_operator begin_name zip end_name begin_operator DOT end_operator begin_name zip entry end_name end_name end_type begin_name entry end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name zip exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name entry end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name extra end_name begin_init begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get extra end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name extra end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set extra fields end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name extra field utils end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_name extra end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment initializes extra data to an empty byte array end_comment begin_expr_stmt begin_expr begin_call begin_name set extra end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the root classes to be used to drive the scan param root classes the root classes to be used for this scan end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set root classes end_name begin_parameter_list begin_param begin_decl begin_type begin_name vector end_name end_type begin_name root classes end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name root classes end_name end_name begin_operator EQ end_operator begin_name root classes end_name end_expr end_expr_stmt end_block 
 begin_comment set a property from a byte array output stream param baos contains the property value param property name the property name exception io exception if the value cannot be read form the stream end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set property from baos end_name begin_parameter_list begin_param begin_decl begin_type begin_name byte array output stream end_name end_type begin_name baos end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name property name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name in end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string reader end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name baos end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name val end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name val end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name val end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name val end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name managing task end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set new property end_name begin_argument_list begin_argument begin_expr begin_name property name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name val end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment property to set to true if there is a failure in a test p this property is applied on all batch test batchtest and j unit test test however it can possibly be overriden by their own properties p param property name the name of the property to set in the event of an failure since ant 1 4 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set failure property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name property name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name failure property end_name end_name begin_operator EQ end_operator begin_name property name end_name end_expr end_expr_stmt end_block 
 begin_comment scans a particular directory param dir directory to scan param vpath relative path to the base directory of the remote fileset always ended with a file separator param fast seems to be always true in practice end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name scandir end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name dir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name vpath end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name fast end_name end_decl end_param end_parameter_list begin_block begin_comment avoid double scanning of directories can only happen in fast mode end_comment begin_if begin_condition begin_expr begin_name fast end_name begin_operator UNP end_operator begin_call begin_name has been scanned end_name begin_argument_list begin_argument begin_expr begin_name vpath end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_try begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name change working directory end_name end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name complete path end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name vpath end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name complete path end_name begin_operator EQ end_operator begin_name root path end_name begin_operator PLUS end_operator begin_name remote file sep end_name begin_operator PLUS end_operator begin_call begin_name begin_name vpath end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name remote file sep end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name complete path end_name begin_operator EQ end_operator begin_name root path end_name end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name ftp file end_name begin_index end_index end_type begin_name newfiles end_name begin_init begin_expr begin_call begin_name list files end_name begin_argument_list begin_argument begin_expr begin_name complete path end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name newfiles end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name change to parent directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name newfiles end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name ftp file end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name newfiles end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name is functioning as directory end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_name vpath end_name begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name slow scan allowed end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is follow symlinks end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is symbolic link end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name dirs excluded end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name slow scan allowed end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name is included end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name account for included dir end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name ant ftp file end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name complete path end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name fast end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name dirs not included end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name fast end_name begin_operator UNP end_operator begin_call begin_name could hold included end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name scandir end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name name end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument begin_argument begin_expr begin_name fast end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_else end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name fast end_name begin_operator UNP end_operator begin_name slow scan allowed end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name scandir end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name name end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument begin_argument begin_expr begin_name fast end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_name vpath end_name begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is follow symlinks end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is symbolic link end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name files excluded end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name is functioning as file end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name account for included file end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_block end_else end_if end_block end_then end_if end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name change to parent directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirector 9 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name test redirector 9 thru 12 end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the input stream from which the user input should be read return the input stream from which the user input should be read end_comment begin_type begin_specifier end_specifier begin_name input stream end_name end_type begin_name get input stream end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name in end_name end_name end_expr end_return end_block 
 begin_comment returns a code string code representing this loader return the path that this classloader has end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator PLUS end_operator begin_call begin_name get classpath end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_return end_block 
 begin_comment the hashcode method return the hash code of the directory field end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name hash code end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name hash code end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_specifier end_specifier begin_name lazy file output stream test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment private constructor end_comment begin_specifier end_specifier begin_name reflect util end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment n end_comment begin_comment check style visibility modifier on end_comment begin_comment a flag of p 4 labelsync preserve files which exist in the label but not in the current view return add attribute if set to true the task will not remove any files from the label only add files which were not there previously or update these where the revision has changed the add attribute is the a flag of p 4 labelsync end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is add end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name add end_name end_expr end_return end_block 
 begin_comment set the classpath to be used for this compilation param cp the classpath to be used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name cp end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name classpath end_name begin_operator EQ end_operator begin_name cp end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name cp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment return returns the timestamp granularity end_comment begin_type begin_name granularity end_name end_type begin_name get timestamp granularity end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name timestamp granularity end_name end_expr end_return end_block 
 begin_comment username known to remote host param username the new username value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set username end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name username end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name user info end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr begin_name username end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment called filter the token this sets the token in this object calls the script and returns the token param token the token to be filtered return the filtered token end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name filter end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name token end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name init end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set token end_name begin_argument_list begin_argument begin_expr begin_name token end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name runner end_name begin_operator DOT end_operator begin_name execute script end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name get token end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment verbose text log param msg string to add to log if verbose is defined for the build end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log verbose end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name owner end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test xml with entities in non ascii path end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the default constructor end_comment begin_specifier end_specifier begin_name file list end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment construct a new immutable resource exception with the specified message param s the message string end_comment begin_specifier end_specifier begin_name immutable resource exception end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment writes a formatted list of target names to code system out code with an optional description param project the project instance param names the names to be printed must not be code null code param descriptions the associated target descriptions may be code null code in which case no descriptions are displayed if non code null code this should have as many elements as code names code param heading the heading to display should not be code null code param maxlen the maximum length of the names of the targets if descriptions are given they are padded to this position so they line up so long as the names really i are i shorter than this end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name print targets end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name vector end_name end_type begin_name names end_name end_decl end_param begin_param begin_decl begin_type begin_name vector end_name end_type begin_name descriptions end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name heading end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name maxlen end_name end_decl end_param end_parameter_list begin_block begin_comment now start printing the targets and their descriptions end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name l sep end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment got a bit annoyed that i couldn t find a pad function end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name spaces end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name spaces end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator LE end_operator begin_name maxlen end_name end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name spaces end_name begin_operator UNP end_operator begin_name spaces end_name end_expr end_expr_stmt end_block end_while begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name msg end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name heading end_name begin_operator PLUS end_operator begin_name l sep end_name begin_operator PLUS end_operator begin_name l sep end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name names end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name names end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name descriptions end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name spaces end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name maxlen end_name begin_operator MINUS end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name names end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name descriptions end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name l sep end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the delay in seconds before shutting down the server optional param s the selay end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set delay end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name delay end_name begin_operator EQ end_operator begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convenience constructor param r the resource selector to add end_comment begin_specifier end_specifier begin_name none end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name resource selector end_name begin_index end_index end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the preset values return the predefined attributes elements and text as an unknown element end_comment begin_type begin_specifier end_specifier begin_name unknown element end_name end_type begin_name get pre sets end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name element end_name end_expr end_return end_block 
 begin_comment do the business throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name tar file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name tar file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name tar file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name tar file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name tar file end_name begin_operator DOT end_operator begin_name can write end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name saved file sets end_name begin_init begin_expr begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_if begin_condition begin_expr begin_name base dir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name base dir end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment add the main fileset to the list of filesets to process end_comment begin_decl_stmt begin_decl begin_type begin_name tar file set end_name end_type begin_name main file set end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name tar file set end_name begin_argument_list begin_argument begin_expr begin_name fileset end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name main file set end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name main file set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name resource collections end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment check if tar is out of date with respect to each end_comment begin_comment fileset end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name up to date end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_name up to date end_name begin_operator UNP end_operator begin_call begin_name check end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name tar file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name resource collections end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_name up to date end_name begin_operator UNP end_operator begin_call begin_name check end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name resource collection end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_if begin_condition begin_expr begin_name up to date end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name tar file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name tar file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name tar output stream end_name end_type begin_name t out end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name t out end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name tar output stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name compression end_name begin_operator DOT end_operator begin_name compress end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered output stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name tar file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t out end_name begin_operator DOT end_operator begin_name set debug end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name long file mode end_name begin_operator DOT end_operator begin_name is truncate mode end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name t out end_name begin_operator DOT end_operator begin_name set long file mode end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name tar output stream end_name begin_operator DOT end_operator begin_name longfile truncate end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name long file mode end_name begin_operator DOT end_operator begin_name is fail mode end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name long file mode end_name begin_operator DOT end_operator begin_name is omit mode end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name t out end_name begin_operator DOT end_operator begin_name set long file mode end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name tar output stream end_name begin_operator DOT end_operator begin_name longfile error end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment warn or gnu end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name t out end_name begin_operator DOT end_operator begin_name set long file mode end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name tar output stream end_name begin_operator DOT end_operator begin_name longfile gnu end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if begin_expr_stmt begin_expr begin_name long warning given end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name tar end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name tar file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name t out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name resource collections end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name tar end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name resource collection end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name t out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name t out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block begin_finally begin_block begin_expr_stmt begin_expr begin_name filesets end_name begin_operator EQ end_operator begin_name saved file sets end_name end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment resource doesn t exist property test null end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 6 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment do the work the work is actually done by creating a separate jvm to run a java task exception build exception if something goes wrong with the build end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name ejbjarfile end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name ejbjarfile end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name clientjarfile end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name clientjarfile end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name ejbjarname end_name begin_init begin_expr begin_call begin_name begin_name ejbjarfile end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment clientname ejbjarfile client jar end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name clientname end_name begin_init begin_expr begin_call begin_name begin_name ejbjarname end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ejbjarname end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name clientname end_name begin_operator EQ end_operator begin_name clientname end_name begin_operator PLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name clientjarfile end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name clientname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name mode end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set mode end_name begin_argument_list begin_argument begin_expr begin_name java mode end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name version end_name begin_operator EQT end_operator begin_name begin_name borland deployment tool end_name begin_operator DOT end_operator begin_name bes end_name end_name begin_operator UNP end_operator begin_name version end_name begin_operator EQT end_operator begin_name begin_name borland deployment tool end_name begin_operator DOT end_operator begin_name bas end_name end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name version end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name clientjarfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name mode end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name fork mode end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name execute fork end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name execute java end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_comment end of else end_comment end_block 
 begin_comment the default value to use if the parameter is not used in the templated instance param default value the default value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set default end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name default value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name default value end_name end_name begin_operator EQ end_operator begin_name default value end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name get reader end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name reader end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name resource end_name end_type begin_name r end_name begin_init begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name to long string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name begin_init begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name reader end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_name encoding end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name arrays end_name begin_operator DOT end_operator begin_name fill end_name end_name begin_argument_list begin_argument begin_expr begin_name last chars end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name reader end_name end_expr end_return end_block 
 begin_comment executes the task p builds a command line to execute ccm and then calls exec s run method to execute the command line p throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name file end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get file end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name doit end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name sizeof file set end_name begin_init begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name sizeof file set end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name src files end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name src files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name src end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name src files end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name set file end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name doit end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_for end_block 
 begin_comment add a new datatype definition attempting to override an existing definition with an equivalent one i e with the same classname results in a verbose log message attempting to override an existing definition with a different one results in a warning log message but the definition is changed param type name the name of the datatype must not be code null code param type class the full name of the class implementing the datatype must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add data type definition end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name type name end_name end_decl end_param begin_param begin_decl begin_type begin_name class end_name end_type begin_name type class end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name component helper end_name begin_operator DOT end_operator begin_name get component helper end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add data type definition end_name begin_argument_list begin_argument begin_expr begin_name type name end_name end_expr end_argument begin_argument begin_expr begin_name type class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the name of a property which must be defined for the definition to be set optional param condition the name of the property end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set if end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name condition end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name if cond end_name end_name begin_operator EQ end_operator begin_name condition end_name end_expr end_expr_stmt end_block 
 begin_comment see org apache tools ant build listener message logged build event end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name message logged end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get task end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get task end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name emacs mode end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name label end_name begin_init begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name size end_name begin_init begin_expr begin_name begin_name default logger end_name begin_operator DOT end_operator begin_name left column size end_name end_name begin_operator MINUS end_operator begin_call begin_name begin_name label end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name label end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get priority end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_name e end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name a end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test that an exception is thrown when the source attribute is empty end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test empty source end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set whether to fail when errors are encountered if false note errors to the output but keep going default is true param failonerror true or false end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fail on error end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name failonerror end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name failonerror end_name end_name begin_operator EQ end_operator begin_name failonerror end_name end_expr end_expr_stmt end_block 
 begin_comment ignored param from ignored end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set from end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name from end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment returns the display name element read from the standard ejb descriptor return the ejb jar display name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get display name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name display name end_name end_expr end_return end_block 
 begin_comment get the build file location associated with this element s task return the task s location instance end_comment begin_type begin_specifier end_specifier begin_name location end_name end_type begin_name get location end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get task end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment creates a new message based on the given string param text the message end_comment begin_specifier end_specifier begin_name message end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add text end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a system property param sysp system property end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add sysproperty end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name environment end_name begin_operator DOT end_operator begin_name variable end_name end_name end_type begin_name sysp end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get command line end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add sysproperty end_name begin_argument_list begin_argument begin_expr begin_name sysp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set thirteen end_name begin_parameter_list begin_param begin_decl begin_type begin_name class end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name line oriented output stream test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment empty end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add failure end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name send directory end_name begin_parameter_list begin_param begin_decl begin_type begin_name channel sftp end_name end_type begin_name channel end_name end_decl end_param begin_param begin_decl begin_type begin_name directory end_name end_type begin_name current end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name sftp exception end_name end_expr end_argument end_throws begin_block begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name file it end_name begin_init begin_expr begin_call begin_name begin_name current end_name begin_operator DOT end_operator begin_name files iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name file it end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name send file to remote end_name begin_argument_list begin_argument begin_expr begin_name channel end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name file it end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name dir it end_name begin_init begin_expr begin_call begin_name begin_name current end_name begin_operator DOT end_operator begin_name directory iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name dir it end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name directory end_name end_type begin_name dir end_name begin_init begin_expr begin_operator LPAR end_operator begin_name directory end_name begin_operator RPAR end_operator begin_call begin_name begin_name dir it end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name send directory to remote end_name begin_argument_list begin_argument begin_expr begin_name channel end_name end_expr end_argument begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment date to check out param date the date to check out ant attribute group vdl end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set date end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name date end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal date end_name end_name begin_argument_list begin_argument begin_expr begin_name date end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the code ant java version code property and tests for unsupported jvm versions if the version is supported verbose log messages are generated to record the java version and operating system name exception build exception if this java version is not supported see org apache tools ant util java env utils get java version end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set java version property end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name java version end_name begin_init begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get java version end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name set property internal end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant java version end_name end_name end_expr end_argument begin_argument begin_expr begin_name java version end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment sanity check end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 0 end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 1 end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name java version end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name msg verbose end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name msg verbose end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets locale specific language of resource bundle optional param bundle language langage of the bundle end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set bundle language end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name bundle language end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bundle language end_name end_name begin_operator EQ end_operator begin_name bundle language end_name end_expr end_expr_stmt end_block 
 begin_comment restrict the given set of files to those that are newer than their corresponding target files param files the original set of files param src dir all files are relative to this directory param dest dir target files live here if null file names returned by the mapper are assumed to be absolute param mapper knows how to construct a target file names from source file names return an array of filenames end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name restrict end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name files end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name src dir end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest dir end_name end_decl end_param begin_param begin_decl begin_type begin_name file name mapper end_name end_type begin_name mapper end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name restrict end_name begin_argument_list begin_argument begin_expr begin_name files end_name end_expr end_argument begin_argument begin_expr begin_name src dir end_name end_expr end_argument begin_argument begin_expr begin_name dest dir end_name end_expr end_argument begin_argument begin_expr begin_name mapper end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file timestamp granularity end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name remove dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment check to make sure that the given dir isn t a symlink end_comment begin_comment the comparison of absolute path and canonical path end_comment begin_comment catches this end_comment begin_comment if dir get canonical path equals dir get absolute path end_comment begin_comment costin it will not work if home costin is symlink to end_comment begin_comment da 0 home costin taz for example end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name list end_name begin_init begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name list end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name s end_name begin_init begin_expr begin_name begin_name list end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name remove dir end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_else end_if end_block end_for begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment see build logger set output print stream print stream end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output print stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name close file end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator begin_name output end_name end_expr end_expr_stmt end_block 
 begin_comment compares source files to destination files to see if they should be copied param from dir the source directory param to dir the destination directory param files a list of files to copy param dirs a list of directories to copy end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name scan end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name from dir end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name to dir end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name files end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name dirs end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file name mapper end_name end_type begin_name mapper end_name begin_init begin_expr begin_call begin_name get mapper end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name build map end_name begin_argument_list begin_argument begin_expr begin_name from dir end_name end_expr end_argument begin_argument begin_expr begin_name to dir end_name end_expr end_argument begin_argument begin_expr begin_name files end_name end_expr end_argument begin_argument begin_expr begin_name mapper end_name end_expr end_argument begin_argument begin_expr begin_name file copy map end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name include empty end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name build map end_name begin_argument_list begin_argument begin_expr begin_name from dir end_name end_expr end_argument begin_argument begin_expr begin_name to dir end_name end_expr end_argument begin_argument begin_expr begin_name dirs end_name end_expr end_argument begin_argument begin_expr begin_name mapper end_name end_expr end_argument begin_argument begin_expr begin_name dir copy map end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment add a target to the project or replaces one with the same name param target name the name to use for the target must not be code null code param target the target to be added or replaced in the project must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add or replace target end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target name end_name end_decl end_param begin_param begin_decl begin_type begin_name target end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_name target name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name msg debug end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name targets end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name target name end_name end_expr end_argument begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the jarfile that is to be tested for the presence of a signature param file jarfile to be tested end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block 
 begin_comment create an instance needs to be configured by binding to a project end_comment begin_specifier end_specifier begin_name exec task end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment creates a new zip entry with the specified name param name the name of the entry since 1 1 end_comment begin_specifier end_specifier begin_name zip entry end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test inspired by bug 1415 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test children of excluded directory end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name login suceeded end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name change remote dir end_name begin_argument_list begin_argument begin_expr begin_name remote tmp dir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name ftp directory scanner end_name end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name my ftp task end_name begin_operator DOT end_operator begin_name new scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set excludes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ds end_name begin_operator EQ end_operator begin_call begin_name begin_name my ftp task end_name begin_operator DOT end_operator begin_name new scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name change remote dir end_name begin_argument_list begin_argument begin_expr begin_name remote tmp dir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set excludes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name dom element writer test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name create relative file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name filename end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_comment else end_comment begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment use the logger config end_comment begin_comment set the output print stream param output the output stream end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output print stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out end_name end_name begin_operator EQ end_operator begin_name output end_name end_expr end_expr_stmt end_block 
 begin_comment searches for the quot end of central dir record quot parses it and positions the stream at the first central directory record end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name position at central directory end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name found end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name off end_name begin_init begin_expr begin_call begin_name begin_name archive end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name min eocd size end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name off end_name begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name archive end_name begin_operator DOT end_operator begin_name seek end_name end_name begin_argument_list begin_argument begin_expr begin_name off end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name sig end_name begin_init begin_expr begin_name begin_name zip output stream end_name begin_operator DOT end_operator begin_name eocd sig end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name curr end_name begin_init begin_expr begin_call begin_name begin_name archive end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name curr end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_block begin_if begin_condition begin_expr begin_name curr end_name begin_operator EQT end_operator begin_name begin_name sig end_name begin_index begin_expr end_expr end_index end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name curr end_name begin_operator EQ end_operator begin_call begin_name begin_name archive end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name curr end_name begin_operator EQT end_operator begin_name begin_name sig end_name begin_index begin_expr end_expr end_index end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name curr end_name begin_operator EQ end_operator begin_call begin_name begin_name archive end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name curr end_name begin_operator EQT end_operator begin_name begin_name sig end_name begin_index begin_expr end_expr end_index end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name curr end_name begin_operator EQ end_operator begin_call begin_name begin_name archive end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name curr end_name begin_operator EQT end_operator begin_name begin_name sig end_name begin_index begin_expr end_expr end_index end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name found end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_then end_if end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name archive end_name begin_operator DOT end_operator begin_name seek end_name end_name begin_argument_list begin_argument begin_expr begin_operator MMINUS end_operator begin_name off end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name curr end_name begin_operator EQ end_operator begin_call begin_name begin_name archive end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name found end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name zip exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name archive end_name begin_operator DOT end_operator begin_name seek end_name end_name begin_argument_list begin_argument begin_expr begin_name off end_name begin_operator PLUS end_operator begin_name cfd locator offset end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name cfd offset end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name archive end_name begin_operator DOT end_operator begin_name read fully end_name end_name begin_argument_list begin_argument begin_expr begin_name cfd offset end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name archive end_name begin_operator DOT end_operator begin_name seek end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip long end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name cfd offset end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test too fast end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test result property zero end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a line contains reg exp filter param line contains reg exp a code line contains reg exp code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add line contains reg exp end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name line contains reg exp end_name end_type begin_name line contains reg exp end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filter readers end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name line contains reg exp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment for int and date type only if present values will be parsed and formatted accordingly param value the pattern to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set pattern end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name pattern end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment find out the project to which this antxml context belongs return project end_comment begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name get project end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name project end_name end_expr end_return end_block 
 begin_comment receive notification that character data has been found in a standard ejb 1 1 descriptor we re interested in retrieving the home interface remote interface implementation class the type of bean and if the bean uses cmp param value string data found in the xml document end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name std characters end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name current loc end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name display name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name base end_name begin_init begin_expr begin_operator PLUS end_operator begin_name ejb type end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name current loc end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name current ejb end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name ejb info end_name begin_operator RPAR end_operator begin_call begin_name begin_name ejbs end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name current ejb end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name current ejb end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name ejb info end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ejbs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr begin_name current ejb end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name current loc end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name current ejb end_name begin_operator DOT end_operator begin_name set home end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name current loc end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name current ejb end_name begin_operator DOT end_operator begin_name set remote end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name current loc end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name current ejb end_name begin_operator DOT end_operator begin_name set implementation end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name current loc end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name current ejb end_name begin_operator DOT end_operator begin_name set primary key end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name current loc end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name current ejb end_name begin_operator DOT end_operator begin_name set beantype end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name current loc end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name current ejb end_name begin_operator DOT end_operator begin_name set cmp end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_block 
