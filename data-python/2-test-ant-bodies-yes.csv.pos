 begin_comment collect the resources that are newer than the corresponding entries or missing in the original archive p if we are going to recreate the archive instead of updating it all resources should be considered as new if a single one is because of this subclasses overriding this method must call code super get resources to add code and indicate with the third arg if they already know that the archive is out of date p param filesets the filesets to grab resources from param zip file intended archive file may or may not exist param needs update whether we already know that the archive is out of date subclasses overriding this method are supposed to set this value correctly in their call to code super get resources to add code return an array of resources to add for each fileset passed in as well as a flag that indicates whether the archive is uptodate exception build exception if it likes end_comment begin_type begin_specifier end_specifier begin_name archive state end_name end_type begin_name get resources to add end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name file set end_name begin_index end_index end_name end_type begin_name filesets end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name zip file end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name needs update end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name resource end_name begin_index end_index begin_index end_index end_type begin_name initial resources end_name begin_init begin_expr begin_call begin_name grab resources end_name begin_argument_list begin_argument begin_expr begin_name filesets end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name is empty end_name begin_argument_list begin_argument begin_expr begin_name initial resources end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name needs update end_name begin_operator UNP end_operator begin_name do update end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name archive state end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name initial resources end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name empty behavior end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name do update end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name archive type end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name zip file end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name archive type end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name zip file end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name empty behavior end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name archive type end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name zip file end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_comment create end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name needs update end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_else end_if begin_return begin_expr begin_operator UNP end_operator begin_call begin_name archive state end_name begin_argument_list begin_argument begin_expr begin_name needs update end_name end_expr end_argument begin_argument begin_expr begin_name initial resources end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_comment initial resources is not empty end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name archive state end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name initial resources end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name needs update end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name do update end_name end_expr end_condition begin_then begin_block begin_comment we are recreating the archive need all resources end_comment begin_return begin_expr begin_operator UNP end_operator begin_call begin_name archive state end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name initial resources end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name resource end_name begin_index end_index begin_index end_index end_type begin_name newer resources end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name resource end_name begin_index begin_expr begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_index begin_index end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name fileset end_name begin_operator UNP end_operator begin_name zip file set end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name zip file set end_name begin_operator RPAR end_operator begin_name fileset end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get src end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name base end_name begin_init begin_expr begin_name begin_name filesets end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get dir end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name initial resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_name length end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name resource as file end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument begin_argument begin_expr begin_name begin_name initial resources end_name begin_index begin_expr begin_name i end_name end_expr end_index begin_index begin_expr begin_name j end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name resource as file end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name zip file end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_for end_block end_then end_if end_block end_for begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name initial resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_name length end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name newer resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name resource end_name begin_index end_index end_name begin_block end_block end_expr end_expr_stmt begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file name mapper end_name end_type begin_name my mapper end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name identity mapper end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name filesets end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator begin_name zip file set end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name zip file set end_name end_type begin_name zfs end_name begin_init begin_expr begin_operator LPAR end_operator begin_name zip file set end_name begin_operator RPAR end_operator begin_name begin_name filesets end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name get fullpath end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name get fullpath end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment in this case all files from origin map to end_comment begin_comment the full path attribute of the zipfileset at end_comment begin_comment destination end_comment begin_decl_stmt begin_decl begin_type begin_name merging mapper end_name end_type begin_name fm end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name merging mapper end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fm end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name get fullpath end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name my mapper end_name begin_operator EQ end_operator begin_name fm end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name get prefix end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name get prefix end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name glob pattern mapper end_name end_type begin_name gm end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name glob pattern mapper end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name gm end_name begin_operator DOT end_operator begin_name set from end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name begin_init begin_expr begin_call begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name get prefix end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name prefix end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name prefix end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name prefix end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name gm end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr begin_name prefix end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name my mapper end_name begin_operator EQ end_operator begin_name gm end_name end_expr end_expr_stmt end_block end_then end_if end_else end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name resource end_name begin_index end_index end_type begin_name resources end_name begin_init begin_expr begin_name begin_name initial resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name do filesonly end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name resources end_name begin_operator EQ end_operator begin_call begin_name select file resources end_name begin_argument_list begin_argument begin_expr begin_name resources end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name newer resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name begin_name resource utils end_name begin_operator DOT end_operator begin_name select out of date sources end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name resources end_name end_expr end_argument begin_argument begin_expr begin_name my mapper end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get zip scanner end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name needs update end_name begin_operator EQ end_operator begin_name needs update end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name begin_name newer resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_name length end_name begin_operator GT end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name needs update end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name do update end_name end_expr end_condition begin_then begin_block begin_comment we will return initial resources anyway no reason end_comment begin_comment to scan further end_comment begin_break end_break end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_name needs update end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name do update end_name end_expr end_condition begin_then begin_block begin_comment we are recreating the archive need all resources end_comment begin_return begin_expr begin_operator UNP end_operator begin_call begin_name archive state end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name initial resources end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_operator UNP end_operator begin_call begin_name archive state end_name begin_argument_list begin_argument begin_expr begin_name needs update end_name end_expr end_argument begin_argument begin_expr begin_name newer resources end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment get an input stream for the resource return an input stream containing this resource s content throws io exception if unable to provide the content of this resource as a stream throws unsupported operation exception if input streams are not supported for this resource type end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name input stream end_name end_type begin_name get input stream end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get input stream end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_comment new oata util reader input stream new input stream reader end_comment begin_expr begin_operator UNP end_operator begin_call begin_name byte array input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name get content end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return begin_comment encoding encoding end_comment end_block 
 begin_comment perform a substitution on the regular expression param input the string to substitute on param argument the string which defines the substitution param options the list of options for the match and replace return the result of the operation throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name substitute end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name input end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name argument end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name options end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment translate 1 to 1 so that the matcher will work end_comment begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name subst end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name argument end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name argument end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name subst end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name subst end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator PPLUS end_operator begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name argument end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name argument end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name digit end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name value end_name begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name subst end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name subst end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name subst end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name subst end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block end_for begin_expr_stmt begin_expr begin_name argument end_name begin_operator EQ end_operator begin_call begin_name begin_name subst end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name s options end_name begin_init begin_expr begin_call begin_name get subs options end_name begin_argument_list begin_argument begin_expr begin_name options end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name pattern end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name get compiled pattern end_name begin_argument_list begin_argument begin_expr begin_name options end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name matcher end_name end_type begin_name m end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name matcher end_name end_name begin_argument_list begin_argument begin_expr begin_name input end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name regexp util end_name begin_operator DOT end_operator begin_name has flag end_name end_name begin_argument_list begin_argument begin_expr begin_name s options end_name end_expr end_argument begin_argument begin_expr begin_name replace all end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name replace all end_name end_name begin_argument_list begin_argument begin_expr begin_name argument end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name res end_name begin_init begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name find end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name res end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name append replacement end_name end_name begin_argument_list begin_argument begin_expr begin_name sb end_name end_expr end_argument begin_argument begin_expr begin_name argument end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name append tail end_name end_name begin_argument_list begin_argument begin_expr begin_name sb end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name input end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if begin_return begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment perform a substitution on the regular expression param input the string to substitute on param argument the string which defines the substitution param options the list of options for the match and replace return the result of the operation throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name substitute end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name input end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name argument end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name options end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment translate 1 to 1 so that the matcher will work end_comment begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name subst end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name argument end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name argument end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name subst end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name subst end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator PPLUS end_operator begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name argument end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name argument end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name digit end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name value end_name begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name subst end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name subst end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name subst end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name subst end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block end_for begin_expr_stmt begin_expr begin_name argument end_name begin_operator EQ end_operator begin_call begin_name begin_name subst end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name s options end_name begin_init begin_expr begin_call begin_name get subs options end_name begin_argument_list begin_argument begin_expr begin_name options end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name pattern end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name get compiled pattern end_name begin_argument_list begin_argument begin_expr begin_name options end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name matcher end_name end_type begin_name m end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name matcher end_name end_name begin_argument_list begin_argument begin_expr begin_name input end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name regexp util end_name begin_operator DOT end_operator begin_name has flag end_name end_name begin_argument_list begin_argument begin_expr begin_name s options end_name end_expr end_argument begin_argument begin_expr begin_name replace all end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name replace all end_name end_name begin_argument_list begin_argument begin_expr begin_name argument end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name res end_name begin_init begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name find end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name res end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name append replacement end_name end_name begin_argument_list begin_argument begin_expr begin_name sb end_name end_expr end_argument begin_argument begin_expr begin_name argument end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name append tail end_name end_name begin_argument_list begin_argument begin_expr begin_name sb end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name input end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if begin_return begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert equal content end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name expect end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name result end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name assertion failed error end_name end_expr end_argument begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name result end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name in expect end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name in result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name in expect end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name expect end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name in result end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name expected byte end_name begin_init begin_expr begin_call begin_name begin_name in expect end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name expected byte end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name expected byte end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name in result end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name expected byte end_name begin_operator EQ end_operator begin_call begin_name begin_name in expect end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator MINUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name in result end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name in result end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name in result end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name in expect end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name in expect end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment check out one file if it matches the include filter but not the exclude filter param s a star team server param p a valid project on the server param v a view name from the specified project param t an item type which is currently always file param f the folder the file is localed in param item the file to check out param tgt target folder on local machine end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run item end_name begin_parameter_list begin_param begin_decl begin_type begin_name server end_name end_type begin_name s end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name com end_name begin_operator DOT end_operator begin_name starbase end_name begin_operator DOT end_operator begin_name starteam end_name begin_operator DOT end_operator begin_name project end_name end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name view end_name end_type begin_name v end_name end_decl end_param begin_param begin_decl begin_type begin_name type end_name end_type begin_name t end_name end_decl end_param begin_param begin_decl begin_type begin_name folder end_name end_type begin_name f end_name end_decl end_param begin_param begin_decl begin_type begin_name item end_name end_type begin_name item end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name tgt end_name end_decl end_param end_parameter_list begin_block begin_comment get descriptors for this item type end_comment begin_decl_stmt begin_decl begin_type begin_name property end_name end_type begin_name p 1 end_name begin_init begin_expr begin_call begin_name get primary descriptor end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name property end_name end_type begin_name p 2 end_name begin_init begin_expr begin_call begin_name get secondary descriptor end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name p name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name item end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name p 1 end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name should checkout end_name begin_argument_list begin_argument begin_expr begin_name p name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_comment verbose mode only end_comment begin_if begin_condition begin_expr begin_call begin_name get verbose end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment show folder only if changed end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name b show header end_name begin_init begin_expr begin_operator LPAR end_operator begin_name f end_name begin_operator UNP end_operator begin_name prev folder end_name begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name b show header end_name end_expr end_condition begin_then begin_block begin_comment we want to display the folder the same way you would end_comment begin_comment enter it on the command line so we remove the end_comment begin_comment view name which is also the name of the root folder end_comment begin_comment and therefore shows up at the start of the path end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name str folder end_name begin_init begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get folder hierarchy end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name str folder end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name delim end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name i end_name begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name str folder end_name begin_operator EQ end_operator begin_call begin_name begin_name str folder end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name str folder end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name prev folder end_name begin_operator EQ end_operator begin_name f end_name end_expr end_expr_stmt begin_comment if we displayed the project view item type or folder end_comment begin_comment then show the list of relevant item properties end_comment begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name header end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name header end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name p 1 end_name begin_operator DOT end_operator begin_name get display name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name p 2 end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name header end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name p 2 end_name begin_operator DOT end_operator begin_name get display name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name header end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment finally show the item properties end_comment begin_comment always show the item id end_comment begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name item line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name item line end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name item end_name begin_operator DOT end_operator begin_name get item id end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment show the primary descriptor end_comment begin_comment there should always be one end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name item line end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name format for display end_name begin_argument_list begin_argument begin_expr begin_name p 1 end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name item end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name p 1 end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment show the secondary descriptor if there is one end_comment begin_comment some item types have one some don t end_comment begin_if begin_condition begin_expr begin_name p 2 end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name item line end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name format for display end_name begin_argument_list begin_argument begin_expr begin_name p 2 end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name item end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name p 2 end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment show if the file is locked end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name locker end_name begin_init begin_expr begin_call begin_name begin_name item end_name begin_operator DOT end_operator begin_name get locker end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name locker end_name begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name item line end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name locker end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name item line end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name item line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment end verbose only end_comment begin_comment change the item to be checked out to a star team file end_comment begin_decl_stmt begin_decl begin_type begin_name begin_name com end_name begin_operator DOT end_operator begin_name starbase end_name begin_operator DOT end_operator begin_name starteam end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name remote end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name com end_name begin_operator DOT end_operator begin_name starbase end_name begin_operator DOT end_operator begin_name starteam end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator RPAR end_operator begin_name item end_name end_expr end_init end_decl end_decl_stmt begin_comment the local file name is simply the local target path tgt which has end_comment begin_comment been passed recursively down from the top of the tree with the item s name appended end_comment begin_decl_stmt begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name local end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name begin_argument_list begin_argument begin_expr begin_name tgt end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name item end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name p 1 end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name remote end_name begin_operator DOT end_operator begin_name checkout to end_name end_name begin_argument_list begin_argument begin_expr begin_name local end_name end_expr end_argument begin_argument begin_expr begin_name begin_name item end_name begin_operator DOT end_operator begin_name lock type end_name begin_operator DOT end_operator begin_name unchanged end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name checked out end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name local end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment simple tree walker that will clone recursively a node this is to avoid using parser specific api such as sun s tt change node owner tt when we are dealing with dom l 1 implementations since tt clone node boolean tt will not change the owner document tt change node owner tt is much faster and avoid the costly cloning process tt import node tt is in the dom l 2 interface param parent the node parent to which we should do the import to param child the node to clone recursively its clone will be appended to tt parent tt return the cloned node that is appended to tt parent tt end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name node end_name end_type begin_name import node end_name begin_parameter_list begin_param begin_decl begin_type begin_name node end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name node end_name end_type begin_name child end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name node end_name end_type begin_name copy end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name document end_name end_type begin_name doc end_name begin_init begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name get owner document end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_switch begin_condition begin_expr begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name get node type end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_case begin_expr begin_name begin_name node end_name begin_operator DOT end_operator begin_name cdata section node end_name end_name end_expr begin_expr_stmt begin_expr begin_name copy end_name begin_operator EQ end_operator begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create cdata section end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name cdata section end_name begin_operator RPAR end_operator begin_name child end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get data end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name begin_name node end_name begin_operator DOT end_operator begin_name comment node end_name end_name end_expr begin_expr_stmt begin_expr begin_name copy end_name begin_operator EQ end_operator begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create comment end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name comment end_name begin_operator RPAR end_operator begin_name child end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get data end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name begin_name node end_name begin_operator DOT end_operator begin_name document fragment node end_name end_name end_expr begin_expr_stmt begin_expr begin_name copy end_name begin_operator EQ end_operator begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create document fragment end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name begin_name node end_name begin_operator DOT end_operator begin_name element node end_name end_name end_expr begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name element end_name end_type begin_name elem end_name begin_init begin_expr begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create element end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name element end_name begin_operator RPAR end_operator begin_name child end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get tag name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name copy end_name begin_operator EQ end_operator begin_name elem end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name named node map end_name end_type begin_name attributes end_name begin_init begin_expr begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name get attributes end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name attributes end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_init begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name attr end_name end_type begin_name attr end_name begin_init begin_expr begin_operator LPAR end_operator begin_name attr end_name begin_operator RPAR end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name item end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name elem end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attr end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name attr end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_break end_break end_case begin_case begin_expr begin_name begin_name node end_name begin_operator DOT end_operator begin_name entity reference node end_name end_name end_expr begin_expr_stmt begin_expr begin_name copy end_name begin_operator EQ end_operator begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create entity reference end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name get node name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name begin_name node end_name begin_operator DOT end_operator begin_name processing instruction node end_name end_name end_expr begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name processing instruction end_name end_type begin_name pi end_name begin_init begin_expr begin_operator LPAR end_operator begin_name processing instruction end_name begin_operator RPAR end_operator begin_name child end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name copy end_name begin_operator EQ end_operator begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create processing instruction end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name pi end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name pi end_name begin_operator DOT end_operator begin_name get data end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name begin_name node end_name begin_operator DOT end_operator begin_name text node end_name end_name end_expr begin_expr_stmt begin_expr begin_name copy end_name begin_operator EQ end_operator begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create text node end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name text end_name begin_operator RPAR end_operator begin_name child end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get data end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_default begin_comment this should never happen end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal state exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name get node type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_default end_block end_switch begin_comment okay we have a copy of the child now the child becomes the parent end_comment begin_comment and we are iterating recursively over its children end_comment begin_try begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name node list end_name end_type begin_name children end_name begin_init begin_expr begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name get child nodes end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name children end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_init begin_expr begin_call begin_name begin_name children end_name begin_operator DOT end_operator begin_name get length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name node end_name end_type begin_name new child end_name begin_init begin_expr begin_call begin_name begin_name children end_name begin_operator DOT end_operator begin_name item end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name new child end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name import node end_name begin_argument_list begin_argument begin_expr begin_name copy end_name end_expr end_argument begin_argument begin_expr begin_name new child end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name dom exception end_name end_type begin_name ignored end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_name copy end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name copy end_name end_expr end_return end_block 
