 begin_comment concatenates the system class path in the order specified by the build sysclasspath property using quot last quot as default value return the concatenated path end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name concat system classpath end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name concat system classpath end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment sets the destination file param destfile the destination file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set destfile end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name destfile end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name destfile end_name end_name begin_operator EQ end_operator begin_name destfile end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invocation target exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_call begin_name begin_name reflected arg end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name string end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_block end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name invoke end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name value end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name invocation target exception end_name end_type begin_name x end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name x end_name begin_operator DOT end_operator begin_name get target exception end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name illegal argument exception end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name value end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name reflected arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name x end_name begin_operator DOT end_operator begin_name get target exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name x end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name x end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment ask if compiler can sort out its own dependencies return true if the compiler wants to do its own depends end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name implements own dependency checking end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment invalid extension point end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured end_name begin_parameter_list begin_param begin_decl begin_type begin_name map end_name end_type begin_name m end_name end_decl end_param end_parameter_list begin_block begin_comment valid extension point end_comment begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get proc version end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name class name impl end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_comment xalan 2 end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name class name impl end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name apac end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name class name impl end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name apac end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get xalan version end_name begin_argument_list begin_argument begin_expr begin_name apac end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_comment xalan xsltc end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name class name impl end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name apac end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get xsltc version end_name begin_argument_list begin_argument begin_expr begin_name apac end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_comment jdk 1 5 xsltc end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name class name impl end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name spac end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get xsltc version end_name begin_argument_list begin_argument begin_expr begin_name spac end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name class name impl end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment namespace to place the source in optional default param namespace new namespace end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set namespace end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name namespace end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name namespace end_name end_name begin_operator EQ end_operator begin_name namespace end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name begin_name args end_name begin_index end_index end_name end_decl end_param end_parameter_list begin_block begin_assert begin_expr begin_operator EQT end_operator begin_operator DP end_operator end_expr end_assert begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name timer end_name end_type begin_name timer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name timer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name timer end_name begin_operator DOT end_operator begin_name stop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name trace end_name end_expr end_condition begin_then begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name timer end_name begin_operator DOT end_operator begin_name time end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_then end_if begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name timer end_name begin_operator DOT end_operator begin_name time end_name end_name begin_argument_list end_argument_list end_call begin_operator GE end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add an entry to the constant pool param entry the new entry to be added to the constant pool return the index into the constant pool at which the entry is stored end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name add entry end_name begin_parameter_list begin_param begin_decl begin_type begin_name constant pool entry end_name end_type begin_name entry end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index end_name begin_init begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name entry end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name num slots end_name begin_init begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get num entries end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment add null entries for any additional slots required end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name num slots end_name begin_operator MINUS end_operator end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name j end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_if begin_condition begin_expr begin_name entry end_name begin_operator UNP end_operator begin_name utf 8 cp info end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name utf 8 cp info end_name end_type begin_name utf 8 info end_name begin_init begin_expr begin_operator LPAR end_operator begin_name utf 8 cp info end_name begin_operator RPAR end_operator begin_name entry end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name utf 8 indexes end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name utf 8 info end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr begin_name index end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name index end_name end_expr end_return end_block 
 begin_comment return a right padded string param s the string to pad param padlen the size of the padded string return the padded string end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name rpad end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name padlen end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_name blank string end_name begin_operator PLUS end_operator begin_name s end_name end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name padlen end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment return a cached result of list performed on file if available invokes the method and caches the result otherwise param file file dir to list since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name list end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name string end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name file list map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name files end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name files end_name begin_operator EQ end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name files end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file list map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name files end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_return begin_expr begin_name files end_name end_expr end_return end_block 
 begin_comment add a contains selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add contains end_name begin_parameter_list begin_param begin_decl begin_type begin_name contains selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name add contains end_name end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment where the name contains end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name expect name address 2 end_name begin_parameter_list begin_param begin_decl begin_type begin_name email address end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get address end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment has this task been marked invalid return true if this task is no longer valid a new task should be configured in this case since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is invalid end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name invalid end_name end_expr end_return end_block 
 begin_comment resets the current thread s context loader to its original value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name reset thread context loader end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name loader utils end_name begin_operator DOT end_operator begin_name is context loader available end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name is context loader saved end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name loader utils end_name begin_operator DOT end_operator begin_name set context class loader end_name end_name begin_argument_list begin_argument begin_expr begin_name saved context loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name saved context loader end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name is context loader saved end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test get with selector retryable random end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add task definition end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name random failure ftp end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set property end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name bx end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment set the path to zip file param s path to zip file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name source end_name end_name begin_operator EQ end_operator begin_name s end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name executor test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the value values return the list of valid language types end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name valid language codes end_name end_expr end_return end_block 
 begin_comment restore the system properties to the cached value throws build exception if security prevented this operation or there were no system properties to restore end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name restore system end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name sys end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set properties end_name end_name begin_argument_list begin_argument begin_expr begin_name sys end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name sys end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name security exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment creates a new code contains regexp selector code instance end_comment begin_specifier end_specifier begin_name contains regexp selector end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment length of the extra field in the central directory without header id or length specifier return 0 end_comment begin_type begin_specifier end_specifier begin_name zip short end_name end_type begin_name get central directory length end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name null end_name end_expr end_return end_block 
 begin_comment gets the code server name code attribute return the star team server to log in to see set server name string server name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get server name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name server name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test nested children end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name xml fragment end_name end_type begin_name x end_name begin_init begin_expr begin_operator LPAR end_operator begin_name xml fragment end_name begin_operator RPAR end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name x end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name node end_name end_type begin_name n end_name begin_init begin_expr begin_call begin_name begin_name x end_name begin_operator DOT end_operator begin_name get fragment end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name n end_name begin_operator DOT end_operator begin_name has attributes end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name node list end_name end_type begin_name nl end_name begin_init begin_expr begin_call begin_name begin_name n end_name begin_operator DOT end_operator begin_name get child nodes end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name nl end_name begin_operator DOT end_operator begin_name get length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name node end_name begin_operator DOT end_operator begin_name element node end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name nl end_name begin_operator DOT end_operator begin_name item end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get node type end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name child 1 end_name begin_init begin_expr begin_operator LPAR end_operator begin_name element end_name begin_operator RPAR end_operator begin_call begin_name begin_name nl end_name begin_operator DOT end_operator begin_name item end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name child 1 end_name begin_operator DOT end_operator begin_name get tag name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name child 1 end_name begin_operator DOT end_operator begin_name has attributes end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name node list end_name end_type begin_name nl 2 end_name begin_init begin_expr begin_call begin_name begin_name child 1 end_name begin_operator DOT end_operator begin_name get child nodes end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name nl 2 end_name begin_operator DOT end_operator begin_name get length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name node end_name begin_operator DOT end_operator begin_name text node end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name nl 2 end_name begin_operator DOT end_operator begin_name item end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get node type end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name nl 2 end_name begin_operator DOT end_operator begin_name item end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get node value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name node end_name begin_operator DOT end_operator begin_name element node end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name nl end_name begin_operator DOT end_operator begin_name item end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get node type end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name child 2 end_name begin_init begin_expr begin_operator LPAR end_operator begin_name element end_name begin_operator RPAR end_operator begin_call begin_name begin_name nl end_name begin_operator DOT end_operator begin_name item end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name child 2 end_name begin_operator DOT end_operator begin_name get tag name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name child 2 end_name begin_operator DOT end_operator begin_name has attributes end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name nl 2 end_name begin_operator EQ end_operator begin_call begin_name begin_name child 2 end_name begin_operator DOT end_operator begin_name get child nodes end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name nl 2 end_name begin_operator DOT end_operator begin_name get length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name child 2 end_name begin_operator DOT end_operator begin_name get attribute end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name node end_name begin_operator DOT end_operator begin_name element node end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name nl end_name begin_operator DOT end_operator begin_name item end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get node type end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name child 3 end_name begin_init begin_expr begin_operator LPAR end_operator begin_name element end_name begin_operator RPAR end_operator begin_call begin_name begin_name nl end_name begin_operator DOT end_operator begin_name item end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name child 3 end_name begin_operator DOT end_operator begin_name get tag name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name child 3 end_name begin_operator DOT end_operator begin_name has attributes end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name nl 2 end_name begin_operator EQ end_operator begin_call begin_name begin_name child 3 end_name begin_operator DOT end_operator begin_name get child nodes end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name nl 2 end_name begin_operator DOT end_operator begin_name get length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name node end_name begin_operator DOT end_operator begin_name element node end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name nl 2 end_name begin_operator DOT end_operator begin_name item end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get node type end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name element end_name begin_operator RPAR end_operator begin_call begin_name begin_name nl 2 end_name begin_operator DOT end_operator begin_name item end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get tag name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test override wins inherit all end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_name assertion failed error end_name end_type begin_name get error end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name error end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test cdata end encoding end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name encodedata end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name encodedata end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name encodedata end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name encodedata end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name encodedata end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name encodedata end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name encodedata end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment factory method to create a class loader for loading classes from a given path param path the path from which classes are to be loaded return an appropriate classloader end_comment begin_type begin_specifier end_specifier begin_name ant class loader end_name end_type begin_name create class loader end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name ant class loader end_name begin_argument_list begin_argument begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class loader end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured end_name begin_parameter_list begin_param begin_decl begin_type begin_name my value end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment set emacs mode this is ignored param emacs mode ignored end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set emacs mode end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name emacs mode end_name end_decl end_param end_parameter_list begin_block begin_comment doesn t make sense for c l use the logger config end_comment end_block 
 begin_comment test we can handle jsharp if found end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test response file end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a new instance of this class param project the project instance for which output is being demultiplexed must not be code null code param is error stream code true code if this is the error string otherwise a normal output stream this is passed to the project so it knows which stream it is receiving end_comment begin_specifier end_specifier begin_name demux output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name is error stream end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name project end_name end_name begin_operator EQ end_operator begin_name project end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name is error stream end_name end_name begin_operator EQ end_operator begin_name is error stream end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test illegal chars end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the number of constant pool entry slots within the constant pool occupied by this entry return the number of slots used end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name get num entries end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name num entries end_name end_expr end_return end_block 
 begin_comment evaluate the contained conditions return the result of xoring the conditions together throws org apache tools ant build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name get conditions end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment initial state is false end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name state end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name condition end_name end_type begin_name c end_name begin_init begin_expr begin_operator LPAR end_operator begin_name condition end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment every condition is xored against the previous one end_comment begin_expr_stmt begin_expr begin_name state end_name begin_operator UNP end_operator begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name eval end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_name state end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test awk command end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name c end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s end_name begin_init begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name s end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name s end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name s end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment interface test listener for j unit lt 3 4 p a test failed param test a test param t the exception thrown by the test end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add failure end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name format error end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true turn on the debug mode for each of the borland tools launched param debug a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set debug end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name debug end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_operator EQ end_operator begin_name debug end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test with style from classpath end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name report file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment tests one the file object end_comment begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report file end_name begin_operator DOT end_operator begin_name can read end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report file end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment conversion to url via file utils like in xml result aggregator not as suggested in the bug report end_comment begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name report url end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file utils end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to uri end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name report file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name report stream end_name begin_init begin_expr begin_call begin_name begin_name report url end_name begin_operator DOT end_operator begin_name open stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report stream end_name begin_operator DOT end_operator begin_name available end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name echo end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name map end_name begin_argument_list begin_argument begin_name string end_name end_argument begin_argument begin_name string end_name end_argument end_argument_list end_name end_type begin_name options end_name begin_init begin_expr begin_call begin_name begin_name env end_name begin_operator DOT end_operator begin_name get options end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name string end_name end_type begin_name key end_name begin_range begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name key set end_name end_name begin_argument_list end_argument_list end_call end_expr end_range end_decl end_init begin_block begin_expr_stmt begin_expr begin_call begin_name echo end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name key end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment work time end_comment begin_for begin_init begin_decl begin_type begin_name type declaration end_name end_type begin_name type decl end_name begin_range begin_expr begin_call begin_name begin_name env end_name begin_operator DOT end_operator begin_name get specified type declarations end_name end_name begin_argument_list end_argument_list end_call end_expr end_range end_decl end_init begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name type decl end_name begin_operator DOT end_operator begin_name accept end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get declaration scanner end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name class visitor end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name no op end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment convenient method to see if a string match a one pattern in given set of space separated patterns param patterns the space separated list of patterns param p name the name to look for matching return whether the name match at least one pattern end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name match patterns end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name patterns end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name p name end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name patterns end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name ex str end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name patterns end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name ex str end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name directory scanner end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ex str end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name p name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_while begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the file location where the error occurred return the file location where the error occurred end_comment begin_type begin_specifier end_specifier begin_name location end_name end_type begin_name get location end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name location end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name parse char set from mime type end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name type end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pos end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name type end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name pos end_name begin_operator EQ end_operator begin_call begin_name begin_name type end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment assuming mime type in form text xxxx charset xxxxxx end_comment begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name token end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name type end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name pos end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name token end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment skip charset end_comment begin_return begin_expr begin_call begin_name begin_name token end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment get rmall flag status return boolean containing status of rmall flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get rm all end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m rmall end_name end_expr end_return end_block 
 begin_comment return the prefix prepended to entries in the archive file return the prefix deprecated since 1 7 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get prefix end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name prefix end_name end_expr end_return end_block 
 begin_comment assemble the reader return the assembled reader exception build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name get assembled reader end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name primary reader end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name reader end_name end_type begin_name instream end_name begin_init begin_expr begin_name primary reader end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name filter readers count end_name begin_init begin_expr begin_call begin_name begin_name filter chains end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name final filters end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name filter readers count end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name filter chain end_name end_type begin_name filterchain end_name begin_init begin_expr begin_operator LPAR end_operator begin_name filter chain end_name begin_operator RPAR end_operator begin_call begin_name begin_name filter chains end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name filter readers end_name begin_init begin_expr begin_call begin_name begin_name filterchain end_name begin_operator DOT end_operator begin_name get filter readers end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name reader count end_name begin_init begin_expr begin_call begin_name begin_name filter readers end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name reader count end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name final filters end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name filter readers end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name j end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_for begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name filters count end_name begin_init begin_expr begin_call begin_name begin_name final filters end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name filters count end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name filters count end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name final filters end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name ant filter reader end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name ant filter reader end_name end_type begin_name filter end_name begin_init begin_expr begin_operator LPAR end_operator begin_name ant filter reader end_name begin_operator RPAR end_operator begin_call begin_name begin_name final filters end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name class name end_name begin_init begin_expr begin_call begin_name begin_name filter end_name begin_operator DOT end_operator begin_name get class name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name classpath end_name begin_init begin_expr begin_call begin_name begin_name filter end_name begin_operator DOT end_operator begin_name get classpath end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name pro end_name begin_init begin_expr begin_call begin_name begin_name filter end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name class name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name clazz end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name clazz end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name ant class loader end_name end_type begin_name al end_name begin_init begin_expr begin_call begin_name begin_name pro end_name begin_operator DOT end_operator begin_name create class loader end_name end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name clazz end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name al end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name clazz end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name filter reader end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name clazz end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name class name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name constructor end_name begin_index end_index end_type begin_name constructors end_name begin_init begin_expr begin_call begin_name begin_name clazz end_name begin_operator DOT end_operator begin_name get constructors end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name cons present end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name constructors end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name begin_index end_index end_type begin_name types end_name begin_init begin_expr begin_name begin_name constructors end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get parameter types end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name types end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name begin_name types end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name is assignable from end_name begin_argument_list begin_argument begin_expr begin_name begin_name reader end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name cons present end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name cons present end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name class name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name reader end_name begin_index end_index end_type begin_name rdr end_name begin_init begin_expr begin_block begin_expr begin_name instream end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name instream end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name reader end_name begin_operator RPAR end_operator begin_name begin_name constructors end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name new instance end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name object end_name begin_index end_index end_name begin_operator RPAR end_operator begin_name rdr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set project on object end_name begin_argument_list begin_argument begin_expr begin_name instream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name parameterizable end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name clazz end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name parameter end_name begin_index end_index end_type begin_name params end_name begin_init begin_expr begin_call begin_name begin_name filter end_name begin_operator DOT end_operator begin_name get params end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name parameterizable end_name begin_operator RPAR end_operator begin_name instream end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set parameters end_name begin_argument_list begin_argument begin_expr begin_name params end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name class not found exception end_name end_type begin_name cnfe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name cnfe end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name instantiation exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ie end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name illegal access exception end_name end_type begin_name iae end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name iae end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name invocation target exception end_name end_type begin_name ite end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ite end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name chainable reader end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set project on object end_name begin_argument_list begin_argument begin_expr begin_name o end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name instream end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name chainable reader end_name begin_operator RPAR end_operator begin_name o end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name chain end_name begin_argument_list begin_argument begin_expr begin_name instream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set project on object end_name begin_argument_list begin_argument begin_expr begin_name instream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_block end_for end_block end_then end_if begin_return begin_expr begin_name instream end_name end_expr end_return end_block 
 begin_comment set the proxy port for socks connections the default value is 1080 param port the new socks proxy port value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set socks proxy port end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name port end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name socks proxy port end_name end_name begin_operator EQ end_operator begin_name port end_name end_expr end_expr_stmt end_block 
 begin_comment set the root class attribute param root class the name of the root class end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set root class end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name root class end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name root classes end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name root class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set whether the command works only on files directories or both param type a file dir both enumerated attribute end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set type end_name begin_parameter_list begin_param begin_decl begin_type begin_name file dir both end_name end_type begin_name type end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name type end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name type end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment do we have to traverse a symlink when trying to reach path from basedir param base base file dir param path elements vector of path elements dirs file since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is symlink end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name base end_name end_decl end_param begin_param begin_decl begin_type begin_name vector end_name end_type begin_name path elements end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name path elements end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name current end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name path elements end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_return begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name is symbolic link end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument begin_argument begin_expr begin_name current end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name is symlink end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument begin_argument begin_expr begin_name current end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name path elements end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_comment will be caught and redirected to ant s logging system end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_specifier end_specifier begin_name abstract cvs task test end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment assert our mapping rules param mangler param filename param classname end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert mapped end_name begin_parameter_list begin_param begin_decl begin_type begin_name jsp mangler end_name end_type begin_name mangler end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name mappedname end_name begin_init begin_expr begin_call begin_name begin_name mangler end_name begin_operator DOT end_operator begin_name map jsp to java name end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name filename end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name classname end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name mappedname end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name classname end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name mappedname end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convert the value to int unit value return an int value end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get calendar field end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key end_name begin_init begin_expr begin_call begin_name get value end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name integer end_name end_type begin_name i end_name begin_init begin_expr begin_operator LPAR end_operator begin_name integer end_name begin_operator RPAR end_operator begin_call begin_name begin_name calendar fields end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name int value end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test find jar name longest match wins end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name jar end_name begin_operator DOT end_operator begin_name find jar name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test test gzip task end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name test real test end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment whether to search ignoring case or not param b if false ignore case since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set casesensitive end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name case sensitive end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment bugzilla report 22865 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test empty skip end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment testing helper method kept here for unification of changes return a list of test classes depending on the java version end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name vector end_name end_type begin_name get jre package test cases end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name tests end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_switch begin_condition begin_expr begin_name java version number end_name end_expr end_condition begin_block begin_case begin_expr end_expr end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment fall tru end_comment end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name java version number end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment fall through end_comment end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment fall through end_comment end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment fall through end_comment end_case begin_case begin_expr end_expr end_case begin_default begin_comment things like sun reflection sun misc sun net end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_default end_block end_switch begin_return begin_expr begin_name tests end_name end_expr end_return end_block 
 begin_comment override set directory param directory not used throws build exception always end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set directory end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name directory end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment whether we want to compress the files or only store them optional default true param c if true compress the files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set compress end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name do compress end_name begin_operator EQ end_operator begin_name c end_name end_expr end_expr_stmt end_block 
 begin_comment call file set last modified long time on java above 1 1 and logs a warning on java 1 1 param file the file to set the last modified time on must not be code null code param time the required modification time deprecated since 1 4 x exception build exception if the last modified time cannot be set despite running on a platform with a version above 1 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file last modified end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name time end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name set file last modified end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name time end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name msg verbose end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name count conditions end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_operator LPAR end_operator begin_call begin_name condition end_name begin_argument_list begin_argument begin_expr begin_call begin_name get conditions end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name next element end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name eval end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment add a selector date entry on the selector list param selector the selector to be added end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add date end_name begin_parameter_list begin_param begin_decl begin_type begin_name date selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name used matching task end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name add date end_name end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets a stream to which the output from the cvs executable should be sent param output stream stream to which the stdout from cvs should go end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name output stream end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name output stream end_name end_name begin_operator EQ end_operator begin_name output stream end_name end_expr end_expr_stmt end_block 
 begin_comment include line number information default false param linenumbers a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set linenumbers end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name linenumbers end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name linenumbers end_name end_name begin_operator EQ end_operator begin_name linenumbers end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no crash end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property unset end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name get project end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name project end_name end_expr end_return end_block 
 begin_comment set the input handler param handler the input handler instance to use for gathering input end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set input handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name input handler end_name end_type begin_name handler end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name input handler end_name begin_operator EQ end_operator begin_name handler end_name end_expr end_expr_stmt end_block 
 begin_comment get the vm version return the vm version end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get vmversion end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name vm version end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name import test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment exptected string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test transfer parameter empty end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect file contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test real test end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name test real test end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment append an attribute such as extension list lib 0 lib 1 lib 2 using specified prefix and counting up to specified size also use specified extension key so that can generate list of optional dependencies aswell param size the number of librarys to list param list prefix the prefix for all librarys param attributes the attributes to add key value to param extension key the key to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name append extension list end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name attributes end_name end_type begin_name attributes end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name name end_name end_name end_type begin_name extension key end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name list prefix end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name list prefix end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment add in something like end_comment begin_comment extension list javahelp java 3 d end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name extension key end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the packet list location attribute return the packet list location attribute end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get packagelist loc end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name packagelist loc end_name end_expr end_return end_block 
 begin_comment the argument the compiler wants to see if the debug attribute has been set to false p a return value of code null code means no argument at all p return g none unless we expect to invoke a jdk 1 1 compiler since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get no debug argument end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name assume java 11 end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator DP end_operator end_expr end_return end_block 
 begin_comment optionally sets the output directory to be used param dest dir the directory in which to place signed jars since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dest dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dest dir end_name end_name begin_operator EQ end_operator begin_name dest dir end_name end_expr end_expr_stmt end_block 
 begin_type begin_name void end_name end_type begin_name store end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name child end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invocation target exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument begin_argument begin_expr begin_name instantiation exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name behavior end_name begin_operator EQT end_operator begin_name add configured end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name istore end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name child end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment all subclasses will call on this method to open the view needed for processing this method also saves a reference to the code server code that may be accessed for information at various points in the process return the code view code that will be used for processing see create snapshot view view see get server throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name view end_name end_type begin_name open view end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name log starteam version end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name view end_name end_type begin_name view end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name view end_name begin_operator EQ end_operator begin_call begin_name begin_name star team finder end_name begin_operator DOT end_operator begin_name open view end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get view url end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get url end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name view end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get url end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name view end_name end_type begin_name snapshot end_name begin_init begin_expr begin_call begin_name create snapshot view end_name begin_argument_list begin_argument begin_expr begin_name view end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get url end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name server end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name snapshot end_name begin_operator DOT end_operator begin_name get server end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name snapshot end_name end_expr end_return end_block 
 begin_comment add a new selector into this container param selector the new selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name append selector end_name begin_parameter_list begin_param begin_decl begin_type begin_name file selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name append selector end_name end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment write an eof end of archive record to the tar archive an eof record consists of a record of all zeros end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write eof record end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name record buf end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name record buf end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name buffer end_name begin_operator DOT end_operator begin_name write record end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name record buf end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the date format attribute param date format the value to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set internal date format end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name date format end_name end_type begin_name date format end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name date format end_name end_name begin_operator EQ end_operator begin_name date format end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test resource collection end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment construct a new java resource using the specified name and classpath param name the resource name param path the classpath end_comment begin_specifier end_specifier begin_name java resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name path end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name classpath end_name begin_operator EQ end_operator begin_name path end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get column end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name column end_name end_expr end_return end_block 
 begin_comment get the reverse loader setting return true if looking up in reverse order end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is reverse loader end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name reverse loader end_name end_expr end_return end_block 
 begin_comment builtin property names all system or commandline param b an enumerated code buildin property set name code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set builtin end_name begin_parameter_list begin_param begin_decl begin_type begin_name builtin property set name end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name p built in end_name begin_init begin_expr begin_call begin_name begin_name b end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert valid end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name p built in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name builtin end_name end_name begin_operator EQ end_operator begin_name p built in end_name end_expr end_expr_stmt end_block 
 begin_comment processes the buffer to the end throws io exception when the output cannot be flushed end_comment begin_type begin_name void end_name end_type begin_name flush end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name process end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment helper method to determine the major version number of java cc param home the javacc home path directory throws build exception thrown if the home directory is invalid or if the archive could not be found despite attempts to do so return a the major version number end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name get major version number end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name home end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_name begin_name archive locations vs major version end_name begin_index begin_expr begin_call begin_name get archive location index end_name begin_argument_list begin_argument begin_expr begin_name home end_name end_expr end_argument end_argument_list end_call end_expr end_index end_name end_expr end_return end_block 
 begin_comment override parent implementation return count of included files since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get included files count end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name src end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get included files count end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name scanme end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name match file entries end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the src attribute param src the source file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name src dir end_name begin_operator EQ end_operator begin_name src end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name scp end_name end_type begin_name create task end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name scp end_name end_type begin_name scp end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name scp end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name init end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name scp end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name known hosts end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name scp end_name begin_operator DOT end_operator begin_name set knownhosts end_name end_name begin_argument_list begin_argument begin_expr begin_name known hosts end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name scp end_name begin_operator DOT end_operator begin_name set trust end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name scp end_name begin_operator DOT end_operator begin_name set port end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name scp end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment optional header comment for the file param hdr the string to use for the comment end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set comment end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name hdr end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name comment end_name begin_operator EQ end_operator begin_name hdr end_name end_expr end_expr_stmt end_block 
 begin_comment stringify path and assign to the value the value will contain all path elements separated by the appropriate separator param path path end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set path end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment number of days for comparison defaults to 2 days param numd the number of days end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set numdays end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name numd end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal num days end_name end_name begin_argument_list begin_argument begin_expr begin_name numd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test local wsdl end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test duplicate element end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test resourcesmatch text end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment flag to disable the cache when set required if soshome is set as an environment variable defaults to false param nocache true to disable caching end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set no cache end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name nocache end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name no cache end_name begin_operator EQ end_operator begin_name nocache end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write single bytes end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name b end_name begin_init begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name b end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name stream end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name b end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test set up called by the unit test framework prior to each test end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment pipe input to specified output end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name output stream end_name end_type begin_name os end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name begin_name args end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name os end_name begin_operator EQ end_operator begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name begin_name args end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name os end_name begin_operator EQ end_operator begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name begin_name args end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name os end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name tee output stream end_name begin_argument_list begin_argument begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_else end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name os end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name t end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name stream pumper end_name begin_argument_list begin_argument begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name in end_name end_name end_expr end_argument begin_argument begin_expr begin_name os end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name eye ex end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try end_block end_then end_if end_block 
 begin_comment ask for certificate information to be printed param certificates if true print certificates end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set certificates end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name certificates end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name certificates end_name end_name begin_operator EQ end_operator begin_name certificates end_name end_expr end_expr_stmt end_block 
 begin_comment returns project handler return project handler end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name ant handler end_name end_type begin_name get project handler end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name project handler end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test wrong element end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect report with text end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name xml result aggregator end_name begin_operator DOT end_operator begin_name warning invalid root element end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convenience constructor param fd the file dir type end_comment begin_specifier end_specifier begin_name type end_name begin_parameter_list begin_param begin_decl begin_type begin_name file dir end_name end_type begin_name fd end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set type end_name begin_argument_list begin_argument begin_expr begin_name fd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment expect an exception when attempting to cat an file to itself end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name testsame end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check end_name begin_argument_list begin_argument begin_expr begin_name event end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the context classloader param loader the class loader to be used as the context class loader on the current thread end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set context class loader end_name begin_parameter_list begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name loader end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name current thread end_name begin_init begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name current thread end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name current thread end_name begin_operator DOT end_operator begin_name set context class loader end_name end_name begin_argument_list begin_argument begin_expr begin_name loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for scp to message param session the scp session to use param a directory list a list of directories param a remote path the remote path end_comment begin_specifier end_specifier begin_name scp to message end_name begin_parameter_list begin_param begin_decl begin_type begin_name session end_name end_type begin_name session end_name end_decl end_param begin_param begin_decl begin_type begin_name list end_name end_type begin_name a directory list end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name a remote path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name session end_name end_expr end_argument begin_argument begin_expr begin_name a directory list end_name end_expr end_argument begin_argument begin_expr begin_name a remote path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name doit end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name end_decl end_param begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name os end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name uu decoder end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name decode buffer end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument begin_argument begin_expr begin_name os end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test resource selector selres false end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name bft end_name end_type begin_name bft end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name bft end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bft end_name begin_operator DOT end_operator begin_name do target end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bft end_name begin_operator DOT end_operator begin_name delete cachefile end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the change list number to submit param change the changelist number to submit required end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set change end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name change end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name change end_name end_name begin_operator EQ end_operator begin_name change end_name end_expr end_expr_stmt end_block 
 begin_comment set the directory from where the text descriptions of the deployment descriptors are to be read param dir name the name of the directory containing the text deployment descriptor files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set descriptors end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name dir name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name descriptor directory end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dir name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get an array of ur ls representing all of the jar files in the given location if the location is a file it is returned as the only element of the array if the location is a directory it is scanned for jar files param location the location to scan for jars return an array of ur ls for all jars in the given location exception malformed url exception if the ur ls for the jars cannot be formed end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name url end_name begin_index end_index end_type begin_name get location ur ls end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name location end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name malformed url exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_call begin_name get location ur ls end_name begin_argument_list begin_argument begin_expr begin_name location end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment return the inverted value throws build exception if someone forgot to spec a value end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name value end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_operator UNP end_operator begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name boolean value end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name testresourceoutput end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name testoutputbe end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name resource end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unsupported operation exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try end_block 
 begin_comment create link to javadoc output at the given url return link argument to configure end_comment begin_type begin_specifier end_specifier begin_name link argument end_name end_type begin_name create link end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name link argument end_name end_type begin_name la end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name link argument end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name links end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name la end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name la end_name end_expr end_return end_block 
 begin_comment set the name of a java resource which is required to set the property param resource the name of a resource which is required to be available end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name resource end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name resource end_name end_name begin_operator EQ end_operator begin_name resource end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name calculate eol string end_name begin_parameter_list begin_param begin_decl begin_type begin_name cr lf end_name end_type begin_name eol end_name end_decl end_param end_parameter_list begin_block begin_comment calculate the eol string per the current config end_comment begin_if begin_condition begin_expr begin_name eol end_name begin_operator EQT end_operator begin_name begin_name cr lf end_name begin_operator DOT end_operator begin_name asis end_name end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name eol end_name begin_operator EQT end_operator begin_name begin_name cr lf end_name begin_operator DOT end_operator begin_name cr end_name end_name begin_operator UNP end_operator begin_name eol end_name begin_operator EQT end_operator begin_name begin_name cr lf end_name begin_operator DOT end_operator begin_name mac end_name end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name eol end_name begin_operator EQT end_operator begin_name begin_name cr lf end_name begin_operator DOT end_operator begin_name crlf end_name end_name begin_operator UNP end_operator begin_name eol end_name begin_operator EQT end_operator begin_name begin_name cr lf end_name begin_operator DOT end_operator begin_name dos end_name end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment assume eol cr lf lf eol cr lf unix end_comment begin_return begin_expr end_expr end_return end_block 
 begin_comment autoresponce behaviour valid options are y and n param response the auto response value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set autoresponse end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name response end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal auto response end_name end_name begin_argument_list begin_argument begin_expr begin_name response end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the classpath used to find the compiler adapter return the compiler classpath end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name get compilerclasspath end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name compiler classpath end_name end_expr end_return end_block 
 begin_comment set the cc addresses param list a vector of cc addresses end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set cc list end_name begin_parameter_list begin_param begin_decl begin_type begin_name vector end_name end_type begin_name list end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name cc list end_name end_name begin_operator EQ end_operator begin_name list end_name end_expr end_expr_stmt end_block 
 begin_comment copy from file to to file param from file param to file param filtering param overwrite end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name copy file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name from file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name to file end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name filtering end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name overwrite end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name from file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name to file end_name end_expr end_argument begin_argument begin_expr begin_name verbosity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name filter set collection end_name end_type begin_name execution filters end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name filter set collection end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name filtering end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name execution filters end_name begin_operator DOT end_operator begin_name add filter set end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get global filter set end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name filter enum end_name begin_init begin_expr begin_call begin_name get filter sets end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name elements end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name filter enum end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name execution filters end_name begin_operator DOT end_operator begin_name add filter set end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name filter set end_name begin_operator RPAR end_operator begin_call begin_name begin_name filter enum end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name get file utils end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name copy file end_name begin_argument_list begin_argument begin_expr begin_name from file end_name end_expr end_argument begin_argument begin_expr begin_name to file end_name end_expr end_argument begin_argument begin_expr begin_name execution filters end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get filter chains end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name force overwrite end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get preserve last modified end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get encoding end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get output encoding end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_name from file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name to file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment gets the location of the file to get the audio return the file location end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get source end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name nofile end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment check if source is a directory end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name source end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name source end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment get the list of files in the dir end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name entries end_name begin_init begin_expr begin_call begin_name begin_name source end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name files end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name entries end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name source end_name end_expr end_argument begin_argument begin_expr begin_name begin_name entries end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name source end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name numfiles end_name begin_init begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment get a random number between 0 and the number of files end_comment begin_decl_stmt begin_decl begin_type begin_name random end_name end_type begin_name rn end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name random end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name x end_name begin_init begin_expr begin_call begin_name begin_name rn end_name begin_operator DOT end_operator begin_name next int end_name end_name begin_argument_list begin_argument begin_expr begin_name numfiles end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment set the source to the file at that location end_comment begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name source end_name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name x end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name source end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name source end_name end_name begin_operator EQ end_operator begin_name nofile end_name end_expr end_expr_stmt end_block end_else end_if begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name source end_name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name create dest file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name default extension end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name source name end_name begin_init begin_expr begin_call begin_name begin_name source end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name len end_name begin_init begin_expr begin_call begin_name begin_name source name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name default extension end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name len end_name begin_operator GT end_operator begin_call begin_name begin_name default extension end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name default extension end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name source name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name len end_name begin_operator MINUS end_operator begin_call begin_name begin_name default extension end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dest end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dest end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name source name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name len end_name begin_operator MINUS end_operator begin_call begin_name begin_name default extension end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name dest end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dest end_name end_expr end_argument begin_argument begin_expr begin_name source name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_specifier end_specifier begin_name poly test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test exclude has precedence end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name directory scanner end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set excludes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the display name return the display name part end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name execute target end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment no arg constructor end_comment begin_specifier end_specifier begin_name plain j unit result formatter end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name inner end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string writer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name wri end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_name inner end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment p this validates each contained selector provided that the selector implements the validate interface p p ordinarily this will validate all the elements of a selector container even if the is selected method of some elements is never called this has two effects p ul li validation will often occur twice li since it is not required that selectors derive from base selector there could be selectors in the container whose error conditions are not detected if their is selected call is never made ul end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name selector elements end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name base selector end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name base selector end_name begin_operator RPAR end_operator begin_name o end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no double schema location end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name schema validate end_name begin_operator DOT end_operator begin_name schema location end_name begin_operator DOT end_operator begin_name error two locations end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a nested code lt catalogpath gt code element not allowed if this catalog is itself a reference to another catalog that is a catalog cannot both refer to another em and em contain elements or other attributes return a path to be configured as the catalog path exception build exception if this is a reference and no nested elements are allowed end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create catalog path end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name catalog path end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name catalog path end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name set checked end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name catalog path end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get jar base name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name descriptor file name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name base name end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name get config end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name begin_name naming scheme end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name ejb jar end_name begin_operator DOT end_operator begin_name naming scheme end_name begin_operator DOT end_operator begin_name descriptor end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment try to find j on as specific convention name end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name descriptor file name end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get config end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name base name terminator end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_comment base name terminator not found the descriptor use the end_comment begin_comment j on as naming convention ie foo xml jonas foo xml and end_comment begin_comment not foo base name terminator ejb jar xml end_comment begin_comment foo base name terminator jonas ejb jar xml end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name a canonical descriptor end_name begin_init begin_expr begin_call begin_name begin_name descriptor file name end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name last separator index end_name begin_init begin_expr begin_call begin_name begin_name a canonical descriptor end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name end of base name end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name last separator index end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name end of base name end_name begin_operator EQ end_operator begin_call begin_name begin_name descriptor file name end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name last separator index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name end of base name end_name begin_operator EQ end_operator begin_call begin_name begin_name descriptor file name end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name end of base name end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name base name end_name begin_operator EQ end_operator begin_call begin_name begin_name descriptor file name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name end of base name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name base name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment else get standard base name end_comment begin_expr_stmt begin_expr begin_name base name end_name begin_operator EQ end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get jar base name end_name end_name begin_argument_list begin_argument begin_expr begin_name descriptor file name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name base name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name base name end_name end_expr end_return end_block 
 begin_comment indicates whether the last process run was killed on timeout or not return tt true tt if the process was killed otherwise tt false tt end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name killed process end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name killed process end_name end_expr end_return end_block 
 begin_comment enables the noqualifier switch will be ignored if javadoc is not the 1 4 version param noqualifier the parameter to the noqualifier switch since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set noqualifier end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name noqualifier end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name noqualifier end_name end_name begin_operator EQ end_operator begin_name noqualifier end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test groups end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name v end_name begin_init begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name get groups end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name v end_name begin_operator EQ end_operator begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name get groups end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name v end_name begin_operator EQ end_operator begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name get groups end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment bugzilla report 33412 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test default excludes and update end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name zip exception end_name end_expr end_argument begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name zip file end_name end_type begin_name f end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name f end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name zip file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get entry end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name f end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment constructor for variable end_comment begin_specifier end_specifier begin_name variable end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment replace occurances of a string with a replacement string param inp string the string to convert param escape chars the string to replace param replace chars the string to place return the converted string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name replace string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name inp string end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name escape chars end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name replace chars end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name local string end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name num tokens end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name st end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name inp string end_name end_expr end_argument begin_argument begin_expr begin_name escape chars end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name num tokens end_name begin_operator EQ end_operator begin_call begin_name begin_name st end_name begin_operator DOT end_operator begin_name count tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name num tokens end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name test end_name begin_init begin_expr begin_call begin_name begin_name st end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name test end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name escape chars end_name end_expr end_argument end_argument_list end_call begin_operator QM end_operator begin_name replace chars end_name begin_operator DP end_operator begin_name test end_name begin_operator RPAR end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name local string end_name begin_operator UNP end_operator begin_name test end_name end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name local string end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name xslt liaison end_name end_type begin_name create liaison end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name tra x liaison end_name end_type begin_name l end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name tra x liaison end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name l end_name begin_operator DOT end_operator begin_name set logger end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name l end_name end_expr end_return end_block 
 begin_comment this is the name location of where to create the zip file param zip file the path of the zip file deprecated since 1 5 x use set dest file file instead ant attribute ignore true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set zipfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name zip file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set dest file end_name begin_argument_list begin_argument begin_expr begin_name zip file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this will test the recursive filter set which means that if the filter value test contains another filter value it will actually resolve end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test recursive end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name filter set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name filter set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name add filter end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name add filter end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name add filter end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name set begin token end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name set end token end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name replace tokens end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create instance from the two bytes starting at offset param bytes the bytes to store as a zip short param offset the offset to start since 1 1 end_comment begin_specifier end_specifier begin_name zip short end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name bytes end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name offset end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_call begin_name begin_name zip short end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name bytes end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment length of the extra field in the local file data without header id or length specifier return 0 end_comment begin_type begin_specifier end_specifier begin_name zip short end_name end_type begin_name get local file data length end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name null end_name end_expr end_return end_block 
 begin_comment returns the prefix for this type of line comment return the prefix for this type of line comment end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name value end_name end_expr end_return end_block 
 begin_comment do the compile with the specified arguments param args arguments to pass to process on command line param first file name index of the first source file in args if the index is negative no temporary file will ever be created but this may hit the command line length limit on your system return the exit code of the compilation end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name execute external compile end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name first file name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name execute external compile end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument begin_argument begin_expr begin_name first file name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test equal comparator via selector end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name modified selector end_name end_type begin_name s end_name begin_init begin_expr begin_operator LPAR end_operator begin_name modified selector end_name begin_operator RPAR end_operator begin_call begin_name get selector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name modified selector end_name begin_operator DOT end_operator begin_name comparator name end_name end_name end_type begin_name comp name end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name modified selector end_name begin_operator DOT end_operator begin_name comparator name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name comp name end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set comparator end_name end_name begin_argument_list begin_argument begin_expr begin_name comp name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name perform tests end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name get cache end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name delete end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment defines the language required param language the scripting language name for the script end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set language end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name language end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set language end_name end_name begin_argument_list begin_argument begin_expr begin_name language end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment reset the list of files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name clear end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name files end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name buffering output filter reader end_name begin_parameter_list begin_param begin_decl begin_type begin_name reader end_name end_type begin_name next end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name next end_name end_name begin_operator EQ end_operator begin_name next end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test unix mode end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name zip entry end_name end_type begin_name ze end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name zip entry end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get platform end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name set unix mode end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get platform end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get external attributes end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get external attributes end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name set unix mode end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get platform end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get external attributes end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get external attributes end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ze end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name zip entry end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get platform end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name set unix mode end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get platform end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get external attributes end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get external attributes end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name set unix mode end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get platform end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get external attributes end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get external attributes end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the file 1 attribute param file 1 the new file 1 value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file 1 end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file 1 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file 1 end_name end_name begin_operator EQ end_operator begin_name file 1 end_name end_expr end_expr_stmt end_block 
 begin_comment add text to send to the server a sub task lt write gt tag was found create the object save it in our list and return it return a write telnet sub task end_comment begin_type begin_specifier end_specifier begin_name telnet sub task end_name end_type begin_name create write end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name telnet sub task end_name end_type begin_name task end_name begin_init begin_expr begin_operator LPAR end_operator begin_name telnet sub task end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name telnet write end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name telnet tasks end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name task end_name end_expr end_return end_block 
 begin_comment the j unit setup method end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the label attribute param label the value to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set internal label end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name label end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name label end_name end_name begin_operator EQ end_operator begin_name label end_name end_expr end_expr_stmt end_block 
 begin_comment builds a command line to execute ss return the constructed commandline end_comment begin_type begin_name commandline end_name end_type begin_name build cmd line end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name command line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment first off make sure that we ve got a command and a vssdir end_comment begin_if begin_condition begin_expr begin_call begin_name get vsspath end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment build the command line from what we got end_comment begin_comment the format is end_comment begin_comment ss create vss items c h i n o s y end_comment begin_comment as specified in the ss exe help end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get ss command end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name command create end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment vss items end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get vsspath end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment c end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment i or i y or i n end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get autoresponse end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment o end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get quiet end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment y end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get login end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name command line end_name end_expr end_return end_block 
 begin_comment this is not allowed for chmod param b ignored throws build exception always ant attribute ignore true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set addsourcefile end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task type end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment set the input file to use for the task param input name of a file from which to get input end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set input end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name input end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name input string end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name input end_name end_name begin_operator EQ end_operator begin_name input end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name incompatible with spawn end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment constructor for a local directories to remote param verbose if true do verbose logging param session the scp session to use param a directory list a list of directories param a remote path the remote path since ant 1 7 end_comment begin_specifier end_specifier begin_name scp to message by sftp end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name verbose end_name end_decl end_param begin_param begin_decl begin_type begin_name session end_name end_type begin_name session end_name end_decl end_param begin_param begin_decl begin_type begin_name list end_name end_type begin_name a directory list end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name a remote path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name verbose end_name end_expr end_argument begin_argument begin_expr begin_name session end_name end_expr end_argument begin_argument begin_expr begin_name a remote path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name directory list end_name end_name begin_operator EQ end_operator begin_name a directory list end_name end_expr end_expr_stmt end_block 
 begin_comment construct a new code abstract file set code end_comment begin_specifier end_specifier begin_name abstract file set end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment end_comment begin_comment get set methods end_comment begin_comment setters of course are where ant user passes in values end_comment begin_comment end_comment begin_comment set the root of the subtree in the star team repository from which to work optional defaults to the root folder of the view param root starteam folder the root folder end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set root starteam folder end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name root starteam folder end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name root starteam folder end_name end_name begin_operator EQ end_operator begin_name root starteam folder end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name filter line end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name default trace filters end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name default trace filters end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test path and jar end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment searches for files in the given folder this method is recursive and thus searches all subfolders param s a star team server param p a valid project on the server param v a view name from the specified project param t an item type which is currently always file param f the folder to search param tgt target folder on local machine end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run folder end_name begin_parameter_list begin_param begin_decl begin_type begin_name server end_name end_type begin_name s end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name com end_name begin_operator DOT end_operator begin_name starbase end_name begin_operator DOT end_operator begin_name starteam end_name begin_operator DOT end_operator begin_name project end_name end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name view end_name end_type begin_name v end_name end_decl end_param begin_param begin_decl begin_type begin_name type end_name end_type begin_name t end_name end_decl end_param begin_param begin_decl begin_type begin_name folder end_name end_type begin_name f end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name tgt end_name end_decl end_param end_parameter_list begin_block begin_comment process all items in this folder end_comment begin_decl_stmt begin_decl begin_type begin_name item end_name begin_index end_index end_type begin_name items end_name begin_init begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get items end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name items end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name run item end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name v end_name end_expr end_argument begin_argument begin_expr begin_name t end_name end_expr end_argument begin_argument begin_expr begin_name f end_name end_expr end_argument begin_argument begin_expr begin_name begin_name items end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name tgt end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment process all subfolders recursively if recursion is on end_comment begin_if begin_condition begin_expr begin_call begin_name get recursion end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name folder end_name begin_index end_index end_type begin_name subfolders end_name begin_init begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get sub folders end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name subfolders end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name run folder end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name v end_name end_expr end_argument begin_argument begin_expr begin_name t end_name end_expr end_argument begin_argument begin_expr begin_name begin_name subfolders end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name begin_argument_list begin_argument begin_expr begin_name tgt end_name end_expr end_argument begin_argument begin_expr begin_name begin_name subfolders end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test zipgroupfileset end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name zip file end_name end_type begin_name zip file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name zip file end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name get entry end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name get entry end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name get entry end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name get entry end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name get entry end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment a 3 digit octal string specify the user group and other modes in the standard unix fashion optional default 0755 param octal string a code string code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dir mode end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name octal string end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check archive attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name integer set dir mode end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name octal string end_name end_expr end_argument begin_argument begin_expr begin_name base octal end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment close an entry this method must be called for all file entries that contain data the reason is that we must buffer data written to the stream in order to satisfy the buffer s record based writes thus there may be data fragments still being assembled that must be written to the output stream before this entry is closed and the next entry written throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name close entry end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name assem len end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name assem len end_name end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name assem buf end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name assem buf end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name buffer end_name begin_operator DOT end_operator begin_name write record end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name assem buf end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr bytes end_name end_name begin_operator UNP end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name assem len end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name assem len end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr bytes end_name end_name begin_operator LT end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr size end_name end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name curr name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr bytes end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr size end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment throw a build exception in place of a bsf exception param be bsf exception to convert throws build exception the conveted exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name throw build exception end_name begin_parameter_list begin_param begin_decl begin_type begin_name bsf exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name begin_init begin_expr begin_name be end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name te end_name begin_init begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get target exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name te end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name te end_name begin_operator UNP end_operator begin_name build exception end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator LPAR end_operator begin_name build exception end_name begin_operator RPAR end_operator begin_name te end_name end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name t end_name begin_operator EQ end_operator begin_name te end_name end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment check if the os is valid always include windows return true if the os is valid end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is valid os end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name is valid os end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment performs the linking of files addfiles are added to the output as is for example a jar file is added to the output as a jar file however mergefiles are first examined for their type if it is a jar or zip file the contents will be extracted from the mergefile and entered into the output if a zip or jar file is encountered in a subdirectory it will be added not merged if a directory is encountered it becomes the root entry of all the files below it thus you can provide multiple disjoint directories as addfiles they will all be added in a rational manner to outfile throws exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name link end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name zip output stream end_name end_type begin_name output end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name zip output stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name outfile end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name compression end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name set method end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name zip output stream end_name begin_operator DOT end_operator begin_name deflated end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name set level end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name deflater end_name begin_operator DOT end_operator begin_name default compression end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name set method end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name zip output stream end_name begin_operator DOT end_operator begin_name stored end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name merges end_name begin_init begin_expr begin_call begin_name begin_name mergefiles end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name merges end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name merges end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment do the merge end_comment begin_expr_stmt begin_expr begin_call begin_name merge zip jar contents end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment add this file to the addfiles vector and add it end_comment begin_comment later at the top level of the output file end_comment begin_expr_stmt begin_expr begin_call begin_name add add file end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_while begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name adds end_name begin_init begin_expr begin_call begin_name begin_name addfiles end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name adds end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name adds end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment system out println in jlink adding directory contents of f get path end_comment begin_expr_stmt begin_expr begin_call begin_name add dir contents end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument begin_argument begin_expr begin_name f end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name compression end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name add file end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument begin_argument begin_expr begin_name f end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name compression end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_while begin_if begin_condition begin_expr begin_name output end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_comment do nothing end_comment end_block end_catch end_try end_block end_then end_if end_block 
 begin_comment get the parameter name return the parameter s name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_comment assert that a namespace is valid throws build exception if not end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate namespace end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is set end_name begin_argument_list begin_argument begin_expr begin_call begin_name get namespace end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error no uri end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_specifier end_specifier begin_name parent loader end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test apt end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the adapter class for this definition not supported param adapter class the adapter class end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set adapter class end_name begin_parameter_list begin_param begin_decl begin_type begin_name class end_name end_type begin_name adapter class end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment get the comment command param cmd containing the command line string with or without the comment flag and string appended end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get comment command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes this breaks clearcase end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag comment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment create a nested targets element return a union instance end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name path end_name end_type begin_name create targets end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name targets end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name targets end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_name targets end_name end_expr end_expr_stmt begin_return begin_expr begin_name targets end_name end_expr end_return end_block 
 begin_comment does the given argument match the pattern param input the string to match against param options the regex options to use return true if the pattern matches throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name matches end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name input end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name options end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name pattern end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name get compiled pattern end_name begin_argument_list begin_argument begin_expr begin_name options end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name matcher end_name end_name begin_argument_list begin_argument begin_expr begin_name input end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name find end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name ej end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name execute java end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ej end_name begin_operator DOT end_operator begin_name set timeout end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name long end_name begin_argument_list begin_argument begin_expr begin_name time out end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name project end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant home end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant home end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name cp end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get test class path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ej end_name begin_operator DOT end_operator begin_name set classpath end_name end_name begin_argument_list begin_argument begin_expr begin_name cp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment expect an exception when insufficient information is provided end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment loads a nested code lt xmlcatalog gt code into our definition not allowed if this catalog is itself a reference to another catalog that is a catalog cannot both refer to another em and em contain elements or other attributes param catalog nested xml catalog end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured xml catalog end_name begin_parameter_list begin_param begin_decl begin_type begin_name xml catalog end_name end_type begin_name catalog end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment add all nested elements to our catalog end_comment begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name new elements end_name begin_init begin_expr begin_call begin_name begin_name catalog end_name begin_operator DOT end_operator begin_name get elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name our elements end_name begin_init begin_expr begin_call begin_name get elements end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name new elements end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name our elements end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_comment append the classpath of the nested catalog end_comment begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name nested classpath end_name begin_init begin_expr begin_call begin_name begin_name catalog end_name begin_operator DOT end_operator begin_name get classpath end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name create classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name nested classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment append the catalog path of the nested catalog end_comment begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name nested catalog path end_name begin_init begin_expr begin_call begin_name begin_name catalog end_name begin_operator DOT end_operator begin_name get catalog path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name create catalog path end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name nested catalog path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set checked end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment specifies a comment param v value to assign to comment end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set comment end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name comment end_name end_name begin_operator EQ end_operator begin_name v end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test condition type end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the encoding to translate to from if unset the default encoding for the jvm is used param encoding string containing the name of the native encoding to convert from or to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name encoding end_name end_name begin_operator EQ end_operator begin_name encoding end_name end_expr end_expr_stmt end_block 
 begin_comment set the string whose length to get param string code string code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name string end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name string end_name end_name begin_operator EQ end_operator begin_name string end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name mode end_name end_name begin_operator EQ end_operator begin_name string end_name end_expr end_expr_stmt end_block 
 begin_comment the username of the account which will be used to shutdown the server required param s the username end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set user end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name username end_name end_name begin_operator EQ end_operator begin_name s end_name end_expr end_expr_stmt end_block 
 begin_comment force overwrite existing destination file param force if true always overwrite otherwise only overwrite if the output file is older any of the input files since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set force end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name force end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name force overwrite end_name end_name begin_operator EQ end_operator begin_name force end_name end_expr end_expr_stmt end_block 
 begin_comment print a usage statement end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name usage end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment parses a path definition and creates single path elements param path the code string code path definition throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set path end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name create path element end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set path end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test none end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name do test end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment file or directory to get base name from param file file or directory to get base name from end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block 
 begin_comment find out whether one particular include pattern is more powerful than all the excludes note the power comparison is based on the length of the include pattern and of the exclude patterns without the wildcards ideally the comparison should be done based on the depth of the match that is to say how many file separators have been matched before the first or the end of the pattern important this function should return false with care param name the relative path to test param includepattern one include pattern return true if there is no exclude pattern more powerful than this include pattern since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is more powerful than excludes end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name includepattern end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name soughtexclude end_name begin_init begin_expr begin_name name end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name counter end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name counter end_name begin_operator LT end_operator begin_name begin_name excludes end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name counter end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name excludes end_name begin_index begin_expr begin_name counter end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name soughtexclude end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_comment add a property reference nested element to the references to be used param ref a property reference end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add propertyref end_name begin_parameter_list begin_param begin_decl begin_type begin_name property ref end_name end_type begin_name ref end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert not reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pty refs end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name ref end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment run the command using the given execute instance this may be overridden by subclasses param exe instance of execute to run throws build exception if the new process could not be started only if fail if exec fails is set to true the default end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run exec end_name begin_parameter_list begin_param begin_decl begin_type begin_name execute end_name end_type begin_name exe end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment show the command end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name describe command end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set commandline end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name run execute end_name begin_argument_list begin_argument begin_expr begin_name exe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name fail if exec fails end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_catch begin_finally begin_block begin_comment close the output file if required end_comment begin_expr_stmt begin_expr begin_call begin_name log flush end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment set the target type to one of exe library module winexe param target type the enumerated value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set target type end_name begin_parameter_list begin_param begin_decl begin_type begin_name target types end_name end_type begin_name target type end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name target type end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name target type end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment param file the location of the audio file to be played when the build is successful param loops the number of times the file should be played when the build is successful param duration the number of milliseconds the file should be played when the build is successful end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add build successful sound end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name loops end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name duration end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file success end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name loops success end_name end_name begin_operator EQ end_operator begin_name loops end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name duration success end_name end_name begin_operator EQ end_operator begin_name duration end_name end_expr end_expr_stmt end_block 
 begin_comment if true enables all tracing param enable a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set trace end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name enable end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name trace end_name begin_operator EQ end_operator begin_name enable end_name end_expr end_expr_stmt end_block 
 begin_type begin_name void end_name end_type begin_name set to header end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name to end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set header end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name vector to list end_name begin_argument_list begin_argument begin_expr begin_name to end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment returns the line breaking characters as a string return a string containing all the characters considered as line breaking end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get line breaks end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name line breaks end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the failonerror flag return the failonerror flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get failonerror end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name fail on error end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test complete directory move file to existing dir end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds a command line argument return a command line argument to configure since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name argument end_name end_name end_type begin_name create arg end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment get the vendor of the extensions specification return the vendor of the extensions specification end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get specification vendor end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name specification vendor end_name end_expr end_return end_block 
 begin_comment set the source resource param a the resource to load as a single element resource collection end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name a end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name src end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name next end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name pump stream end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name end of stream end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name begin_init begin_expr begin_call begin_name begin_name din end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name line end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name output log end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument begin_argument begin_expr begin_name message level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name end of stream end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block 
 begin_comment adds a zipfileset to include in the meta inf directory param fs zipfileset to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add metainf end_name begin_parameter_list begin_param begin_decl begin_type begin_name zip file set end_name end_type begin_name fs end_name end_decl end_param end_parameter_list begin_block begin_comment we just set the prefix for this fileset and pass it up end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name set prefix end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name add fileset end_name end_name begin_argument_list begin_argument begin_expr begin_name fs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor param client ftp client variable param ftp file the file param curpwd absolute remote path where the file is found end_comment begin_specifier end_specifier begin_name ant ftp file end_name begin_parameter_list begin_param begin_decl begin_type begin_name ftp client end_name end_type begin_name client end_name end_decl end_param begin_param begin_decl begin_type begin_name ftp file end_name end_type begin_name ftp file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name curpwd end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name client end_name end_name begin_operator EQ end_operator begin_name client end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ftp file end_name end_name begin_operator EQ end_operator begin_name ftp file end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curpwd end_name end_name begin_operator EQ end_operator begin_name curpwd end_name end_expr end_expr_stmt end_block 
 begin_comment adds a nested filenamemapper param file name mapper the mapper to add exception build exception if more than one mapper is defined since ant 1 7 0 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name file name mapper end_name end_type begin_name file name mapper end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name mapper end_name end_type begin_name mapper end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name mapper end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name file name mapper end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add mapper end_name begin_argument_list begin_argument begin_expr begin_name mapper end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check if fixlastline works end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name testfixlastline end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect file contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name main sort end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name data end_name end_type begin_name data shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name begin_index end_index end_type begin_name running order end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name main sort running order end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name begin_index end_index end_type begin_name copy end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name main sort copy end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name begin_index end_index end_type begin_name big done end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name main sort big done end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name begin_index end_index end_type begin_name ftab end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name ftab end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name block end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name block end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name begin_index end_index end_type begin_name fmap end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name fmap end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name char end_name begin_index end_index end_type begin_name quadrant end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name quadrant end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name last shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name last end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name work limit shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name work limit end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name first attempt shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name first attempt end_name end_name end_expr end_init end_decl end_decl_stmt begin_comment set up the 2 byte frequency table end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_operator MMINUS end_operator begin_name i end_name begin_operator GE end_operator end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name ftab end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_for begin_comment in the various block sized structures live data runs from 0 to last num overshoot bytes inclusive first set up the overshoot area for block end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name num overshoot bytes end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name block end_name begin_index begin_expr begin_name last shadow end_name begin_operator PLUS end_operator begin_name i end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name block end_name begin_index begin_expr begin_operator LPAR end_operator begin_name i end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name last shadow end_name begin_operator PLUS end_operator begin_operator RPAR end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator end_expr end_index end_name end_expr end_expr_stmt end_block end_for begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name last shadow end_name begin_operator PLUS end_operator begin_name num overshoot bytes end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_operator MMINUS end_operator begin_name i end_name begin_operator GE end_operator end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name quadrant end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_name begin_name block end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name block end_name begin_index begin_expr begin_name last shadow end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_comment complete the initial radix sort end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name c 1 end_name begin_init begin_expr begin_name begin_name block end_name begin_index begin_expr end_expr end_index end_name begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LE end_operator begin_name last shadow end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name c 2 end_name begin_init begin_expr begin_name begin_name block end_name begin_index begin_expr begin_name i end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name ftab end_name begin_index begin_expr begin_operator LPAR end_operator begin_name c 1 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_name c 2 end_name end_expr end_index end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name c 1 end_name begin_operator EQ end_operator begin_name c 2 end_name end_expr end_expr_stmt end_block end_for begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LE end_operator end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_expr_stmt begin_expr begin_name begin_name ftab end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator begin_name begin_name ftab end_name begin_index begin_expr begin_name i end_name begin_operator MINUS end_operator end_expr end_index end_name end_expr end_expr_stmt end_for begin_expr_stmt begin_expr begin_name c 1 end_name begin_operator EQ end_operator begin_name begin_name block end_name begin_index begin_expr end_expr end_index end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name last shadow end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name c 2 end_name begin_init begin_expr begin_name begin_name block end_name begin_index begin_expr begin_name i end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_operator MMINUS end_operator begin_name begin_name ftab end_name begin_index begin_expr begin_operator LPAR end_operator begin_name c 1 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_name c 2 end_name end_expr end_index end_name end_expr end_index end_name begin_operator EQ end_operator begin_name i end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name c 1 end_name begin_operator EQ end_operator begin_name c 2 end_name end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_operator MMINUS end_operator begin_name begin_name ftab end_name begin_index begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name begin_name block end_name begin_index begin_expr begin_name last shadow end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name begin_name block end_name begin_index begin_expr end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_index end_name end_expr end_index end_name begin_operator EQ end_operator begin_name last shadow end_name end_expr end_expr_stmt begin_comment now ftab contains the first loc of every small bucket calculate the running order from smallest to largest big bucket end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_operator MMINUS end_operator begin_name i end_name begin_operator GE end_operator end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name big done end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name running order end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_name i end_name end_expr end_expr_stmt end_block end_for begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name h end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name h end_name begin_operator UNP end_operator end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_name h end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name h end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LE end_operator end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name vv end_name begin_init begin_expr begin_name begin_name running order end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name a end_name begin_init begin_expr begin_name begin_name ftab end_name begin_index begin_expr begin_operator LPAR end_operator begin_name vv end_name begin_operator PLUS end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_index end_name begin_operator MINUS end_operator begin_name begin_name ftab end_name begin_index begin_expr begin_name vv end_name begin_operator UNP end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name b end_name begin_init begin_expr begin_name h end_name begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr begin_name i end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name ro end_name begin_init begin_expr begin_name begin_name running order end_name begin_index begin_expr begin_name j end_name begin_operator MINUS end_operator begin_name h end_name end_expr end_index end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_operator LPAR end_operator begin_name begin_name ftab end_name begin_index begin_expr begin_operator LPAR end_operator begin_name ro end_name begin_operator PLUS end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_index end_name begin_operator MINUS end_operator begin_name begin_name ftab end_name begin_index begin_expr begin_name ro end_name begin_operator UNP end_operator end_expr end_index end_name begin_operator RPAR end_operator begin_operator GT end_operator begin_name a end_name end_expr end_condition begin_incr begin_expr begin_name ro end_name begin_operator EQ end_operator begin_name begin_name running order end_name begin_index begin_expr begin_name j end_name begin_operator MINUS end_operator begin_name h end_name end_expr end_index end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name running order end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name begin_operator EQ end_operator begin_name ro end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name j end_name begin_operator UNP end_operator begin_name h end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name j end_name begin_operator LE end_operator begin_name b end_name end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if end_block end_for begin_expr_stmt begin_expr begin_name begin_name running order end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name begin_operator EQ end_operator begin_name vv end_name end_expr end_expr_stmt end_block end_for end_block end_for begin_comment the main sorting loop end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LE end_operator end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_comment process big buckets starting with the least full end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name ss end_name begin_init begin_expr begin_name begin_name running order end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_comment step 1 end_comment begin_comment complete the big bucket ss by quicksorting any unsorted small buckets ss j hopefully previous pointer scanning phases have already completed many of the small buckets ss j so we don t have to sort them at all end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LE end_operator end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name sb end_name begin_init begin_expr begin_operator LPAR end_operator begin_name ss end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_name j end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name ftab sb end_name begin_init begin_expr begin_name begin_name ftab end_name begin_index begin_expr begin_name sb end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name ftab sb end_name begin_operator UNP end_operator begin_name setmask end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_name setmask end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name lo end_name begin_init begin_expr begin_name ftab sb end_name begin_operator UNP end_operator begin_name clearmask end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name hi end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name ftab end_name begin_index begin_expr begin_name sb end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator begin_name clearmask end_name begin_operator RPAR end_operator begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name hi end_name begin_operator GT end_operator begin_name lo end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name main q sort 3 end_name begin_argument_list begin_argument begin_expr begin_name data shadow end_name end_expr end_argument begin_argument begin_expr begin_name lo end_name end_expr end_argument begin_argument begin_expr begin_name hi end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name first attempt shadow end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name work done end_name end_name begin_operator GT end_operator begin_name work limit shadow end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name ftab end_name begin_index begin_expr begin_name sb end_name end_expr end_index end_name begin_operator EQ end_operator begin_name ftab sb end_name begin_operator UNP end_operator begin_name setmask end_name end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_comment step 2 end_comment begin_comment now scan this big bucket so as to synthesise the end_comment begin_comment sorted order for small buckets t ss for all t ss end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LE end_operator end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name copy end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name ftab end_name begin_index begin_expr begin_operator LPAR end_operator begin_name j end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_name ss end_name end_expr end_index end_name begin_operator UNP end_operator begin_name clearmask end_name end_expr end_expr_stmt end_block end_for begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr begin_name begin_name ftab end_name begin_index begin_expr begin_name ss end_name begin_operator UNP end_operator end_expr end_index end_name begin_operator UNP end_operator begin_name clearmask end_name end_expr end_init begin_operator UNP end_operator begin_name hj end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name ftab end_name begin_index begin_expr begin_operator LPAR end_operator begin_name ss end_name begin_operator PLUS end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_index end_name begin_operator UNP end_operator begin_name clearmask end_name begin_operator RPAR end_operator end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name hj end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name fmap j end_name begin_init begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name c 1 end_name begin_operator EQ end_operator begin_name begin_name block end_name begin_index begin_expr begin_name fmap j end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name begin_name big done end_name begin_index begin_expr begin_name c 1 end_name end_expr end_index end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_name begin_name copy end_name begin_index begin_expr begin_name c 1 end_name end_expr end_index end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name fmap j end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_name last shadow end_name begin_operator DP end_operator begin_operator LPAR end_operator begin_name fmap j end_name begin_operator MINUS end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name copy end_name begin_index begin_expr begin_name c 1 end_name end_expr end_index end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_operator MMINUS end_operator begin_name j end_name begin_operator GE end_operator end_expr end_condition begin_incr end_incr begin_expr_stmt begin_expr begin_name begin_name ftab end_name begin_index begin_expr begin_operator LPAR end_operator begin_name j end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_name ss end_name end_expr end_index end_name begin_operator UNP end_operator begin_name setmask end_name end_expr end_expr_stmt end_for begin_comment step 3 end_comment begin_comment the ss big bucket is now done record this fact and update the quadrant descriptors remember to update quadrants in the overshoot area too if necessary the if i 255 test merely skips this updating for the last bucket processed since updating for the last bucket is pointless end_comment begin_expr_stmt begin_expr begin_name begin_name big done end_name begin_index begin_expr begin_name ss end_name end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name i end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name bb start end_name begin_init begin_expr begin_name begin_name ftab end_name begin_index begin_expr begin_name ss end_name begin_operator UNP end_operator end_expr end_index end_name begin_operator UNP end_operator begin_name clearmask end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name bb size end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name ftab end_name begin_index begin_expr begin_operator LPAR end_operator begin_name ss end_name begin_operator PLUS end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_index end_name begin_operator UNP end_operator begin_name clearmask end_name begin_operator RPAR end_operator begin_operator MINUS end_operator begin_name bb start end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name shifts end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name bb size end_name begin_operator UNP end_operator begin_name shifts end_name begin_operator RPAR end_operator begin_operator GT end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name shifts end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_while begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name bb size end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name a 2 update end_name begin_init begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_name bb start end_name begin_operator PLUS end_operator begin_name j end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name char end_name end_type begin_name q val end_name begin_init begin_expr begin_call begin_name char end_name begin_argument_list begin_argument begin_expr begin_name j end_name begin_operator UNP end_operator begin_name shifts end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name quadrant end_name begin_index begin_expr begin_name a 2 update end_name end_expr end_index end_name begin_operator EQ end_operator begin_name q val end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name a 2 update end_name begin_operator LT end_operator begin_name num overshoot bytes end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name quadrant end_name begin_index begin_expr begin_name a 2 update end_name begin_operator PLUS end_operator begin_name last shadow end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name q val end_name end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block end_then end_if end_block end_for end_block 
 begin_comment convenience method param p the ant project instance against which to resolve references since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name die on circular reference end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name checked end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name die on circular reference end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name identity stack end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test empty end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a selector date entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add date end_name begin_parameter_list begin_param begin_decl begin_type begin_name date selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name add date end_name end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set out file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name out file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out file end_name end_name begin_operator EQ end_operator begin_name out file end_name end_expr end_expr_stmt end_block 
 begin_comment adds a nested cdata section in a new child element p this means pre append cdata element lt a gt b c pre creates pre lt a gt lt b gt lt cdata c lt b gt lt a gt pre pre p param parent element that will receive the new element as child param name of the child element param content text content since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name append cdata element end_name begin_parameter_list begin_param begin_decl begin_type begin_name element end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name content end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name create child element end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name append cdata end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_name content end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sax parser call back method that is invoked when an element is exited used to blank out set to the empty string not nullify the name of the current attribute a better method would be to use a stack as an instance variable however since we are only interested in leaf node data this is a simpler and workable solution param name the name of the attribute being exited ignored in this implementation throws sax exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name process element end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name current text end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name current element end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name ejb ref end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name ejb local ref end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name in ejb ref end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name parse state end_name begin_operator EQT end_operator begin_name state in entity end_name begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name entity bean end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parse state end_name begin_operator EQ end_operator begin_name state in beans end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name parse state end_name begin_operator EQT end_operator begin_name state in session end_name begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name session bean end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parse state end_name begin_operator EQ end_operator begin_name state in beans end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name parse state end_name begin_operator EQT end_operator begin_name state in message end_name begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name message bean end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parse state end_name begin_operator EQ end_operator begin_name state in beans end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name parse state end_name begin_operator EQT end_operator begin_name state in beans end_name begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name enterprise beans end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parse state end_name begin_operator EQ end_operator begin_name state in ejbjar end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name parse state end_name begin_operator EQT end_operator begin_name state in ejbjar end_name begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name ejb jar end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parse state end_name begin_operator EQ end_operator begin_name state looking ejbjar end_name end_expr end_expr_stmt end_block end_then end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_block 
 begin_comment get the string value of the utf 8 entry return the utf 8 value as a java string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name value end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name tar file set test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment empty end_comment begin_comment sets the name of the tag param name the name of the tag must not be code null code or empty end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment logic end_comment begin_comment this algorithm supports only crc and adler return i true i if all is ok otherwise i false i end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is valid end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name algorithm end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name algorithm end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filesmatch different end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property unset end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test presetdef wrapped task end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name echo end_name end_type begin_name e end_name begin_init begin_expr begin_operator LPAR end_operator begin_name echo end_name begin_operator RPAR end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get line number end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor end_comment begin_specifier end_specifier begin_name name and type cp info end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name constant nameandtype end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment indicates intention to suppress the copying on the local hard disk of new target files return indicates intention to suppress the copying on the local hard disk of new target files end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is nocopynewtargetfiles end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name nocopynewtargetfiles end_name end_expr end_return end_block 
 begin_comment return whether the group name has been explicitly set end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has group been set end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name group name set end_name end_expr end_return end_block 
 begin_comment include the version tag in the generated documentation param b true if the version tag should be included end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set version end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name version end_name end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment put an entry on the output stream this writes the entry s header record and positions the output stream for writing the contents of the entry once this method is called the stream is ready for calls to write to write the entry s contents once the contents are written close entry b must b be called to ensure that all buffered data is completely written to the output stream param entry the tar entry to be written to the archive throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name put next entry end_name begin_parameter_list begin_param begin_decl begin_type begin_name tar entry end_name end_type begin_name entry end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GE end_operator begin_name begin_name tar constants end_name begin_operator DOT end_operator begin_name namelen end_name end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name long file mode end_name begin_operator EQT end_operator begin_name longfile gnu end_name end_expr end_condition begin_then begin_block begin_comment create a tar entry for the long link the contents end_comment begin_comment of which are the entry s name end_comment begin_decl_stmt begin_decl begin_type begin_name tar entry end_name end_type begin_name long link entry end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name tar entry end_name begin_argument_list begin_argument begin_expr begin_name begin_name tar constants end_name begin_operator DOT end_operator begin_name gnu longlink end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name tar constants end_name begin_operator DOT end_operator begin_name lf gnutype longname end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name long link entry end_name begin_operator DOT end_operator begin_name set size end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name put next entry end_name begin_argument_list begin_argument begin_expr begin_name long link entry end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name close entry end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name long file mode end_name begin_operator UNP end_operator begin_name longfile truncate end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name tar constants end_name begin_operator DOT end_operator begin_name namelen end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_else end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name write entry header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name record buf end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name buffer end_name begin_operator DOT end_operator begin_name write record end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name record buf end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr bytes end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr size end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr size end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get size end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name curr name end_name begin_operator EQ end_operator begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add the catalog to our internal catalog param xml catalog the xml catalog instance to use to look up dt ds end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured xml catalog end_name begin_parameter_list begin_param begin_decl begin_type begin_name xml catalog end_name end_type begin_name xml catalog end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name xml catalog end_name begin_operator DOT end_operator begin_name add configured xml catalog end_name end_name begin_argument_list begin_argument begin_expr begin_name xml catalog end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the classloader to use to create an instance of the definition not supported param class loader the class loader end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set class loader end_name begin_parameter_list begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name class loader end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment the name of the server s properties file within the weblogic home directory used to control the weblogic instance required for wl 4 5 1 param properties filename the properties file name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set properties end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name properties filename end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name weblogic properties file end_name end_name begin_operator EQ end_operator begin_name properties filename end_name end_expr end_expr_stmt end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no params end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name wsdl to dotnet end_name begin_operator DOT end_operator begin_name error no dest file end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_name basedir checker end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name dirs end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name expected basedirs end_name begin_operator EQ end_operator begin_name dirs end_name end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment copy task constructor end_comment begin_specifier end_specifier begin_name copy end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name file utils end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file utils end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name granularity end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file timestamp granularity end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the possible values for this enumerated type end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name valid modes end_name end_expr end_return end_block 
 begin_comment comment to apply to files checked in to source safe param comment the comment to apply in source safe end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set comment end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name comment end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal comment end_name end_name begin_argument_list begin_argument begin_expr begin_name comment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the working directory of the process param d working directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name d end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dir end_name end_name begin_operator EQ end_operator begin_name d end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test absolute 5 end_name begin_parameter_list end_parameter_list begin_block begin_comment testing drive letter search from root end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name directory scanner end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name pattern end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to upper case end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name pattern end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment if this is our context we assume there must be something here end_comment begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files count end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included dirs count end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this test fails but we ignore the return value we verify that failure only matters when failonerror is set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test run fail end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name run fatal tests end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test tail end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name expected end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_name expected end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a filterset to the collection param filter set a code filter set code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add filter set end_name begin_parameter_list begin_param begin_decl begin_type begin_name filter set end_name end_type begin_name filter set end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filter sets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name filter set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment checks that resource node has embedded filesets return boolean end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has filesets end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name file sets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_return end_block 
 begin_comment expect an exception when the destination file is invalid end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name source end_name end_type begin_name get source end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name end_decl end_param begin_param begin_decl begin_type begin_name resource end_name end_type begin_name resource end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name parser configuration exception end_name end_expr end_argument begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block begin_comment todo is this comment still relevant end_comment begin_comment fixme need to use a sax source as the source for the transform end_comment begin_comment so we can plug in our own entity resolver end_comment begin_decl_stmt begin_decl begin_type begin_name source end_name end_type begin_name src end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name entity resolver end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name get factory end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get feature end_name begin_argument_list begin_argument begin_expr begin_name begin_name sax source end_name begin_operator DOT end_operator begin_name feature end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name sax parser factory end_name end_type begin_name sp factory end_name begin_init begin_expr begin_call begin_name begin_name sax parser factory end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sp factory end_name begin_operator DOT end_operator begin_name set namespace aware end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name xml reader end_name end_type begin_name reader end_name begin_init begin_expr begin_call begin_name begin_name sp factory end_name begin_operator DOT end_operator begin_name new sax parser end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get xml reader end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name set entity resolver end_name end_name begin_argument_list begin_argument begin_expr begin_name entity resolver end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name src end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name sax source end_name begin_argument_list begin_argument begin_expr begin_name reader end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name input source end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal state exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_then begin_else begin_block begin_comment warn don t use the stream source file ctor it won t work with end_comment begin_comment xalan prior to 2 2 because of systemid bugs end_comment begin_expr_stmt begin_expr begin_name src end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name stream source end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_comment the line below is a hack the system id must an uri but it is not end_comment begin_comment cleat to get the uri of an resource so just set the name of the end_comment begin_comment resource as a system id end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name set system id end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name resource to uri end_name begin_argument_list begin_argument begin_expr begin_name resource end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name src end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test fileset separator end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment cleans up any resources held by this classloader at the end of a subbuild if it has been created for the subbuild s project instance param event the build finished event since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name sub build finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name project end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name cleanup end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment adds a reference to a classpath defined elsewhere param r the reference to an instance defining the bootclasspath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set boot classpath ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create bootclasspath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set refid end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment apply presets attributes and text are set if not currently set nested elements are prepended param r a code runtime configurable code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name apply pre set end_name begin_parameter_list begin_param begin_decl begin_type begin_name runtime configurable end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_comment attributes end_comment begin_if begin_condition begin_expr begin_name begin_name r end_name begin_operator DOT end_operator begin_name attribute map end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name attribute map end_name begin_operator DOT end_operator begin_name key set end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name attribute map end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name attribute map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set attribute end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name attribute map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block end_then end_if begin_comment poly type end_comment begin_expr_stmt begin_expr begin_name poly type end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name poly type end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_name begin_name r end_name begin_operator DOT end_operator begin_name poly type end_name end_name begin_operator DP end_operator begin_name poly type end_name end_expr end_expr_stmt begin_comment children this is a shadow of unknown element children end_comment begin_if begin_condition begin_expr begin_name begin_name r end_name begin_operator DOT end_operator begin_name children end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name new children end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new children end_name begin_operator DOT end_operator begin_name add all end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name r end_name begin_operator DOT end_operator begin_name children end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name children end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name new children end_name begin_operator DOT end_operator begin_name add all end_name end_name begin_argument_list begin_argument begin_expr begin_name children end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name children end_name begin_operator EQ end_operator begin_name new children end_name end_expr end_expr_stmt end_block end_then end_if begin_comment text end_comment begin_if begin_condition begin_expr begin_name begin_name r end_name begin_operator DOT end_operator begin_name characters end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name characters end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name characters end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name characters end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name characters end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process line end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name message level end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name message level end_name begin_operator EQT end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name begin_operator UNP end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name queued line end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name process line end_name end_name begin_argument_list begin_argument begin_expr begin_name queued line end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name queued line end_name begin_operator EQ end_operator begin_name line end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name queued line end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name process line end_name end_name begin_argument_list begin_argument begin_expr begin_name queued line end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name process line end_name end_name begin_argument_list begin_argument begin_expr begin_name queued line end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name queued line end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name process line end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument begin_argument begin_expr begin_name message level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment resolve this constant pool entry with respect to its dependents in the constant pool param constant pool the constant pool of which this entry is a member and against which this entry is to be resolved end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name resolve end_name begin_parameter_list begin_param begin_decl begin_type begin_name constant pool end_name end_type begin_name constant pool end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name class cp info end_name end_type begin_name interface method class end_name begin_init begin_expr begin_operator LPAR end_operator begin_name class cp info end_name begin_operator RPAR end_operator begin_call begin_name begin_name constant pool end_name begin_operator DOT end_operator begin_name get entry end_name end_name begin_argument_list begin_argument begin_expr begin_name class index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name interface method class end_name begin_operator DOT end_operator begin_name resolve end_name end_name begin_argument_list begin_argument begin_expr begin_name constant pool end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name interface method class name end_name begin_operator EQ end_operator begin_call begin_name begin_name interface method class end_name begin_operator DOT end_operator begin_name get class name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name name and type cp info end_name end_type begin_name nt end_name begin_init begin_expr begin_operator LPAR end_operator begin_name name and type cp info end_name begin_operator RPAR end_operator begin_call begin_name begin_name constant pool end_name begin_operator DOT end_operator begin_name get entry end_name end_name begin_argument_list begin_argument begin_expr begin_name name and type index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nt end_name begin_operator DOT end_operator begin_name resolve end_name end_name begin_argument_list begin_argument begin_expr begin_name constant pool end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name interface method name end_name begin_operator EQ end_operator begin_call begin_name begin_name nt end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name interface method type end_name begin_operator EQ end_operator begin_call begin_name begin_name nt end_name begin_operator DOT end_operator begin_name get type end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name resolve end_name end_name begin_argument_list begin_argument begin_expr begin_name constant pool end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment flag to recursively apply the action defaults to false param recursive true for recursive operation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set recursive end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name recursive end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal recursive end_name end_name begin_argument_list begin_argument begin_expr begin_name recursive end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment register a task as the current task for a thread if the task is null the thread s entry is removed param thread the thread on which the task is registered param task the task to be registered since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name register thread task end_name begin_parameter_list begin_param begin_decl begin_type begin_name thread end_name end_type begin_name thread end_name end_decl end_param begin_param begin_decl begin_type begin_name task end_name end_type begin_name task end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name task end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name thread tasks end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name thread end_name end_expr end_argument begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name thread group tasks end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name get thread group end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name thread tasks end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name thread end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name thread group tasks end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name get thread group end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment do the work throws build exception in a number of circumstances ul li if fail if exec fails is set to true and the process cannot be started li li the java 13 command launcher can send build exceptions li li this list is not exhaustive or limitative li ul end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment quick fail if this is not a valid os for the command end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is valid os end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name saved dir end_name begin_init begin_expr begin_name dir end_name end_expr end_init end_decl end_decl_stmt begin_comment possibly altered in prepare exec end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name resolve executable end_name begin_argument_list begin_argument begin_expr begin_name executable end_name end_expr end_argument begin_argument begin_expr begin_name search path end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check configuration end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name run exec end_name begin_argument_list begin_argument begin_expr begin_call begin_name prepare exec end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_name dir end_name begin_operator EQ end_operator begin_name saved dir end_name end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment optional file to save stdout to param output the file to save stdout to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name output end_name end_name begin_operator EQ end_operator begin_name output end_name end_expr end_expr_stmt end_block 
 begin_comment gets the url return returns a string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get url end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name url end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment execute target setup end_comment begin_comment commented out for performance while target is empty end_comment end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filesmatch different eol end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment tries to load kaffe rmic and falls back to the older class name if necessary return null if neither class can get loaded end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name class end_name end_type begin_name get rmic class end_name begin_parameter_list end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name rmic classnames end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_try begin_block begin_return begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name rmic classnames end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name cnfe end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_comment see build listener message logged end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name message logged end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name initialized end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name category object end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get task end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name category string end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name category detail end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name category object end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name category object end_name begin_operator EQ end_operator begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name category object end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name category object end_name begin_operator EQ end_operator begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name category string end_name begin_operator EQ end_operator begin_name project log end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name category detail end_name begin_operator EQ end_operator begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name category string end_name begin_operator EQ end_operator begin_name target log end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name category detail end_name begin_operator EQ end_operator begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_comment it s a task append the target end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name category string end_name begin_operator EQ end_operator begin_call begin_name begin_name category object end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name category detail end_name begin_operator EQ end_operator begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name category string end_name begin_operator EQ end_operator begin_call begin_name begin_name category object end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name log end_name end_type begin_name log end_name begin_init begin_expr begin_call begin_name get log end_name begin_argument_list begin_argument begin_expr begin_name category string end_name end_expr end_argument begin_argument begin_expr begin_name category detail end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name priority end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get priority end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name real log end_name begin_argument_list begin_argument begin_expr begin_name log end_name end_expr end_argument begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name priority end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment if set to true puts in markers for all changes conflicting or not param markersforall flag true or false end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set markersforall end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name markersforall end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name markersforall end_name end_name begin_operator EQ end_operator begin_name markersforall end_name end_expr end_expr_stmt end_block 
 begin_comment return the version of java this class is running under return the version of java as a string e g 1 1 see org apache tools ant util java env utils get java version deprecated since 1 5 x use org apache tools ant util java env utils instead end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get java version end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get java version end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment bugzilla report 32973 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test batch test fork once extension end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert result files exist end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment does this filter want to block edits on the last character returned by read end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name edits blocked end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name in end_name begin_operator UNP end_operator begin_name simple filter reader end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name simple filter reader end_name begin_operator RPAR end_operator begin_name in end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name edits blocked end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test special signs in html path end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name report file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment tests one the file object end_comment begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report file end_name begin_operator DOT end_operator begin_name can read end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report file end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment conversion to url via file utils like in xml result aggregator not as suggested in the bug report end_comment begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name report url end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file utils end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to uri end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name report file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name report stream end_name begin_init begin_expr begin_call begin_name begin_name report url end_name begin_operator DOT end_operator begin_name open stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report stream end_name begin_operator DOT end_operator begin_name available end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment executes the target verify output matches expectations and that we got the named error at the end param target target to execute param output output to look for param error description of parameter end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name expect output and error end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name error end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name real output end_name begin_init begin_expr begin_call begin_name get output end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument begin_argument begin_expr begin_name real output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name real error end_name begin_init begin_expr begin_call begin_name get error end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name error end_name end_expr end_argument begin_argument begin_expr begin_name real error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment non public method callable only by derived classes that implement set as of date so that derived tasks that do not accept this parameter will fail if user attempts to use it param as of date as of date entered by user since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set as of date end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name as of date end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name as of date end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name as of date end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name as of date end_name end_name begin_operator EQ end_operator begin_name as of date end_name end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment returns a classloader object which parses the passed in generic ejb jar classpath the loader is used to dynamically load classes from javax ejb and the classes being added to the jar return a classloader end_comment begin_type begin_specifier end_specifier begin_name class loader end_name end_type begin_name get class loader for build end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name classpath loader end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name classpath loader end_name end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name combined classpath end_name begin_init begin_expr begin_call begin_name get combined classpath end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment only generate a new class loader if we have a classpath end_comment begin_if begin_condition begin_expr begin_name combined classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name classpath loader end_name begin_operator EQ end_operator begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class loader end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name classpath loader end_name begin_operator EQ end_operator begin_call begin_name get task end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create class loader end_name begin_argument_list begin_argument begin_expr begin_name combined classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_return begin_expr begin_name classpath loader end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set log file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name log file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name log file end_name end_name begin_operator EQ end_operator begin_name log file end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name log file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has more elements end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name string end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name resources end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name mode end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_name resources end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name each end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name mode end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name all end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name mode end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name mode end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_if begin_condition begin_expr begin_name trim end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_else end_if end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_else end_if end_block 
 begin_comment the signature name to check jarfile for param name signature to look for end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name is signed end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment always returns true return true indicating that all elements will be file resources since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is filesystem only end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert file is present end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name f end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the vendor specific name of the jar that will be output the modification date of this jar will be checked against the dependent bean classes end_comment begin_type begin_name file end_name end_type begin_name get vendor output jar file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name base name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get dest dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name base name end_name begin_operator PLUS end_operator begin_name jar suffix end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment adds a nested code lt dirset gt code element param dset a code dir set code to be added to the path throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add dirset end_name begin_parameter_list begin_param begin_decl begin_type begin_name dir set end_name end_type begin_name dset end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name dset end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name dset end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name dset end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the date at which the changelog should start param start the date at which the changelog should start end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set start end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name date end_name end_type begin_name start end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name start date end_name end_name begin_operator EQ end_operator begin_name start end_name end_expr end_expr_stmt end_block 
 begin_comment start a new data type handler if element is known to be a data type and a task handler otherwise p factored out of target handler p since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name handle element end_name begin_parameter_list begin_param begin_decl begin_type begin_name project helper impl end_name end_type begin_name helper impl end_name end_decl end_param begin_param begin_decl begin_type begin_name document handler end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name target end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name element name end_name end_decl end_param begin_param begin_decl begin_type begin_name attribute list end_name end_type begin_name attrs end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax parse exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name element name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name description handler end_name begin_argument_list begin_argument begin_expr begin_name helper impl end_name end_expr end_argument begin_argument begin_expr begin_name parent end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name helper impl end_name begin_operator DOT end_operator begin_name project end_name begin_operator DOT end_operator begin_name get data type definitions end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get end_name begin_argument_list begin_argument begin_expr begin_name element name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name data type handler end_name begin_argument_list begin_argument begin_expr begin_name helper impl end_name end_expr end_argument begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name init end_name begin_argument_list begin_argument begin_expr begin_name element name end_name end_expr end_argument begin_argument begin_expr begin_name attrs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name task handler end_name begin_argument_list begin_argument begin_expr begin_name helper impl end_name end_expr end_argument begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name target end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name init end_name begin_argument_list begin_argument begin_expr begin_name element name end_name end_expr end_argument begin_argument begin_expr begin_name attrs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block 
 begin_comment add the assertions to a list in a format suitable for adding to a command line param command iterator list of commands end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name apply assertions end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name list iterator end_name end_type begin_name command iterator end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name assertions end_name end_type begin_name clause end_name begin_init begin_expr begin_call begin_name get final reference end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment do the system assertions end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name clause end_name begin_operator DOT end_operator begin_name enable system assertions end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command iterator end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name clause end_name begin_operator DOT end_operator begin_name enable system assertions end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command iterator end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_comment now any inner assertions end_comment begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name it end_name begin_init begin_expr begin_call begin_name begin_name clause end_name begin_operator DOT end_operator begin_name assertion list end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name base assertion end_name end_type begin_name assertion end_name begin_init begin_expr begin_operator LPAR end_operator begin_name base assertion end_name begin_operator RPAR end_operator begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name arg end_name begin_init begin_expr begin_call begin_name begin_name assertion end_name begin_operator DOT end_operator begin_name to command end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name arg end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command iterator end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name arg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_comment this method is of interest for testing purposes the returned set is live and should not be modified return the set of relative directory names that have been scanned end_comment begin_comment package private end_comment begin_type begin_name set end_name end_type begin_name get scanned dirs end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name scanned dirs end_name end_expr end_return end_block 
 begin_comment test create temp file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test create temp file end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name parent end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name tmp 1 end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name create temp file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name parent end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name tmp 1 end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name tmp 1 end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name tmp 1 end_name begin_operator DOT end_operator begin_name get parent end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name tmp 2 end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name create temp file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name parent end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name tmp 1 end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name tmp 2 end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment null parent dir end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name tmp 3 end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name create temp file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name tmploc end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name tmploc end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name tmp 3 end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name tmp 3 end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return an input stream for reading the contents of this resource return an input stream object throws io exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name input stream end_name end_type begin_name get input stream end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get input stream end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name get not null file end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment param flags the regex flags end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set flags end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name flags end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name flags end_name end_name begin_operator EQ end_operator begin_name flags end_name end_expr end_expr_stmt end_block 
 begin_comment specify binary or text style string comparisons defaults to binary param option compare the option compare style text binary end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set option compare end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name option compare end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name option compare end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name option compare end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name option compare end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment log a message with the specified logging level param message the code string code message param loglevel the code int code logging level end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name loglevel end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name managing pc end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name managing pc end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name loglevel end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name loglevel end_name begin_operator GT end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if end_block 
 begin_comment catalogfiles fileset should be ignored if resolver jar is not present but will be used if it is either way test should work b c we have a nested dtd with the same entity end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test xml catalog files end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 13 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment identify a file that contains this namespace s schema the file must exist param file the file contains the schema end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block 
 begin_comment constructor for descriptor handler param task the task that owns this desciptor param src dir the source directory end_comment begin_specifier end_specifier begin_name descriptor handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name task end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name src dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name owning task end_name end_name begin_operator EQ end_operator begin_name task end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name src dir end_name end_name begin_operator EQ end_operator begin_name src dir end_name end_expr end_expr_stmt end_block 
 begin_comment creates a new prefix lines filter using the passed in reader for instantiation param rdr a reader object providing the underlying stream must not be code null code return a new filter based on this configuration but filtering the specified reader end_comment begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name chain end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name rdr end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name prefix lines end_name end_type begin_name new filter end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name prefix lines end_name begin_argument_list begin_argument begin_expr begin_name rdr end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new filter end_name begin_operator DOT end_operator begin_name set prefix end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get prefix end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new filter end_name begin_operator DOT end_operator begin_name set initialized end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name new filter end_name end_expr end_return end_block 
 begin_comment for test only ignore tests where we arent work at the moment public static junit framework test suite junit framework test suite suite new junit framework test suite suite add test new modified selector test test validate wrong cache return suite end_comment begin_comment testcases for the attributes and nested elements of the selector end_comment begin_comment test right use of cache names end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test validate wrong cache end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name modified selector end_name begin_operator DOT end_operator begin_name cache name end_name end_name end_type begin_name cache name end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name modified selector end_name begin_operator DOT end_operator begin_name cache name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cache name end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment get the central data length if there is no central data get the local file data length return the central data length end_comment begin_type begin_specifier end_specifier begin_name zip short end_name end_type begin_name get central directory length end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name central data end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name zip short end_name begin_argument_list begin_argument begin_expr begin_name begin_name central data end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name get local file data length end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment command line entry point this method kicks off the building of a project object and executes a build using either a given target or the default target param args command line arguments must not be code null code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name start end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment builds the compilation classpath return the classpath end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name get compile classpath end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment add dest dir to classpath so that previously compiled and end_comment begin_comment untouched classes are on classpath end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get base end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment combine the build classpath with the system classpath in an end_comment begin_comment order determined by the value of build sysclasspath end_comment begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name cp end_name begin_init begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get classpath end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name cp end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name cp end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get includeantruntime end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name add existing end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cp end_name begin_operator DOT end_operator begin_name concat system classpath end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name add existing end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cp end_name begin_operator DOT end_operator begin_name concat system classpath end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get includejavaruntime end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name add java runtime end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name classpath end_name end_expr end_return end_block 
 begin_comment ends the tar archive without closing the underlying output stream the result is that the two eof records of nulls are written throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name finish end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment see bugzilla 28776 for a discussion on this end_comment begin_comment http issues apache org bugzilla show bug cgi id 28776 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name write eof record end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name write eof record end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the dir mode deprecated since 1 7 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get dir mode end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name dir mode end_name end_expr end_return end_block 
 begin_comment set whether system properties will be copied to the cloned vm as well as the bootclasspath unless you have explicitly specified a bootclasspath param clone vm if true copy the system properties since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set clone vm end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name clone vm end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name clone vm end_name end_name begin_operator EQ end_operator begin_name clone vm end_name end_expr end_expr_stmt end_block 
 begin_comment create a nested path element return a path to be used by ant reflection end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create path end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test real test end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name test real test end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment provides a reference to the regexp contained in this param p project return regexp instance associated with this regular expression instance end_comment begin_type begin_specifier end_specifier begin_name regexp end_name end_type begin_name get regexp end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name init end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get regexp end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name set pattern end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name regexp end_name end_name end_expr end_return end_block 
 begin_comment return a code file code from the specified set of filenames param name code string code return code file code end_comment begin_type begin_specifier end_specifier begin_name file end_name begin_index end_index end_type begin_name to file array end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment remove any null elements end_comment begin_decl_stmt begin_decl begin_type begin_name array list end_name end_type begin_name list end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list begin_argument begin_expr begin_name begin_name name end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name name end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name name end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name list end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name begin_name name end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_return begin_expr begin_operator LPAR end_operator begin_name begin_name file end_name begin_index end_index end_name begin_operator RPAR end_operator begin_operator LPAR end_operator begin_call begin_name begin_name list end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name file end_name begin_index begin_expr begin_call begin_name begin_name list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment add any vendor specific files which should be included in the ejb jar param ejb files the map to add the files to param dd prefix the prefix to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add vendor files end_name begin_parameter_list begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name ejb files end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name dd prefix end_name end_decl end_param end_parameter_list begin_block begin_comment choose the right vendor dd end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name version end_name begin_operator EQT end_operator begin_name bes end_name begin_operator UNP end_operator begin_name version end_name begin_operator EQT end_operator begin_name bas end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name version end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name dd end_name begin_init begin_expr begin_operator LPAR end_operator begin_name version end_name begin_operator EQT end_operator begin_name bes end_name begin_operator QM end_operator begin_name bes dd end_name begin_operator DP end_operator begin_name bas dd end_name begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name dd prefix end_name begin_operator PLUS end_operator begin_name dd end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name borland dd end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get config end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name descriptor dir end_name end_expr end_argument begin_argument begin_expr begin_name dd prefix end_name begin_operator PLUS end_operator begin_name dd end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name borland dd end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name borland dd end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ejb files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name meta dir end_name begin_operator PLUS end_operator begin_name dd end_name end_expr end_argument begin_argument begin_expr begin_name borland dd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name borland dd end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_else end_if end_block 
 begin_comment executes the build if the constructor for this instance failed e g returned after issuing a warning this method returns immediately param core loader the classloader to use to find core classes may be code null code in which case the system classloader is used exception build exception if the build fails end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run build end_name begin_parameter_list begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name core loader end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name ready to run end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name project end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set core loader end_name end_name begin_argument_list begin_argument begin_expr begin_name core loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name error end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name add build listeners end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add input handler end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name print stream end_name end_type begin_name saved err end_name begin_init begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name print stream end_name end_type begin_name saved out end_name begin_init begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name saved in end_name begin_init begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name in end_name end_name end_expr end_init end_decl end_decl_stmt begin_comment use a system manager that prevents from system exit end_comment begin_decl_stmt begin_decl begin_type begin_name security manager end_name end_type begin_name oldsm end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name oldsm end_name begin_operator EQ end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get security manager end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment security manager can not be installed here for backwards end_comment begin_comment compatibility reasons pd needs to be loaded prior to end_comment begin_comment ant class if we are going to implement it end_comment begin_comment system set security manager new no exit security manager end_comment begin_try begin_block begin_if begin_condition begin_expr begin_name allow input end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set default input stream end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name in end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set in end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name demux input stream end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set out end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name demux output stream end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set err end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name demux output stream end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name project help end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name fire build started end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment set the thread priorities end_comment begin_if begin_condition begin_expr begin_name thread priority end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name thread priority end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name current thread end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set priority end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name thread priority end_name begin_operator DOT end_operator begin_name int value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name security exception end_name end_type begin_name swallowed end_name end_decl end_param end_parameter_list begin_block begin_comment we cannot set the priority here end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name init end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment set user define properties end_comment begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name defined props end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name defined props end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name arg end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set user property end_name end_name begin_argument_list begin_argument begin_expr begin_name arg end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set user property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant file end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name build file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set keep going mode end_name end_name begin_argument_list begin_argument begin_expr begin_name keep going mode end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name proxy end_name end_expr end_condition begin_then begin_block begin_comment proxy setup if enabled end_comment begin_decl_stmt begin_decl begin_type begin_name proxy setup end_name end_type begin_name proxy setup end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name proxy setup end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name enable proxies end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name configure project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name build file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name project help end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name print description end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name print targets end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name msg output level end_name begin_operator GT end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_comment make sure that we have a target to execute end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name targets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get default target end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name targets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get default target end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name execute targets end_name end_name begin_argument_list begin_argument begin_expr begin_name targets end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_comment put back the original security manager end_comment begin_comment the following will never eval to true pd end_comment begin_if begin_condition begin_expr begin_name oldsm end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set security manager end_name end_name begin_argument_list begin_argument begin_expr begin_name oldsm end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set out end_name end_name begin_argument_list begin_argument begin_expr begin_name saved out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set err end_name end_name begin_argument_list begin_argument begin_expr begin_name saved err end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set in end_name end_name begin_argument_list begin_argument begin_expr begin_name saved in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name runtime exception end_name end_type begin_name exc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name error end_name begin_operator EQ end_operator begin_name exc end_name end_expr end_expr_stmt begin_throw begin_expr begin_name exc end_name end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name error end_name begin_operator EQ end_operator begin_name e end_name end_expr end_expr_stmt begin_throw begin_expr begin_name e end_name end_expr end_throw end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name project help end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name fire build finished end_name end_name begin_argument_list begin_argument begin_expr begin_name error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name error end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name error end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_block end_finally end_try end_block 
 begin_comment get out file return string containing the path to the out file end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get out end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m out end_name end_expr end_return end_block 
 begin_comment get the implicit target return implicit target end_comment begin_type begin_specifier end_specifier begin_name target end_name end_type begin_name get implicit target end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name implicit target end_name end_expr end_return end_block 
 begin_comment define a class given its bytes param container the container from which the class data has been read may be a directory or a jar zip file param class data the bytecode data for the class param classname the name of the class return the class instance created from the given data throws io exception if the class data cannot be read end_comment begin_type begin_specifier end_specifier begin_name class end_name end_type begin_name define class from data end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name container end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name class data end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name define package end_name begin_argument_list begin_argument begin_expr begin_name container end_name end_expr end_argument begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment xxx should instead make a new protection domain with a code source end_comment begin_comment corresponding to container to uri to url and the same end_comment begin_comment permission collection as project class protection domain had end_comment begin_return begin_expr begin_call begin_name define class end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument begin_argument begin_expr begin_name class data end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name class data end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get protection domain end_name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment sets the date the user must supply it in mm dd yyyy hh mm am pm format unless an alternate pattern is specified via the pattern attribute param date time a formatted date code string code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set datetime end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name date time end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name date time end_name end_name begin_operator EQ end_operator begin_name date time end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name millis end_name begin_operator EQ end_operator begin_operator MINUS end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the no cache flag return the nocache flag if the attribute was true otherwise an empty string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get no cache end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name no cache end_name begin_operator QM end_operator begin_name flag no cache end_name begin_operator DP end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name attach end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name can read end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file input stream end_name end_type begin_name finstr end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name buffered input stream end_name end_type begin_name in end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_name finstr end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name uu encoder end_name end_type begin_name encoder end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name uu encoder end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name encoder end_name begin_operator DOT end_operator begin_name encode end_name end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name finstr end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment the j unit setup method throws exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name project end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_name void end_name end_type begin_name send data end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name begin_index end_index end_type begin_name ok end_name begin_init begin_expr begin_block begin_expr begin_name ok data end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name send end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name ok end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the list of characters to delete param delete chars the list of characters end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set chars end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name delete chars end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name delete chars end_name end_name begin_operator EQ end_operator begin_call begin_name resolve back slash end_name begin_argument_list begin_argument begin_expr begin_name delete chars end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns all arguments defined by code add line code code add value code or the argument object return the arguments as an array of strings end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get arguments end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add arguments to list end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name list iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name res end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator LPAR end_operator begin_name begin_name string end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment the j unit setup method end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment fulfill the resource collection contract the iterator returned will throw concurrent modification exceptions if resource collections are added to this container while the iterator is in use return a fail fast iterator end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name iterator end_name end_type begin_name iterator end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name path end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name die on circular reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name union end_name begin_operator EQT end_operator begin_operator QM end_operator begin_name empty iterator end_name begin_operator DP end_operator begin_call begin_name assert filesystem only end_name begin_argument_list begin_argument begin_expr begin_name union end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment get the name of the apt executable return the name of the executable end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get apt executable end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get jdk executable end_name end_name begin_argument_list begin_argument begin_expr begin_name executable name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment set baseline root name param baseline root name the name of the baseline end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set baseline root name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name baseline root name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m baseline root name end_name begin_operator EQ end_operator begin_name baseline root name end_name end_expr end_expr_stmt end_block 
 begin_comment append one enumeration to another elements are evaluated lazily param e 1 the first enumeration param e 2 the subsequent enumeration return an enumeration representing e 1 followed by e 2 since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name enumeration end_name end_type begin_name append end_name begin_parameter_list begin_param begin_decl begin_type begin_name enumeration end_name end_type begin_name e 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name enumeration end_name end_type begin_name e 2 end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name compound enumeration end_name begin_argument_list begin_argument begin_expr begin_name e 1 end_name end_expr end_argument begin_argument begin_expr begin_name e 2 end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start test end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name test listener end_name begin_operator DOT end_operator begin_name start test end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has next end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name result end_name begin_init begin_expr begin_name ri end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name ri end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator UNP end_operator begin_name result end_name begin_operator UNP end_operator begin_call begin_name begin_name rci end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name ri end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource collection end_name begin_operator RPAR end_operator begin_call begin_name begin_name rci end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name begin_name ri end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_type begin_name assertion failed error end_name end_type begin_name get error end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name error end_name end_expr end_return end_block 
 begin_comment set the name of the error property param error property the name of the property to set if the test has an error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set error property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name error property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name error property end_name end_name begin_operator EQ end_operator begin_name error property end_name end_expr end_expr_stmt end_block 
 begin_comment set the input to use for the task param input name of the input file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set input end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name input end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name input string end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name input end_name end_name begin_operator EQ end_operator begin_name input end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name incompatible with spawn end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the number of times that the looked for message was sent to the log end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get match count end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name integer end_name end_type begin_name mcnt end_name begin_init begin_expr begin_operator LPAR end_operator begin_name integer end_name begin_operator RPAR end_operator begin_call begin_name begin_name search map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name mcnt end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name mcnt end_name begin_operator DOT end_operator begin_name int value end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment executes the real object if it s a task if it s not a task e g a data type then this method does nothing end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name real thing end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment plain impossible to get here maybe configure should end_comment begin_comment have thrown an exception end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name element name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name real thing end_name begin_operator UNP end_operator begin_name task end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_name real thing end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name execute end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment finished executing the task null it to allow end_comment begin_comment gc do its job end_comment begin_comment if this ue is used again a new realthing will be made end_comment begin_expr_stmt begin_expr begin_name real thing end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get wrapper end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set proxy end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment determines the output java file to be generated by the given grammar file end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get output java file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name outputdir end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name srcfile end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path end_name begin_init begin_expr begin_call begin_name begin_name srcfile end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment extract file s base name end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name start basename end_name begin_init begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name start basename end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name path end_name begin_operator EQ end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name start basename end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment replace the file s extension with java end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name start extn end_name begin_init begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name start extn end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name path end_name begin_operator EQ end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name start extn end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name path end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_else end_if begin_comment change the directory end_comment begin_if begin_condition begin_expr begin_name outputdir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name path end_name begin_operator EQ end_operator begin_name outputdir end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_name path end_name end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment starts a process defined by the command line ant will not wait for this process nor log its output throws java io io exception the exception is thrown if launching of the subprocess failed since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name spawn end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name working directory end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name working directory end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name working directory end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name process end_name end_type begin_name process end_name begin_init begin_expr begin_call begin_name launch end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get commandline end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get environment end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name working directory end_name end_expr end_argument begin_argument begin_expr begin_name use vm launcher end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name sleep end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name output stream end_name end_type begin_name dummy out end_name begin_init begin_expr begin_operator UNP end_operator begin_class begin_super begin_name output stream end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block end_block end_function end_block end_class end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name execute stream handler end_name end_type begin_name handler end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name pump stream handler end_name begin_argument_list begin_argument begin_expr begin_name dummy out end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name set process error stream end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name process end_name begin_operator DOT end_operator begin_name get error stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name set process output stream end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name process end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name process end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name close end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name process end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name category string end_name begin_init begin_expr begin_name project log end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name log end_name end_type begin_name log end_name begin_init begin_expr begin_call begin_name get log end_name begin_argument_list begin_argument begin_expr begin_name category string end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name initialized end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name real log end_name begin_argument_list begin_argument begin_expr begin_name log end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment convert the generic options to the regex compiler specific options param options the generic options return the specific options end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get compiler options end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name options end_name end_decl end_param end_parameter_list begin_block begin_comment be strict about line separator end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name c options end_name begin_init begin_expr begin_name begin_name pattern end_name begin_operator DOT end_operator begin_name unix lines end_name end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name regexp util end_name begin_operator DOT end_operator begin_name has flag end_name end_name begin_argument_list begin_argument begin_expr begin_name options end_name end_expr end_argument begin_argument begin_expr begin_name match case insensitive end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name c options end_name begin_operator UNP end_operator begin_name begin_name pattern end_name begin_operator DOT end_operator begin_name case insensitive end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name regexp util end_name begin_operator DOT end_operator begin_name has flag end_name end_name begin_argument_list begin_argument begin_expr begin_name options end_name end_expr end_argument begin_argument begin_expr begin_name match multiline end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name c options end_name begin_operator UNP end_operator begin_name begin_name pattern end_name begin_operator DOT end_operator begin_name multiline end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name regexp util end_name begin_operator DOT end_operator begin_name has flag end_name end_name begin_argument_list begin_argument begin_expr begin_name options end_name end_expr end_argument begin_argument begin_expr begin_name match singleline end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name c options end_name begin_operator UNP end_operator begin_name begin_name pattern end_name begin_operator DOT end_operator begin_name dotall end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name c options end_name end_expr end_return end_block 
 begin_comment process a line of stdout stderr coming from perforce param line line of stdout or stderr coming from perforce end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name process end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set property end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment this type of output might happen end_comment begin_comment change 18 renamed change 20 and submitted end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name util end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name myarray end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name util end_name begin_operator DOT end_operator begin_name split end_name end_name begin_argument_list begin_argument begin_expr begin_name myarray end_name end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name found end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name counter end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name counter end_name begin_operator LT end_operator begin_call begin_name begin_name myarray end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name counter end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name found end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name chnum end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name myarray end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name counter end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name changenumber end_name begin_init begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name chnum end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name changenumber end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set property end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_name changenumber end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name change property end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set new property end_name begin_argument_list begin_argument begin_expr begin_name change property end_name end_expr end_argument begin_argument begin_expr begin_name chnum end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name found end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_call begin_name begin_name myarray end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name counter end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name found end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_comment number format exception or array out of bonds exception could happen here end_comment end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_name line end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name util end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set property end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name needs resolve property end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set new property end_name begin_argument_list begin_argument begin_expr begin_name needs resolve property end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name bs put int end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name u end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name bs w end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name u end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name bs w end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name u end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name bs w end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name u end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name bs w end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name u end_name begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the version return if it was set null if not end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get version end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name version end_name end_expr end_return end_block 
 begin_comment get the attribute s name return the attribute s name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_comment get the list of class files we are going to analyse param class locations a path structure containing all the directories where classes can be found return a vector containing the classes to analyse end_comment begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name get class files end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name class locations end_name end_decl end_param end_parameter_list begin_block begin_comment break the class locations into its components end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name class locations list end_name begin_init begin_expr begin_call begin_name begin_name class locations end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name class file list end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name class locations list end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dir end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name class locations list end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add class files end_name begin_argument_list begin_argument begin_expr begin_name class file list end_name end_expr end_argument begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_return begin_expr begin_name class file list end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set cmp end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name cmp end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name cmp end_name end_name begin_operator EQ end_operator begin_name cmp end_name end_expr end_expr_stmt end_block 
 begin_comment inline manifest ok since classpath entries can be duplicated end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 14 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name manifest exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name manifest end_name end_type begin_name manifest end_name begin_init begin_expr begin_call begin_name get manifest end_name begin_argument_list begin_argument begin_expr begin_name expanded manifest end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name section end_name end_name end_type begin_name main section end_name begin_init begin_expr begin_call begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name get main section end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name classpath end_name begin_init begin_expr begin_call begin_name begin_name main section end_name begin_operator DOT end_operator begin_name get attribute value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the path components of this directory return the path components as an array of strings end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get path end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get path end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment sets the implicit target param target the implicit target end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set implicit target end_name begin_parameter_list begin_param begin_decl begin_type begin_name target end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name implicit target end_name end_name begin_operator EQ end_operator begin_name target end_name end_expr end_expr_stmt end_block 
 begin_comment the value of the property param value value to assign ant attribute group name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment close logfiles if we have been writing to them since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name handle logfile end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name is log file used end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name err end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment adds the text as description to the project param buf a character array of the text within the element will not be code null code param start the start element in the array param count the number of characters to read from the array end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name characters end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name char end_name begin_index end_index end_name end_type begin_name buf end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name start end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name count end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name text end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr begin_name start end_name end_expr end_argument begin_argument begin_expr begin_name count end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name current description end_name begin_init begin_expr begin_call begin_name begin_name helper impl end_name begin_operator DOT end_operator begin_name project end_name begin_operator DOT end_operator begin_name get description end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name current description end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper impl end_name begin_operator DOT end_operator begin_name project end_name begin_operator DOT end_operator begin_name set description end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper impl end_name begin_operator DOT end_operator begin_name project end_name begin_operator DOT end_operator begin_name set description end_name end_name begin_argument_list begin_argument begin_expr begin_name current description end_name begin_operator PLUS end_operator begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment end_comment begin_comment helper methods end_comment begin_comment end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has script end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name test end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_catch end_try begin_return begin_expr end_expr end_return end_block 
 begin_specifier end_specifier begin_name assertion test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name next end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name has next end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name no such element exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name ri end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 8 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment construct a dewey decimal from string in dewey decimal format param string the string in dewey decimal format exception number format exception if string is malformed end_comment begin_specifier end_specifier begin_name dewey decimal end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name string end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name number format exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name string end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment executes the task p builds a command line to execute cleartool and then calls exec s run method to execute the command line throws build exception if the command fails and failonerr is set to true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name command line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name a proj end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment default the viewpath to basedir if it is not specified end_comment begin_if begin_condition begin_expr begin_call begin_name get view path end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set view path end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name a proj end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment build the command line from what we got the format is end_comment begin_comment cleartool uncheckout options viewpath end_comment begin_comment as specified in the cleartool exe help end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get clear tool command end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name command uncheckout end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check options end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get fail on err end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get view path basename end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name run end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name is failure end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get fail on err end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment clear out the java arguments end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name clear java args end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name java command end_name begin_operator DOT end_operator begin_name clear args end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment see build listener task finished end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name initialized end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name task end_name end_type begin_name task end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get task end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name real end_name begin_init begin_expr begin_name task end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name task end_name begin_operator UNP end_operator begin_name unknown element end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name real obj end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get task end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name real obj end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name real end_name begin_operator EQ end_operator begin_name real obj end_name end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name log end_name end_type begin_name log end_name begin_init begin_expr begin_call begin_name get log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name real end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is trace enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name real log end_name begin_argument_list begin_argument begin_expr begin_name log end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get task name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name real log end_name begin_argument_list begin_argument begin_expr begin_name log end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get task name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block 
 begin_comment add a single package to be processed if the package name ends with quot quot the javadoc task will find and process all subpackages param pn the package name possibly wildcarded end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add package end_name begin_parameter_list begin_param begin_decl begin_type begin_name package name end_name end_type begin_name pn end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name package names end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name pn end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment perform the replacement on the given file the replacement is performed on a temporary file which then replaces the original file param src the source code file code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name temp end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file input end_name end_type begin_name in end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file output end_name end_type begin_name out end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name in end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file input end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name temp end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name create temp file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file output end_name begin_argument_list begin_argument begin_expr begin_name temp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name rep count start end_name begin_init begin_expr begin_name replace count end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log filter chain end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name set input buffer end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name build filter chain end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name get output buffer end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read chunk end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_if begin_condition begin_expr begin_call begin_name process filter chain end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name process end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while begin_expr_stmt begin_expr begin_call begin_name flush filter chain end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name in end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name changes end_name begin_init begin_expr begin_operator LPAR end_operator begin_name replace count end_name begin_operator UNP end_operator begin_name rep count start end_name begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name changes end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name rename end_name end_name begin_argument_list begin_argument begin_expr begin_name temp end_name end_expr end_argument begin_argument begin_expr begin_name src end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name temp end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name src end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name in end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name close quietly end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name out end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name close quietly end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name temp end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name temp end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name temp end_name begin_operator DOT end_operator begin_name delete on exit end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment ensure that all the required arguments and other conditions have been set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check configuration end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name have group end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name check configuration end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment factory method from base class this is overriden in child classes to return a specific selector class end_comment begin_type begin_specifier end_specifier begin_name base selector end_name end_type begin_name get instance end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name filename selector end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment add an unknown element to be snipped into the macro def instance param nested task an unknown element end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add task end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name nested task end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name unknown elements end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name nested task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_synchronized begin_expr begin_name begin_name output stream funneler end_name begin_operator DOT end_operator begin_name this end_name end_name end_expr begin_block begin_expr_stmt begin_expr begin_call begin_name die if closed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_synchronized end_block 
 begin_comment get the value of release return value of release end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get release end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name release end_name end_expr end_return end_block 
 begin_comment wrapper for file utils read fully additionally it resolves the filename according the the projects basedir and closes the used reader param filename the name of the file to read return the content of the file or i null i if something goes wrong end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name read end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name content end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file reader end_name end_name end_type begin_name rdr end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file reader end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name content end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name read fully end_name end_name begin_argument_list begin_argument begin_expr begin_name rdr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name rdr end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name rdr end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_return begin_expr begin_name content end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test line separator character end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name test line separator character end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name assertion failed error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name date format end_name end_type begin_name get fallback format end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name date format end_name begin_operator DOT end_operator begin_name get date time instance end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name date format end_name begin_operator DOT end_operator begin_name short end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name date format end_name begin_operator DOT end_operator begin_name medium end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test string condition end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment enables the source switch will be ignored if javadoc is not the 1 4 version param source a code string code value since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set source end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name source end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name source end_name end_name begin_operator EQ end_operator begin_name source end_name end_expr end_expr_stmt end_block 
 begin_comment load the script from an external file optional param file name the name of the file containing the script source end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name file name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set src end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name file name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get replace flag status return boolean containing status of replace flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get replace end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m replace end_name end_expr end_return end_block 
 begin_comment no arg constructor end_comment begin_specifier end_specifier begin_name javah end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name facade end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name facade task helper end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name javah adapter factory end_name begin_operator DOT end_operator begin_name get default end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment executes the task p builds a command line to execute cleartool and then calls exec s run method to execute the command line throws build exception if the command fails and failonerr is set to true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name command line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name a proj end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment check for required attributes end_comment begin_if begin_condition begin_expr begin_call begin_name get type name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment default the viewpath to basedir if it is not specified end_comment begin_if begin_condition begin_expr begin_call begin_name get view path end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set view path end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name a proj end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment build the command line from what we got the format is end_comment begin_comment cleartool mklabel options viewpath end_comment begin_comment as specified in the cleartool help end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get clear tool command end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name command mklabel end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check options end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get fail on err end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get view path basename end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name run end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name is failure end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get fail on err end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment pass output sent to system out to the new project param output the output to log should not be code null code since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle flush end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name ant end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ant end_name begin_operator DOT end_operator begin_name handle flush end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name handle flush end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment set this entry s modification time return time this entry s new modification time end_comment begin_type begin_specifier end_specifier begin_name date end_name end_type begin_name get mod time end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name date end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name mod time end_name end_name begin_operator STAR end_operator begin_name millis per second end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment the heart of the matter this is where the selector gets to decide on the inclusion of a resource param r the resource to check return whether the resource is selected end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_comment throw build exception on error end_comment begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name userstr end_name begin_init begin_expr begin_name contains end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name casesensitive end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name userstr end_name begin_operator EQ end_operator begin_call begin_name begin_name contains end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name ignorewhitespace end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name userstr end_name begin_operator EQ end_operator begin_call begin_name begin_name selector utils end_name begin_operator DOT end_operator begin_name remove whitespace end_name end_name begin_argument_list begin_argument begin_expr begin_name userstr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name in end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name in end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name to long string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name teststr end_name begin_init begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name teststr end_name begin_operator UNP end_operator end_expr end_condition begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name casesensitive end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name teststr end_name begin_operator EQ end_operator begin_call begin_name begin_name teststr end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name ignorewhitespace end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name teststr end_name begin_operator EQ end_operator begin_call begin_name begin_name selector utils end_name begin_operator DOT end_operator begin_name remove whitespace end_name end_name begin_argument_list begin_argument begin_expr begin_name teststr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name teststr end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name userstr end_name end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name teststr end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_return begin_expr end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name to long string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment creates a new escape unicode using the passed in reader for instantiation param rdr a reader object providing the underlying stream must not be code null code return a new filter based on this configuration but filtering the specified reader end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name reader end_name end_type begin_name chain end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name rdr end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name escape unicode end_name end_type begin_name new filter end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name escape unicode end_name begin_argument_list begin_argument begin_expr begin_name rdr end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new filter end_name begin_operator DOT end_operator begin_name set initialized end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name new filter end_name end_expr end_return end_block 
 begin_comment set to do a locked checkout optional default is false param v true to do a locked checkout false to checkout without changing status exception build exception if both locked and unlocked are set true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set locked end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name set lock status end_name begin_argument_list begin_argument begin_expr begin_name v end_name end_expr end_argument begin_argument begin_expr begin_name begin_name item end_name begin_operator DOT end_operator begin_name lock type end_name begin_operator DOT end_operator begin_name exclusive end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test classname end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment same as add existing but support classpath behavior if try user dir is true classpaths are relative to user dir not the project base that used to break jspc test param source the source path param try user dir if true try the user directory if the file is not present end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add existing end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name source end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name try user dir end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name list end_name begin_init begin_expr begin_call begin_name begin_name source end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name user dir end_name begin_init begin_expr begin_operator LPAR end_operator begin_name try user dir end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name list end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name list end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment probably not the best choice but it solves the problem of end_comment begin_comment relative paths in classpath end_comment begin_if begin_condition begin_expr begin_name try user dir end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name f end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name user dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name list end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set location end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name f end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test missing file ignore end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create a new retrying handler param retries allowed how many times to retry param task the ant task that is is executed from used for logging only end_comment begin_specifier end_specifier begin_name retry handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name retries allowed end_name end_decl end_param begin_param begin_decl begin_type begin_name task end_name end_type begin_name task end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name retries allowed end_name end_name begin_operator EQ end_operator begin_name retries allowed end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name task end_name end_name begin_operator EQ end_operator begin_name task end_name end_expr end_expr_stmt end_block 
 begin_comment constructor for ccm create task end_comment begin_specifier end_specifier begin_name ccm create task end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set ccm action end_name begin_argument_list begin_argument begin_expr begin_name command create task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment corresponds to code lt ant gt code s nested code lt reference gt code element param r the reference to pass on explicitly to the sub build end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add reference end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name ant end_name begin_operator DOT end_operator begin_name reference end_name end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name references end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set implementation end_name begin_parameter_list begin_param begin_decl begin_type begin_name classname end_name end_type begin_name implementation end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name implementation end_name end_name begin_operator EQ end_operator begin_name implementation end_name end_expr end_expr_stmt end_block 
 begin_comment the name of a socks server set to to turn socks proxying off param host the new socks proxy host value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set socks proxy host end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name host end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name socks proxy host end_name end_name begin_operator EQ end_operator begin_name host end_name end_expr end_expr_stmt end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name ant analyzer end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment fails for default mode end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name do end test 2 end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment verifies that custom props have priority over the originals throws exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test write order end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name tstamp end_name begin_operator DOT end_operator begin_name custom format end_name end_name end_type begin_name format end_name begin_init begin_expr begin_call begin_name begin_name tstamp end_name begin_operator DOT end_operator begin_name create format end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name format end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name format end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name format end_name begin_operator DOT end_operator begin_name set timezone end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name date end_name end_type begin_name date end_name begin_init begin_expr begin_call begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get time end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name format end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name date end_name end_expr end_argument begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name today end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name simple date format end_name end_type begin_name sdf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name simple date format end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sdf end_name begin_operator DOT end_operator begin_name set time zone end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name time zone end_name begin_operator DOT end_operator begin_name get time zone end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name expected end_name begin_init begin_expr begin_call begin_name begin_name sdf end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_name date end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name expected end_name end_expr end_argument begin_argument begin_expr begin_name today end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment param names the output set to fill with the property names matching this property set selection criteria param properties the current project properties passed in to avoid needless duplication of the hashtable during recursion end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add property names end_name begin_parameter_list begin_param begin_decl begin_type begin_name set end_name end_type begin_name names end_name end_decl end_param begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name properties end_name end_decl end_param end_parameter_list begin_block begin_comment add this property set s property names end_comment begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name pty refs end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name property ref end_name end_type begin_name r end_name begin_init begin_expr begin_operator LPAR end_operator begin_name property ref end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name r end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name r end_name begin_operator DOT end_operator begin_name name end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name names end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name r end_name begin_operator DOT end_operator begin_name name end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_name begin_name r end_name begin_operator DOT end_operator begin_name prefix end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name r end_name begin_operator DOT end_operator begin_name prefix end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name names end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block end_then begin_else begin_if begin_condition begin_expr begin_name begin_name r end_name begin_operator DOT end_operator begin_name regex end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name regexp matcher factory end_name end_type begin_name match maker end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name regexp matcher factory end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name regexp matcher end_name end_type begin_name matcher end_name begin_init begin_expr begin_call begin_name begin_name match maker end_name begin_operator DOT end_operator begin_name new regexp matcher end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name matcher end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name r end_name begin_operator DOT end_operator begin_name regex end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name matcher end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name names end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block end_then begin_else begin_if begin_condition begin_expr begin_name begin_name r end_name begin_operator DOT end_operator begin_name builtin end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name builtin end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name builtin property set name end_name begin_operator DOT end_operator begin_name all end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name names end_name begin_operator DOT end_operator begin_name add all end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name key set end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name builtin end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name builtin property set name end_name begin_operator DOT end_operator begin_name system end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name names end_name begin_operator DOT end_operator begin_name add all end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get properties end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name key set end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name builtin end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name builtin property set name end_name begin_operator DOT end_operator begin_name commandline end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name names end_name begin_operator DOT end_operator begin_name add all end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get user properties end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name key set end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_else end_if end_else end_if end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_else end_if end_else end_if end_else end_if end_block end_for end_block 
 begin_comment returns the part of the given string that matches the in the quot from quot pattern param name the source file name return the variable part of the name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name extract variable part end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name prefix length end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name postfix length end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment returns this reference object s referent if this reference object has been cleared then this method returns code null code return the object to which this reference refers or code null code if this reference object has been cleared end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name get end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name weakref end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment load processor here instead of in set processor this will be called from within execute so we have access to the latest classpath param proc the name of the processor to load exception exception if the processor cannot be loaded end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name resolve processor end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name proc end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name proc end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name processor trax end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name classname end_name begin_operator EQ end_operator begin_name trax liaison class end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment anything else is a classname end_comment begin_expr_stmt begin_expr begin_name classname end_name begin_operator EQ end_operator begin_name proc end_name end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name clazz end_name begin_init begin_expr begin_call begin_name load class end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name liaison end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name xslt liaison end_name begin_operator RPAR end_operator begin_call begin_name begin_name clazz end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment override the name of the executable normally ildasm or set its full path do not set a relative path as the ugly hacks needed to create resource files in the dest directory force us to change to this directory before running the application i e use lt property location gt to create an absolute path from a relative one before setting this value param executable the name of the executable to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set executable end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name executable end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name executable end_name end_name begin_operator EQ end_operator begin_name executable end_name end_expr end_expr_stmt end_block 
 begin_comment process one line of stderr stdout if error conditions are detected then setters are called on the parent param line line of output throws build exception does not throw exceptions any more end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name util end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_comment throw exception on errors except up to date end_comment begin_comment end_comment begin_comment when a server is down the code expects end_comment begin_comment perforce client error end_comment begin_comment connect to server failed check p 4 port end_comment begin_comment tcp connect to localhost 1666 failed end_comment begin_comment connect localhost 1666 connection refused end_comment begin_comment some forms producing commands p 4 s change o do tag the output end_comment begin_comment others don t end_comment begin_comment others mark errors as info for example edit a file end_comment begin_comment which is already open for edit end_comment begin_comment just look for error catches most things end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name util end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name util end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment when running labelsync if view elements are in sync end_comment begin_comment perforce produces a line of output end_comment begin_comment looking like this one end_comment begin_comment error depot file 2 label in sync end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name util end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name util end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name set in error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment sync says error when a file is up to date end_comment begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name util end_name begin_operator DOT end_operator begin_name substitute end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name util end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment sometimes there s info 1 end_comment begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name util end_name begin_operator DOT end_operator begin_name substitute end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name get in error end_name end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name begin_operator DP end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name get in error end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name set error message end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name get error message end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_name line end_name begin_operator PLUS end_operator begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment ignore path elements which are invalid end_comment begin_comment relative to the project end_comment begin_comment set the parent for this class loader this is the class loader to which this class loader will delegate to load classes param parent the parent class loader end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set parent end_name begin_parameter_list begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name parent end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name parent end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name parent end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name ant class loader end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get class loader end_name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name parent end_name end_name begin_operator EQ end_operator begin_name parent end_name end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test unix line separator end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment deprecated since 1 5 x set src string is deprecated and is replaced with set src file to make ant s introspection mechanism do the work and also to encapsulate operations on the type in its own class ant attribute ignore true param src a code string code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set src end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get name of the project in the pvcs repository return vector end_comment begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name get pvcsprojects end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name pvcs projects end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the code recursion code attribute which tells ant star team check out whether to search subfolders when checking out files return whether to search subfolders when checking out files see set recursion boolean end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get recursion end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name recursion end_name end_expr end_return end_block 
 begin_comment construct a new file resource iterator relative to the specified base directory param f the base directory of this instance end_comment begin_specifier end_specifier begin_name file resource iterator end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name basedir end_name begin_operator EQ end_operator begin_name f end_name end_expr end_expr_stmt end_block 
 begin_comment tests the combination of the newer parameter and the server timezone config parameter in the put action the default configuration is an ftp server on localhost which formats timestamps as gmt end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test timezone put end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name count log listener end_name end_type begin_name log end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name count log listener end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add build listener end_name begin_argument_list begin_argument begin_expr begin_name log end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name get count end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment implements base class abstract function to define tests for any preconditons required by the task exception build exception thrown if both root local folder and view root local folder are defined end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test preconditions end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name is using revision label end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name create dirs end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name create dirs end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name lock status end_name begin_operator UNP end_operator begin_name begin_name item end_name begin_operator DOT end_operator begin_name lock type end_name begin_operator DOT end_operator begin_name unchanged end_name end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name lock status bad end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get label end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name lock status bad end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get as of date end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name lock status bad end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_if begin_condition begin_expr begin_name lock status bad end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get label end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name get as of date end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name set two end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment configure a fileset based on this fileset if the fileset is a tar file set copy in the tarfileset specific attributes param zfs the archive fileset to configure end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name configure file set end_name begin_parameter_list begin_param begin_decl begin_type begin_name archive file set end_name end_type begin_name zfs end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name configure file set end_name end_name begin_argument_list begin_argument begin_expr begin_name zfs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name zfs end_name begin_operator UNP end_operator begin_name tar file set end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name tar file set end_name end_type begin_name tfs end_name begin_init begin_expr begin_operator LPAR end_operator begin_name tar file set end_name begin_operator RPAR end_operator begin_name zfs end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tfs end_name begin_operator DOT end_operator begin_name set user name end_name end_name begin_argument_list begin_argument begin_expr begin_name user name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tfs end_name begin_operator DOT end_operator begin_name set group end_name end_name begin_argument_list begin_argument begin_expr begin_name group name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tfs end_name begin_operator DOT end_operator begin_name set uid end_name end_name begin_argument_list begin_argument begin_expr begin_name uid end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tfs end_name begin_operator DOT end_operator begin_name set gid end_name end_name begin_argument_list begin_argument begin_expr begin_name gid end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment configure the specified code redirector code param redirector code redirector code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name configure end_name begin_parameter_list begin_param begin_decl begin_type begin_name redirector end_name end_type begin_name redirector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure end_name begin_argument_list begin_argument begin_expr begin_name redirector end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the behavior when the destination file exists if set to code true code the stream data will be appended to the existing file otherwise the existing file will be overwritten defaults to code false code param append if true append to the file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set append end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name append end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name append end_name end_name begin_operator EQ end_operator begin_name append end_name end_expr end_expr_stmt end_block 
 begin_comment set max parallel this is not allowed and it always throws a build exception param max ignored ant attribute ignore true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set max parallel end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name max end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task type end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment sets the named header to the given value rfc 822 provides the rules for what text may constitute a header name and value param name name of the header param value contents of the header end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set header end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_comment blindly trust the user doesn t set any invalid headers end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name headers keys end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name headers values end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment indicates if the context class loader methods are available return true if the get and set methods dealing with the context classloader are available end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is context loader available end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment an add configured version of the add method this class used to contain an add method and an add configured mapper method dur to ordering the add method was always called first this add configued method has been added to allow chaining to work correctly param file name mapper a code file name mapper code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured end_name begin_parameter_list begin_param begin_decl begin_type begin_name file name mapper end_name end_type begin_name file name mapper end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name file name mapper end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name close end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name die if closed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_name closed end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment get the parameter s value return the parameter value exception build exception if the value is not set end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get expression end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name expression end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_name expression end_name end_expr end_return end_block 
 begin_comment write a message to the log with the default log level of msg info param message the text to log should not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name msg info end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds a deployment tool for borland server return the deployment tool instance to be configured end_comment begin_type begin_specifier end_specifier begin_name borland deployment tool end_name end_type begin_name create borland end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name borland deployment tool end_name end_type begin_name tool end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name borland deployment tool end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tool end_name begin_operator DOT end_operator begin_name set task end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name deployment tools end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name tool end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name tool end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test maybe configure end_name begin_parameter_list end_parameter_list begin_block begin_comment make sure we do not get a npe end_comment begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the system properties of the command line return the current properties of this java invocation since 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name begin_name commandline java end_name begin_operator DOT end_operator begin_name sys properties end_name end_name end_type begin_name get sys properties end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get command line end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get system properties end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set the source directory of the files to be compiled param src dir name the new src dir value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src dir name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name src dir end_name end_name begin_operator EQ end_operator begin_name src dir name end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convenience method to set this entry s group and user ids param user id this entry s new user id param group id this entry s new group id end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set ids end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name user id end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name group id end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name set user id end_name end_name begin_argument_list begin_argument begin_expr begin_name user id end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name set group id end_name end_name begin_argument_list begin_argument begin_expr begin_name group id end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_name property output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name property end_name end_name begin_operator EQ end_operator begin_name property end_name end_expr end_expr_stmt end_block 
 begin_comment accessor method for target type return the current target option end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get target type end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name target type end_name end_expr end_return end_block 
 begin_comment turn the verbose flag into a parameter for ilasm return null or the appropriate command line string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get verbose parameter end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name verbose end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_return end_block 
 begin_comment pr 38370 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test nested filelist path end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name output end_name end_name begin_operator EQ end_operator begin_name output end_name end_expr end_expr_stmt end_block 
 begin_comment the name of a file to be converted into a url param file the file to be converted end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block 
 begin_comment set the text contents for the macro param text the text to be added to the macro end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add text end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name text end_name end_name begin_operator EQ end_operator begin_name text end_name end_expr end_expr_stmt end_block 
 begin_comment get the argument or null for no argument needed return the doc file parameter to csc end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get doc file parameter end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name doc file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name doc file end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr end_expr end_return end_block end_else end_if end_block 
 begin_comment from attribute is illegal end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 7 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name has warning end_name begin_init begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name error from forbidden end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name has warning end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name class file set test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment find the absolute path return absolute path end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get absolute path end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get curpwd end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment create a full command string from this class throws build exception in case of trouble return the command string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to command end_name begin_parameter_list end_parameter_list begin_block begin_comment catch invalidness end_comment begin_if begin_condition begin_expr begin_call begin_name get package name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name get class name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name command end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_call begin_name get command prefix end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment see if it is a package or a class end_comment begin_if begin_condition begin_expr begin_call begin_name get package name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment packages get a prefix end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get package name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment append the suffix if not there already end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name get class name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment classes just get the classname end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get class name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_return begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment add a code redirector element code to this task param redirector element code redirector element code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured redirector end_name begin_parameter_list begin_param begin_decl begin_type begin_name redirector element end_name end_type begin_name redirector element end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name redirector element end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name redirector element end_name end_name begin_operator EQ end_operator begin_name redirector element end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name incompatible with spawn end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment always returns true return true indicating that all elements will be file resources since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is filesystem only end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name flush end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name output stream end_name end_type begin_name out shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out end_name end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name out shadow end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out shadow end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment check if the attributes are correct param project the current project end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check class end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name check class end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment read from the rexec session until the string we are waiting for is found param s the string to wait on end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name wait for string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name wait for string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a code redirector element code to this task param redirector element code redirector element code since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured redirector end_name begin_parameter_list begin_param begin_decl begin_type begin_name redirector element end_name end_type begin_name redirector element end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name redirector element end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name redirector element end_name end_name begin_operator EQ end_operator begin_name redirector element end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name incompatible with spawn end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test custom token filter end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect file contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test contains regex end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name has regex end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_return end_return end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name contents end_name begin_init begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert string contains end_name begin_argument_list begin_argument begin_expr begin_name contents end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert string not contains end_name begin_argument_list begin_argument begin_expr begin_name contents end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert string contains end_name begin_argument_list begin_argument begin_expr begin_name contents end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if false note errors to the output but keep going param failonerror true or false end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fail on error end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name failonerror end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name my copy end_name begin_operator DOT end_operator begin_name set fail on error end_name end_name begin_argument_list begin_argument begin_expr begin_name failonerror end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment whether the original compression of entries coming from a zip archive should be kept for example when updating an archive default is false param keep if true keep the original compression since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set keep compression end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name keep end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name keep compression end_name begin_operator EQ end_operator begin_name keep end_name end_expr end_expr_stmt end_block 
 begin_comment get overwrite hijacked files status return boolean containing status of overwrite flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get overwrite end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m overwrite end_name end_expr end_return end_block 
 begin_comment if true enables the nowarn option param flag if true enable the nowarn option end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set nowarn end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name flag end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name nowarn end_name end_name begin_operator EQ end_operator begin_name flag end_name end_expr end_expr_stmt end_block 
 begin_comment get the available data that can be read from the current entry in the archive this does not indicate how much data is left in the entire archive only in the current entry this value is determined from the entry s size header field and the amount of data already read from the current entry integer max value is returen in case more than integer max value bytes are left in the current entry in the archive return the number of available bytes for the current entry throws io exception for signature end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name available end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name entry size end_name end_name begin_operator MINUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name entry offset end_name end_name begin_operator GT end_operator begin_name begin_name integer end_name begin_operator DOT end_operator begin_name max value end_name end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name integer end_name begin_operator DOT end_operator begin_name max value end_name end_name end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name int end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name entry size end_name end_name begin_operator MINUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name entry offset end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no element end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect output end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a set of system properties param sysp a set of properties end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add syspropertyset end_name begin_parameter_list begin_param begin_decl begin_type begin_name property set end_name end_type begin_name sysp end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sys properties end_name begin_operator DOT end_operator begin_name add syspropertyset end_name end_name begin_argument_list begin_argument begin_expr begin_name sysp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the uid for the tar entry this is not the same as the user name param uid the id of the user for the tar entry end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set uid end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name uid end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check tar file set attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name user id set end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name uid end_name end_name begin_operator EQ end_operator begin_name uid end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name next resource end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name close current end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name resource end_name end_type begin_name r end_name begin_init begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name is exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name to long string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name current stream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name eye oh ex end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name ignore errors end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name r end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_name eye oh ex end_name end_expr end_throw end_block end_then end_if end_block end_catch end_try end_block end_while begin_expr_stmt begin_expr begin_name eof end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment test the pattern attribute again end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test bad pattern end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a name entry on the exclude list return an name entry object to be configured end_comment begin_type begin_specifier end_specifier begin_name begin_name pattern set end_name begin_operator DOT end_operator begin_name name entry end_name end_name end_type begin_name create exclude end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name create exclude end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment name a class param class name a class name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set class end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name class name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name class name end_name end_name begin_operator EQ end_operator begin_name class name end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test get element method end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert elem method end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name string end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert elem method end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name string buffer end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert elem method end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name string buffer end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert elem method end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name string buffer end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment necessary in the case where you add a entry that is not compressed end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name calc checksum end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name buffered input stream end_name end_type begin_name in end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name calc checksum end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment set the path to the item in a clear case view to operate on param view path path to the view directory or file end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set view path end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name view path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name mview path end_name begin_operator EQ end_operator begin_name view path end_name end_expr end_expr_stmt end_block 
 begin_comment process included file param name path of the file relative to the directory of the file set param file included file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name account for included file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name process included end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name files included end_name end_expr end_argument begin_argument begin_expr begin_name files excluded end_name end_expr end_argument begin_argument begin_expr begin_name files deselected end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert output end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file reader end_name end_type begin_name inner end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file reader end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name reader end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_name inner end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name begin_init begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert print end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert print end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert print end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert print end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert print end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert print end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name inner end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment pass output sent to system out to specified output param output the data to be output end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name handle output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name out print stream end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name out print stream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_name output stream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name out print stream end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment basic inline dtd element test end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test validate end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment query the debug flag return true if debug is turned on end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get debug end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name debug end_name end_expr end_return end_block 
 begin_comment get the current runtime configurable wrapper can return null return runtime configurable wrapper end_comment begin_type begin_specifier end_specifier begin_name runtime configurable end_name end_type begin_name current wrapper end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name w stack end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_operator LPAR end_operator begin_name runtime configurable end_name begin_operator RPAR end_operator begin_call begin_name begin_name w stack end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name w stack end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment template method to allow subclasses to supply elements for the iteration the directory iterator maintains a stack of iterators covering each level in the directory hierarchy the current iterator covers the current directory being scanned if the next entry in that directory is a subdirectory the current iterator is pushed onto the stack and a new iterator is created for the subdirectory if the entry is a file it is returned as the next element and the iterator remains valid if there are no more entries in the current directory the topmost iterator on the stack is popped off to become the current iterator return the next class file in the iteration end_comment begin_type begin_specifier end_specifier begin_name class file end_name end_type begin_name get next class file end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name class file end_name end_type begin_name next element end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_while begin_condition begin_expr begin_name next element end_name begin_operator EQT end_operator end_expr end_condition begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name current enum end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name element end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name current enum end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment push the current iterator onto the stack and then end_comment begin_comment iterate through this directory end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name enum stack end_name begin_operator DOT end_operator begin_name push end_name end_name begin_argument_list begin_argument begin_expr begin_name current enum end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name files end_name begin_init begin_expr begin_call begin_name get directory entries end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name current enum end_name begin_operator EQ end_operator begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment we have a file create a stream for it end_comment begin_decl_stmt begin_decl begin_type begin_name file input stream end_name end_type begin_name in file stream end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment create a data input stream from the jar end_comment begin_comment input stream end_comment begin_decl_stmt begin_decl begin_type begin_name class file end_name end_type begin_name java class end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name class file end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java class end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name in file stream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name next element end_name begin_operator EQ end_operator begin_name java class end_name end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_block end_then begin_else begin_block begin_comment this iterator is exhausted can we pop one off the stack end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name enum stack end_name begin_operator DOT end_operator begin_name empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_break end_break end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name current enum end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name enumeration end_name begin_operator RPAR end_operator begin_call begin_name begin_name enum stack end_name begin_operator DOT end_operator begin_name pop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if end_block end_while end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name next element end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_catch end_try begin_return begin_expr begin_name next element end_name end_expr end_return end_block 
 begin_comment the package module to analyze param p the name of the package to analyse end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set package end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name mypackage end_name begin_operator EQ end_operator begin_name p end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 7 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect name address 2 end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name email address end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment copy all user properties that have not been set on the command line or a gui tool from this instance to the project instance given as the argument p to copy all quot user quot properties you will also have to call link copy user properties copy user properties p param other the project to copy the properties to must not be null since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name copy inherited properties end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name other end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name property helper end_name end_type begin_name ph end_name begin_init begin_expr begin_call begin_name begin_name property helper end_name begin_operator DOT end_operator begin_name get property helper end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ph end_name begin_operator DOT end_operator begin_name copy inherited properties end_name end_name begin_argument_list begin_argument begin_expr begin_name other end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the name of the property to set in task mode param p the property name to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name property end_name begin_operator EQ end_operator begin_name p end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment pr 38973 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test two pattern sets end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert file missing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert file exists end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment empty end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set system output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment specify how tab characters are to be handled param attr valid values ul li add convert sequences of spaces which span a tab stop to tabs li asis leave tab and space characters alone li remove convert tabs to spaces ul end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set tab end_name begin_parameter_list begin_param begin_decl begin_type begin_name add asis remove end_name end_type begin_name attr end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filter end_name begin_operator DOT end_operator begin_name set tab end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name fix cr lf filter end_name begin_operator DOT end_operator begin_name add asis remove end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attr end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the section names in this manifest return an enumeration of section names end_comment begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name get section names end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name section index end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set the inputstream param is the input stream throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set process output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name br end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create a compatability enum with specified name param name the name of compatability level end_comment begin_name compatability end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment add a sound when the build fails return a build alert to be configured end_comment begin_type begin_specifier end_specifier begin_name build alert end_name end_type begin_name create fail end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name fail end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name build alert end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name fail end_name end_expr end_return end_block 
 begin_comment constructor uses the vm we are running on now end_comment begin_specifier end_specifier begin_name commandline java end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set vm end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get jre executable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set vmversion end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get java version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment verify the configuration param descriptor file name the name of the descriptor file param sax parser not used throws build exception if there is an error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check configuration end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name descriptor file name end_name end_decl end_param begin_param begin_decl begin_type begin_name sax parser end_name end_type begin_name sax parser end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment jonasroot end_comment begin_if begin_condition begin_expr begin_name jonasroot end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name jonasroot end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name jonasroot end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_else end_if begin_comment orb end_comment begin_if begin_condition begin_expr begin_name orb end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name orb end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name rmi orb end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name orb end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name jeremie orb end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name orb end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name david orb end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name orb end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name rmi orb end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name jeremie orb end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name david orb end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment additionalargs end_comment begin_if begin_condition begin_expr begin_name additionalargs end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name additionalargs end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment javac end_comment begin_if begin_condition begin_expr begin_name javac end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment collect the resources that are newer than the corresponding entries or missing in the original archive p if we are going to recreate the archive instead of updating it all resources should be considered as new if a single one is because of this subclasses overriding this method must call code super get resources to add code and indicate with the third arg if they already know that the archive is out of date p param rcs the filesets to grab resources from param zip file intended archive file may or may not exist param needs update whether we already know that the archive is out of date subclasses overriding this method are supposed to set this value correctly in their call to code super get resources to add code return an array of resources to add for each fileset passed in as well as a flag that indicates whether the archive is uptodate exception build exception if it likes end_comment begin_type begin_specifier end_specifier begin_name archive state end_name end_type begin_name get non file set resources to add end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name resource collection end_name begin_index end_index end_name end_type begin_name rcs end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name zip file end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name needs update end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment backwards compatibility forces us to repeat the logic of get resources to add file set here once again end_comment begin_decl_stmt begin_decl begin_type begin_name resource end_name begin_index end_index begin_index end_index end_type begin_name initial resources end_name begin_init begin_expr begin_call begin_name grab non file set resources end_name begin_argument_list begin_argument begin_expr begin_name rcs end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name is empty end_name begin_argument_list begin_argument begin_expr begin_name initial resources end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment no empty behavior handling since the file set version end_comment begin_comment will take care of it end_comment begin_return begin_expr begin_operator UNP end_operator begin_call begin_name archive state end_name begin_argument_list begin_argument begin_expr begin_name needs update end_name end_expr end_argument begin_argument begin_expr begin_name initial resources end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_comment initial resources is not empty end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name archive state end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name initial resources end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name needs update end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name do update end_name end_expr end_condition begin_then begin_block begin_comment we are recreating the archive need all resources end_comment begin_return begin_expr begin_operator UNP end_operator begin_call begin_name archive state end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name initial resources end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name resource end_name begin_index end_index begin_index end_index end_type begin_name newer resources end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name resource end_name begin_index begin_expr begin_name begin_name rcs end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_index begin_index end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name rcs end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name initial resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_name length end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name newer resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name resource end_name begin_index end_index end_name begin_block end_block end_expr end_expr_stmt begin_continue end_continue end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name initial resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_name length end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name initial resources end_name begin_index begin_expr begin_name i end_name end_expr end_index begin_index begin_expr begin_name j end_name end_expr end_index end_name begin_operator UNP end_operator begin_name file resource end_name begin_operator UNP end_operator begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name file resource end_name begin_operator RPAR end_operator begin_name begin_name initial resources end_name begin_index begin_expr begin_name i end_name end_expr end_index begin_index begin_expr begin_name j end_name end_expr end_index end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get file end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_for begin_decl_stmt begin_decl begin_type begin_name resource end_name begin_index end_index end_type begin_name rs end_name begin_init begin_expr begin_name begin_name initial resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name do filesonly end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name rs end_name begin_operator EQ end_operator begin_call begin_name select file resources end_name begin_argument_list begin_argument begin_expr begin_name rs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name newer resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name begin_name resource utils end_name begin_operator DOT end_operator begin_name select out of date sources end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name rs end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name identity mapper end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get zip scanner end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name needs update end_name begin_operator EQ end_operator begin_name needs update end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name begin_name newer resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_name length end_name begin_operator GT end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name needs update end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name do update end_name end_expr end_condition begin_then begin_block begin_comment we will return initial resources anyway no reason end_comment begin_comment to scan further end_comment begin_break end_break end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_name needs update end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name do update end_name end_expr end_condition begin_then begin_block begin_comment we are recreating the archive need all resources end_comment begin_return begin_expr begin_operator UNP end_operator begin_call begin_name archive state end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name initial resources end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_operator UNP end_operator begin_call begin_name archive state end_name begin_argument_list begin_argument begin_expr begin_name needs update end_name end_expr end_argument begin_argument begin_expr begin_name newer resources end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment makes this instance in effect a reference to another path instance p you must not set another attribute or nest elements inside this element if you make it a reference p param r the reference to another path throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set refid end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name union end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the directory to invoke the vm in ignored if no jvm is forked param dir the directory to invoke the jvm from see set fork boolean since ant 1 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dir end_name end_name begin_operator EQ end_operator begin_name dir end_name end_expr end_expr_stmt end_block 
 begin_comment return a hash code value for this object end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name hash code end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name object hash code end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name optional end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name implicit end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment all three specified but class missing null end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 11 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert null end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment query the unsafe attribute return the unsafe value end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get unsafe end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name unsafe end_name end_name end_expr end_return end_block 
 begin_comment set whether the source and target file names on windows and os 2 must use the forward slash as file separator param forward slash whether the forward slash will be forced end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set forwardslash end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name forward slash end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name forward slash end_name end_name begin_operator EQ end_operator begin_name forward slash end_name end_expr end_expr_stmt end_block 
 begin_comment the teardown method for j unit throws exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name local path end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment get the url of the schema return a url to the schema throws build exception if not end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get schema location url end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name has file end_name begin_init begin_expr begin_name file end_name begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name has url end_name begin_init begin_expr begin_call begin_name is set end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment error if both are empty or both are set end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name has url end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error no location end_name begin_operator PLUS end_operator begin_name namespace end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name has file end_name begin_operator UNP end_operator begin_name has url end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error two locations end_name begin_operator PLUS end_operator begin_name namespace end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name schema end_name begin_init begin_expr begin_name url end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name has file end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error no file end_name begin_operator PLUS end_operator begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_name schema end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file utils end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get file url end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name malformed url exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment this is almost implausible but required handling end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error no url representation end_name begin_operator PLUS end_operator begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if begin_return begin_expr begin_name schema end_name end_expr end_return end_block 
 begin_comment do the compile with the specified arguments param args arguments to pass to process on command line end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name compile end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name command array end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name tmp file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name myos end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment windows has a 32 k limit on total arg size so end_comment begin_comment create a temporary file to store all the arguments end_comment begin_comment there have been reports that 300 files could be compiled end_comment begin_comment so 250 is a conservative approach end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name myos end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GE end_operator begin_operator UNP end_operator begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name print writer end_name end_type begin_name out end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name temp file name end_name begin_init begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name random end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name next long end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name tmp file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name temp file name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file writer end_name begin_argument_list begin_argument begin_expr begin_name tmp file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name args end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name command array end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name command end_name end_expr begin_operator UNP end_operator begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name tmp file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_block end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name command array end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name command array end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_name command end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name command array end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_comment we assume that everything jikes writes goes to end_comment begin_comment standard output not to standard error the option end_comment begin_comment xstdout that is given to jikes in javac do jikes compile end_comment begin_comment should guarantee this at least i hope so end_comment begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name execute end_name end_type begin_name exe end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name execute end_name begin_argument_list begin_argument begin_expr begin_name jop end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set ant run end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set working directory end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set commandline end_name end_name begin_argument_list begin_argument begin_expr begin_name command array end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name tmp file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tmp file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment process a line while in revision state param line the line to process end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process revision end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name revision end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name status end_name begin_operator EQ end_operator begin_name get date end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment there were no revisions in this changelog end_comment begin_comment entry so lets move onto next file end_comment begin_expr_stmt begin_expr begin_name status end_name begin_operator EQ end_operator begin_name get file end_name end_expr end_expr_stmt end_block end_then end_if end_else end_if end_block 
 begin_comment return tt null tt if there is a timeout value otherwise the watchdog instance throws build exception in case of error end_comment begin_type begin_specifier end_specifier begin_name execute watchdog end_name end_type begin_name create watchdog end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name get timeout end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_operator UNP end_operator begin_call begin_name execute watchdog end_name begin_argument_list begin_argument begin_expr begin_call begin_name get timeout end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name long value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test transfer parameter unset end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect file contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name message logged end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr begin_name buildfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name is configured end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name iterator end_name end_type begin_name iterator end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file resource iterator end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name dirs end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name release end_name begin_parameter_list begin_param begin_decl begin_type begin_name funnel end_name end_type begin_name funnel end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment ignore release of an already closed funnel end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name begin_name funnel end_name begin_operator DOT end_operator begin_name closed end_name end_name end_expr end_condition begin_then begin_block begin_try begin_block begin_if begin_condition begin_expr begin_name timeout millis end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name wait end_name begin_argument_list begin_argument begin_expr begin_name timeout millis end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name eye ex end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_then end_if begin_if begin_condition begin_expr begin_operator MMINUS end_operator begin_name count end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name close end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_finally begin_block begin_expr_stmt begin_expr begin_name begin_name funnel end_name begin_operator DOT end_operator begin_name closed end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_finally end_try end_block end_then end_if end_block 
 begin_comment only files marked with this label are extracted optional param l string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set label end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name l end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name label end_name begin_operator EQ end_operator begin_name l end_name end_expr end_expr_stmt end_block 
 begin_comment get comment string return string containing the comment end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get comment end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m comment end_name end_expr end_return end_block 
 begin_comment set up our environment variables param exe executable end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name setup environment end_name begin_parameter_list begin_param begin_decl begin_type begin_name execute end_name end_type begin_name exe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name environment end_name begin_init begin_expr begin_call begin_name begin_name env end_name begin_operator DOT end_operator begin_name get variables end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name environment end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name environment end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name environment end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set newenvironment end_name end_name begin_argument_list begin_argument begin_expr begin_name new environment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set environment end_name end_name begin_argument_list begin_argument begin_expr begin_name environment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name setup rand part b end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su ch 2 end_name end_name begin_operator UNP end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name su ch prev end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name current state end_name end_name begin_operator EQ end_operator begin_name rand part a state end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su count end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name setup rand part a end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator PPLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name su count end_name end_name begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su z end_name end_name begin_operator EQ end_operator begin_call begin_name char end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name begin_operator DOT end_operator begin_name ll 8 end_name begin_index begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su t pos end_name end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su t pos end_name end_name begin_operator EQ end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name begin_operator DOT end_operator begin_name tt end_name begin_index begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su t pos end_name end_name end_expr end_index end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su r n to go end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su r n to go end_name end_name begin_operator EQ end_operator begin_name begin_name b zip 2 constants end_name begin_operator DOT end_operator begin_name r nums end_name begin_index begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su r t pos end_name end_name end_expr end_index end_name begin_operator MINUS end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator PPLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name su r t pos end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su r t pos end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su r n to go end_name end_name begin_operator MMINUS end_operator end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su j 2 end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name current state end_name end_name begin_operator EQ end_operator begin_name rand part c state end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su r n to go end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su z end_name end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name setup rand part c end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name current state end_name end_name begin_operator EQ end_operator begin_name rand part a state end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name setup rand part a end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block 
 begin_comment set the namespace of the xml element associated with this component this method is typically called by the xml processor if the namespace is ant current the component helper is used to get the current antlib uri param namespace uri used in the xmlns declaration end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set namespace end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name namespace end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name namespace end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name ant current uri end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name component helper end_name end_type begin_name helper end_name begin_init begin_expr begin_call begin_name begin_name component helper end_name begin_operator DOT end_operator begin_name get component helper end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name namespace end_name begin_operator EQ end_operator begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name get current antlib uri end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name namespace end_name end_name begin_operator EQ end_operator begin_name namespace end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_name namespace end_name end_expr end_expr_stmt end_block 
 begin_comment registers this code process destroyer code as a shutdown hook uses reflection to ensure pre jdk 1 3 compatibility end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add shutdown hook end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name add shutdown hook method end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_name running end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name destroy process thread end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name process destroyer impl end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name begin_index end_index end_type begin_name args end_name begin_init begin_expr begin_block begin_expr begin_name destroy process thread end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name add shutdown hook method end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name runtime end_name begin_operator DOT end_operator begin_name get runtime end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name added end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name invocation target exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name begin_init begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get target exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name t end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name begin_name illegal state exception end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_condition begin_then begin_block begin_comment shutdown already is in progress end_comment begin_expr_stmt begin_expr begin_name running end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_catch end_try end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name password authentication end_name end_type begin_name get password authentication end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name auth end_name end_expr end_return end_block 
 begin_comment add a set of source files param fs the file set to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add srcfileset end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create sources end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name fs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add an ant filter reader filter param filter reader an code ant filter reader code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add filter reader end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name ant filter reader end_name end_type begin_name filter reader end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filter readers end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name filter reader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the value of the fail on error flag return true if the fail on error flag has been set or if writablefiles skip end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get fail on error end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get writable files end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name writable skip end_name end_expr end_argument end_argument_list end_call begin_operator QM end_operator begin_operator DP end_operator begin_name fail on error end_name end_expr end_return end_block 
 begin_comment get the link offline attribute return the link offline attribute end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is link offline end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name offline end_name end_expr end_return end_block 
 begin_comment get the classpath used by this code load properties code return the classpath end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name get classpath end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name java resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get classpath end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name classpath end_name end_expr end_return end_block 
 begin_comment corresponds to code lt ant gt code s nested code lt propertyset gt code element param ps the propertset end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add propertyset end_name begin_parameter_list begin_param begin_decl begin_type begin_name property set end_name end_type begin_name ps end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name property sets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name ps end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get recurse flag status return boolean containing status of recurse flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get recurse end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m recurse end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test recreate without update newer file end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test recreate end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the default directory separator string defaults to current jvm link java io file separator file separator param sep directory separator string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dir sep end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name sep end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name dir sep end_name begin_operator EQ end_operator begin_name sep end_name end_expr end_expr_stmt end_block 
 begin_comment sets the number of times the source file should be played return the number of loops to play the source file end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get loops end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name loops end_name end_name end_expr end_return end_block 
 begin_comment if true the java source files which are generated by ejbc will be saved param keepgenerated a boolean indicating if the java source files for the stubs and skeletons should be retained end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set keepgenerated end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name keepgenerated end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name keepgenerated end_name end_name begin_operator EQ end_operator begin_name keepgenerated end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name src resource end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name dest end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dest end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name source end_name begin_operator DOT end_operator begin_name get parent end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name dest end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name default extension end_name begin_init begin_expr begin_call begin_name get default extension end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name create dest file end_name begin_argument_list begin_argument begin_expr begin_name default extension end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment like contents equals but ignores project param obj the object to check against return true if this unknownelement has the same contents the other end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name similar end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name obj end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name obj end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name obj end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name unknown element end_name end_type begin_name other end_name begin_init begin_expr begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_name obj end_name end_expr end_init end_decl end_decl_stmt begin_comment are the names the same end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name equals string end_name begin_argument_list begin_argument begin_expr begin_name element name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name other end_name begin_operator DOT end_operator begin_name element name end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name namespace end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name other end_name begin_operator DOT end_operator begin_name namespace end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name qname end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name other end_name begin_operator DOT end_operator begin_name qname end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment are attributes the same end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get wrapper end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get attribute map end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get wrapper end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get attribute map end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment is the text the same end_comment begin_comment need to use equals on the string and not end_comment begin_comment on the stringbuffer as equals on the string buffer end_comment begin_comment does not compare the contents end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get wrapper end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get text end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get wrapper end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get text end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment are the sub elements the same end_comment begin_if begin_condition begin_expr begin_name children end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name children end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name other end_name begin_operator DOT end_operator begin_name children end_name end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name children end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name other end_name begin_operator DOT end_operator begin_name children end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name children end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name children end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name children end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name unknown element end_name end_type begin_name child end_name begin_init begin_expr begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_call begin_name begin_name children end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name similar end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name children end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment here is a comment with an embedded tab end_comment begin_if begin_condition begin_expr begin_name mybool end_name end_expr end_condition begin_then begin_block begin_comment here is a multi line with embedded tab comment end_comment begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name mychar end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment tab end_comment end_block end_then end_if begin_comment end of if mybool end_comment end_block 
 begin_comment check the command line options end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check options end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_comment clear case items end_comment begin_expr_stmt begin_expr begin_call begin_name get comment command end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get obj select end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name get pname end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name get pname command end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment object selector end_comment begin_if begin_condition begin_expr begin_call begin_name get obj select end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get obj select end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment compare another object to this file resource for equality param another the other object to compare return true if another is a file resource representing the same file end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name another end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name this end_name begin_operator EQT end_operator begin_name another end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name another end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name another end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file resource end_name end_type begin_name otherfr end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file resource end_name begin_operator RPAR end_operator begin_name another end_name end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name get file end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator QM end_operator begin_call begin_name begin_name otherfr end_name begin_operator DOT end_operator begin_name get file end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator DP end_operator begin_call begin_name get file end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name otherfr end_name begin_operator DOT end_operator begin_name get file end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment write the rdiff log param entries a code cvs tag entry code value exception build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write tag diff end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name cvs tag entry end_name begin_index end_index end_name end_type begin_name entries end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file output stream end_name end_type begin_name output end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name output end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name mydestfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name print writer end_name end_type begin_name writer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name output stream writer end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name document end_name end_type begin_name doc end_name begin_init begin_expr begin_call begin_name begin_name dom utils end_name begin_operator DOT end_operator begin_name new document end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name root end_name begin_init begin_expr begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name mystart tag end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name root end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name mystart tag end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name root end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name mystart date end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name myend tag end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name root end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name myend tag end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name root end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name myend date end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name root end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get cvs root end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name root end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name mypackage end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dom writer end_name begin_operator DOT end_operator begin_name open element end_name end_name begin_argument_list begin_argument begin_expr begin_name root end_name end_expr end_argument begin_argument begin_expr begin_name writer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init begin_operator UNP end_operator begin_name c end_name begin_init begin_expr begin_name begin_name entries end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name c end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name write tag entry end_name begin_argument_list begin_argument begin_expr begin_name doc end_name end_expr end_argument begin_argument begin_expr begin_name writer end_name end_expr end_argument begin_argument begin_expr begin_name begin_name entries end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name dom writer end_name begin_operator DOT end_operator begin_name close element end_name end_name begin_argument_list begin_argument begin_expr begin_name root end_name end_expr end_argument begin_argument begin_expr begin_name writer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unsupported encoding exception end_name end_type begin_name uee end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name uee end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name output end_name end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment closes file but doesn t throw exception end_comment begin_type begin_name void end_name end_type begin_name close quietly end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name reader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return a string representation of the selector end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name has selectors end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment returns dependency information on these two resources if src has been modified later than target it returns true if target doesn t exist it likewise returns true otherwise target is newer than src and is not out of date thus the method returns false it also returns false if the src file doesn t even exist since how could the target then be out of date param src the original resource param target the resource being compared against param granularity the int amount in seconds of slack we will give in determining out of dateness return whether the target is out of date end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is out of date end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name src end_name end_decl end_param begin_param begin_decl begin_type begin_name resource end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name granularity end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name is out of date end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument begin_argument begin_expr begin_name target end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name long end_name begin_operator RPAR end_operator begin_name granularity end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name project end_name end_type begin_name get project end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name project end_name end_expr end_return end_block 
 begin_comment constructor param ftp ftpclient object end_comment begin_specifier end_specifier begin_name ftp directory scanner end_name begin_parameter_list begin_param begin_decl begin_type begin_name ftp client end_name end_type begin_name ftp end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ftp end_name end_name begin_operator EQ end_operator begin_name ftp end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name set follow symlinks end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the name of the link used when action quot single quot param lnk the name for the link end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set link end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name lnk end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name link end_name end_name begin_operator EQ end_operator begin_name lnk end_name end_expr end_expr_stmt end_block 
 begin_comment create the xml reader this is one by instantiating anything specified by link reader class name falling back to a default reader if not if the returned reader is an instance of link parser adapter then we have created and wrapped a sax 1 parser return the new xml reader end_comment begin_type begin_specifier end_specifier begin_name xml reader end_name end_type begin_name create xml reader end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name reader end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name reader class name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name reader end_name begin_operator EQ end_operator begin_call begin_name create default reader or parser end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name reader class end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_comment load the parser class end_comment begin_if begin_condition begin_expr begin_name classpath end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name ant class loader end_name end_type begin_name loader end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create class loader end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name reader class end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name reader class name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name reader class end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name reader class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name reader end_name begin_operator EQ end_operator begin_call begin_name begin_name reader class end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name init failed msg end_name begin_operator PLUS end_operator begin_name reader class name end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name init failed msg end_name begin_operator PLUS end_operator begin_name reader class name end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name init failed msg end_name begin_operator PLUS end_operator begin_name reader class name end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_else end_if begin_comment then check it implements xml reader end_comment begin_decl_stmt begin_decl begin_type begin_name xml reader end_name end_type begin_name new reader end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name reader end_name begin_operator UNP end_operator begin_name xml reader end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name new reader end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name xml reader end_name begin_operator RPAR end_operator begin_name reader end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment see if it is a sax 1 parser end_comment begin_if begin_condition begin_expr begin_name reader end_name begin_operator UNP end_operator begin_name parser end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name new reader end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name parser adapter end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name parser end_name begin_operator RPAR end_operator begin_name reader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name init failed msg end_name begin_operator PLUS end_operator begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_else end_if begin_return begin_expr begin_name new reader end_name end_expr end_return end_block 
 begin_comment set the format of the datetime attribute param pattern the code simple date format code compatible format pattern since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set pattern end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name pattern end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name df factory end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_class begin_super begin_name date format factory end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name date format end_name end_type begin_name get primary format end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name simple date format end_name begin_argument_list begin_argument begin_expr begin_name pattern end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_function begin_function begin_type begin_specifier end_specifier begin_name date format end_name end_type begin_name get fallback format end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block end_function end_block end_class end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment set the command used to start the vm only if forking param s command to start the vm end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set jvm end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get command line end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set vm end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the include impl flag return the include impl flag end_comment begin_type begin_name boolean end_name end_type begin_name is include impl end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name include impl end_name end_expr end_return end_block 
 begin_comment creates a new filtered reader param in a reader object providing the underlying stream must not be code null code end_comment begin_specifier end_specifier begin_name base param filter reader end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name in end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test whether or not a given path matches a given pattern param pattern the pattern to match against must not be code null code param str the path to match as a string must not be code null code param is case sensitive whether or not matching should be performed case sensitively return code true code if the pattern matches against the string or code false code otherwise end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name match path end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name pattern end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name str end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name is case sensitive end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name selector utils end_name begin_operator DOT end_operator begin_name match path end_name end_name begin_argument_list begin_argument begin_expr begin_name pattern end_name end_expr end_argument begin_argument begin_expr begin_name str end_name end_expr end_argument begin_argument begin_expr begin_name is case sensitive end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test non file resource end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set eight end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name i end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment read bytes from the project s demuxed input param buffer an array of bytes to read into param offset the offset in the array of bytes param length the number of bytes in the array return the number of bytes read throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name buffer end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name offset end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name length end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name demux input end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment test sign handling end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test sign end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name zip long end_name end_type begin_name zl end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name zip long end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index end_index end_name begin_block begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name zl end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name delete after end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name f end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name process end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_operator UNP end_operator begin_class begin_super begin_name thread end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name wait for end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_function end_block end_class begin_operator DOT end_operator begin_call begin_name start end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get whether the formatter should log to file end_comment begin_type begin_name boolean end_name end_type begin_name get use file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name use file end_name end_expr end_return end_block 
 begin_comment add the files matched by the nested source files to the vector as source file instances since 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add source files end_name begin_parameter_list begin_param begin_decl begin_type begin_name vector end_name end_type begin_name sf end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name nested source files end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name resource collection end_name end_type begin_name rc end_name begin_init begin_expr begin_operator LPAR end_operator begin_name resource collection end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name is filesystem only end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name rc end_name begin_operator UNP end_operator begin_name file set end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_name rc end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name has patterns end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name has selectors end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name fs end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name create include end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name include no source packages end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name create include end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sf end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name source file end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name file resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get file end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_while end_block 
 begin_comment return the include semantic attribute end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get include sementic attribute end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name include semantic attribute end_name end_name end_expr end_return end_block 
 begin_comment do the unbzipping end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name extract end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name source end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_call begin_name begin_name dest end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name source end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name dest end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file output stream end_name end_type begin_name out end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name cb zip 2 input stream end_name end_type begin_name z in end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name fis end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name buffered input stream end_name end_type begin_name bis end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name dest end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name fis end_name begin_operator EQ end_operator begin_call begin_name begin_name src resource end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bis end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_name fis end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name b end_name begin_init begin_expr begin_call begin_name begin_name bis end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name b end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name b end_name begin_operator EQ end_operator begin_call begin_name begin_name bis end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name b end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name z in end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name cb zip 2 input stream end_name begin_argument_list begin_argument begin_expr begin_name bis end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_operator STAR end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_do begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name count end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name count end_name begin_operator EQ end_operator begin_call begin_name begin_name z in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_condition begin_expr begin_name count end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition end_do end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name bis end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name fis end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name z in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test set works end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add jvc specific commands param command the command to add to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add compiler specific options end_name begin_parameter_list begin_param begin_decl begin_type begin_name net command end_name end_type begin_name command end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name pure java end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name secure scoping end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment check style visibility modifier on end_comment begin_specifier end_specifier begin_name root handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name project helper impl end_name end_type begin_name helper impl end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name helper impl end_name end_name begin_operator EQ end_operator begin_name helper impl end_name end_expr end_expr_stmt end_block 
 begin_comment fills the file and directory maps with resources read from the archive param src the archive to scan param encoding encoding used to encode file names inside the archive param file entries map name to resource of non directory resources found inside the archive param match file entries map name to resource of non directory resources found inside the archive that matched all include patterns and didn t match any exclude patterns param dir entries map name to resource of directory resources found inside the archive param match dir entries map name to resource of directory resources found inside the archive that matched all include patterns and didn t match any exclude patterns end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name fill maps from archive end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name src end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param begin_param begin_decl begin_type begin_name map end_name end_type begin_name file entries end_name end_decl end_param begin_param begin_decl begin_type begin_name map end_name end_type begin_name match file entries end_name end_decl end_param begin_param begin_decl begin_type begin_name map end_name end_type begin_name dir entries end_name end_decl end_param begin_param begin_decl begin_type begin_name map end_name end_type begin_name match dir entries end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name tar entry end_name end_type begin_name entry end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name tar input stream end_name end_type begin_name ti end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name ti end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name tar input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name src file end_name end_expr end_argument begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name entry end_name begin_operator EQ end_operator begin_call begin_name begin_name ti end_name begin_operator DOT end_operator begin_name get next entry end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name resource end_name end_type begin_name r end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name tar resource end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument begin_argument begin_expr begin_name entry end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_call begin_name trim separator end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dir entries end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name match end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name match dir entries end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file entries end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name match end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name match file entries end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_block end_while end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name src file end_name end_expr end_argument begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name ti end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ti end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_comment swallow end_comment end_block end_catch end_try end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment unset the read only flag on local copies of files checked in to vss defaults to false param writable the boolean value for writable end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set writable end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name writable end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal writable end_name end_name begin_argument_list begin_argument begin_expr begin_name writable end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test single file upload and download end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name upload file end_name begin_init begin_expr begin_call begin_name create temporary file end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name scp end_name end_type begin_name scp task end_name begin_init begin_expr begin_call begin_name create task end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name scp task end_name begin_operator DOT end_operator begin_name set file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name upload file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name scp task end_name begin_operator DOT end_operator begin_name set todir end_name end_name begin_argument_list begin_argument begin_expr begin_name ssh host uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name scp task end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name test file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name temp dir end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add cleanup end_name begin_argument_list begin_argument begin_expr begin_name test file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name test file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name scp task end_name begin_operator DOT end_operator begin_name set file end_name end_name begin_argument_list begin_argument begin_expr begin_name ssh host uri end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name upload file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name scp task end_name begin_operator DOT end_operator begin_name set todir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name test file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name scp task end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name test file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name upload file end_name end_expr end_argument begin_argument begin_expr begin_name test file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment evaluate the condition return true if the condition is true throws org apache tools ant build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name empty end_name begin_argument_list begin_argument begin_expr begin_name host end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name empty end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error no hostname end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name timeout end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error bad timeout end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name target end_name begin_init begin_expr begin_name host end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name empty end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name empty end_name begin_argument_list begin_argument begin_expr begin_name host end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error both targets end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_try begin_block begin_comment get the host of a url end_comment begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name real url end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name target end_name begin_operator EQ end_operator begin_call begin_name begin_name real url end_name begin_operator DOT end_operator begin_name get host end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name empty end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error no host in url end_name begin_operator PLUS end_operator begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name malformed url exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error bad url end_name begin_operator PLUS end_operator begin_name url end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name target end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name inet address end_name end_type begin_name address end_name end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name address end_name begin_operator EQ end_operator begin_call begin_name begin_name inet address end_name begin_operator DOT end_operator begin_name get by name end_name end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unknown host exception end_name end_type begin_name e 1 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name warn unknown host end_name begin_operator PLUS end_operator begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name address end_name begin_operator DOT end_operator begin_name get host address end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name reachable end_name end_decl end_decl_stmt begin_comment java 1 5 reachable address is reachable timeout 1000 end_comment begin_decl_stmt begin_decl begin_type begin_name method end_name end_type begin_name reachable method end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name reachable method end_name begin_operator EQ end_operator begin_call begin_name begin_name inet address end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get method end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name method name end_name end_expr end_argument begin_argument begin_expr begin_name parameter types end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name begin_index end_index end_type begin_name params end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name params end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr begin_name timeout end_name begin_operator STAR end_operator begin_name second end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name reachable end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name boolean end_name begin_operator RPAR end_operator begin_call begin_name begin_name reachable method end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name address end_name end_expr end_argument begin_argument begin_expr begin_name params end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name boolean value end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment utterly implausible but catered for anyway end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name reachable method end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name invocation target exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment assume this is an i oexception about un readability end_comment begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name nested end_name begin_init begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get target exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name error on network end_name begin_operator PLUS end_operator begin_name target end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name nested end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment any kind of fault not reachable end_comment begin_expr_stmt begin_expr begin_name reachable end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_catch end_try end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no such method exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment java 1 4 or earlier end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name method name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name msg no reachable test end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name reachable end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name reachable end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name reachable end_name end_expr end_return end_block 
 begin_comment create a new batchtest instance param project the project it depends on end_comment begin_specifier end_specifier begin_name batch test end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name project end_name end_name begin_operator EQ end_operator begin_name project end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set charset end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name charset end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name charset end_name end_name begin_operator EQ end_operator begin_name charset end_name end_expr end_expr_stmt end_block 
 begin_comment set the script text param text a component of the script text to be added since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add text end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name text end_name end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace properties end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment executes all the chained image operations on the file specified param file the file to be processed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file seekable stream end_name end_type begin_name input end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file seekable stream end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name planar image end_name end_type begin_name image end_name begin_init begin_expr begin_call begin_name begin_name jai end_name begin_operator DOT end_operator begin_name create end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name input end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name instructions end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name instr end_name begin_init begin_expr begin_call begin_name begin_name instructions end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name instr end_name begin_operator UNP end_operator begin_name transform operation end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name image end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name transform operation end_name begin_operator RPAR end_operator begin_name instr end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name execute transform operation end_name begin_argument_list begin_argument begin_expr begin_name image end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name instr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name input end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name str encoding end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name str encoding end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name str encoding end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name str encoding end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_if begin_condition begin_expr begin_name dest dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dest dir end_name begin_operator EQ end_operator begin_name src dir end_name end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name new file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dest dir end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name overwrite end_name begin_operator UNP end_operator begin_call begin_name begin_name new file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name new file end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name new file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file output stream end_name end_type begin_name stream end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name new file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name jai end_name begin_operator DOT end_operator begin_name create end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name image end_name end_expr end_argument begin_argument begin_expr begin_name stream end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name str encoding end_name begin_operator DOT end_operator begin_name to upper case end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stream end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stream end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name err end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name failonerror end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name err end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name err end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name lang end_name begin_operator DOT end_operator begin_name runtime exception end_name end_name end_type begin_name rerr end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name failonerror end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name rerr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name rerr end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_catch end_try end_block 
 begin_comment sets the target container of this task param target target in whose scope this task belongs may be code null code indicating a top level task end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set owning target end_name begin_parameter_list begin_param begin_decl begin_type begin_name target end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name target end_name end_name begin_operator EQ end_operator begin_name target end_name end_expr end_expr_stmt end_block 
 begin_comment get the output stream return code output stream code end_comment begin_type begin_specifier end_specifier begin_name output stream end_name end_type begin_name get out end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name out end_name end_expr end_return end_block 
 begin_comment sets whether this element is implicit param implicit if true this element may be left out default is false end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set implicit end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name implicit end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name implicit end_name end_name begin_operator EQ end_operator begin_name implicit end_name end_expr end_expr_stmt end_block 
 begin_comment sets the leavetargetrevision flag param setrest value chosen for leavetargetrevision end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set leave target revision end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name setrest end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name leavetargetrevision end_name end_name begin_operator EQ end_operator begin_name setrest end_name end_expr end_expr_stmt end_block 
 begin_comment get the type name specifier return the type name specifier command if the attribute was specified otherwise an empty string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get type specifier end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name typenm end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name typenm end_name begin_operator EQ end_operator begin_call begin_name get type name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get vob end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name typenm end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_call begin_name get vob end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name typenm end_name end_expr end_return end_block 
 begin_comment param name path of the directory relative to the directory of the fileset param file directory as file param fast end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name account for included dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name ant ftp file end_name end_type begin_name file end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name fast end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dirs included end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name dirs excluded end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is excluded end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name fast end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is symbolic link end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get client end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name change working directory end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name curpwd end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name scandir end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get link end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name name end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument begin_argument begin_expr begin_name fast end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get client end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name change working directory end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name curpwd end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name scandir end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name name end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument begin_argument begin_expr begin_name fast end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name dirs included end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name dirs excluded end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name fast end_name begin_operator UNP end_operator begin_call begin_name could hold included end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get client end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name change working directory end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name curpwd end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name scandir end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name name end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument begin_argument begin_expr begin_name fast end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_block end_then end_if end_block 
 begin_comment extract the element name from a component name param component name the stringified form for uri name return the element name of the component end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name extract name from component name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name component name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index end_name begin_init begin_expr begin_call begin_name begin_name component name end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name index end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name component name end_name end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name component name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name index end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name iterator end_name end_type begin_name iterator end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name my iterator end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment convenience method to set this entry s group and user names param user name this entry s new user name param group name this entry s new group name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set names end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name user name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name group name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name set user name end_name end_name begin_argument_list begin_argument begin_expr begin_name user name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name set group name end_name end_name begin_argument_list begin_argument begin_expr begin_name group name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment is this the os the user wanted return boolean ul li li code true code if the os and osfamily attributes are null li li code true code if osfamily is set and the os family and must match that of the current os according to the logic of link os is os string string string string and the result of the code os code attribute must also evaluate true li li code true code if os is set and the system property os name is found in the os attribute li li code false code otherwise li ul end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is valid os end_name begin_parameter_list end_parameter_list begin_block begin_comment hand osfamily off to os class if set end_comment begin_if begin_condition begin_expr begin_name os family end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is os end_name end_name begin_argument_list begin_argument begin_expr begin_name os family end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment the exec os check is different from os is os which end_comment begin_comment probes for a specific os instead it searches the os field end_comment begin_comment for the current os name end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name myos end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name myos end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name os end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name myos end_name end_expr end_argument end_argument_list end_call begin_operator LT end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_comment this command will be executed only on the specified os end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name myos end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name os end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment attribute setters end_comment begin_comment sets the destination file or uses the console if not specified param destination file the destination file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set destfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name destination file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name destination file end_name end_name begin_operator EQ end_operator begin_name destination file end_name end_expr end_expr_stmt end_block 
 begin_comment constructs a test listener which will ignore log events above the given level end_comment begin_specifier end_specifier begin_name ant test listener end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name log level end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name log level end_name end_name begin_operator EQ end_operator begin_name log level end_name end_expr end_expr_stmt end_block 
 begin_comment constructor end_comment begin_specifier end_specifier begin_name element handler end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment set the project param project the project that this task belongs to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set project end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set project component end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment construct an input request param prompt the prompt to show to the user must not be null end_comment begin_specifier end_specifier begin_name input request end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name prompt end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name prompt end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal argument exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name prompt end_name end_name begin_operator EQ end_operator begin_name prompt end_name end_expr end_expr_stmt end_block 
 begin_comment the classpath to be used with the java virtual machine that runs the weblogic shutdown command return the path to be configured end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name classpath end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment return the list of unknown elements end_comment begin_type begin_specifier end_specifier begin_name list end_name end_type begin_name get unknown elements end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name unknown elements end_name end_expr end_return end_block 
 begin_comment append the text from this line of the resonse end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name append end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name get total length end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name total length end_name end_expr end_return end_block 
 begin_comment take care that some output is produced in report files if the forked machine exited before the test suite finished but the reason is not a timeout since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log vm crash end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name formatter element end_name begin_index end_index end_name end_type begin_name fe array end_name end_decl end_param begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name test case end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log vm exit end_name begin_argument_list begin_argument begin_expr begin_name fe array end_name end_expr end_argument begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name test case end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment property to pass to the new project the property is passed as a user property return the created code property code object end_comment begin_type begin_specifier end_specifier begin_name property end_name end_type begin_name create property end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name property end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name property end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get new project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set task name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name p end_name end_expr end_return end_block 
 begin_comment sends an e mail with the log results param event the build finished event end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name build finished end_name end_name begin_argument_list begin_argument begin_expr begin_name event end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name project end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name properties end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get properties end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment overlay specified properties file if any which overrides project end_comment begin_comment settings end_comment begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name file properties end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name filename end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name filename end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name is end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file properties end_name begin_operator DOT end_operator begin_name load end_name end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_comment ignore because properties file is not required end_comment end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name is end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name is end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_then end_if end_block end_finally end_try end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name file properties end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name begin_name file properties end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name replace properties end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name success end_name begin_init begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name begin_init begin_expr begin_name success end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name notify end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get value end_name begin_argument_list begin_argument begin_expr begin_name properties end_name end_expr end_argument begin_argument begin_expr begin_name prefix end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name notify end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name mailhost end_name begin_init begin_expr begin_call begin_name get value end_name begin_argument_list begin_argument begin_expr begin_name properties end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name port end_name begin_init begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get value end_name begin_argument_list begin_argument begin_expr begin_name properties end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name mail message end_name begin_operator DOT end_operator begin_name default port end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name user end_name begin_init begin_expr begin_call begin_name get value end_name begin_argument_list begin_argument begin_expr begin_name properties end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name password end_name begin_init begin_expr begin_call begin_name get value end_name begin_argument_list begin_argument begin_expr begin_name properties end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name ssl end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get value end_name begin_argument_list begin_argument begin_expr begin_name properties end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name from end_name begin_init begin_expr begin_call begin_name get value end_name begin_argument_list begin_argument begin_expr begin_name properties end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name replyto list end_name begin_init begin_expr begin_call begin_name get value end_name begin_argument_list begin_argument begin_expr begin_name properties end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name to list end_name begin_init begin_expr begin_call begin_name get value end_name begin_argument_list begin_argument begin_expr begin_name properties end_name end_expr end_argument begin_argument begin_expr begin_name prefix end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name subject end_name begin_init begin_expr begin_call begin_name get value end_name begin_argument_list begin_argument begin_expr begin_name properties end_name end_expr end_argument begin_argument begin_expr begin_name prefix end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name success end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name user end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name password end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_name ssl end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name send mail end_name begin_argument_list begin_argument begin_expr begin_name mailhost end_name end_expr end_argument begin_argument begin_expr begin_name port end_name end_expr end_argument begin_argument begin_expr begin_name from end_name end_expr end_argument begin_argument begin_expr begin_name replyto list end_name end_expr end_argument begin_argument begin_expr begin_name to list end_name end_expr end_argument begin_argument begin_expr begin_name subject end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name send mime mail end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name mailhost end_name end_expr end_argument begin_argument begin_expr begin_name port end_name end_expr end_argument begin_argument begin_expr begin_name user end_name end_expr end_argument begin_argument begin_expr begin_name password end_name end_expr end_argument begin_argument begin_expr begin_name ssl end_name end_expr end_argument begin_argument begin_expr begin_name from end_name end_expr end_argument begin_argument begin_expr begin_name replyto list end_name end_expr end_argument begin_argument begin_expr begin_name to list end_name end_expr end_argument begin_argument begin_expr begin_name subject end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment comment of the archive return comment of the archive since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get comment end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name comment end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test reference inheritance end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p end_name begin_init begin_expr begin_name begin_name path end_name begin_operator DOT end_operator begin_name system classpath end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name test reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name boolean end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name test reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name boolean end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name test reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name boolean end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns an input stream for reading the contents of the given entry param ze the entry to get the stream for return a stream to read the entry from throws io exception if unable to create an input stream from the zipenty throws zip exception if the zipentry has an unsupported compression method end_comment begin_type begin_specifier end_specifier begin_name input stream end_name end_type begin_name get input stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name zip entry end_name end_type begin_name ze end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name zip exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name offset entry end_name end_type begin_name offset entry end_name begin_init begin_expr begin_operator LPAR end_operator begin_name offset entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name ze end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name offset entry end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name start end_name begin_init begin_expr begin_name begin_name offset entry end_name begin_operator DOT end_operator begin_name data offset end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name bounded input stream end_name end_type begin_name bis end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name bounded input stream end_name begin_argument_list begin_argument begin_expr begin_name start end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get compressed size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_switch begin_condition begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_case begin_expr begin_name begin_name zip entry end_name begin_operator DOT end_operator begin_name stored end_name end_name end_expr begin_return begin_expr begin_name bis end_name end_expr end_return end_case begin_case begin_expr begin_name begin_name zip entry end_name begin_operator DOT end_operator begin_name deflated end_name end_name end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name bis end_name begin_operator DOT end_operator begin_name add dummy end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_operator UNP end_operator begin_call begin_name inflater input stream end_name begin_argument_list begin_argument begin_expr begin_name bis end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name inflater end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_case begin_default begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name zip exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_default end_block end_switch end_block 
 begin_comment exec by creating a new command return true if the command ran successfully throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name rmic end_name end_type begin_name owner end_name begin_init begin_expr begin_call begin_name get rmic end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name begin_init begin_expr begin_call begin_name setup rmic command end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name project end_name begin_init begin_expr begin_call begin_name begin_name owner end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment rely on rmic being on the path end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get jdk executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get executable name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment set up the args end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name args end_name begin_init begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name execute end_name end_type begin_name exe end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name execute end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name log stream handler end_name begin_argument_list begin_argument begin_expr begin_name owner end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set ant run end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set working directory end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set commandline end_name end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_operator UNP end_operator begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name is failure end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name exception end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get executable name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name exception end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name do log end_name begin_parameter_list begin_param begin_decl begin_type begin_name sax parse exception end_name end_type begin_name e end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name log level end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name get message end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name log level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the common token action grammar option param common token action a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set commontokenaction end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name common token action end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name common token action end_name end_expr end_argument begin_argument begin_expr begin_name common token action end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment fired when a target starts building this pushes a timed element for the target onto the stack of elements for the current thread remembering the current time and the name of the target param event an event with any relevant extra information will not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name target end_name end_type begin_name target end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name timed element end_name end_type begin_name target element end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name timed element end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name target element end_name begin_operator DOT end_operator begin_name start time end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name target element end_name begin_operator DOT end_operator begin_name element end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create element end_name end_name begin_argument_list begin_argument begin_expr begin_name target tag end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name target element end_name begin_operator DOT end_operator begin_name element end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name name attr end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name targets end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument begin_argument begin_expr begin_name target element end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get stack end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name push end_name begin_argument_list begin_argument begin_expr begin_name target element end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment execute the perforce code have code command throws build exception if the command cannot be executed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name exec p 4 command end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name p 4 cmd opts end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name p 4 view end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name simple p 4 output handler end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the amount of free space required return the amount required end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get needed end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name needed end_name end_expr end_return end_block 
 begin_comment override task init end_comment begin_comment initialize the sync task throws build exception if there is a problem see task init end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment instantiate it end_comment begin_expr_stmt begin_expr begin_name my copy end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name my copy end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name configure task end_name begin_argument_list begin_argument begin_expr begin_name my copy end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment default config of mycopy for our purposes end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name my copy end_name begin_operator DOT end_operator begin_name set filtering end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name my copy end_name begin_operator DOT end_operator begin_name set include empty dirs end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name my copy end_name begin_operator DOT end_operator begin_name set preserve last modified end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name planar image end_name end_type begin_name execute transform operation end_name begin_parameter_list begin_param begin_decl begin_type begin_name planar image end_name end_type begin_name image end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name buffered image end_name end_type begin_name bi end_name begin_init begin_expr begin_call begin_name begin_name image end_name begin_operator DOT end_operator begin_name get as buffered image end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name graphics 2 d end_name end_type begin_name graphics end_name begin_init begin_expr begin_operator LPAR end_operator begin_name graphics 2 d end_name begin_operator RPAR end_operator begin_call begin_name begin_name bi end_name begin_operator DOT end_operator begin_name get graphics end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name instructions end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name image operation end_name end_type begin_name instr end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name image operation end_name begin_operator RPAR end_operator begin_call begin_name begin_name instructions end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name instr end_name begin_operator UNP end_operator begin_name draw operation end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name planar image end_name end_type begin_name op end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name draw operation end_name begin_operator RPAR end_operator begin_name instr end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name execute draw operation end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name xloc end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name yloc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name graphics end_name begin_operator DOT end_operator begin_name draw image end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name op end_name begin_operator DOT end_operator begin_name get as buffered image end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name xloc end_name end_expr end_argument begin_argument begin_expr begin_name yloc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name instr end_name begin_operator UNP end_operator begin_name transform operation end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name planar image end_name end_type begin_name op end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name transform operation end_name begin_operator RPAR end_operator begin_name instr end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name execute transform operation end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name buffered image end_name end_type begin_name child end_name begin_init begin_expr begin_call begin_name begin_name op end_name begin_operator DOT end_operator begin_name get as buffered image end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name xloc end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name yloc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name graphics end_name begin_operator DOT end_operator begin_name draw image end_name end_name begin_argument_list begin_argument begin_expr begin_name child end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name xloc end_name end_expr end_argument begin_argument begin_expr begin_name yloc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name planar image end_name begin_operator DOT end_operator begin_name wrap rendered image end_name end_name begin_argument_list begin_argument begin_expr begin_name bi end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_block end_for begin_expr_stmt begin_expr begin_name image end_name begin_operator EQ end_operator begin_call begin_name begin_name planar image end_name begin_operator DOT end_operator begin_name wrap rendered image end_name end_name begin_argument_list begin_argument begin_expr begin_name bi end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name image end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no files end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name sign jar end_name begin_operator DOT end_operator begin_name error no source end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor param task the junittask that uses this mirror end_comment begin_specifier end_specifier begin_name j unit task mirror impl end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit task end_name end_type begin_name task end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name task end_name end_name begin_operator EQ end_operator begin_name task end_name end_expr end_expr_stmt end_block 
 begin_comment get the file that contains the class source param classname the name of the required class return the file instance zip or java containing the source or null if the source for the class could not be found exception io exception if the files in the sourcepath cannot be read end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get source container end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name source location end_name begin_init begin_expr begin_call begin_name begin_name classname end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_comment we look through the source path elements if the element is a dir end_comment begin_comment we look for the file if it is a zip we look for the zip entry end_comment begin_comment this isn t normal for source paths but we get it for free end_comment begin_return begin_expr begin_call begin_name get resource container end_name begin_argument_list begin_argument begin_expr begin_name source location end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name source path end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment execute all nested tasks throws build exception if one of the nested tasks fails end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name nested tasks end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name task end_name end_type begin_name nested task end_name begin_init begin_expr begin_operator LPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nested task end_name begin_operator DOT end_operator begin_name perform end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name close current end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name current stream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name current stream end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment since ant 1 6 end_comment begin_type begin_name begin_name j unit task mirror end_name begin_operator DOT end_operator begin_name j unit result formatter mirror end_name end_name end_type begin_name create formatter end_name begin_parameter_list begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name loader end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name classname end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment although this code appears to duplicate that of classpath utils new instance end_comment begin_comment we cannot use that because this formatter may run in a forked process end_comment begin_comment without that class end_comment begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name f end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_if begin_condition begin_expr begin_name loader end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name f end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name f end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name loader end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name classname end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name e end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name loader end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name classname end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name e end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name o end_name begin_operator EQ end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name o end_name begin_operator UNP end_operator begin_name begin_name j unit task mirror end_name begin_operator DOT end_operator begin_name j unit result formatter mirror end_name end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name classname end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name begin_name j unit task mirror end_name begin_operator DOT end_operator begin_name j unit result formatter mirror end_name end_name end_type begin_name r end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name j unit task mirror end_name begin_operator DOT end_operator begin_name j unit result formatter mirror end_name end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name use file end_name begin_operator UNP end_operator begin_name out file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered output stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name out file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name out file end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name set output end_name end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name r end_name end_expr end_return end_block 
 begin_comment set the string to use as input param input string the string which is used as the input source end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set input string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name input string end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name input string end_name end_name begin_operator EQ end_operator begin_name input string end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test empty end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name java resource test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convert a single file param src name name of the input file param dest name name of the input file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name convert end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name src name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name dest name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name src file end_name end_decl end_decl_stmt begin_comment file to convert end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dest file end_name end_decl end_decl_stmt begin_comment where to put the results end_comment begin_comment build the full file names end_comment begin_expr_stmt begin_expr begin_name src file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name src dir end_name end_expr end_argument begin_argument begin_expr begin_name src name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name dest file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dest dir end_name end_expr end_argument begin_argument begin_expr begin_name dest name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment make sure we re not about to clobber something end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name src file end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name src file end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment make intermediate directories if needed end_comment begin_comment xxx jdk 1 1 doesn t have file get parent file end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parent name end_name begin_init begin_expr begin_call begin_name begin_name dest file end_name begin_operator DOT end_operator begin_name get parent end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name parent name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name parent file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name parent name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name parent file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name parent file end_name begin_operator DOT end_operator begin_name mkdirs end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name parent name end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name src name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name native 2 ascii adapter end_name end_type begin_name ad end_name begin_init begin_expr begin_call begin_name begin_name native 2 ascii adapter factory end_name begin_operator DOT end_operator begin_name get adapter end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name facade end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name ad end_name begin_operator DOT end_operator begin_name convert end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name src file end_name end_expr end_argument begin_argument begin_expr begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test create md 5 su mformat end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment executes the task p builds a command line to execute cleartool and then calls exec s run method to execute the command line throws build exception if the command fails and failonerr is set to true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name command line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name a proj end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment default the viewpath to basedir if it is not specified end_comment begin_if begin_condition begin_expr begin_call begin_name get view path end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set view path end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name a proj end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment build the command line from what we got the format is end_comment begin_comment cleartool checkin options viewpath end_comment begin_comment as specified in the cleartool exe help end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get clear tool command end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name command mkbl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check options end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get fail on err end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get baseline root name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name run end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name is failure end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get fail on err end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment set whether literals are treated as binary rather than net rexx types param binary a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set binary end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name binary end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name binary end_name end_name begin_operator EQ end_operator begin_name binary end_name end_expr end_expr_stmt end_block 
 begin_comment constructor for dummy instances see base filter reader base filter reader end_comment begin_specifier end_specifier begin_name tail filter end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test that passes xnew to sun s rmic throws exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test xnew end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convert a file to a file url return the url or null if it isn t valid and the active error policy is not to raise a fault throws build exception if the file is missing not a file and the policy requires failure at this point end_comment begin_type begin_specifier end_specifier begin_name url end_name end_type begin_name file to url end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name message end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name message end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name file end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name message end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name message end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name file end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_if begin_condition begin_expr begin_name message end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name to url end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name message end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_comment here if there is an error end_comment begin_switch begin_condition begin_expr begin_name on error end_name end_expr end_condition begin_block begin_case begin_expr begin_name begin_name on error end_name begin_operator DOT end_operator begin_name fail all end_name end_name end_expr begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_case begin_case begin_expr begin_name begin_name on error end_name begin_operator DOT end_operator begin_name fail end_name end_name end_expr begin_comment fall through end_comment end_case begin_case begin_expr begin_name begin_name on error end_name begin_operator DOT end_operator begin_name report end_name end_name end_expr begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name begin_name on error end_name begin_operator DOT end_operator begin_name ignore end_name end_name end_expr begin_comment log at a lower level end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_default begin_comment ignore the problem end_comment begin_break end_break end_default end_block end_switch begin_return begin_expr end_expr end_return end_block 
 begin_comment if set to true ant will also accept packages that only hold package html files but no java sources param b a code boolean code value since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set include no source packages end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name include no source packages end_name end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment set the replace flag param replace the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set replace end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name replace end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m replace end_name begin_operator EQ end_operator begin_name replace end_name end_expr end_expr_stmt end_block 
 begin_comment creates a new instance of a task since ant 1 6 param task type the name of the task to create an instance of must not be code null code return an instance of the specified task or code null code if the task name is not recognised exception build exception if the task name is recognised but task creation fails end_comment begin_type begin_specifier end_specifier begin_name task end_name end_type begin_name create new task end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name task type end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name get component class end_name begin_argument_list begin_argument begin_expr begin_name task type end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name obj end_name begin_init begin_expr begin_call begin_name create component end_name begin_argument_list begin_argument begin_expr begin_name task type end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name obj end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name obj end_name begin_operator UNP end_operator begin_name task end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name task type end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name obj end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name task end_name end_type begin_name task end_name begin_init begin_expr begin_operator LPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_name obj end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name set task type end_name end_name begin_argument_list begin_argument begin_expr begin_name task type end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment set default value can be changed by the user end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name set task name end_name end_name begin_argument_list begin_argument begin_expr begin_name task type end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name task type end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name task end_name end_expr end_return end_block 
 begin_comment get the value of platform return value of platform end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get platform end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name platform end_name end_expr end_return end_block 
 begin_comment output file name for the history param outfile the output file name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name outfile end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name outfile end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal output filename end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name outfile end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment whether the compiler should force catching of exceptions by explicitly named types param strictsignal a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set strictsignal end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name strictsignal end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name strictsignal end_name end_name begin_operator EQ end_operator begin_name strictsignal end_name end_expr end_expr_stmt end_block 
 begin_comment set the host to ping param host the host to ping end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set host end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name host end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name host end_name end_name begin_operator EQ end_operator begin_name host end_name end_expr end_expr_stmt end_block 
 begin_comment set whether to preserve the last modified time as the original files param preserve true if timestamps should be preserved since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set preserve last modified end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name preserve end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name preserve last modified end_name begin_operator EQ end_operator begin_name preserve end_name end_expr end_expr_stmt end_block 
 begin_comment tests vss history commandline generation with date calculation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test history command line 3 end_name begin_parameter_list end_parameter_list begin_block begin_comment set up a timestamp end_comment begin_decl_stmt begin_decl begin_type begin_name tstamp end_name end_type begin_name tstamp end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name tstamp end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name location end_name end_type begin_name location end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name location end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tstamp end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tstamp end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name tstamp end_name begin_operator DOT end_operator begin_name custom format end_name end_name end_type begin_name format end_name begin_init begin_expr begin_call begin_name begin_name tstamp end_name begin_operator DOT end_operator begin_name create format end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name format end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name format end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name format end_name begin_operator DOT end_operator begin_name set timezone end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name date end_name end_type begin_name date end_name begin_init begin_expr begin_call begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get time end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name format end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name date end_name end_expr end_argument begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name today end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment get today s date end_comment begin_decl_stmt begin_decl begin_type begin_name simple date format end_name end_type begin_name sdf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name simple date format end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sdf end_name begin_operator DOT end_operator begin_name set time zone end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name time zone end_name begin_operator DOT end_operator begin_name get time zone end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name expected end_name begin_init begin_expr begin_call begin_name begin_name sdf end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_name date end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment set up a vss history task end_comment begin_decl_stmt begin_decl begin_type begin_name msvsshistory end_name end_type begin_name vss history end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name msvsshistory end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss history end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss history end_name begin_operator DOT end_operator begin_name set login end_name end_name begin_argument_list begin_argument begin_expr begin_name vss username end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss history end_name begin_operator DOT end_operator begin_name set to date end_name end_name begin_argument_list begin_argument begin_expr begin_name today end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss history end_name begin_operator DOT end_operator begin_name set vsspath end_name end_name begin_argument_list begin_argument begin_expr begin_name vss project path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s test cmd line end_name begin_init begin_expr begin_block begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name ss exe end_name end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name command history end_name end_name end_expr begin_expr begin_name ds vss project path end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag autoresponse def end_name end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag version date end_name end_name begin_operator PLUS end_operator begin_name expected end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag login end_name end_name begin_operator PLUS end_operator begin_name vss username end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name commandline end_name begin_operator EQ end_operator begin_call begin_name begin_name vss history end_name begin_operator DOT end_operator begin_name build cmd line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check command lines end_name begin_argument_list begin_argument begin_expr begin_name s test cmd line end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a name entry on the include files list return an name entry object to be configured end_comment begin_type begin_specifier end_specifier begin_name begin_name pattern set end_name begin_operator DOT end_operator begin_name name entry end_name end_name end_type begin_name create excludes file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name create excludes file end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment create all tt j unit test tt s based on the filesets each instance is configured to match this instance properties return the array of all tt j unit test tt s that belongs to this batch end_comment begin_type begin_specifier end_specifier begin_name j unit test end_name begin_index end_index end_type begin_name create all j unit test end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name filenames end_name begin_init begin_expr begin_call begin_name get filenames end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name j unit test end_name begin_index end_index end_type begin_name tests end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name j unit test end_name begin_index begin_expr begin_name begin_name filenames end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name tests end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name classname end_name begin_init begin_expr begin_call begin_name java to class end_name begin_argument_list begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name tests end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name create j unit test end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name tests end_name end_expr end_return end_block 
 begin_comment computes a hashvalue for a file content it reads the content of a file convert that to string and use the string hash code method param file the file for which the value should be computed return the hashvalue or i null i if the file couldn t be read end_comment begin_comment because the content is only read the file will not be damaged i tested end_comment begin_comment with jpg zip and pdf as binary files end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get value end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name can read end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file input stream end_name end_name end_type begin_name fis end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file input stream end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name content end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_call begin_name begin_name fis end_name begin_operator DOT end_operator begin_name available end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fis end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name content end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fis end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name s end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name content end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name hash end_name begin_init begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name hash code end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name hash end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block end_catch end_try end_block 
 begin_comment whether any of the arguments given via lt compilerarg gt implies that compilation to native code is requested return true if compilation to native code is requested since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is native build end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name native build end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name additional arguments end_name begin_init begin_expr begin_call begin_name get javac end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get current compiler args end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name args length end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator UNP end_operator begin_name native build end_name begin_operator UNP end_operator begin_name args length end_name begin_operator LT end_operator begin_name begin_name additional arguments end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name conflict length end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator UNP end_operator begin_name native build end_name begin_operator UNP end_operator begin_name conflict length end_name begin_operator LT end_operator begin_name begin_name conflict with dash c end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name native build end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name begin_name additional arguments end_name begin_index begin_expr begin_name args length end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name starts with end_name begin_argument_list begin_argument begin_expr begin_name begin_name conflict with dash c end_name begin_index begin_expr begin_name conflict length end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name conflict length end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name args length end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_name native build end_name end_expr end_return end_block 
 begin_comment parse the checksum octal integer from a header buffer param value the header value param buf the buffer from which to parse param offset the offset into the buffer from which to parse param length the number of header bytes to parse return the integer value of the entry s checksum end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name get check sum octal bytes end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name value end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name buf end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name offset end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name length end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get octal bytes end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name buf end_name begin_index begin_expr begin_name offset end_name begin_operator PLUS end_operator begin_name length end_name begin_operator MINUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name buf end_name begin_index begin_expr begin_name offset end_name begin_operator PLUS end_operator begin_name length end_name begin_operator MINUS end_operator end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr begin_name offset end_name begin_operator PLUS end_operator begin_name length end_name end_expr end_return end_block 
 begin_comment the file to disassemble required param source file the file to disassemble end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set source file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name source file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name source file end_name end_name begin_operator EQ end_operator begin_name source file end_name end_expr end_expr_stmt end_block 
 begin_comment javac task for compilation of java files end_comment begin_specifier end_specifier begin_name javac end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name facade end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name facade task helper end_name begin_argument_list begin_argument begin_expr begin_call begin_name assumed java version end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name units end_name end_expr end_return end_block 
 begin_comment set the logging level level should be one of ul li error li li warning li li info li li verbose li li debug li ul p the default is quot warning quot to ensure that messages are displayed by default when using the quiet command line option p param echo level the logging level end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set level end_name begin_parameter_list begin_param begin_decl begin_type begin_name echo level end_name end_type begin_name echo level end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name log level end_name begin_operator EQ end_operator begin_call begin_name begin_name echo level end_name begin_operator DOT end_operator begin_name get level end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment called when an endelement is seen this may be overridden in derived classes this updates the ejbfiles if the element is an interface or a bean class this updates the ejbname if the element is an ejb name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process element end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name in ejb ref end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name parse state end_name begin_operator UNP end_operator begin_name state in entity end_name begin_operator UNP end_operator begin_name parse state end_name begin_operator UNP end_operator begin_name state in session end_name begin_operator UNP end_operator begin_name parse state end_name begin_operator UNP end_operator begin_name state in message end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name current element end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name home interface end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name current element end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name remote interface end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name current element end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name local interface end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name current element end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name local home interface end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name current element end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name bean class end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name current element end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name pk class end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment get the filename into a string object end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name class file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name class name end_name begin_init begin_expr begin_call begin_name begin_name current text end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment if it s a primitive wrapper then we shouldn t try and put end_comment begin_comment it into the jar so ignore it end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name class name end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name class name end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment translate periods into path separators add class to the end_comment begin_comment name create the file object and add it to the hashtable end_comment begin_expr_stmt begin_expr begin_name class name end_name begin_operator EQ end_operator begin_call begin_name begin_name class name end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name class name end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name class file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name src dir end_name end_expr end_argument begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ejb files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument begin_argument begin_expr begin_name class file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_comment get the value of the ejb name tag only the first occurrence end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name current element end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name ejb name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name ejb name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ejb name end_name begin_operator EQ end_operator begin_call begin_name begin_name current text end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block 
 begin_comment if true warning messages are suppressed param nwarn the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set no warn end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name nwarn end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m nwarn end_name begin_operator EQ end_operator begin_name nwarn end_name end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment the main method the main method creates an instance of the dd creator helper passing it the args which it then processes param args the arguments throws exception on error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name dd creator helper end_name end_type begin_name helper end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name dd creator helper end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name process end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 7 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the name of this header return name as string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test with empty prefix and regex end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_name test value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment validate nested elements exception build exception if any supplied attribute is invalid or any mandatory attribute is missing end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate replacefilters end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name replacefilters end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name replacefilter end_name end_type begin_name element end_name begin_init begin_expr begin_operator LPAR end_operator begin_name replacefilter end_name begin_operator RPAR end_operator begin_call begin_name begin_name replacefilters end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name validate end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment creates a new code tar file set code instance using a fileset as a constructor argument param fileset a code file set code value end_comment begin_specifier end_specifier begin_name tar file set end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name fileset end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name fileset end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test read bad file end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment force a refresh of files if this attribute is set false by default param force sync all files whether they are supposed to be already uptodate or not throws build exception if a label is set and force is null end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set force end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name force end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name force end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name label end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name p 4 cmd opts end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_name class end_name end_type begin_name get type class end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name ant type definition end_name end_type begin_name def end_name begin_init begin_expr begin_call begin_name get definition end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator LPAR end_operator begin_name def end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name get type class end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment remove an extra fields param type the type of extra field to remove since 1 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name remove extra field end_name begin_parameter_list begin_param begin_decl begin_type begin_name zip short end_name end_type begin_name type end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name extra fields end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name extra fields end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name done end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init begin_operator UNP end_operator begin_name fields size end_name begin_init begin_expr begin_call begin_name begin_name extra fields end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_operator UNP end_operator begin_name done end_name begin_operator UNP end_operator begin_name i end_name begin_operator LT end_operator begin_name fields size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name zip extra field end_name begin_operator RPAR end_operator begin_call begin_name begin_name extra fields end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get header id end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name type end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name extra fields end_name begin_operator DOT end_operator begin_name remove element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name done end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name done end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name util end_name begin_operator DOT end_operator begin_name no such element exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name set extra end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the source safe username param username the new username value ant attribute group required end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set username end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name username end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name sos username end_name begin_operator EQ end_operator begin_name username end_name end_expr end_expr_stmt end_block 
 begin_comment from now the methods are all related to dom tree manipulation end_comment begin_comment write the dom tree to a file param doc the xml document to dump to disk param file the filename to write the document to should obviouslly be a xml file throws io exception thrown if there is an error while writing the content end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write dom tree end_name begin_parameter_list begin_param begin_decl begin_type begin_name document end_name end_type begin_name doc end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name print writer end_name end_type begin_name wri end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered output stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name wri end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name output stream writer end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name wri end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name dom element writer end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name write end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name get document element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name wri end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name wri end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment writers do not throw exceptions so check for them end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name wri end_name begin_operator DOT end_operator begin_name check error end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name wri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment pass output sent to system out to specified output file param output a string of output on its way to the handlers since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name handle output end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name handle output end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment not significant for the class loader end_comment begin_comment empty implementation to satisfy the build listener interface param event the task started event end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_comment not significant for the class loader end_comment end_block 
 begin_comment return name of compatibility level return the name of compatibility level end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_comment see directory scanner set case sensitive end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set case sensitive end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name is case sensitive end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment delete a symlink without deleting the associated resource p this is a convenience method that simply invokes code delete symlink java io file code param path a string containing the path of the symlink to delete throws file not found exception when the path results in a code file code that doesn t exist throws io exception if calls to code file rename code or code file delete code fail end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name delete symlink end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name file not found exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name delete symlink end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name flex integer test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns a stream to read the requested resource name from this loader param name the name of the resource for which a stream is required must not be code null code return a stream to the required resource or code null code if the resource cannot be found on the loader s classpath end_comment begin_type begin_specifier end_specifier begin_name input stream end_name end_type begin_name load resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_comment we need to search the components of the path to see if we can end_comment begin_comment find the class we want end_comment begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name stream end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name path components end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name stream end_name begin_operator EQT end_operator end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name path component end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name stream end_name begin_operator EQ end_operator begin_call begin_name get resource stream end_name begin_argument_list begin_argument begin_expr begin_name path component end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_name stream end_name end_expr end_return end_block 
 begin_comment called in execute or create property via get new project if new project is null p this can happen if the same instance of this task is run twice as new project is set to null at the end of execute to save memory and help the gc p p calls init again p end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name reinit end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name init end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment replaces code xxx code style constructions in the given value with the string value of the corresponding data types param ns the namespace for the property param value the string to be scanned for property references may be code null code in which case this method returns immediately with no effect param keys mapping string to string of property names to their values if code null code only project properties will be used exception build exception if the string contains an opening code code without a closing code code return the original string with the properties replaced or code null code if the original string is code null code end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name replace properties end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name ns end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name keys end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name value end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name value end_name end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name fragments end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name property refs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name parse property string end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr begin_name fragments end_name end_expr end_argument begin_argument begin_expr begin_name property refs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name fragments end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name j end_name begin_init begin_expr begin_call begin_name begin_name property refs end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name fragment end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name fragment end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name property name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name j end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name replacement end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment try to get it from the project or keys end_comment begin_comment backward compatibility end_comment begin_if begin_condition begin_expr begin_name keys end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name replacement end_name begin_operator EQ end_operator begin_call begin_name begin_name keys end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name property name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name replacement end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name replacement end_name begin_operator EQ end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name ns end_name end_expr end_argument begin_argument begin_expr begin_name property name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name replacement end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name property name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name fragment end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name replacement end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name begin_name replacement end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_operator PLUS end_operator begin_name property name end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name fragment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return a reasonable attribute name for the given node if we are using semantic attributes or collapsing attributes the returned name is nodename otherwise we return nodename this is long standing and default lt xmlproperty gt behavior end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get attribute name end_name begin_parameter_list begin_param begin_decl begin_type begin_name node end_name end_type begin_name attribute node end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name attribute name end_name begin_init begin_expr begin_call begin_name begin_name attribute node end_name begin_operator DOT end_operator begin_name get node name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name semantic attributes end_name end_expr end_condition begin_then begin_block begin_comment never include the refid attribute as part of the end_comment begin_comment attribute name end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name attribute name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name ref id end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return begin_comment otherwise return it appended unless property to hide it is set end_comment end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is semantic attribute end_name begin_argument_list begin_argument begin_expr begin_name attribute name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name include semantic attribute end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator PLUS end_operator begin_name attribute name end_name end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr end_expr end_return end_block end_else end_if end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_name collapse attributes end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator PLUS end_operator begin_name attribute name end_name end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_operator PLUS end_operator begin_name attribute name end_name begin_operator PLUS end_operator end_expr end_return end_block end_else end_if end_else end_if end_block 
 begin_comment api method to set the xsl resource param xsl resource resource to set as the stylesheet since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set xsl resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name xsl resource end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name xsl resource end_name end_name begin_operator EQ end_operator begin_name xsl resource end_name end_expr end_expr_stmt end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test load a file enc end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment writes the local file header entry param ze the entry to write throws io exception on error since 1 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write local file header end_name begin_parameter_list begin_param begin_decl begin_type begin_name zip entry end_name end_type begin_name ze end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name offsets end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name ze end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name zip long end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name written end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_name lfh sig end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name written end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_comment store method in local variable to prevent multiple method calls end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name zip method end_name begin_init begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment version needed to extract end_comment begin_comment general purpose bit flag end_comment begin_if begin_condition begin_expr begin_name zip method end_name begin_operator EQT end_operator begin_name deflated end_name begin_operator UNP end_operator begin_name raf end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment requires version 2 as we are going to store length info end_comment begin_comment in the data descriptor end_comment begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip short end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment bit 3 set to signal we use a data descriptor end_comment begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip short end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip short end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_name zero end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name written end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_comment compression method end_comment begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip short end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name zip method end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name written end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_comment last mod time and date end_comment begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_call begin_name to dos time end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get time end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name written end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_comment crc end_comment begin_comment compressed length end_comment begin_comment uncompressed length end_comment begin_expr_stmt begin_expr begin_name local data start end_name begin_operator EQ end_operator begin_name written end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name zip method end_name begin_operator EQT end_operator begin_name deflated end_name begin_operator UNP end_operator begin_name raf end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_name lzero end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_name lzero end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_name lzero end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip long end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get crc end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip long end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip long end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name written end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_comment file name length end_comment begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name name end_name begin_init begin_expr begin_call begin_name get bytes end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip short end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name name end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name written end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_comment extra field length end_comment begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name extra end_name begin_init begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get local file data extra end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip short end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name extra end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name written end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_comment file name end_comment begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name written end_name begin_operator UNP end_operator begin_name begin_name name end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_expr_stmt begin_comment extra field end_comment begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_name extra end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name written end_name begin_operator UNP end_operator begin_name begin_name extra end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name data start end_name begin_operator EQ end_operator begin_name written end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test called from top level ant end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name do multiple transfer end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name j sch exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name channel sftp end_name end_type begin_name channel end_name begin_init begin_expr begin_call begin_name open sftp channel end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name connect end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name cd end_name end_name begin_argument_list begin_argument begin_expr begin_name remote path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name directory list end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name directory end_name end_type begin_name current end_name begin_init begin_expr begin_operator LPAR end_operator begin_name directory end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name send directory end_name begin_argument_list begin_argument begin_expr begin_name channel end_name end_expr end_argument begin_argument begin_expr begin_name current end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name sftp exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j sch exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name channel end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name disconnect end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_specifier end_specifier begin_name delete test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the vendor of the extensions implementation return the vendor of the extensions implementation end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get implementation vendor end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name implementation vendor end_name end_expr end_return end_block 
 begin_comment enable full schema checking slower but better param full checking a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set full checking end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name full checking end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name full checking end_name end_name begin_operator EQ end_operator begin_name full checking end_name end_expr end_expr_stmt end_block 
 begin_comment take the first code count code elements return a collection of resources end_comment begin_type begin_specifier end_specifier begin_name collection end_name end_type begin_name get collection end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ct end_name begin_init begin_expr begin_call begin_name get count end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ct end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name bad count end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name get resource collection end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name array list end_name end_type begin_name al end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list begin_argument begin_expr begin_name ct end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name ct end_name begin_operator UNP end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name al end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name al end_name end_expr end_return end_block 
 begin_comment a compare function to compare this with another nested sequential it calls similar on the nested unknown elements param other the nested sequential to compare with return true if they are similar false otherwise end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name similar end_name begin_parameter_list begin_param begin_decl begin_type begin_name nested sequential end_name end_type begin_name other end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name nested end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name nested end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name nested end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name unknown element end_name end_type begin_name me end_name begin_init begin_expr begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_call begin_name begin_name nested end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name unknown element end_name end_type begin_name o end_name begin_init begin_expr begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name nested end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name me end_name begin_operator DOT end_operator begin_name similar end_name end_name begin_argument_list begin_argument begin_expr begin_name o end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_name bft end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convert ant regexp substitution option to oro options param options the ant regexp options return the oro substition options end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get subs options end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name options end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name replace all end_name begin_init begin_expr begin_call begin_name begin_name regexp util end_name begin_operator DOT end_operator begin_name has flag end_name end_name begin_argument_list begin_argument begin_expr begin_name options end_name end_expr end_argument begin_argument begin_expr begin_name replace all end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name subs options end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name replace all end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name subs options end_name begin_operator EQ end_operator begin_name begin_name util end_name begin_operator DOT end_operator begin_name substitute all end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name subs options end_name end_expr end_return end_block 
 begin_comment performs the check for circular references and returns the referenced object param required class the class that this reference should be a subclass of param data type name the name of the datatype that the reference should be error message use only return the dereferenced object throws build exception if the reference is invalid circular ref wrong class etc end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name get checked ref end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name class end_name end_type begin_name required class end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name data type name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name get checked ref end_name begin_argument_list begin_argument begin_expr begin_name required class end_name end_expr end_argument begin_argument begin_expr begin_name data type name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment sets file parameter s for directory and filename if the attribute filenameparameter or filedirparameter are set in the task param liaison to change parameters for param in file to get the additional file information from throws exception if an exception occurs on filename lookup since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set liaison dynamic file parameters end_name begin_parameter_list begin_param begin_decl begin_type begin_name xslt liaison end_name end_type begin_name liaison end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name in file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name file name parameter end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name liaison end_name begin_operator DOT end_operator begin_name add param end_name end_name begin_argument_list begin_argument begin_expr begin_name file name parameter end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name in file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name file dir parameter end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file name end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get relative path end_name end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument begin_argument begin_expr begin_name in file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name file name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment give always a slash as file separator so the stylesheet could be sure about that end_comment begin_comment use so a dir name would not result in an absolute path end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name liaison end_name begin_operator DOT end_operator begin_name add param end_name end_name begin_argument_list begin_argument begin_expr begin_name file dir parameter end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get parent end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get parent end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment sets the name of the file containing the includes patterns param excludesfile a string containing the filename to fetch the include patterns from end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set excludesfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name excludesfile end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name used matching task end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set excludesfile end_name end_name begin_argument_list begin_argument begin_expr begin_name excludesfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the secondary descriptor of the given item type returns null if there isn t one param t an item type at this point it will always be file return the specified item s secondary descriptor there may not be one for every file end_comment begin_type begin_specifier end_specifier begin_name property end_name end_type begin_name get secondary descriptor end_name begin_parameter_list begin_param begin_decl begin_type begin_name type end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name property end_name begin_index end_index end_type begin_name properties end_name begin_init begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get properties end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name properties end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name property end_name end_type begin_name p end_name begin_init begin_expr begin_name begin_name properties end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name is descriptor end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name is primary descriptor end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name p end_name end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_comment method to retrieve the file utils which is shared by all users of this method return an instance of file utils since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name file utils end_name end_type begin_name get file utils end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name primary instance end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test doubly nested fileset end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment process each file that makes up this bundle end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process bundle end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name bundle file end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name i end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name check loaded end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name props file end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name bundle file end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file input stream end_name end_type begin_name ins end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name ins end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name props file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name loaded end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name bundle last modified end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name begin_name props file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name props file end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name load resource map end_name begin_argument_list begin_argument begin_expr begin_name ins end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name props file end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment if all resource files associated with this bundle end_comment begin_comment have been scanned for and still not able to end_comment begin_comment find a single resrouce file throw exception end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name loaded end_name begin_operator UNP end_operator begin_name check loaded end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_catch end_try end_block 
 begin_comment sets the executable and add the required attributes to the command line end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get required attributes end_name begin_parameter_list end_parameter_list begin_block begin_comment get the path to the soscmd exe end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get sos command end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment sos server address is required end_comment begin_if begin_condition begin_expr begin_call begin_name get sos server path end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag sos server end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get sos server path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment login info is required end_comment begin_if begin_condition begin_expr begin_call begin_name get username end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag username end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get username end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment the sos class knows that the sos server needs the password flag end_comment begin_comment even if there is no password so we send a end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag password end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get password end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment vss info is required end_comment begin_if begin_condition begin_expr begin_call begin_name get vss server path end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag vss server end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get vss server path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment vss project is required end_comment begin_if begin_condition begin_expr begin_call begin_name get project path end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment force the task to be reconfigured from its runtime configurable end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name reconfigure end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name wrapper end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name wrapper end_name begin_operator DOT end_operator begin_name reconfigure end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment set the directory containing the source code for the home interface remote interface and public key class definitions param dir name the directory containg the source tree for the ejb s interface classes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name dir name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name source directory end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dir name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 7 using plain file set end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test 7 end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment pr 38973 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test two pattern sets with excludes end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert file missing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert file missing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a contains selector entry on the selector list param selector the selector to be added end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add contains end_name begin_parameter_list begin_param begin_decl begin_type begin_name contains selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name used matching task end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name add contains end_name end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the port for the david orb required if orb david param in value the new davidport value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set davidport end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name in value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name david port end_name begin_operator EQ end_operator begin_name in value end_name end_expr end_expr_stmt end_block 
 begin_comment optional value to set converted to a boolean value when setting a property param value the value to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test elapsed time end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name text end_name begin_init begin_expr begin_call begin_name begin_name date utils end_name begin_operator DOT end_operator begin_name format elapsed time end_name end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_call begin_name begin_name date utils end_name begin_operator DOT end_operator begin_name format elapsed time end_name end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_call begin_name begin_name date utils end_name begin_operator DOT end_operator begin_name format elapsed time end_name end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_call begin_name begin_name date utils end_name begin_operator DOT end_operator begin_name format elapsed time end_name end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test windows line separator end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set whether default exclusions should be used or not param use default excludes code boolean code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set defaultexcludes end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name use default excludes end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name use default excludes end_name end_name begin_operator EQ end_operator begin_name use default excludes end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ds end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment do any clean up necessary to allow this instance to be used again p when we get here the zip file has been closed and all we need to do is to reset some globals p p this method will only reset globals that have been changed during execute it will not alter the attributes or nested child elements if you want to reset the instance so that you can later zip a completely different set of files you must use the reset method p see reset end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name clean up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name added dirs end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name added files end_name begin_operator DOT end_operator begin_name remove all elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name adding new files end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name do update end_name begin_operator EQ end_operator begin_name saved do update end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name filesets from groupfilesets end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name zip file set end_name end_type begin_name zf end_name begin_init begin_expr begin_operator LPAR end_operator begin_name zip file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name remove element end_name end_name begin_argument_list begin_argument begin_expr begin_name zf end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name filesets from groupfilesets end_name begin_operator DOT end_operator begin_name remove all elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment other constructor param parent the parent file param path a relative path to the parent file end_comment begin_specifier end_specifier begin_name ant ftp file end_name begin_parameter_list begin_param begin_decl begin_type begin_name ant ftp file end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name parent end_name end_name begin_operator EQ end_operator begin_name parent end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name client end_name end_name begin_operator EQ end_operator begin_name begin_name parent end_name begin_operator DOT end_operator begin_name client end_name end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name path elements end_name begin_init begin_expr begin_call begin_name begin_name selector utils end_name begin_operator DOT end_operator begin_name tokenize path end_name end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name client end_name begin_operator DOT end_operator begin_name change working directory end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment this should not happen except if parent has been deleted by another process end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name result end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curpwd end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name parent end_name begin_operator DOT end_operator begin_name curpwd end_name end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name fcount end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name fcount end_name begin_operator LT end_operator begin_call begin_name begin_name path elements end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_condition begin_incr begin_expr begin_name fcount end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name current path element end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name path elements end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name fcount end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name client end_name begin_operator DOT end_operator begin_name change working directory end_name end_name begin_argument_list begin_argument begin_expr begin_name current path element end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name result end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name is case sensitive end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_name remote system case sensitive end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name remote sensitivity checked end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name current path element end_name begin_operator EQ end_operator begin_call begin_name find path element case unsensitive end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curpwd end_name end_name end_expr end_argument begin_argument begin_expr begin_name current path element end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name current path element end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name result end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if end_else end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curpwd end_name end_name begin_operator EQ end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name curpwd end_name end_name begin_operator PLUS end_operator begin_name remote file sep end_name begin_operator PLUS end_operator begin_name current path element end_name end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name path elements end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name fcount end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name curpwd end_name end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_for begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name lastpathelement end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name path elements end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name path elements end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name ftp file end_name begin_index end_index end_type begin_name the files end_name begin_init begin_expr begin_call begin_name list files end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curpwd end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ftp file end_name end_name begin_operator EQ end_operator begin_call begin_name get file end_name begin_argument_list begin_argument begin_expr begin_name the files end_name end_expr end_argument begin_argument begin_expr begin_name lastpathelement end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment visit the constant pool of a class param constant pool the constant pool of the class being visited end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name visit constant pool end_name begin_parameter_list begin_param begin_decl begin_type begin_name constant pool end_name end_type begin_name constant pool end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name constant pool end_name end_name begin_operator EQ end_operator begin_name constant pool end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test echo to bad file end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment initializes the task end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name init end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name xml catalog end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for the load file test object param name description of parameter end_comment begin_specifier end_specifier begin_name load file test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment stores a configured child element within its parent object param project project containing the objects may be code null code param parent parent object to add child to must not be code null code param child child object to store in parent should not be code null code param tag name of element which generated the child may be code null code in which case the child is not stored end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name store child end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name child end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name tag end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name introspection helper end_name end_type begin_name ih end_name begin_init begin_expr begin_call begin_name begin_name introspection helper end_name begin_operator DOT end_operator begin_name get helper end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name store element end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name child end_name end_expr end_argument begin_argument begin_expr begin_name tag end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name regexp matcher end_name end_type begin_name get implementation end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name jakarta regexp matcher end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set the name for this property param name a non null string that specifies an output property name which may be namespace qualified end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment load properties from a file param file file to load throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name load file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name props end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file input stream end_name end_type begin_name fis end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name load end_name end_name begin_argument_list begin_argument begin_expr begin_name fis end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name fis end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fis end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try begin_expr_stmt begin_expr begin_call begin_name add properties end_name begin_argument_list begin_argument begin_expr begin_name props end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment set the private key password so the server can decrypt the ssl private key file optional and only applicable to wl 6 0 param pkpassword the private key password end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set pk password end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name pkpassword end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name pk password end_name end_name begin_operator EQ end_operator begin_name pkpassword end_name end_expr end_expr_stmt end_block 
 begin_comment get the systemid of the appropriate stylesheet based on its name and styledir if no styledir is defined it will load it as a java resource in the xsl child package otherwise it will get it from the given directory return system id of the stylesheet throws io exception thrown if the requested stylesheet does not exist end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get stylesheet system id end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name xslname end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name noframes end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name format end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name xslname end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name style dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name url end_name begin_init begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get resource end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name xslname end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name url end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name file not found exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name xslname end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name to external form end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name style dir end_name end_expr end_argument begin_argument begin_expr begin_name xslname end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name file not found exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name file end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name jaxp utils end_name begin_operator DOT end_operator begin_name get system id end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment filename for web xml return the filename for web xml end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get webxml end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name webxml end_name end_name end_expr end_return end_block 
 begin_comment the name of a file to send the output to instead of patching the file s in place optional param file the file to send the output to since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set destfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set file end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 but case insensitive end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name login suceeded end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name change remote dir end_name begin_argument_list begin_argument begin_expr begin_name remote tmp dir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name ftp directory scanner end_name end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name my ftp task end_name begin_operator DOT end_operator begin_name new scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set case sensitive end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block 
 begin_comment include the semantic attribute name as part of the property name ignored if semantic attributes is not set to true param include semantic attribute if true include the sematic attribute name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set include semantic attribute end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name include semantic attribute end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name include semantic attribute end_name end_name begin_operator EQ end_operator begin_name include semantic attribute end_name end_expr end_expr_stmt end_block 
 begin_comment invalid type specified end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 19 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment override the project working directory param local path the path on disk end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set localpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name local path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal local path end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name local path end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets optionally a change list number param changelist change list that one wants information about throws build exception if the change list number is negative end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set changelist end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name changelist end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name changelist end_name begin_operator LE end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name changelist end_name end_name begin_operator EQ end_operator begin_name changelist end_name end_expr end_expr_stmt end_block 
 begin_comment enable quiet mode defaults to false param quiet the boolean value for quiet end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set quiet end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name quiet end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal quiet end_name end_name begin_argument_list begin_argument begin_expr begin_name quiet end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the source file of the message param src the source of the message end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name message source end_name end_name begin_operator EQ end_operator begin_name src end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test echo to good file xml end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment read in the file end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name create relative file end_name begin_argument_list begin_argument begin_expr begin_name good outfile xml end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file reader end_name end_type begin_name fr end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file reader end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name br end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_name fr end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name read end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name read end_name begin_operator EQ end_operator begin_call begin_name begin_name br end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name read end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name test value end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_comment found the property we set it s good end_comment begin_return end_return end_block end_then end_if end_block end_while begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fr end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name output stream end_name end_type begin_name get output stream end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name out end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name out end_name end_expr end_expr_stmt begin_return begin_expr begin_name out end_name end_expr end_return end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no property defined end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the class of the permission return the class name of the permission end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get class name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name class name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test single check failure end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list begin_argument begin_expr begin_name single check end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name execute targets end_name begin_argument_list begin_argument begin_expr begin_name target names end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name target count end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment set is the name location of where to create the tar file param tar file the location of the tar file deprecated since 1 5 x for consistency with other tasks please use set dest file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set tarfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name tar file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name tar file end_name end_name begin_operator EQ end_operator begin_name tar file end_name end_expr end_expr_stmt end_block 
 begin_comment converts the buffer to a string and sends it to the project param buffer the byte array output stream used to collect the output until a line separator is seen see project demux output string boolean end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process buffer end_name begin_parameter_list begin_param begin_decl begin_type begin_name byte array output stream end_name end_type begin_name buffer end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name output end_name begin_init begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name demux output end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument begin_argument begin_expr begin_name is error stream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name reset buffer info end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment all and characters are replaced by code file separator char code so the separator used need not match code file separator char code p when a pattern ends with a or is appended since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name normalize pattern end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name pattern end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name pattern end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name pattern end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name pattern end_name end_expr end_return end_block 
 begin_comment see java lang object hash code return a hashcode based on the version main and sections end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name hash code end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name hash code end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name manifest version end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name hash code end_name begin_operator UNP end_operator begin_call begin_name begin_name manifest version end_name begin_operator DOT end_operator begin_name hash code end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name hash code end_name begin_operator UNP end_operator begin_call begin_name begin_name main section end_name begin_operator DOT end_operator begin_name hash code end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name hash code end_name begin_operator UNP end_operator begin_call begin_name begin_name sections end_name begin_operator DOT end_operator begin_name hash code end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name hash code end_name end_expr end_return end_block 
 begin_comment equality depending in the index param other the object to test equality against return true if the object has the same index as this end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name other end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_name other end_name begin_operator UNP end_operator begin_name add asis remove end_name begin_operator UNP end_operator begin_call begin_name get index end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name add asis remove end_name begin_operator RPAR end_operator begin_name other end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get index end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set the name of the current project param name name of the current project end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set current project name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name current project name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment initialize the script runner calls this before running the system end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init script runner end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name runner end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set project component end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name runner end_name begin_operator EQ end_operator begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name get script runner end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment override the superclasses version of this method which we call with a check for a definitions attribute the contents of which are appended to the list return the definitions parameter to csc end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get definitions parameter end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name predecessors end_name begin_init begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get definitions parameter end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name not empty end_name begin_argument_list begin_argument begin_expr begin_name definitions end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name predecessors end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name predecessors end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name predecessors end_name begin_operator PLUS end_operator begin_name definitions end_name end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_name predecessors end_name end_expr end_return end_block end_else end_if end_block 
 begin_comment write a task level message to the log with the given log level param task the task to use in the log must not be code null code param message the text to log should not be code null code param throwable the exception causing this log may be code null code param msg level the log priority level to use since 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name task end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name throwable end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name msg level end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fire message logged end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name throwable end_name end_expr end_argument begin_argument begin_expr begin_name msg level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment setter for cache class param classname new value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set cache class end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name cache class end_name begin_operator EQ end_operator begin_name classname end_name end_expr end_expr_stmt end_block 
 begin_comment again properties are mutable in this tsk throws build exception if the required parameters are not supplied end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name counter end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name counter end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name should set value end_name begin_operator UNP end_operator begin_name should set property end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name command end_name begin_init begin_expr begin_operator PLUS end_operator begin_name p 4 cmd opts end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name counter end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name should set property end_name end_expr end_condition begin_then begin_block begin_comment note kirk radik com 04 april 2001 if you put in the s you end_comment begin_comment have to start running through regular expressions here much easier end_comment begin_comment to just not include the scripting information than to try to add it end_comment begin_comment and strip it later end_comment begin_expr_stmt begin_expr begin_name command end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name command end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name should set value end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name command end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_name value end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name should set property end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name my proj end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name p 4 handler end_name end_type begin_name handler end_name begin_init begin_expr begin_operator UNP end_operator begin_class begin_super begin_name p 4 handler adapter end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name line end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name my proj end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name number format exception end_name end_type begin_name nfe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_function end_block end_class end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name exec p 4 command end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument begin_argument begin_expr begin_name handler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name exec p 4 command end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name simple p 4 output handler end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment add a list of source files upon which to operate param list the file list to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add filelist end_name begin_parameter_list begin_param begin_decl begin_type begin_name file list end_name end_type begin_name list end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name list end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name case test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the type attribute return a code string code value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get type end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name type end_name end_expr end_return end_block 
 begin_comment for the generic deployment tool do nothing vendor specific subclasses should throw a build exception if the configuration is invalid for their server end_comment begin_comment this method returns a list of ejb files found when the specified ejb descriptor is parsed and processed param descriptor file name string representing the file name of an ejb descriptor to be processed param sax parser sax parser which may be used to parse the xml descriptor return hashtable of ejb class and other files to be added to the completed jar file throws sax exception any sax exception possibly wrapping another exception throws io exception an io exception from the parser possibly from a the byte stream or character stream end_comment begin_type begin_specifier end_specifier begin_name hashtable end_name end_type begin_name parse ejb files end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name descriptor file name end_name end_decl end_param begin_param begin_decl begin_type begin_name sax parser end_name end_type begin_name sax parser end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file input stream end_name end_type begin_name descriptor stream end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name ejb files end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_comment parse the ejb deployment descriptor while it may not look like much we use a sax parser and an inner class to get hold of all the classfile names for the descriptor end_comment begin_expr_stmt begin_expr begin_name descriptor stream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name config end_name begin_operator DOT end_operator begin_name descriptor dir end_name end_name end_expr end_argument begin_argument begin_expr begin_name descriptor file name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sax parser end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name input source end_name begin_argument_list begin_argument begin_expr begin_name descriptor stream end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name handler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ejb files end_name begin_operator EQ end_operator begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name get files end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name descriptor stream end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name descriptor stream end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name close exception end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_then end_if end_block end_finally end_try begin_return begin_expr begin_name ejb files end_name end_expr end_return end_block 
 begin_comment flag default false to only generate the deployment code do not run rmic or javac param codegen option end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set codegen end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name codegen end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name codegen end_name end_name begin_operator EQ end_operator begin_name codegen end_name end_expr end_expr_stmt end_block 
 begin_comment handle errors based on the setting of failonerror param msg the message to log or include in the code build exception code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle error end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name failonerror end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a named task and configures it up to the init stage param ue the unknown element to create the real task for must not be code null code param w ignored return the task specified by the given unknown element or code null code if the task name is not recognised end_comment begin_type begin_specifier end_specifier begin_name task end_name end_type begin_name make task end_name begin_parameter_list begin_param begin_decl begin_type begin_name unknown element end_name end_type begin_name ue end_name end_decl end_param begin_param begin_decl begin_type begin_name runtime configurable end_name end_type begin_name w end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name task end_name end_type begin_name task end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create task end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ue end_name begin_operator DOT end_operator begin_name get tag end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name task end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment unknown element always has an associated target end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name set owning target end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get owning target end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name init end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name task end_name end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set system output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name format output end_name begin_argument_list begin_argument begin_expr begin_name system out end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the argument or null for no argument needed return the additional modules parameter to csc end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get additional modules parameter end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name not empty end_name begin_argument_list begin_argument begin_expr begin_name additional modules end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator PLUS end_operator begin_name additional modules end_name end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr end_expr end_return end_block end_else end_if end_block 
 begin_comment set up the command line return the command line end_comment begin_type begin_specifier end_specifier begin_name commandline end_name end_type begin_name setup javac command end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name setup javac command end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment create a path to be configured with the classpath to use return a new path instance to be configured with the classpath end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name classpath end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment scans the directory looking for source files that are newer than their class files the results are returned in the class variable compile list param src dir the source directory param files the names of the files in the source dir which are to be checked end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name scan dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src dir end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name files end_name end_decl end_param end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name src file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name src dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file path end_name begin_init begin_expr begin_call begin_name begin_name src file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name class name end_name begin_init begin_expr begin_call begin_name begin_name file path end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name src dir end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file path end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name class name end_name begin_operator EQ end_operator begin_call begin_name begin_name class file utils end_name begin_operator DOT end_operator begin_name convert slash name end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name class file info end_name end_type begin_name info end_name begin_init begin_expr begin_operator LPAR end_operator begin_name class file info end_name begin_operator RPAR end_operator begin_call begin_name begin_name class file info map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name info end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment there was no class file add this class to the list end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name out of date classes end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name src file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_call begin_name begin_name info end_name begin_operator DOT end_operator begin_name absolute file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out of date classes end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_block end_then end_if end_block end_for end_block 
 begin_comment worker method for the two convenience methods above applies a selector on a set of files passed in and returns a string of t s amd f s from applying the selector to each file end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name selection string end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name basedir end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name file end_name begin_index end_index end_name end_type begin_name files end_name end_decl end_param begin_param begin_decl begin_type begin_name file selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name x end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name x end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name x end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name selector end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr begin_name x end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name x end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for begin_return begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment get an output stream for the resource return an output stream to which content can be written throws io exception if unable to provide the content of this resource as a stream throws unsupported operation exception if output streams are not supported for this resource type throws io exception if the url cannot be opened end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name output stream end_name end_type begin_name get output stream end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get output stream end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name connect end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_return begin_expr begin_call begin_name begin_name conn end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_finally begin_block begin_expr_stmt begin_expr begin_name conn end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment resolves references allowing any resource collection return the referenced resource collection end_comment begin_type begin_specifier end_specifier begin_name resource collection end_name end_type begin_name get ref end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name resource collection end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list begin_argument begin_expr begin_name begin_name resource collection end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirect 5 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name test redirect 5 or 6 end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the name of this target param name the name of this target should not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment pr 11100 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test pattern set include only end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert file missing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert file exists end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the duration in milliseconds the file should be played return the duration in milliseconds end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name get duration end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name duration end_name end_name end_expr end_return end_block 
 begin_comment creates all parent directories specified in a complete relative pathname attempts to create existing directories will not cause errors param ftp the ftp client instance to use to execute ftp actions on the remote server param filename the name of the file whose parents should be created throws io exception under non documented circumstances throws build exception if it is impossible to cd to a remote directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name create parents end_name begin_parameter_list begin_param begin_decl begin_type begin_name ftp client end_name end_type begin_name ftp end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dir end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name dir cache end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name parents end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name dirname end_name end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name dirname end_name begin_operator EQ end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name get parent end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name check dir end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dirname end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name dir cache end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name check dir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_expr_stmt begin_expr begin_name dir end_name begin_operator EQ end_operator begin_name check dir end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name parents end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_comment find first non cached dir end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name parents end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name i end_name begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name cwd end_name begin_init begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name print working directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parent end_name begin_init begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name get parent end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name parent end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name change working directory end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name get reply string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_while begin_condition begin_expr begin_name i end_name begin_operator GE end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name dir end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name parents end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name begin_operator MMINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment check if dir exists by trying to change into it end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name change working directory end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment could not change to it try to create it end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name make directory end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name handle mk dir failure end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name change working directory end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name get reply string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name dir cache end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name change working directory end_name end_name begin_argument_list begin_argument begin_expr begin_name cwd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment sets the build parser grammar option param build parser a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set buildparser end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name build parser end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name build parser end_name end_expr end_argument begin_argument begin_expr begin_name build parser end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment pr 38370 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test pathelement path end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment do the work exception build exception if the task is not configured correctly or the tree cannot be removed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name remove dir end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if end_block 
 begin_comment test indirect validation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test deep validate end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true error and non error output will be teed redirected as specified while being sent to ant s logging mechanism as if no redirection had taken place defaults to false param always log code boolean code since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set always log end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name always log end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name always log end_name end_name begin_operator EQ end_operator begin_name always log end_name end_expr end_expr_stmt end_block 
 begin_comment actually run a test finding all input files and corresponding goldfile end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name do test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name keep root end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name collapse end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name semantic end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name include end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name local root end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name get files end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name input file end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment what s the working directory if local then its the end_comment begin_comment folder of the input file otherwise its the current dir end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name working dir end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name local root end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name working dir end_name begin_operator EQ end_operator begin_call begin_name begin_name input file end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name working dir end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name property file end_name begin_init begin_expr begin_call begin_name get goldfile end_name begin_argument_list begin_argument begin_expr begin_name input file end_name end_expr end_argument begin_argument begin_expr begin_name keep root end_name end_expr end_argument begin_argument begin_expr begin_name collapse end_name end_expr end_argument begin_argument begin_expr begin_name semantic end_name end_expr end_argument begin_argument begin_expr begin_name include end_name end_expr end_argument begin_argument begin_expr begin_name local root end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name property file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment system out println skipping as end_comment begin_comment property file get absolute path end_comment begin_comment doesn t exist end_comment begin_continue end_continue end_block end_then end_if begin_comment system out println msg property file get name in working dir end_comment begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name xml property end_name end_type begin_name xmlproperty end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name xml property end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name xmlproperty end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name xmlproperty end_name begin_operator DOT end_operator begin_name set file end_name end_name begin_argument_list begin_argument begin_expr begin_name input file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name xmlproperty end_name begin_operator DOT end_operator begin_name set keeproot end_name end_name begin_argument_list begin_argument begin_expr begin_name keep root end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name xmlproperty end_name begin_operator DOT end_operator begin_name set collapse attributes end_name end_name begin_argument_list begin_argument begin_expr begin_name collapse end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name xmlproperty end_name begin_operator DOT end_operator begin_name set semantic attributes end_name end_name begin_argument_list begin_argument begin_expr begin_name semantic end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name xmlproperty end_name begin_operator DOT end_operator begin_name set include semantic attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name include end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name xmlproperty end_name begin_operator DOT end_operator begin_name set root directory end_name end_name begin_argument_list begin_argument begin_expr begin_name working dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment set a property on the project to make sure that loading end_comment begin_comment a property with the same name from an xml file will end_comment begin_comment not change it end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set new property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name xmlproperty end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name props end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name load end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name property file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment print properties p get properties end_comment begin_expr_stmt begin_expr begin_call begin_name ensure properties end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name input file end_name end_expr end_argument begin_argument begin_expr begin_name working dir end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name props end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name ensure references end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name input file end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get references end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_while end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name vswap end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name int end_name begin_index end_index end_name end_type begin_name fmap end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name p 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name p 2 end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name n end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name n end_name begin_operator UNP end_operator begin_name p 1 end_name end_expr end_expr_stmt begin_while begin_condition begin_expr begin_name p 1 end_name begin_operator LT end_operator begin_name n end_name end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name t end_name begin_init begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_name p 1 end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_name p 1 end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name fmap end_name begin_index begin_expr begin_name p 2 end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_name p 2 end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name t end_name end_expr end_expr_stmt end_block end_while end_block 
 begin_comment set the destination directory into which the java source files should be compiled param dest dir the destination director end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set destdir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dest dir end_name end_name begin_operator EQ end_operator begin_name dest dir end_name end_expr end_expr_stmt end_block 
 begin_comment executes this build task exception build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment called by the project to let the task do its work this method may be called more than once if the task is invoked more than once for example if target 1 and target 2 both depend on target 3 then running ant target 1 target 2 will run all tasks in target 3 twice exception build exception if something goes wrong with the build end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block end_block 
 begin_comment caching loaders driver this is to avoid getting an out of memory error when calling this task multiple times in a row default true param enable a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set caching end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name enable end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name caching end_name begin_operator EQ end_operator begin_name enable end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirector 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add file set end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name fileset end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment constructor inits everything and set up the search pattern end_comment begin_specifier end_specifier begin_name ilasm end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name clear end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set includes end_name begin_argument_list begin_argument begin_expr begin_name file pattern end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment write a single entry to the given writer param doc document used to create elements param writer a code print writer code value param entry a code cvs tag entry code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write tag entry end_name begin_parameter_list begin_param begin_decl begin_type begin_name document end_name end_type begin_name doc end_name end_decl end_param begin_param begin_decl begin_type begin_name print writer end_name end_type begin_name writer end_name end_decl end_param begin_param begin_decl begin_type begin_name cvs tag entry end_name end_type begin_name entry end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name ent end_name begin_init begin_expr begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name begin_name dom utils end_name begin_operator DOT end_operator begin_name create child element end_name end_name begin_argument_list begin_argument begin_expr begin_name ent end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dom utils end_name begin_operator DOT end_operator begin_name append cdata element end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get file end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get revision end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name dom utils end_name begin_operator DOT end_operator begin_name append text element end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get revision end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get previous revision end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name dom utils end_name begin_operator DOT end_operator begin_name append text element end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get previous revision end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name dom writer end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name ent end_name end_expr end_argument begin_argument begin_expr begin_name writer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the object to operate on param obj select object to operate on end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set obj select end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name obj select end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name mobj select end_name begin_operator EQ end_operator begin_name obj select end_name end_expr end_expr_stmt end_block 
 begin_comment string representation of this class name it returns the fully qualified class name return string representing the fully qualified class name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get qualified class name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment create or update the manifest when used as a task throws build exception if the manifest cannot be written end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name manifest file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name manifest end_name end_type begin_name to write end_name begin_init begin_expr begin_call begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name get default manifest end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name manifest end_name end_type begin_name current end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name build exception end_name end_type begin_name error end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name manifest file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file input stream end_name end_type begin_name fis end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream reader end_name end_type begin_name isr end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name fis end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name manifest file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name encoding end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name isr end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name fis end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name isr end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name fis end_name end_expr end_argument begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name current end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name manifest end_name begin_argument_list begin_argument begin_expr begin_name isr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name manifest exception end_name end_type begin_name m end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name error end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name manifest file end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name m end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name error end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name manifest file end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name isr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block end_then end_if begin_comment look for and print warnings end_comment begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name nested manifest end_name begin_operator DOT end_operator begin_name get warnings end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_try begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name mode end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name manifest file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name current end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to write end_name begin_operator DOT end_operator begin_name merge end_name end_name begin_argument_list begin_argument begin_expr begin_name current end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name error end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_name error end_name end_expr end_throw end_block end_then end_if end_else end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name to write end_name begin_operator DOT end_operator begin_name merge end_name end_name begin_argument_list begin_argument begin_expr begin_name nested manifest end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name manifest exception end_name end_type begin_name m end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name m end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_if begin_condition begin_expr begin_call begin_name begin_name to write end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name current end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name print writer end_name end_type begin_name w end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name file output stream end_name end_type begin_name fos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name manifest file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name output stream writer end_name end_type begin_name osw end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name output stream writer end_name begin_argument_list begin_argument begin_expr begin_name fos end_name end_expr end_argument begin_argument begin_expr begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name jar encoding end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name w end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_name osw end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to write end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name w end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name manifest file end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name w end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment add a lt isfalse gt condition param test an is false condition since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add is false end_name begin_parameter_list begin_param begin_decl begin_type begin_name is false end_name end_type begin_name test end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name conditions end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test string tokenizer end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment ensure checksum follows the immutability rule end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 5 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a replace tokens filter param replace tokens a code replace tokens code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add replace tokens end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name replace tokens end_name end_type begin_name replace tokens end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filter readers end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name replace tokens end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name put end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name key end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name key end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name value end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name saved end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment verify that all parameters are included connect and possibly login iterate through the list of reads and writes throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment a server name is required to continue end_comment begin_if begin_condition begin_expr begin_name server end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment a userid and password must appear together if they appear they are not required end_comment begin_if begin_condition begin_expr begin_name userid end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name password end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name password end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name userid end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment create the telnet client object end_comment begin_decl_stmt begin_decl begin_type begin_name ant r exec client end_name end_type begin_name rexec end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name rexec end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name ant r exec client end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name rexec end_name begin_operator DOT end_operator begin_name connect end_name end_name begin_argument_list begin_argument begin_expr begin_name server end_name end_expr end_argument begin_argument begin_expr begin_name port end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name server end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_if begin_condition begin_expr begin_name userid end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name password end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name command end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name rexec tasks end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment simple one shot execution end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name rexec end_name begin_operator DOT end_operator begin_name rexec end_name end_name begin_argument_list begin_argument begin_expr begin_name userid end_name end_expr end_argument begin_argument begin_expr begin_name password end_name end_expr end_argument begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment need nested read write elements end_comment begin_expr_stmt begin_expr begin_call begin_name handle multiple tasks end_name begin_argument_list begin_argument begin_expr begin_name rexec end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_comment keep reading input stream until end of it or time out end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name rexec end_name begin_operator DOT end_operator begin_name wait for eof end_name end_name begin_argument_list begin_argument begin_expr begin_name default timeout end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name rexec end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name rexec end_name begin_operator DOT end_operator begin_name is connected end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name rexec end_name begin_operator DOT end_operator begin_name disconnect end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name server end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment end_comment begin_comment ensure that an external entity resolves as expected with no end_comment begin_comment xml catalog involvement end_comment begin_comment end_comment begin_comment transform an xml file that contains a reference to a second xml file end_comment begin_comment via the document function the second xml file refers to an entity end_comment begin_comment stuff result into the property val 3 end_comment begin_comment end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test document no catalog end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment main entry point for command line param args command line arguments end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name do report end_name begin_argument_list begin_argument begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test complete directory move file to dir end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirect 5 or 6 end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name t end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_name t end_name begin_operator GT end_operator end_expr end_return end_block 
 begin_comment create an instance of the definition the instance may be wrapped in a proxy class this is a special version of create for introspection helper and unknown element param project the current project return the created object end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name create object end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name create end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment evaluate condition return true if the condition is true throws build exception if the condition is not configured correctly end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name count conditions end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name count conditions end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name condition end_name begin_operator RPAR end_operator begin_call begin_name get conditions end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name next element end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name eval end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment end of prefix to uri mapping param prefix the namespace prefix end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end prefix mapping end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name list end_name begin_init begin_expr begin_operator LPAR end_operator begin_name list end_name begin_operator RPAR end_operator begin_call begin_name begin_name prefix mapping end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name prefix end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name list end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return begin_comment should not happen end_comment end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name list end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gives the count of the number of selectors in this container return the number of selectors in this container end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name selector count end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name selector count end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment try and load a class with no attempt to catch any fault return the class that implements this component throws class not found exception if the class cannot be found throws no class def found error if the there is an error finding the class end_comment begin_type begin_specifier end_specifier begin_name class end_name end_type begin_name inner get type class end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name class not found exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name clazz end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name clazz end_name end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name class loader end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name clazz end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name clazz end_name begin_operator EQ end_operator begin_call begin_name begin_name class loader end_name begin_operator DOT end_operator begin_name load class end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_return begin_expr begin_name clazz end_name end_expr end_return end_block 
 begin_comment adds a child element to this element param child the child element to add must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add child end_name begin_parameter_list begin_param begin_decl begin_type begin_name unknown element end_name end_type begin_name child end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name children end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name children end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name children end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name child end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment public void test oracle do multiple calls 1000 oracle true false end_comment begin_comment public void test my sql do multiple calls 1000 mysql true false end_comment begin_comment run a sql tasks multiple times param calls number of times to execute the task param database the database to execute on param caching should caching be enabled param catchexception true to catch exception for each call false if not end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name do multiple calls end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name calls end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name database end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name caching end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name catchexception end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name props end_name begin_init begin_expr begin_call begin_name get properties end_name begin_argument_list begin_argument begin_expr begin_name database end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name calls end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name sql exec end_name end_type begin_name sql end_name begin_init begin_expr begin_call begin_name create task end_name begin_argument_list begin_argument begin_expr begin_name props end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sql end_name begin_operator DOT end_operator begin_name set caching end_name end_name begin_argument_list begin_argument begin_expr begin_name caching end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sql end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name catchexception end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_name e end_name end_expr end_throw end_block end_then end_if end_block end_catch end_try end_block end_for end_block 
 begin_comment closes the url connection if it is opened i e the field conn is not null this type of url connection supports some sort of close mechanism this method ensures the field conn will be null after the call end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name close end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name conn end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_if begin_condition begin_expr begin_name conn end_name begin_operator UNP end_operator begin_name jar url connection end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name jar url connection end_name end_type begin_name juc end_name begin_init begin_expr begin_operator LPAR end_operator begin_name jar url connection end_name begin_operator RPAR end_operator begin_name conn end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name jar file end_name end_type begin_name jf end_name begin_init begin_expr begin_call begin_name begin_name juc end_name begin_operator DOT end_operator begin_name get jar file end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name jf end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name jf end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name conn end_name begin_operator UNP end_operator begin_name http url connection end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name http url connection end_name begin_operator RPAR end_operator begin_name conn end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name disconnect end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name exc end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_name conn end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_finally end_try end_block end_then end_if end_block 
 begin_comment ignore end_comment begin_comment get a description handler param src dir the source directory return a handler end_comment begin_type begin_specifier end_specifier begin_name descriptor handler end_name end_type begin_name get descriptor handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src dir end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name descriptor handler end_name end_type begin_name h end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name descriptor handler end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name src dir end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name register known dt ds end_name begin_argument_list begin_argument begin_expr begin_name h end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment register any dt ds supplied by the user end_comment begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name get config end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name begin_name dtd locations end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name ejb jar end_name begin_operator DOT end_operator begin_name dtd location end_name end_name end_type begin_name dtd location end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name ejb jar end_name begin_operator DOT end_operator begin_name dtd location end_name end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name h end_name begin_operator DOT end_operator begin_name register dtd end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name dtd location end_name begin_operator DOT end_operator begin_name get public id end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name dtd location end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name h end_name end_expr end_return end_block 
 begin_comment set the arc height param h the value to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set archeight end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name h end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name archeight end_name begin_operator EQ end_operator begin_name h end_name end_expr end_expr_stmt end_block 
 begin_comment if the proxy port and host settings are not null then the settings get applied these settings last beyond the life of the object and apply to all network connections relevant docs buglist 4183340 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name apply web proxy settings end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name settings changed end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name enabling proxy end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name sysprops end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get properties end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name proxy host end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name settings changed end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name proxy host end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name trace setting info end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name enabling proxy end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name http proxy host end_name end_name end_expr end_argument begin_argument begin_expr begin_name proxy host end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name port string end_name begin_init begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name proxy port end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name http proxy port end_name end_name end_expr end_argument begin_argument begin_expr begin_name port string end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name https proxy host end_name end_name end_expr end_argument begin_argument begin_expr begin_name proxy host end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name https proxy port end_name end_name end_expr end_argument begin_argument begin_expr begin_name port string end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name ftp proxy host end_name end_name end_expr end_argument begin_argument begin_expr begin_name proxy host end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name ftp proxy port end_name end_name end_expr end_argument begin_argument begin_expr begin_name port string end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name non proxy hosts end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name http non proxy hosts end_name end_name end_expr end_argument begin_argument begin_expr begin_name non proxy hosts end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name https non proxy hosts end_name end_name end_expr end_argument begin_argument begin_expr begin_name non proxy hosts end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name ftp non proxy hosts end_name end_name end_expr end_argument begin_argument begin_expr begin_name non proxy hosts end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name proxy user end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name http proxy username end_name end_name end_expr end_argument begin_argument begin_expr begin_name proxy user end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name http proxy password end_name end_name end_expr end_argument begin_argument begin_expr begin_name proxy password end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name http proxy host end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name http proxy port end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name http proxy username end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name http proxy password end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name https proxy host end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name https proxy port end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name ftp proxy host end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name ftp proxy port end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_comment socks end_comment begin_if begin_condition begin_expr begin_name socks proxy host end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name settings changed end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name socks proxy host end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name enabling proxy end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name socks proxy host end_name end_name end_expr end_argument begin_argument begin_expr begin_name socks proxy host end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name socks proxy port end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name socks proxy port end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name proxy user end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment this may be a java 1 4 thingy only end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name socks proxy username end_name end_name end_expr end_argument begin_argument begin_expr begin_name proxy user end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name socks proxy password end_name end_name end_expr end_argument begin_argument begin_expr begin_name proxy password end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name socks proxy host end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name socks proxy port end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name socks proxy username end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name socks proxy password end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name proxy user end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name enabling proxy end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name authenticator end_name begin_operator DOT end_operator begin_name set default end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name proxy auth end_name begin_argument_list begin_argument begin_expr begin_name proxy user end_name end_expr end_argument begin_argument begin_expr begin_name proxy password end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name settings changed end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name authenticator end_name begin_operator DOT end_operator begin_name set default end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name proxy auth end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_block end_then end_if end_block 
 begin_comment a set of properties to write param ps the property set to write since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add propertyset end_name begin_parameter_list begin_param begin_decl begin_type begin_name property set end_name end_type begin_name ps end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name property sets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name ps end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment indicate if this build is using the base jar name return true if the name of the generated jar is coming from the basejarname attribute end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name using base jar name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name config end_name begin_operator DOT end_operator begin_name base jar name end_name end_name begin_operator UNP end_operator end_expr end_return end_block 
 begin_comment set the classpath to be used when searching for classes and resources param classpath an ant path object containing the search path end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set classpath end_name end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name next end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name done end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name no such element exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name done end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr begin_name begin_name resource end_name begin_operator DOT end_operator begin_name this end_name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr begin_name taskdefs dir end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment similar method for this definition param other another definition param project the current project return true if the definitions are similar end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name similar definition end_name begin_parameter_list begin_param begin_decl begin_type begin_name ant type definition end_name end_type begin_name other end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name other end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name parent end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name similar definition end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name pre set definition end_name begin_operator RPAR end_operator begin_name other end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name similar end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name pre set definition end_name begin_operator RPAR end_operator begin_name other end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_name element end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment whether or not to overwrite existing file irrespective of whether it is newer than the source file as well as the resource bundle file defaults to false param force overwrite whether or not to overwrite existing files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set force overwrite end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name force overwrite end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name force overwrite end_name end_name begin_operator EQ end_operator begin_name force overwrite end_name end_expr end_expr_stmt end_block 
 begin_comment handle an input request by this task param buffer the buffer into which data is to be read param offset the offset into the buffer at which data is stored param length the amount of data to read return the number of bytes read exception io exception if the data cannot be read since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name handle input end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name buffer end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name offset end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name length end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment should work whether or not redirector input stream null end_comment begin_return begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name handle input end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment this stub teardown is here because the outer class needs to call the tear down method and in the superclass it is protected end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name tear down end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block 
 begin_comment entry point for starting command line ant param args commandline arguments end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name exit code end_name end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name launcher end_name end_type begin_name launcher end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name launcher end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name exit code end_name begin_operator EQ end_operator begin_call begin_name begin_name launcher end_name begin_operator DOT end_operator begin_name run end_name end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name launch exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name exit code end_name begin_operator EQ end_operator begin_name exit code error end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name exit code end_name begin_operator EQ end_operator begin_name exit code error end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_name exit code end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name exit end_name end_name begin_argument_list begin_argument begin_expr begin_name exit code end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment set targetos to a platform to one of windows unix netware or os 2 current platform settings are used by default param target the target os since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set targetos end_name begin_parameter_list begin_param begin_decl begin_type begin_name target os end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name target os end_name begin_operator EQ end_operator begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment currently we deal with only two path formats unix and windows end_comment begin_comment and unix is everything that is not windows end_comment begin_comment for net ware and os 2 piggy back on windows since in the end_comment begin_comment validate setup code the same assumptions can be made as end_comment begin_comment with windows that is the path separator end_comment begin_expr_stmt begin_expr begin_name target windows end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name begin_name target os end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name target os end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the failonerror flag default is true param failure if true throw a build exception when a failure occuries otherwise just log the failure and continue end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set failonerror end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name failure end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name fail on error end_name begin_operator EQ end_operator begin_name failure end_name end_expr end_expr_stmt end_block 
 begin_comment return a hashtable of global filters mapping tokens to values return a hashtable of global filters mapping tokens to values string to string deprecated since 1 4 x use get global filter set get filter hash see get global filter set see filter set get filter hash end_comment begin_type begin_specifier end_specifier begin_name hashtable end_name end_type begin_name get filters end_name begin_parameter_list end_parameter_list begin_block begin_comment we need to build the hashtable dynamically end_comment begin_return begin_expr begin_call begin_name begin_name global filter set end_name begin_operator DOT end_operator begin_name get filter hash end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name send directory to remote end_name begin_parameter_list begin_param begin_decl begin_type begin_name directory end_name end_type begin_name directory end_name end_decl end_param begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name in end_name end_decl end_param begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name command end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name command end_name begin_operator UNP end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name get directory end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name command end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name wait for ack end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name send directory end_name begin_argument_list begin_argument begin_expr begin_name directory end_name end_expr end_argument begin_argument begin_expr begin_name in end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name wait for ack end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add fileset end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name fileset end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name fileset end_name end_name begin_operator EQ end_operator begin_name fileset end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test load manifest end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment this actually relies on the first manifest being found on end_comment begin_comment the classpath probably rt jar s being valid end_comment begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name starts with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment property parsing end_comment begin_comment moved from project helper you can override the static method end_comment begin_comment this is used for backward compatibility for code that calls end_comment begin_comment the parse method in project helper end_comment begin_comment default parsing method it is here only to support backward compatibility for the static project helper parse property string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name parse property string default end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param begin_param begin_decl begin_type begin_name vector end_name end_type begin_name fragments end_name end_decl end_param begin_param begin_decl begin_type begin_name vector end_name end_type begin_name property refs end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name prev end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pos end_name end_decl end_decl_stmt begin_comment search for the next instance of from the prev position end_comment begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name pos end_name begin_operator EQ end_operator begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name prev end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator GE end_operator end_expr end_condition begin_block begin_comment if there was any text before this add it as a fragment end_comment begin_comment todo this check could be modified to go if pos prev end_comment begin_comment seems like this current version could stick empty strings end_comment begin_comment into the list end_comment begin_if begin_condition begin_expr begin_name pos end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fragments end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name prev end_name end_expr end_argument begin_argument begin_expr begin_name pos end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment if we are at the end of the string we tack on a end_comment begin_comment then move past it end_comment begin_if begin_condition begin_expr begin_name pos end_name begin_operator EQT end_operator begin_operator LPAR end_operator begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fragments end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name prev end_name begin_operator EQ end_operator begin_name pos end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name pos end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment peek ahead to see if the next char is a property or not end_comment begin_comment not a property insert the char as a literal end_comment begin_comment fragments add element value substring pos 1 pos 2 prev pos 2 end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name pos end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment backwards compatibility two map to one mode end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name fragments end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name prev end_name begin_operator EQ end_operator begin_name pos end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment new behaviour x maps to x for all values of x end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name fragments end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name pos end_name end_expr end_argument begin_argument begin_expr begin_name pos end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name prev end_name begin_operator EQ end_operator begin_name pos end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_comment property found extract its name or bail on a typo end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name end name end_name begin_init begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name pos end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name end name end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name property name end_name begin_init begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name pos end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name end name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fragments end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name property refs end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name property name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name prev end_name begin_operator EQ end_operator begin_name end name end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block end_while begin_comment no more signs found end_comment begin_comment if there is any tail to the file append it end_comment begin_if begin_condition begin_expr begin_name prev end_name begin_operator LT end_operator begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fragments end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name prev end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_comment remove log file from test spawn end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name execute target end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test multi versus single line end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name unix line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name unix line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name unix line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name unix line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name text end_name begin_init begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name do start test 1 end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name do start test 2 end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name do end test 1 end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name do end test 2 end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the destination directory param todir the destination directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set todir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name todir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name to dir end_name end_name begin_operator EQ end_operator begin_name todir end_name end_expr end_expr_stmt end_block 
 begin_comment add a present selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add present end_name begin_parameter_list begin_param begin_decl begin_type begin_name present selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name dummy task protected end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment finds a system resource which should be loaded from the parent classloader param name the name of the system resource to load must not be code null code return a stream to the named resource or code null code if the resource cannot be found end_comment begin_type begin_specifier end_specifier begin_name input stream end_name end_type begin_name load base resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name parent end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get system resource as stream end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name get resource as stream end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 7 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name ant test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name move test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert processed end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the errors begin at attribute param errors begin at number at which errors begin at default is 400 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set errors begin at end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name errors begin at end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name errors begin at end_name end_name begin_operator EQ end_operator begin_name errors begin at end_name end_expr end_expr_stmt end_block 
 begin_comment constructor for a local directories to remote param verbose if true do verbose logging param session the scp session to use param a directory list a list of directories param a remote path the remote path since ant 1 6 2 end_comment begin_specifier end_specifier begin_name scp to message end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name verbose end_name end_decl end_param begin_param begin_decl begin_type begin_name session end_name end_type begin_name session end_name end_decl end_param begin_param begin_decl begin_type begin_name list end_name end_type begin_name a directory list end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name a remote path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name verbose end_name end_expr end_argument begin_argument begin_expr begin_name session end_name end_expr end_argument begin_argument begin_expr begin_name a remote path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name directory list end_name end_name begin_operator EQ end_operator begin_name a directory list end_name end_expr end_expr_stmt end_block 
 begin_comment this test is our selection test that compared the file with the destfile param srcfile the source file param destfile the destination file return true if destination is out of date end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name selection test end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name srcfile end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name destfile end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name selected end_name begin_init begin_expr begin_call begin_name begin_name selector utils end_name begin_operator DOT end_operator begin_name is out of date end_name end_name begin_argument_list begin_argument begin_expr begin_name srcfile end_name end_expr end_argument begin_argument begin_expr begin_name destfile end_name end_expr end_argument begin_argument begin_expr begin_name granularity end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name selected end_name end_expr end_return end_block 
 begin_comment specify the user group and other modes in the standard unix fashion optional default 0644 p we use the strange name so this method doesn t appear in introspection helpers list of attribute setters p param mode a code int code value since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name integer set file mode end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name mode end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name file mode has been set end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file mode end_name end_name begin_operator EQ end_operator begin_name begin_name unix stat end_name begin_operator DOT end_operator begin_name file flag end_name end_name begin_operator UNP end_operator begin_name mode end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test exec os family end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name teststringoutput 1 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string resource end_name end_type begin_name r end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string resource end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name testoutputbe end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the build file to which the xml context belongs param build file ant build file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set build file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name build file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name build file end_name end_name begin_operator EQ end_operator begin_name build file end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name build file parent end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name build file end_name begin_operator DOT end_operator begin_name get parent end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name implicit target end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name location end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name build file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test keeproot collapse end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name do test end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment whether this task can deal with non file resources p this implementation returns true only if this task is lt bzip 2 gt any subclass of this class that also wants to support non file resources needs to override this method we need to do so for backwards compatibility reasons since we can t expect subclasses to support resources p return true if this task support non file resources since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name supports non file resources end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name b zip 2 end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment create the pump to handle process output param is the code input stream code param os the code output stream code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name create process output pump end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name end_decl end_param begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name os end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name output thread end_name begin_operator EQ end_operator begin_call begin_name create pump end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument begin_argument begin_expr begin_name os end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment what to do if there is an error in loading the class dl li error throw build exception li li report output at warning level li li ignore output at debug level li dl param on error an code on error code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set on error end_name begin_parameter_list begin_param begin_decl begin_type begin_name on error end_name end_type begin_name on error end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name on error end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name on error end_name begin_operator DOT end_operator begin_name get index end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get comment file return string containing the path to the comment file end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get comment file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m cfile end_name end_expr end_return end_block 
 begin_comment determines if the os on which ant is executing matches the given os architecture param arch the os architecture to check for return true if the os matches since 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is arch end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name arch end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name is os end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name arch end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name action performed end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment quot normalize quot the given absolute path p this includes ul li uppercase the drive letter if there is one li li remove redundant slashes after the drive spec li li resolve all and sequences li li dos style paths that start with a drive letter will have as the separator li ul unlike link file get canonical path this method specifically does not resolve symbolic links param path the path to be normalized return the normalized version of the path throws java lang null pointer exception if path is null end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name normalize end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name stack end_name end_type begin_name s end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name stack end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name dissect end_name begin_init begin_expr begin_call begin_name dissect end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name push end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name dissect end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name tok end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name begin_name dissect end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name this token end_name begin_init begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name this token end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then begin_else begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name this token end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_comment cannot resolve it so skip it end_comment begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name pop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment plain component end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name push end_name end_name begin_argument_list begin_argument begin_expr begin_name this token end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block end_while begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name i end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_comment not before the filesystem root and not after it since root end_comment begin_comment already contains one end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name map file name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name file name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name last dot end_name begin_init begin_expr begin_call begin_name begin_name file name end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name last dot end_name begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_call begin_name begin_name file name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name last dot end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_name extension end_name end_expr end_block end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name file name end_name begin_operator PLUS end_operator begin_name extension end_name end_expr end_block end_expr end_return end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set with end_name begin_parameter_list begin_param begin_decl begin_type begin_name char end_name end_type begin_name with end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name with end_name end_name begin_operator EQ end_operator begin_name with end_name end_expr end_expr_stmt end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no sourcefile defined end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment whether this task can deal with non file resources p this implementation returns false p return false since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name supports non file resources end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment test case for set follow links and associated functionality only supports test on linux at the moment because java has no real notion of symlinks built in so an os specfic call to runtime exec must be made to create a link to test against end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test set follow links end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name supports symlinks end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name link file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name link file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_comment add conditions and more commands as soon as the need arises end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name command end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr begin_call begin_name begin_name link file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_block end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name runtime end_name begin_operator DOT end_operator begin_name get runtime end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exec end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment give ourselves some time for the system call end_comment begin_comment to execute tweak if you have a really over end_comment begin_comment loaded system end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name sleep end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ioe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dir end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name link file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file utils end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name is symbolic link end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name directory scanner end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment follow links should be true by default but if this ever end_comment begin_comment changes we will need this line end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set follow symlinks end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set excludes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name have zip package end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name have taskdefs package end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name included end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included directories end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name included end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name included end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name have zip package end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name begin_name included end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name have taskdefs package end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_else end_if end_block end_for begin_comment if we followed the symlink we just made we should end_comment begin_comment bypass the excludes end_comment begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name have zip package end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name have taskdefs package end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ds end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name directory scanner end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set follow symlinks end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set excludes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name have zip package end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name have taskdefs package end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name included end_name begin_operator EQ end_operator begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included directories end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name included end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name included end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name have zip package end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name begin_name included end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name have taskdefs package end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_else end_if end_block end_for begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name have zip package end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name have taskdefs package end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name link file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name link file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name link file end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name link file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block end_then end_if end_block 
 begin_comment get the name of the definition return the name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_comment set the classpath by reference param r a reference to a path instance to be used as the classpath value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set classpath ref end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name resource selector container end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test other end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the base directory return the base directory end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get basedir end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name basedir end_name end_expr end_return end_block 
 begin_comment add a file tokenizer param tokenizer the file tokenizer end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add file tokenizer end_name begin_parameter_list begin_param begin_decl begin_type begin_name file tokenizer end_name end_type begin_name tokenizer end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name tokenizer end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment find out if the fileset is case sensitive return code boolean code indicating whether the fileset is case sensitive since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is case sensitive end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name is case sensitive end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name case sensitive end_name end_expr end_return end_block 
 begin_comment test that the watchdog ends the process end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test time out forked end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_comment process doesn t die properly under this combination end_comment begin_comment thus test fails no workaround end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 2 end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name begin_init begin_expr begin_call begin_name get commandline end_name begin_argument_list begin_argument begin_expr begin_name time out end_name begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ej end_name begin_operator DOT end_operator begin_name set java command end_name end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name now end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ej end_name begin_operator DOT end_operator begin_name fork end_name end_name begin_argument_list begin_argument begin_expr begin_name cp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name elapsed end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name now end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ej end_name begin_operator DOT end_operator begin_name killed process end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name elapsed end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name time out test end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name elapsed end_name begin_operator GE end_operator begin_name time out test end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name elapsed end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name time out end_name begin_operator STAR end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name elapsed end_name begin_operator LT end_operator begin_name time out end_name begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a contains selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add contains end_name begin_parameter_list begin_param begin_decl begin_type begin_name contains selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name inject parent end_name begin_parameter_list begin_param begin_decl begin_type begin_name parent end_name end_type begin_name parent end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name parent end_name end_name begin_operator EQ end_operator begin_name parent end_name end_expr end_expr_stmt end_block 
 begin_comment sets the format of the file or resource param format the enumerated value xml or properties end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set format end_name begin_parameter_list begin_param begin_decl begin_type begin_name format end_name end_type begin_name format end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name format end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name format end_name begin_operator DOT end_operator begin_name get index end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create a cvs task using the default cvspass file location end_comment begin_specifier end_specifier begin_name cvs pass end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name pass file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment execute by building up a list of files that have changed and hand them off to a jsp compiler throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment make sure that we ve got a destdir end_comment begin_if begin_condition begin_expr begin_name dest dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dest dir end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name dest dir end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dest end_name begin_init begin_expr begin_call begin_name get actual dest dir end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment bind to a compiler end_comment begin_decl_stmt begin_decl begin_type begin_name jsp compiler adapter end_name end_type begin_name compiler end_name begin_init begin_expr begin_call begin_name begin_name jsp compiler adapter factory end_name begin_operator DOT end_operator begin_name get compiler end_name end_name begin_argument_list begin_argument begin_expr begin_name compiler name end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create class loader end_name begin_argument_list begin_argument begin_expr begin_name compiler classpath end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment if we are a webapp hand off to the compiler which had better handle it end_comment begin_if begin_condition begin_expr begin_name web app end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name do compilation end_name begin_argument_list begin_argument begin_expr begin_name compiler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_comment make sure that we ve got a srcdir end_comment begin_if begin_condition begin_expr begin_name src end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name list end_name begin_init begin_expr begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name list end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment if the compiler does its own dependency stuff we just call it right now end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name compiler end_name begin_operator DOT end_operator begin_name implements own dependency checking end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name do compilation end_name begin_argument_list begin_argument begin_expr begin_name compiler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_comment the remainder of this method is only for compilers that need their dependency work done end_comment begin_decl_stmt begin_decl begin_type begin_name jsp mangler end_name end_type begin_name mangler end_name begin_init begin_expr begin_call begin_name begin_name compiler end_name begin_operator DOT end_operator begin_name create mangler end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment scan source directories and dest directory to build up both copy end_comment begin_comment lists and compile lists end_comment begin_expr_stmt begin_expr begin_call begin_name reset file lists end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name filecount end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name list end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name src dir end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name begin_name list end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name src dir end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name src dir end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name src dir end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name filecount end_name begin_operator EQ end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name scan dir end_name begin_argument_list begin_argument begin_expr begin_name src dir end_name end_expr end_argument begin_argument begin_expr begin_name dest end_name end_expr end_argument begin_argument begin_expr begin_name mangler end_name end_expr end_argument begin_argument begin_expr begin_name files end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment compile the source files end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name compile list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name compile list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name compile list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_call begin_name begin_name compile list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name dest end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name do compilation end_name begin_argument_list begin_argument begin_expr begin_name compiler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name filecount end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment set the caller for this object end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set caller end_name begin_parameter_list begin_param begin_decl begin_type begin_name aggregate transformer end_name end_type begin_name caller end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name caller end_name end_name begin_operator EQ end_operator begin_name caller end_name end_expr end_expr_stmt end_block 
 begin_comment gets the list of allowable values return the values end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name style brief end_name end_expr begin_operator UNP end_operator begin_expr begin_name style codediff end_name end_expr begin_operator UNP end_operator begin_expr begin_name style nofile end_name end_expr begin_operator UNP end_operator begin_expr begin_name style default end_name end_expr end_block end_expr end_return end_block 
 begin_comment get the polymorphic type for this element return the ant component type name null if not set end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get poly type end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name poly type end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a path to the classpath for loading the driver return a path to be configured end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment convenience constructor param value the value to set end_comment begin_specifier end_specifier begin_name on missing end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name dest end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name offs end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name len end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name offs end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name index out of bounds exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name offs end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name len end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name index out of bounds exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name len end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name offs end_name begin_operator PLUS end_operator begin_name len end_name begin_operator GT end_operator begin_name begin_name dest end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name index out of bounds exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name offs end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name len end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name dest end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name in end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name hi end_name begin_init begin_expr begin_name offs end_name begin_operator PLUS end_operator begin_name len end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name dest offs end_name begin_init begin_expr begin_name offs end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name b end_name end_decl end_init begin_condition begin_expr begin_operator LPAR end_operator begin_name dest offs end_name begin_operator LT end_operator begin_name hi end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name b end_name begin_operator EQ end_operator begin_call begin_name read 0 end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator GE end_operator begin_operator RPAR end_operator end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name dest end_name begin_index begin_expr begin_name dest offs end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator begin_name b end_name end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_operator LPAR end_operator begin_name dest offs end_name begin_operator EQT end_operator begin_name offs end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_operator MINUS end_operator begin_operator DP end_operator begin_operator LPAR end_operator begin_name dest offs end_name begin_operator MINUS end_operator begin_name offs end_name begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment setter for the modified count param modified count end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set modified end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name modified end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name modified end_name end_name begin_operator EQ end_operator begin_name modified end_name end_expr end_expr_stmt end_block 
 begin_comment sets the timestamp granularity attribute param timestamp granularity the timestamp granularity to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set timestamp granularity end_name begin_parameter_list begin_param begin_decl begin_type begin_name granularity end_name end_type begin_name timestamp granularity end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name timestamp granularity end_name begin_operator UNP end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name timestamp granularity end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name timestamp granularity end_name end_name begin_operator EQ end_operator begin_name timestamp granularity end_name end_expr end_expr_stmt end_block 
 begin_comment fetch all included and not excluded resources from the sets p included directories will precede included files p param filesets an array of filesets return the resources included since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_name resource end_name begin_index end_index begin_index end_index end_type begin_name grab resources end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name file set end_name begin_index end_index end_name end_type begin_name filesets end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name resource end_name begin_index end_index begin_index end_index end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name resource end_name begin_index begin_expr begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_index begin_index end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name skip empty names end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name filesets end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator begin_name zip file set end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name zip file set end_name end_type begin_name zfs end_name begin_init begin_expr begin_operator LPAR end_operator begin_name zip file set end_name begin_operator RPAR end_operator begin_name begin_name filesets end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name skip empty names end_name begin_operator EQ end_operator begin_call begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name get prefix end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name get fullpath end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name rs end_name begin_init begin_expr begin_name begin_name filesets end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get directory scanner end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name rs end_name begin_operator UNP end_operator begin_name zip scanner end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name zip scanner end_name begin_operator RPAR end_operator begin_name rs end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set encoding end_name begin_argument_list begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name resources end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name do filesonly end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name directories end_name begin_init begin_expr begin_call begin_name begin_name rs end_name begin_operator DOT end_operator begin_name get included directories end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name directories end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name directories end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_name skip empty names end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name rs end_name begin_operator DOT end_operator begin_name get resource end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name directories end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name rs end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_name skip empty names end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name rs end_name begin_operator DOT end_operator begin_name get resource end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_expr_stmt begin_expr begin_name begin_name result end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name resource end_name begin_index begin_expr begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name result end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment prints the stack trace of this exception and any nested exception to the specified print stream param ps the print stream to print the stack trace to must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name print stack trace end_name begin_parameter_list begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name ps end_name end_decl end_param end_parameter_list begin_block begin_synchronized begin_expr begin_name ps end_name end_expr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list begin_argument begin_expr begin_name ps end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name cause end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ps end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cause end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list begin_argument begin_expr begin_name ps end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_synchronized end_block 
 begin_comment convenience method to copy a file from a source to a destination no filtering is performed param source file name of file to copy from must not be code null code param dest file name of file to copy to must not be code null code throws io exception if the copying fails end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name copy file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name source file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name dest file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name copy file end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name source file end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment resource does exist property test true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 7 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the task for this tool return the task instance this tool is associated with end_comment begin_type begin_specifier end_specifier begin_name task end_name end_type begin_name get task end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name task end_name end_expr end_return end_block 
 begin_comment return this url resource formatted as a string return a string representation of this url resource end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get url end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_name archive state end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name state end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name resource end_name begin_index end_index begin_index end_index end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name out of date end_name begin_operator EQ end_operator begin_name state end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name resources to add end_name begin_operator EQ end_operator begin_name r end_name end_expr end_expr_stmt end_block 
 begin_comment add a not selector entry on the selector list param selector the code not selector code to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add not end_name begin_parameter_list begin_param begin_decl begin_type begin_name not selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment retrieve all the extensions listed under a particular key usually extension list or optional extension list param manifest the manifest to extract extensions from param list key the key used to get list usually extension list or optional extension list return the list of listed extensions end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name extension end_name begin_index end_index end_type begin_name get listed end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name manifest end_name end_type begin_name manifest end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name name end_name end_name end_type begin_name list key end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name array list end_name end_type begin_name results end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name attributes end_name end_type begin_name main attributes end_name begin_init begin_expr begin_call begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name get main attributes end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name main attributes end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get extension end_name begin_argument_list begin_argument begin_expr begin_name main attributes end_name end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument begin_argument begin_expr begin_name list key end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name map end_name end_type begin_name entries end_name begin_init begin_expr begin_call begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name get entries end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name iterator end_name end_type begin_name keys end_name begin_init begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name key set end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name keys end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name key end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name keys end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name attributes end_name end_type begin_name attributes end_name begin_init begin_expr begin_operator LPAR end_operator begin_name attributes end_name begin_operator RPAR end_operator begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name get extension end_name begin_argument_list begin_argument begin_expr begin_name attributes end_name end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument begin_argument begin_expr begin_name list key end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_operator LPAR end_operator begin_name begin_name extension end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name extension end_name begin_index begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment constructor with a target specified param parent handler the handler which should be restored to the parser at the end of the element must not be code null code param target the parent target of this element must not be code null code end_comment begin_specifier end_specifier begin_name data type handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name project helper impl end_name end_type begin_name helper impl end_name end_decl end_param begin_param begin_decl begin_type begin_name document handler end_name end_type begin_name parent handler end_name end_decl end_param begin_param begin_decl begin_type begin_name target end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name helper impl end_name end_expr end_argument begin_argument begin_expr begin_name parent handler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name target end_name end_name begin_operator EQ end_operator begin_name target end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 6 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test excepting foe end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment close a zipfile quietly throw no io fault do nothing on a null parameter param zipfile file to close can be null end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name close quietly end_name begin_parameter_list begin_param begin_decl begin_type begin_name zip file end_name end_type begin_name zipfile end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name zipfile end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name zipfile end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 5 a end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment update keeps the manifest version and adds a new attribute foo end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test update end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name manifest exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name manifest end_name end_type begin_name mf end_name begin_init begin_expr begin_call begin_name get manifest end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name mf end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name get default manifest end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name mf end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name mf as string end_name begin_init begin_expr begin_call begin_name begin_name mf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name mf as string end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name mf as string end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name mf as string end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name mf end_name begin_operator EQ end_operator begin_call begin_name get manifest end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name mf end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name mf as string end_name begin_operator EQ end_operator begin_call begin_name begin_name mf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name mf as string end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator MINUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name mf as string end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name mf as string end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment target must be specified end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment chown task for setting file and directory permissions end_comment begin_specifier end_specifier begin_name chown end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment antlib attribute sets resource and uri uri is set the antlib value and resource is set to the antlib xml resource in the classpath for example antlib antlib org acme bland cola corresponds to uri antlib org acme bland cola resource org acme bland cola antlib xml asf bugzilla bug 31999 param antlib the value to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set antlib end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name antlib end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name definer set end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name too many definitions end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name antlib end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name set uri end_name begin_argument_list begin_argument begin_expr begin_name antlib end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name resource end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name antlib end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name definer set end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get hasession end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name hasession end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name task container test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a classloader for the given project using the classpath given param parent the parent classloader to which unsatisfied loading attempts are delegated may be code null code in which case the classloader which loaded this class is used as the parent param project the project to which this classloader is to belong must not be code null code param classpath the classpath to use to load the classes may be code null code in which case no path elements are set up to start with param parent first if code true code indicates that the parent classloader should be consulted before trying to load the a class through this loader end_comment begin_specifier end_specifier begin_name ant class loader end_name begin_parameter_list begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name parent first end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name parent end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set parent end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name set parent first end_name begin_argument_list begin_argument begin_expr begin_name parent first end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add java libraries end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add an arc param arc the arc to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add arc end_name begin_parameter_list begin_param begin_decl begin_type begin_name arc end_name end_type begin_name arc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name instructions end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name arc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment find out the relative path to root return empty string throws build exception actually never throws io exception actually never end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get relative path end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment stop the log stream handler end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name stop end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name stop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name get err end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name close end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get out end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name close end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment plain impossible end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment the signature name to check jarfile for param name signature to look for end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment set the jonas root directory dinstall root this element is required param in value the new jonasroot value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set jonasroot end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name in value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name jonasroot end_name begin_operator EQ end_operator begin_name in value end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test file list end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file list end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set files end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name add filelist end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name l end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment do the work the work is actually done by creating a separate jvm to run a helper task this approach allows the classpath of the helper task to be set since the weblogic tools require the class files of the project s home and remote interfaces to be available in the classpath this also avoids having to start ant with the class path of the project it is building exception build exception if someting goes wrong with the build end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name descriptor directory end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name descriptor directory end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name descriptor directory end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name generated files directory end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name generated files directory end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name generated files directory end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name source directory end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name source directory end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name source directory end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name system class path end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name exec class path end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name translate path end_name end_name begin_argument_list begin_argument begin_expr begin_name system class path end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name classpath end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name generated files directory end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment get all the files in the descriptor directory end_comment begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name descriptor directory end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name java end_name end_type begin_name helper task end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name java end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper task end_name begin_operator DOT end_operator begin_name set fork end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper task end_name begin_operator DOT end_operator begin_name set classname end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name args end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name args end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_name descriptor directory end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name args end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_name generated files directory end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name args end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_name source directory end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name args end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_name generated manifest file end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name args end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_name keepgenerated end_name end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name args end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name argument end_name end_name end_type begin_name arguments end_name begin_init begin_expr begin_call begin_name begin_name helper task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name set line end_name end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper task end_name begin_operator DOT end_operator begin_name set classpath end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name exec class path end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name helper task end_name begin_operator DOT end_operator begin_name execute java end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment constructor using a fileset arguement param fileset the fileset to use end_comment begin_specifier end_specifier begin_name zip file set end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name fileset end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name fileset end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name available test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor end_comment begin_specifier end_specifier begin_name jj doc end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name set vm end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get jre executable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a message giving further information on why the build exited param value message to output end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set message end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name message end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment see whether our nested condition holds and set the property since ant 1 4 exception build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name count conditions end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name count conditions end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name property end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name condition end_name end_type begin_name c end_name begin_init begin_expr begin_operator LPAR end_operator begin_name condition end_name begin_operator RPAR end_operator begin_call begin_name get conditions end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name next element end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name eval end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name property end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name value end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set new property end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name alternative end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name property end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name alternative end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set new property end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument begin_argument begin_expr begin_name alternative end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name property end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block 
 begin_comment add an attribute to the manifest it is added to the main section param attribute the attribute to be added exception manifest exception if the attribute is not valid end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured attribute end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name attribute end_name end_name end_type begin_name attribute end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name manifest exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name nested manifest end_name begin_operator DOT end_operator begin_name add configured attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name attribute end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the comment return if it was set null if not end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get comment end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name comment end_name end_expr end_return end_block 
 begin_comment a url pointing to an image to display optional default antlogo gif from the classpath param imgurl the url string pointing to the image end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set image url end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name imgurl end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name imgurl end_name end_name begin_operator EQ end_operator begin_name imgurl end_name end_expr end_expr_stmt end_block 
 begin_comment add a group of daemon threads param daemon tasks the tasks to be executed as daemon end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add daemons end_name begin_parameter_list begin_param begin_decl begin_type begin_name task list end_name end_type begin_name daemon tasks end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name daemon tasks end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name daemon tasks end_name end_name begin_operator EQ end_operator begin_name daemon tasks end_name end_expr end_expr_stmt end_block 
 begin_comment if true smartly filter the stack frames of j unit errors and failures before reporting them p this property is applied on all batch test batchtest and j unit test test however it can possibly be overridden by their own properties p param value tt false tt if it should not filter otherwise tt true tt since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set filtertrace end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name filter trace end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment constructor for sync target this just changes the default value of defaultexcludes from true to false end_comment begin_specifier end_specifier begin_name sync target end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the name of the resource return the name of the wrapped resource end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get resource end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment sets the ftp action to be taken currently accepts put get del mkdir chmod list and site deprecated since 1 5 x set action string is deprecated and is replaced with set action ftp action to make ant s introspection mechanism do the work and also to encapsulate operations on the type in its own class ant attribute ignore true param action the ftp action to be performed throws build exception if the action is not a valid action end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set action end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name action end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name action end_name end_type begin_name a end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name action end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name action end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name action end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name get action end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the debug parser grammar option param debug parser a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set debugparser end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name debug parser end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name debug parser end_name end_expr end_argument begin_argument begin_expr begin_name debug parser end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment process error output param output the error output data end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name handle error output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name error print stream end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name error print stream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_name error stream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name error print stream end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment handle input param buffer not used param offset not used param length not used return 1 always throws io exception never see org apache tools ant task handle input byte int int since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name handle input end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name buffer end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name offset end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name length end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_operator MINUS end_operator end_expr end_return end_block 
 begin_comment sets the location where files will be transferred to this can either be a remote directory or a local directory remote directories take the form of br i user password host directory path i br this parameter is required param a to uri a string representing the target of the copy end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set todir end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name a to uri end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set to uri end_name begin_argument_list begin_argument begin_expr begin_name a to uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name is to remote end_name end_name begin_operator EQ end_operator begin_call begin_name is remote uri end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name to uri end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the recursive flag param recurse if true use the recursive flag on the command line end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set internal recursive end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name recurse end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name recursive end_name begin_operator EQ end_operator begin_name recurse end_name end_expr end_expr_stmt end_block 
 begin_comment sets the path to the file that the command will operate on param v value to assign to file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name v end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator EQ end_operator begin_name v end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute wls 6 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name security policy file end_name begin_init begin_expr begin_call begin_name find security policy file end_name begin_argument_list begin_argument begin_expr begin_name default wl 60 policy file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name bea home end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name bea home end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name config file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name weblogic system home end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_name weblogic domain name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name config file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name config file end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name management password end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name java end_name end_type begin_name weblogic server end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name java end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name weblogic server end_name begin_operator DOT end_operator begin_name set task name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name weblogic server end_name begin_operator DOT end_operator begin_name set fork end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name weblogic server end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_name weblogic system home end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name weblogic server end_name begin_operator DOT end_operator begin_name set classname end_name end_name begin_argument_list begin_argument begin_expr begin_name weblogic main class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name jvm args end_name begin_init begin_expr begin_name additional jvm args end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name jvm args end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_name weblogic domain name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name jvm args end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_name weblogic system name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name jvm args end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_name weblogic system home end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name jvm args end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_name bea home end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name jvm args end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_name security policy file end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name jvm args end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_name management username end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name jvm args end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_name management password end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name pk password end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name jvm args end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_name pk password end_name end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name weblogic server end_name begin_operator DOT end_operator begin_name create jvmarg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set line end_name begin_argument_list begin_argument begin_expr begin_name jvm args end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name weblogic server end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set line end_name begin_argument_list begin_argument begin_expr begin_name additional args end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name classpath end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name weblogic server end_name begin_operator DOT end_operator begin_name set classpath end_name end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name weblogic server end_name begin_operator DOT end_operator begin_name execute java end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment return false mark is not supported end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name mark supported end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return begin_comment would be imprecise end_comment end_block 
 begin_comment called for each component name check if the associated uri has been examined for antlibs end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name check namespace end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name component name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name uri end_name begin_init begin_expr begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name extract uri from component name end_name end_name begin_argument_list begin_argument begin_expr begin_name component name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name uri end_name begin_operator EQ end_operator begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name ant core uri end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name antlib uri end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return begin_comment namespace that does not contain antlib end_comment end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name checked namespaces end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return begin_comment already processed end_comment end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name checked namespaces end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name typedef end_name end_type begin_name definer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name typedef end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name definer end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name definer end_name begin_operator DOT end_operator begin_name init end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name definer end_name begin_operator DOT end_operator begin_name set uri end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment there to stop error messages being null end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name definer end_name begin_operator DOT end_operator begin_name set task name end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment if this is left out bad things happen like all build files break end_comment begin_comment on the first element encountered end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name definer end_name begin_operator DOT end_operator begin_name set resource end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name definer end_name begin_operator DOT end_operator begin_name make resource from uri end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment a fishing expedition ignore errors if antlib not present end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name definer end_name begin_operator DOT end_operator begin_name set on error end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name typedef end_name begin_operator DOT end_operator begin_name on error end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name typedef end_name begin_operator DOT end_operator begin_name on error end_name begin_operator DOT end_operator begin_name policy ignore end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name definer end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this routine is actually checking all the include patterns in order to avoid scanning everything under base dir since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check include patterns end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name newroots end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment put in the newroots vector the include patterns without end_comment begin_comment wildcard tokens end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name icounter end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name icounter end_name begin_operator LT end_operator begin_name begin_name includes end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name icounter end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name newpattern end_name begin_init begin_expr begin_call begin_name begin_name selector utils end_name begin_operator DOT end_operator begin_name rtrim wildcard tokens end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name includes end_name begin_index begin_expr begin_name icounter end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name newroots end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name newpattern end_name end_expr end_argument begin_argument begin_expr begin_name begin_name includes end_name begin_index begin_expr begin_name icounter end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_if begin_condition begin_expr begin_name remotedir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name remotedir end_name begin_operator EQ end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name print working directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name ant ftp file end_name end_type begin_name base ftp file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name ant ftp root file end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument begin_argument begin_expr begin_name remotedir end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name root path end_name begin_operator EQ end_operator begin_call begin_name begin_name base ftp file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment construct it end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name newroots end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment we are going to scan everything anyway end_comment begin_expr_stmt begin_expr begin_call begin_name scandir end_name begin_argument_list begin_argument begin_expr begin_name root path end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment only scan directories that can include matched files or end_comment begin_comment directories end_comment begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name enum 2 end_name begin_init begin_expr begin_call begin_name begin_name newroots end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name enum 2 end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name currentelement end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name enum 2 end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name originalpattern end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name newroots end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name currentelement end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name ant ftp file end_name end_type begin_name myfile end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name ant ftp file end_name begin_argument_list begin_argument begin_expr begin_name base ftp file end_name end_expr end_argument begin_argument begin_expr begin_name currentelement end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name is ok end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name traverses symlinks end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name myfile end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name force remote sensitivity check end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name remote sensitivity checked end_name begin_operator UNP end_operator begin_name remote system case sensitive end_name begin_operator UNP end_operator begin_call begin_name is follow symlinks end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment cool case end_comment begin_comment we do not need to scan all the subdirs in the relative path end_comment begin_expr_stmt begin_expr begin_name path end_name begin_operator EQ end_operator begin_call begin_name begin_name myfile end_name begin_operator DOT end_operator begin_name get fast relative path end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment may be on a case insensitive file system we want end_comment begin_comment the results to show what s really on the disk so end_comment begin_comment we need to double check end_comment begin_try begin_block begin_expr_stmt begin_expr begin_name path end_name begin_operator EQ end_operator begin_call begin_name begin_name myfile end_name begin_operator DOT end_operator begin_name get relative path end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name traverses symlinks end_name begin_operator EQ end_operator begin_call begin_name begin_name myfile end_name begin_operator DOT end_operator begin_name is traverse symlinks end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name be end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name is ok end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_catch end_try end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name is ok end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name is ok end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name currentelement end_name begin_operator EQ end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name remote file sep end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is follow symlinks end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name traverses symlinks end_name end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name myfile end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name is included end_name begin_argument_list begin_argument begin_expr begin_name currentelement end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name currentelement end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name account for included dir end_name begin_argument_list begin_argument begin_expr begin_name currentelement end_name end_expr end_argument begin_argument begin_expr begin_name myfile end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name currentelement end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name currentelement end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name currentelement end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name currentelement end_name begin_operator EQ end_operator begin_name currentelement end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name scandir end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name myfile end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name currentelement end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name is case sensitive end_name begin_operator UNP end_operator begin_call begin_name begin_name originalpattern end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name currentelement end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name account for included file end_name begin_argument_list begin_argument begin_expr begin_name currentelement end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name is case sensitive end_name begin_operator UNP end_operator begin_call begin_name begin_name originalpattern end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name currentelement end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name account for included file end_name begin_argument_list begin_argument begin_expr begin_name currentelement end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_block end_else end_if end_block end_then end_if end_block end_while end_block end_else end_if end_block 
 begin_comment set the line to split into several commandline arguments param line line to split into several commandline arguments end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set line end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name line end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name parts end_name begin_operator EQ end_operator begin_call begin_name translate commandline end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment start ant param args command line args param additional user properties properties to set beyond those that may be specified on the args list param core loader not used since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start ant end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param begin_param begin_decl begin_type begin_name properties end_name end_type begin_name additional user properties end_name end_decl end_param begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name core loader end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name diagnostics end_name begin_operator DOT end_operator begin_name validate version end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name process args end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name exc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name handle logfile end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name print message end_name begin_argument_list begin_argument begin_expr begin_name exc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name exit end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_catch end_try begin_if begin_condition begin_expr begin_name additional user properties end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name additional user properties end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name property end_name begin_init begin_expr begin_call begin_name begin_name additional user properties end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name defined props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument begin_argument begin_expr begin_name property end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_comment expect the worst end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name exit code end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name run build end_name begin_argument_list begin_argument begin_expr begin_name core loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name exit code end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exit status exception end_name end_type begin_name ese end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name exit code end_name begin_operator EQ end_operator begin_call begin_name begin_name ese end_name begin_operator DOT end_operator begin_name get status end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name exit code end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_name ese end_name end_expr end_throw end_block end_then end_if end_block end_catch end_try end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name err end_name begin_operator UNP end_operator begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name print message end_name begin_argument_list begin_argument begin_expr begin_name be end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name exc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name exc end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name print message end_name begin_argument_list begin_argument begin_expr begin_name exc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name handle logfile end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try begin_expr_stmt begin_expr begin_call begin_name exit end_name begin_argument_list begin_argument begin_expr begin_name exit code end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment creates a new perforce change list sets the p 4 change property to the number of the new change list throws build exception if the word error appears in the output coming from perforce end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name empty change list end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name empty change list end_name begin_operator EQ end_operator begin_call begin_name get empty change list end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name my proj end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name p 4 handler end_name end_type begin_name handler end_name begin_init begin_expr begin_operator UNP end_operator begin_class begin_super begin_name p 4 handler adapter end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name util end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment remove any non numerical chars should leave the change number end_comment begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name util end_name begin_operator DOT end_operator begin_name substitute end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name changenumber end_name begin_init begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name changenumber end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name my proj end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_name changenumber end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name util end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_else end_if end_block end_function end_block end_class end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name set output end_name end_name begin_argument_list begin_argument begin_expr begin_name empty change list end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name exec p 4 command end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name handler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment end_comment begin_comment get set methods end_comment begin_comment setters of course are where ant user passes in values end_comment begin_comment end_comment begin_comment set the name of star team server required if tt url tt is not set param servername a code string code value see set url string end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set servername end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name servername end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name servername end_name end_name begin_operator EQ end_operator begin_name servername end_name end_expr end_expr_stmt end_block 
 begin_comment calculate where the files will end up this is dest dir or it id dest dir the package name end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get actual dest dir end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dest end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name package name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dest end_name begin_operator EQ end_operator begin_name dest dir end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path end_name begin_init begin_expr begin_call begin_name begin_name dest dir end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name begin_operator PLUS end_operator begin_call begin_name begin_name package name end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name dest end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_return begin_expr begin_name dest end_name end_expr end_return end_block 
 begin_comment sets whether or not the tag is enabled param enabled whether or not this tag is enabled end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set enabled end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name enabled end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name enabled end_name end_name begin_operator EQ end_operator begin_name enabled end_name end_expr end_expr_stmt end_block 
 begin_comment encode a byte array into base 64 encoding param octet string the byte array to encode return the encoded string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name encode end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name octet string end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name bits 24 end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name bits 6 end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name char end_name begin_index end_index end_type begin_name out end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name char end_name begin_index begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name begin_name octet string end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator begin_operator RPAR end_operator begin_operator SLASH end_operator begin_operator PLUS end_operator begin_operator RPAR end_operator begin_operator STAR end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name out index end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name i end_name begin_operator PLUS end_operator begin_operator RPAR end_operator begin_operator LE end_operator begin_name begin_name octet string end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_block begin_comment store the octets end_comment begin_expr_stmt begin_expr begin_name bits 24 end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name begin_name octet string end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bits 24 end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name begin_name octet string end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bits 24 end_name begin_operator UNP end_operator begin_name begin_name octet string end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bits 6 end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name bits 24 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name out end_name begin_index begin_expr begin_name out index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name alphabet end_name begin_index begin_expr begin_name bits 6 end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bits 6 end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name bits 24 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name out end_name begin_index begin_expr begin_name out index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name alphabet end_name begin_index begin_expr begin_name bits 6 end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bits 6 end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name bits 24 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name out end_name begin_index begin_expr begin_name out index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name alphabet end_name begin_index begin_expr begin_name bits 6 end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bits 6 end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name bits 24 end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name out end_name begin_index begin_expr begin_name out index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name alphabet end_name begin_index begin_expr begin_name bits 6 end_name end_expr end_index end_name end_expr end_expr_stmt end_block end_while begin_if begin_condition begin_expr begin_name begin_name octet string end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator begin_name i end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment store the octets end_comment begin_expr_stmt begin_expr begin_name bits 24 end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name begin_name octet string end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bits 24 end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name begin_name octet string end_name begin_index begin_expr begin_name i end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bits 6 end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name bits 24 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name out end_name begin_index begin_expr begin_name out index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name alphabet end_name begin_index begin_expr begin_name bits 6 end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bits 6 end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name bits 24 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name out end_name begin_index begin_expr begin_name out index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name alphabet end_name begin_index begin_expr begin_name bits 6 end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bits 6 end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name bits 24 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name out end_name begin_index begin_expr begin_name out index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name alphabet end_name begin_index begin_expr begin_name bits 6 end_name end_expr end_index end_name end_expr end_expr_stmt begin_comment padding end_comment begin_expr_stmt begin_expr begin_name begin_name out end_name begin_index begin_expr begin_name out index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name begin_name octet string end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator begin_name i end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment store the octets end_comment begin_expr_stmt begin_expr begin_name bits 24 end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name begin_name octet string end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bits 6 end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name bits 24 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name out end_name begin_index begin_expr begin_name out index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name alphabet end_name begin_index begin_expr begin_name bits 6 end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bits 6 end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name bits 24 end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name out end_name begin_index begin_expr begin_name out index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name alphabet end_name begin_index begin_expr begin_name bits 6 end_name end_expr end_index end_name end_expr end_expr_stmt begin_comment padding end_comment begin_expr_stmt begin_expr begin_name begin_name out end_name begin_index begin_expr begin_name out index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name out end_name begin_index begin_expr begin_name out index end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_return begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test attribute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns true if the source is older than the dest if the dest file does not exist then the test returns false it is implicitly not up do date param source source file should be the older param dest dest file should be the newer param granularity an offset added to the source time return true if the source is older than the dest after accounting for granularity since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is up to date end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name source end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name granularity end_name end_decl end_param end_parameter_list begin_block begin_comment do a check for the destination file existing end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dest end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment if it does not then the file is not up to date end_comment begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name source time end_name begin_init begin_expr begin_call begin_name begin_name source end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name dest time end_name begin_init begin_expr begin_call begin_name begin_name dest end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name is up to date end_name begin_argument_list begin_argument begin_expr begin_name source time end_name end_expr end_argument begin_argument begin_expr begin_name dest time end_name end_expr end_argument begin_argument begin_expr begin_name granularity end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment add a resource collection to the container param rc the collection to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name rc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name rcs end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment execute the task throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name run end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the code nogenic code flag param a boolean code true code if the flag must be set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set nogenic end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name a boolean end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name nogenic end_name begin_operator EQ end_operator begin_name a boolean end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 7 end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f 1 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name f 1 end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name f 1 end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name f 2 end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name f 2 end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment set the output stream of the process param is the input stream throws io exception if there is an error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set process output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name reader end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name javafile end_name end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name javafile end_name begin_operator EQ end_operator begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name javafile end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name classfile end_name begin_init begin_expr begin_call begin_name to class file end_name begin_argument_list begin_argument begin_expr begin_name javafile end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key end_name begin_init begin_expr begin_call begin_name begin_name classfile end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get config end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name begin_name src dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name genfiles end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name classfile end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment get the reference set on this object return the reference or null end_comment begin_type begin_specifier end_specifier begin_name reference end_name end_type begin_name get refid end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name ref end_name end_expr end_return end_block 
 begin_comment tests a regular expression against each line of text in a resource param r the resource to check return whether the resource is selected or not end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name teststr end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name in end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment throw build exception on error end_comment begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name my reg exp end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name my reg exp end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name regular expression end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name my reg exp end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr begin_name user provided expression end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name my expression end_name begin_operator EQ end_operator begin_call begin_name begin_name my reg exp end_name begin_operator DOT end_operator begin_name get regexp end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_name in end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name to long string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_name teststr end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_name teststr end_name begin_operator UNP end_operator end_expr end_condition begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name my expression end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr begin_name teststr end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name teststr end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_return begin_expr end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name to long string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name in end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name to long string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment sets the pattern to be used for the simple date format param pattern the pattern that defines the date format end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set pattern end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name pattern end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name pattern end_name end_name begin_operator EQ end_operator begin_name pattern end_name end_expr end_expr_stmt end_block 
 begin_comment set the string used to id the end of a token param end of token the new endtoken value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set end token end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name end of token end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name end of token end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name end of token end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name end of token end_name end_name begin_operator EQ end_operator begin_name end of token end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment sets the project object of this component this method is used by project when a component is added to it so that the component has access to the functions of the project it should not be used for any other purpose param project project in whose scope this component belongs must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set project end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name project end_name end_name begin_operator EQ end_operator begin_name project end_name end_expr end_expr_stmt end_block 
 begin_comment automatically approve unix os s return true if a valid os for unix this is always true otherwise use the superclasses test user set end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is valid os end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name is valid os end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment sets the passphrase for the users key param passphrase the new passphrase value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set passphrase end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name passphrase end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name user info end_name begin_operator DOT end_operator begin_name set passphrase end_name end_name begin_argument_list begin_argument begin_expr begin_name passphrase end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name xmlns test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get all the attribute s values return an enumeration of the attributes values end_comment begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name values end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name or end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment get the values return an array of the allowed values for this attribute end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_return end_block 
 begin_comment set the suffix for the generated jar file param in string the string to use as the suffix end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set generic jar suffix end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name in string end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name generic jar suffix end_name end_name begin_operator EQ end_operator begin_name in string end_name end_expr end_expr_stmt end_block 
 begin_comment synchronize access return the name value of this string resource end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment test the code that validates the selector end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test validate end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name date selector end_name end_type begin_name s end_name begin_init begin_expr begin_operator LPAR end_operator begin_name date selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 1 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 1 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name date selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set datetime end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 2 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 2 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name date selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set datetime end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 3 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 3 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name date selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name parameter end_name end_type begin_name param end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name parameter end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name parameter end_name begin_index end_index end_type begin_name params end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name parameter end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name params end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_name param end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set parameters end_name end_name begin_argument_list begin_argument begin_expr begin_name params end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 4 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 4 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name date selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name param end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name parameter end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name params end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_name param end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set parameters end_name end_name begin_argument_list begin_argument begin_expr begin_name params end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 5 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 5 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name date selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name param end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name parameter end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name params end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_name param end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set parameters end_name end_name begin_argument_list begin_argument begin_expr begin_name params end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 6 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 6 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment the compiler switch code compiler code to use optional this allows for the selection of a different compiler to be used for the compilation of the generated java files this could be set for example to jikes to compile with the jikes compiler if this is not set and the code build compiler code property is set to jikes the jikes compiler will be used if this is not desired the value quot code default code quot may be given to use the default compiler param compiler the compiler to be used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set compiler end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name compiler end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name compiler end_name end_name begin_operator EQ end_operator begin_name compiler end_name end_expr end_expr_stmt end_block 
 begin_comment return the directory scanner associated with this file set param p the project used to resolve dirs etc return a dependency scanner end_comment begin_type begin_specifier end_specifier begin_name directory scanner end_name end_type begin_name get directory scanner end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get directory scanner end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name all root classes end_name begin_init begin_expr begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name begin_name root classes end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name root file sets end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name additional root set end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name additional scanner end_name begin_init begin_expr begin_call begin_name begin_name additional root set end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name additional scanner end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name class file path end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name substring end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name class name end_name begin_init begin_expr begin_call begin_name begin_name class file path end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name all root classes end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block end_for begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name parent scanner end_name begin_init begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name depend scanner end_name end_type begin_name scanner end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name depend scanner end_name begin_argument_list begin_argument begin_expr begin_name parent scanner end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name scanner end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get dir end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name scanner end_name begin_operator DOT end_operator begin_name set root classes end_name end_name begin_argument_list begin_argument begin_expr begin_name all root classes end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name scanner end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name scanner end_name end_expr end_return end_block 
 begin_comment core class that exists in system classpath is ignored but found in specified classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 21 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log error end_name begin_parameter_list begin_param begin_decl begin_type begin_name transformer exception end_name end_type begin_name e end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name type end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name logger end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name msg end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name source locator end_name end_type begin_name locator end_name begin_init begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get locator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name locator end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name systemid end_name begin_init begin_expr begin_call begin_name begin_name locator end_name begin_operator DOT end_operator begin_name get system id end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name systemid end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name url end_name begin_init begin_expr begin_name systemid end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name url end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file utils end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name from uri end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name line end_name begin_init begin_expr begin_call begin_name begin_name locator end_name begin_operator DOT end_operator begin_name get line number end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name line end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name column end_name begin_init begin_expr begin_call begin_name begin_name locator end_name begin_operator DOT end_operator begin_name get column number end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name column end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name column end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name type end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get cause end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get cause end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name logger end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a name entry on the exclude list return a pattern for the excludes end_comment begin_type begin_specifier end_specifier begin_name begin_name pattern set end_name begin_operator DOT end_operator begin_name name entry end_name end_name end_type begin_name create exclude end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name default patterns end_name begin_operator DOT end_operator begin_name create exclude end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_specifier end_specifier begin_name jar test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the file resolved from url and directory param extension the extention param project the project return file the file resolved throws build exception if the url is invalid end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name resolve end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name extension end_name end_type begin_name extension end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_call begin_name get dest end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name get end_name end_type begin_name get end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name get end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name get end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name get end_name begin_operator DOT end_operator begin_name set dest end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name get end_name begin_operator DOT end_operator begin_name set src end_name end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name get end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name file end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test delete end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name supports symlinks end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name link deleted end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name link deleted end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_name link deleted end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block 
 begin_comment execute the task throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task type end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment whether this vm is 1 4 but also check executable null end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name javadoc 4 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 2 end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 3 end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name javadoc 5 end_name begin_init begin_expr begin_name javadoc 4 end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 4 end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name packages to doc end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name source dirs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name package list end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name source path end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name source path end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name source dirs end_name begin_operator DOT end_operator begin_name add existing end_name end_name begin_argument_list begin_argument begin_expr begin_name source path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name parse packages end_name begin_argument_list begin_argument begin_expr begin_name packages to doc end_name end_expr end_argument begin_argument begin_expr begin_name source dirs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name packages to doc end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name source dirs end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name source files to doc end_name begin_init begin_expr begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name begin_name source files end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add source files end_name begin_argument_list begin_argument begin_expr begin_name source files to doc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name package list end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name packages to doc end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name source files to doc end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name to execute end_name begin_init begin_expr begin_operator LPAR end_operator begin_name commandline end_name begin_operator RPAR end_operator begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name executable end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_name executable end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get jdk executable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_comment general javadoc arguments end_comment begin_if begin_condition begin_expr begin_name doctitle end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name expand end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name doctitle end_name begin_operator DOT end_operator begin_name get text end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name header end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name expand end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name header end_name begin_operator DOT end_operator begin_name get text end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name footer end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name expand end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name footer end_name begin_operator DOT end_operator begin_name get text end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name bottom end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name expand end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bottom end_name begin_operator DOT end_operator begin_name get text end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name classpath end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name concat system classpath end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name classpath end_name begin_operator EQ end_operator begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name concat system classpath end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set path end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name source dirs end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set path end_name begin_argument_list begin_argument begin_expr begin_name source dirs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name version end_name begin_operator UNP end_operator begin_name doclet end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name author end_name begin_operator UNP end_operator begin_name doclet end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name doclet end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name dest dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment javadoc 2 arguments for default doclet end_comment begin_if begin_condition begin_expr begin_name doclet end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name doclet end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name doclet end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name doclet end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name doclet path end_name begin_init begin_expr begin_call begin_name begin_name doclet end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name concat system classpath end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name doclet path end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set path end_name begin_argument_list begin_argument begin_expr begin_name doclet path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name doclet end_name begin_operator DOT end_operator begin_name get params end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name doclet param end_name end_type begin_name param end_name begin_init begin_expr begin_operator LPAR end_operator begin_name doclet param end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block end_else end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name bcp end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name bootclasspath end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name bcp end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name bootclasspath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name bcp end_name begin_operator EQ end_operator begin_call begin_name begin_name bcp end_name begin_operator DOT end_operator begin_name concat system boot classpath end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name bcp end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set path end_name begin_argument_list begin_argument begin_expr begin_name bcp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment add the links arguments end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name links end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name links end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name link argument end_name end_type begin_name la end_name begin_init begin_expr begin_operator LPAR end_operator begin_name link argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name la end_name begin_operator DOT end_operator begin_name get href end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name la end_name begin_operator DOT end_operator begin_name get href end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name link end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name la end_name begin_operator DOT end_operator begin_name should resolve link end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name href as file end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name la end_name begin_operator DOT end_operator begin_name get href end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name href as file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name link end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file url end_name end_name begin_argument_list begin_argument begin_expr begin_name href as file end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to external form end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name malformed url exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_comment should be impossible end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name href as file end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name link end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment is the href a valid url end_comment begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name base end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name la end_name begin_operator DOT end_operator begin_name get href end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name link end_name begin_operator EQ end_operator begin_call begin_name begin_name la end_name begin_operator DOT end_operator begin_name get href end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name malformed url exception end_name end_type begin_name mue end_name end_decl end_param end_parameter_list begin_block begin_comment ok just skip end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name la end_name begin_operator DOT end_operator begin_name get href end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_catch end_try end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name la end_name begin_operator DOT end_operator begin_name is link offline end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name package list location end_name begin_init begin_expr begin_call begin_name begin_name la end_name begin_operator DOT end_operator begin_name get packagelist loc end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name package list location end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name la end_name begin_operator DOT end_operator begin_name get href end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name package list file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name package list location end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name package list file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name package list url end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file url end_name end_name begin_argument_list begin_argument begin_expr begin_name package list location end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to external form end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name link end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name package list url end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name malformed url exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name package list location end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name package list location end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name link end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for end_block end_then end_if begin_comment add the single group arguments end_comment begin_comment javadoc 1 2 rules end_comment begin_comment multiple group args allowed end_comment begin_comment each arg includes 3 strings group name packagelist end_comment begin_comment elements in packagelist are colon delimited end_comment begin_comment an element in packagelist may end with the wildcard end_comment begin_comment ant javadoc task rules for group attribute end_comment begin_comment args are comma delimited end_comment begin_comment each arg is 2 space delimited strings end_comment begin_comment e g group xslt packages org apache xalan xslt end_comment begin_comment x path packages org apache xalan xpath end_comment begin_if begin_condition begin_expr begin_name group end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name tok end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name group end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name grp end_name begin_init begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name space end_name begin_init begin_expr begin_call begin_name begin_name grp end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name space end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name grp end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name space end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name pkg list end_name begin_init begin_expr begin_call begin_name begin_name grp end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name space end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name pkg list end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while end_block end_then end_if begin_comment add the group arguments end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name groups end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name groups end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name group argument end_name end_type begin_name ga end_name begin_init begin_expr begin_operator LPAR end_operator begin_name group argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name title end_name begin_init begin_expr begin_call begin_name begin_name ga end_name begin_operator DOT end_operator begin_name get title end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name packages end_name begin_init begin_expr begin_call begin_name begin_name ga end_name begin_operator DOT end_operator begin_name get packages end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name title end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name packages end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name expand end_name begin_argument_list begin_argument begin_expr begin_name title end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name packages end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_comment javadoc 1 4 parameters end_comment begin_if begin_condition begin_expr begin_name javadoc 4 end_name begin_operator UNP end_operator begin_name executable end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name tags end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name element end_name begin_init begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name element end_name begin_operator UNP end_operator begin_name tag argument end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name tag argument end_name end_type begin_name ta end_name begin_init begin_expr begin_operator LPAR end_operator begin_name tag argument end_name begin_operator RPAR end_operator begin_name element end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name tag dir end_name begin_init begin_expr begin_call begin_name begin_name ta end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name tag dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment the tag element is not used as a fileset end_comment begin_comment but specifies the tag directly end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ta end_name begin_operator DOT end_operator begin_name get parameter end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment the tag element is used as a end_comment begin_comment fileset parse all the files and create end_comment begin_comment tag arguments end_comment begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name tag def scanner end_name begin_init begin_expr begin_call begin_name begin_name ta end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name tag def scanner end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name tag def file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name tag dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name in end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file reader end_name begin_argument_list begin_argument begin_expr begin_name tag def file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name tag def file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_for end_block end_else end_if end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name extension info end_name end_type begin_name taglet info end_name begin_init begin_expr begin_operator LPAR end_operator begin_name extension info end_name begin_operator RPAR end_operator begin_name element end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name taglet info end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name taglet info end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name taglet path end_name begin_init begin_expr begin_call begin_name begin_name taglet info end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name concat system classpath end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name taglet path end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set path end_name begin_argument_list begin_argument begin_expr begin_name taglet path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_else end_if end_block end_for begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name source arg end_name begin_init begin_expr begin_name source end_name begin_operator UNP end_operator begin_operator QM end_operator begin_name source end_name begin_operator DP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name build javac source end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name source arg end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name source arg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name linksource end_name begin_operator UNP end_operator begin_name doclet end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name breakiterator end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name doclet end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name javadoc 5 end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name noqualifier end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name doclet end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name noqualifier end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_comment not 1 4 end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name tags end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name source end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name linksource end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name breakiterator end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name noqualifier end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if begin_comment javadoc 1 2 1 3 parameters end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name javadoc 4 end_name begin_operator UNP end_operator begin_name executable end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name old end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name old end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if begin_comment if using an external file write the command line options to it end_comment begin_if begin_condition begin_expr begin_name use external file end_name begin_operator UNP end_operator begin_name javadoc 4 end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name write external args end_name begin_argument_list begin_argument begin_expr begin_name to execute end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name tmp list end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name print writer end_name end_type begin_name src list writer end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_comment write sourcefiles and package names to a temporary file if requested end_comment begin_if begin_condition begin_expr begin_name use external file end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name tmp list end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name tmp list end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name create temp file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tmp list end_name begin_operator DOT end_operator begin_name delete on exit end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name tmp list end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name src list writer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file writer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name tmp list end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name packages to doc end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name package name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name use external file end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name src list writer end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name package name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name package name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_while begin_expr_stmt begin_expr begin_name e end_name begin_operator EQ end_operator begin_call begin_name begin_name source files to doc end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name source file end_name end_type begin_name sf end_name begin_init begin_expr begin_operator LPAR end_operator begin_name source file end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name source file name end_name begin_init begin_expr begin_call begin_name begin_name sf end_name begin_operator DOT end_operator begin_name get file end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name use external file end_name end_expr end_condition begin_then begin_block begin_comment xxx what is the following doing end_comment begin_comment should it run if javadoc 4 executable null end_comment begin_if begin_condition begin_expr begin_name javadoc 4 end_name begin_operator UNP end_operator begin_call begin_name begin_name source file name end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_name source file name end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_call begin_name begin_name source file name end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name src list writer end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name src list writer end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name source file name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name source file name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_while end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tmp list end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name src list writer end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name src list writer end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try begin_if begin_condition begin_expr begin_name package list end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name package list end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name describe command end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name javadoc output stream end_name end_type begin_name out end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name javadoc output stream end_name begin_argument_list begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name javadoc output stream end_name end_type begin_name err end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name javadoc output stream end_name begin_argument_list begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name execute end_name end_type begin_name exe end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name execute end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name pump stream handler end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name err end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set ant run end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment no reason to change the working directory as all filenames and path components have been resolved already avoid problems with command line length in some environments end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set working directory end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set commandline end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ret end_name begin_init begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ret end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name fail on error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ret end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name e end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name tmp list end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tmp list end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name tmp list end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name log flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name err end_name begin_operator DOT end_operator begin_name log flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name err end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_finally end_try end_block 
 begin_comment creates a new filtered reader param in a reader object providing the underlying stream must not be code null code end_comment begin_specifier end_specifier begin_name tail filter end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name in end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name line tokenizer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name line tokenizer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name line tokenizer end_name begin_operator DOT end_operator begin_name set include delims end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment empty implementation required by sub build listener interface param event ignored since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the binary attribute if true concat will concatenate the files byte for byte this mode does not allow any filtering or other modifications to the input streams the default value is false since ant 1 6 2 param binary if true enable binary mode end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set binary end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name binary end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name binary end_name end_name begin_operator EQ end_operator begin_name binary end_name end_expr end_expr_stmt end_block 
 begin_comment execute the code retryable code code with specified number of retries param exe the code to execute param desc some descriptive text for this piece of code used for logging throws io exception if the number of retries has exceeded the allowed limit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list begin_param begin_decl begin_type begin_name retryable end_name end_type begin_name exe end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name desc end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name retries end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr end_expr end_condition begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name retries end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name retries end_name begin_operator GT end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name retries allowed end_name end_name begin_operator UNP end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name retries allowed end_name end_name begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name retries end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name desc end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name retries allowed end_name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_name e end_name end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name retries end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name desc end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_catch end_try end_block end_while end_block 
 begin_comment read a constant pool entry from a class stream param cp stream the data input stream which contains the constant pool entry to be read exception io exception if there is a problem reading the entry from the stream end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name read end_name begin_parameter_list begin_param begin_decl begin_type begin_name data input stream end_name end_type begin_name cp stream end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name class index end_name begin_operator EQ end_operator begin_call begin_name begin_name cp stream end_name begin_operator DOT end_operator begin_name read unsigned short end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name name and type index end_name begin_operator EQ end_operator begin_call begin_name begin_name cp stream end_name begin_operator DOT end_operator begin_name read unsigned short end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates log stream handler param pc the project component for whom to log param outlevel the loglevel used to log standard output param errlevel the loglevel used to log standard error end_comment begin_specifier end_specifier begin_name log stream handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name project component end_name end_type begin_name pc end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name outlevel end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name errlevel end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name log output stream end_name begin_argument_list begin_argument begin_expr begin_name pc end_name end_expr end_argument begin_argument begin_expr begin_name outlevel end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name log output stream end_name begin_argument_list begin_argument begin_expr begin_name pc end_name end_expr end_argument begin_argument begin_expr begin_name errlevel end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create instance from a number param value the int to store as a zip short since 1 1 end_comment begin_specifier end_specifier begin_name zip short end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment returns the local path without the flag required todo see why this returns the local path without the flag return the local path value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get localpath end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name local path end_name end_expr end_return end_block 
 begin_comment add a nested code resource collection code param c the resource collection to add since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check children allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name union end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name union end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name union end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name union end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name union end_name begin_operator DOT end_operator begin_name set cache end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name union end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set checked end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test inspired by bug 1415 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test children of excluded directory end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name directory scanner end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set excludes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set follow symlinks end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ds end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name directory scanner end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set excludes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set follow symlinks end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment encoding to use for filenames defaults to the platform s default encoding p for a list of possible values see a href http java sun com j 2 se 1 5 0 docs guide intl encoding doc html http java sun com j 2 se 1 5 0 docs guide intl encoding doc html a p param encoding the encoding name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name encoding end_name end_name begin_operator EQ end_operator begin_name encoding end_name end_expr end_expr_stmt end_block 
 begin_comment taking in the substring representing the path relative to the source dir return a new string representing the destination path param path not used return null as this is not implemented todo end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name map path end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment set the output encoding param output encoding code string code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output encoding end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name output encoding end_name end_name begin_operator EQ end_operator begin_name output encoding end_name end_expr end_expr_stmt end_block 
 begin_comment comment to use for archive param comment the content of the comment since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set comment end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name comment end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name comment end_name end_name begin_operator EQ end_operator begin_name comment end_name end_expr end_expr_stmt end_block 
 begin_comment add a fileset to which contains a collection of root classes used to drive the search from classes param root file set a root file set to be used to search for dependent classes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add root fileset end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name root file set end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name root file sets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name root file set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment indicates whether the build will continue even if there are compilation errors defaults to true param fail if true halt the build on failure end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set failonerror end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name fail end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name fail on error end_name begin_operator EQ end_operator begin_name fail end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name internet address end_name begin_index end_index end_type begin_name internet addresses end_name begin_parameter_list begin_param begin_decl begin_type begin_name vector end_name end_type begin_name list end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name address exception end_name end_expr end_argument begin_argument begin_expr begin_name unsupported encoding exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name internet address end_name begin_index end_index end_type begin_name addrs end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name internet address end_name begin_index begin_expr begin_call begin_name begin_name list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name email address end_name end_type begin_name addr end_name begin_init begin_expr begin_operator LPAR end_operator begin_name email address end_name begin_operator RPAR end_operator begin_call begin_name begin_name list end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name addr end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name addrs end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name name end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name internet address end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name addr end_name begin_operator DOT end_operator begin_name get address end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name internet address end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name addr end_name begin_operator DOT end_operator begin_name get address end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name addrs end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert print end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name from end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name to end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name search end_name begin_init begin_expr begin_name from end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name to end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name search end_name end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment performs a compile using the javac externally return true the compilation was successful throws build exception if there is a problem end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment setup the apt executable end_comment begin_decl_stmt begin_decl begin_type begin_name apt end_name end_type begin_name apt end_name begin_init begin_expr begin_call begin_name get apt end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name apt end_name begin_operator DOT end_operator begin_name get apt executable end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name setup modern javac commandline switches end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name apt compiler adapter end_name begin_operator DOT end_operator begin_name set apt commandline switches end_name end_name begin_argument_list begin_argument begin_expr begin_name apt end_name end_expr end_argument begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name first file name end_name begin_init begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment add the files end_comment begin_expr_stmt begin_expr begin_call begin_name log and add files to compile end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment run end_comment begin_return begin_expr begin_operator EQT end_operator begin_call begin_name execute external compile end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name first file name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test configuration lang end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name begin_index end_index end_type begin_name expected counts end_name begin_init begin_expr begin_block begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr end_block end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name perform config test end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name expected counts end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name perform config test end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name expected counts end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name bx end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name bx end_name begin_operator UNP end_operator begin_name build exception end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment the constructor to create package specification object note that every component is allowed to be specified but only the specification title is mandatory param specification title the name of specification param specification version the specification version param specification vendor the specification vendor param implementation title the title of implementation param implementation version the implementation version param implementation vendor the implementation vendor end_comment begin_specifier end_specifier begin_name specification end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name specification title end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name specification version end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name specification vendor end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name implementation title end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name implementation version end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name implementation vendor end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name specification title end_name end_expr end_argument begin_argument begin_expr begin_name specification version end_name end_expr end_argument begin_argument begin_expr begin_name specification vendor end_name end_expr end_argument begin_argument begin_expr begin_name implementation title end_name end_expr end_argument begin_argument begin_expr begin_name implementation version end_name end_expr end_argument begin_argument begin_expr begin_name implementation vendor end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment whether the task should suppress the variable is set but not used in strictargs mode be careful with this one the warning is logged as verbose message though param suppress variable not used a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set suppress variable not used end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name suppress variable not used end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name suppress variable not used end_name end_name begin_operator EQ end_operator begin_name suppress variable not used end_name end_expr end_expr_stmt end_block 
 begin_comment wrap this input stream param in the stream to wrap end_comment begin_specifier end_specifier begin_name smtp response reader end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name in end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name reader end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the comment command param cmd containing the command line string with or without the comment flag and string appended end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get comment command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes this breaks clearcase end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag comment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment format an error and print it param type the type of error param test the test that failed param error the exception that the test threw end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name format error end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name type end_name end_decl end_param begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name error end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name test end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name end test end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name result writer end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name format test end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_name type end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result writer end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name error end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name strace end_name begin_init begin_expr begin_call begin_name begin_name j unit test runner end_name begin_operator DOT end_operator begin_name get filtered trace end_name end_name begin_argument_list begin_argument begin_expr begin_name error end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result writer end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name strace end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result writer end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the business logic of this selector for use as resource selector of file selector param basedir as described in base extend selector param filename as described in base extend selector param cache key the name for the key for storing the hashvalue return end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name basedir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name cache key end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment you can not compute a value for a directory end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name select directories end_name end_expr end_return end_block end_then end_if begin_comment get the values and do the comparison end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name cached value end_name begin_init begin_expr begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name new value end_name begin_init begin_expr begin_call begin_name begin_name algorithm end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name rv end_name begin_init begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name comparator end_name begin_operator DOT end_operator begin_name compare end_name end_name begin_argument_list begin_argument begin_expr begin_name cached value end_name end_expr end_argument begin_argument begin_expr begin_name new value end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_comment maybe update the cache end_comment begin_if begin_condition begin_expr begin_name update end_name begin_operator UNP end_operator begin_name rv end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name new value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set modified end_name begin_argument_list begin_argument begin_expr begin_call begin_name get modified end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get delay update end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name save cache end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_return begin_expr begin_name rv end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set input end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name input end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name input end_name end_name begin_operator EQ end_operator begin_name input end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name uptodate end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name src end_name end_decl end_param begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name tools end_name begin_operator DOT end_operator begin_name ant end_name begin_operator DOT end_operator begin_name types end_name begin_operator DOT end_operator begin_name resources end_name begin_operator DOT end_operator begin_name selectors end_name begin_operator DOT end_operator begin_name date end_name end_name end_type begin_name datesel end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name tools end_name begin_operator DOT end_operator begin_name ant end_name begin_operator DOT end_operator begin_name types end_name begin_operator DOT end_operator begin_name resources end_name begin_operator DOT end_operator begin_name selectors end_name begin_operator DOT end_operator begin_name date end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name datesel end_name begin_operator DOT end_operator begin_name set millis end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name datesel end_name begin_operator DOT end_operator begin_name set when end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name time comparison end_name begin_operator DOT end_operator begin_name after end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log future end_name begin_argument_list begin_argument begin_expr begin_name targets end_name end_expr end_argument begin_argument begin_expr begin_name datesel end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ne targets end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name non existent end_name begin_argument_list begin_argument begin_expr begin_name targets end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ne targets end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name ne targets end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file resource end_name end_type begin_name oldest target end_name begin_init begin_expr begin_call begin_name file resource end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name oldest end_name begin_argument_list begin_argument begin_expr begin_name targets end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name next end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name oldest target end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log future end_name begin_argument_list begin_argument begin_expr begin_name sources end_name end_expr end_argument begin_argument begin_expr begin_name datesel end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ne sources end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name non existent end_name begin_argument_list begin_argument begin_expr begin_name sources end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ne sources end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name ne sources end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name resource end_name end_type begin_name newest source end_name begin_init begin_expr begin_call begin_name resource end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name newest end_name begin_argument_list begin_argument begin_expr begin_name sources end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name next end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name newest source end_name begin_operator DOT end_operator begin_name to long string end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name oldest target end_name begin_operator DOT end_operator begin_name get last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator GE end_operator begin_call begin_name begin_name newest source end_name begin_operator DOT end_operator begin_name get last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment construct a new concat task end_comment begin_specifier end_specifier begin_name concat end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name reset end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test namespaces end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test whether or not a string matches against a pattern the pattern may contain two special characters br means zero or more characters br means one and only one character param pattern the pattern to match against must not be code null code param str the string which must be matched against the pattern must not be code null code param is case sensitive whether or not matching should be performed case sensitively return code true code if the string matches against the pattern or code false code otherwise end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name match end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name pattern end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name str end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name is case sensitive end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name selector utils end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr begin_name pattern end_name end_expr end_argument begin_argument begin_expr begin_name str end_name end_expr end_argument begin_argument begin_expr begin_name is case sensitive end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add an and selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add and end_name begin_parameter_list begin_param begin_decl begin_type begin_name and selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment forces initialization of a class in a jdk 1 1 compatible albeit hacky way param the class the class to initialize must not be code null code deprecated since 1 6 x use class for name with initialize true instead end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name initialize class end_name begin_parameter_list begin_param begin_decl begin_type begin_name class end_name end_type begin_name the class end_name end_decl end_param end_parameter_list begin_block begin_comment hack we ask the vm to create an instance end_comment begin_comment by voluntarily providing illegal arguments to force end_comment begin_comment the vm to run the class static initializer while end_comment begin_comment at the same time not running a valid constructor end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name constructor end_name begin_index end_index end_type begin_name cons end_name begin_init begin_expr begin_call begin_name begin_name the class end_name begin_operator DOT end_operator begin_name get declared constructors end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment at least one constructor is guaranteed to be there but check anyway end_comment begin_if begin_condition begin_expr begin_name cons end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name begin_name cons end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator begin_operator UNP end_operator begin_name begin_name cons end_name begin_index begin_expr end_expr end_index end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name strs end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_name number of strings end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name begin_name cons end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name new instance end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name object end_name begin_index end_index end_name begin_operator RPAR end_operator begin_name strs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment expecting an exception to be thrown by this call end_comment begin_comment illegal argument exception wrong number of arguments end_comment end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore we are interested only in the side end_comment begin_comment effect that of getting the static initializers end_comment begin_comment invoked as we do not want to call a valid end_comment begin_comment constructor to get this side effect an end_comment begin_comment attempt is made to call a hopefully end_comment begin_comment invalid constructor come on nobody end_comment begin_comment would have a constructor that takes in end_comment begin_comment 256 string arguments end_comment begin_comment in fact they can t according to jvm spec end_comment begin_comment section 4 10 the number of method parameters is limited end_comment begin_comment to 255 by the definition of a method descriptor end_comment begin_comment constructors count as methods here end_comment end_block end_catch end_try end_block end_then end_if end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test xml end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test xml end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect output containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get comment file return string containing the path to the comment file end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get comment file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m cfile end_name end_expr end_return end_block 
 begin_comment skip bytes in the input buffer this skips bytes in the current entry s data not the entire archive and will stop at the end of the current entry s data if the number to skip extends beyond that point param num to skip the number of bytes to skip return the number actually skipped throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name skip end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name num to skip end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment review end_comment begin_comment this is horribly inefficient but it ensures that we end_comment begin_comment properly skip over bytes via the tar buffer end_comment begin_comment end_comment begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name skip buf end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_operator STAR end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name skip end_name begin_init begin_expr begin_name num to skip end_name end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name skip end_name begin_operator GT end_operator end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name real skip end_name begin_init begin_expr begin_call begin_name int end_name begin_argument_list begin_argument begin_expr begin_name skip end_name begin_operator GT end_operator begin_name begin_name skip buf end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator QM end_operator begin_name begin_name skip buf end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator DP end_operator begin_name skip end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name num read end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name skip buf end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name real skip end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name num read end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_expr_stmt begin_expr begin_name skip end_name begin_operator UNP end_operator begin_name num read end_name end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_operator LPAR end_operator begin_name num to skip end_name begin_operator MINUS end_operator begin_name skip end_name begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment checks whether the archive is out of date with respect to the given files ensures that the archive won t contain itself p param basedir base directory for file names param files array of relative file names return whether the archive is up to date since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name check end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name basedir end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name files end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name up to date end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name archive is up to date end_name begin_argument_list begin_argument begin_expr begin_name files end_name end_expr end_argument begin_argument begin_expr begin_name basedir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name up to date end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name tar file end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_for begin_return begin_expr begin_name up to date end_name end_expr end_return end_block 
 begin_comment set whether or not messages should be displayed on the console valid true values are on or true anything else sets the flag to false the default value is true param console a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set console end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name console end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name console end_name end_name begin_operator EQ end_operator begin_name console end_name end_expr end_expr_stmt end_block 
 begin_name dummy task without public constructor end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment implementation of org apache tools ant taskdefs execute stream handler interface end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block end_block 
 begin_comment convenience method to copy a file from a source to a destination specifying if token filtering must be used if filter chains must be used if source files may overwrite newer destination files and the last modified time of code dest file code file should be made equal to the last modified time of code source file code param source file name of file to copy from must not be code null code param dest file name of file to copy to must not be code null code param filters the collection of filters to apply to this copy param filter chains filter chains to apply during the copy param overwrite whether or not the destination file should be overwritten if it already exists param preserve last modified whether or not the last modified time of the resulting file should be set to that of the source file param input encoding the encoding used to read the files param output encoding the encoding used to write the files param project the project instance throws io exception if the copying fails since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name copy file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name source file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name dest file end_name end_decl end_param begin_param begin_decl begin_type begin_name filter set collection end_name end_type begin_name filters end_name end_decl end_param begin_param begin_decl begin_type begin_name vector end_name end_type begin_name filter chains end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name overwrite end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name preserve last modified end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name input encoding end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name output encoding end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name copy file end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name source file end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name filters end_name end_expr end_argument begin_argument begin_expr begin_name filter chains end_name end_expr end_argument begin_argument begin_expr begin_name overwrite end_name end_expr end_argument begin_argument begin_expr begin_name preserve last modified end_name end_expr end_argument begin_argument begin_expr begin_name input encoding end_name end_expr end_argument begin_argument begin_expr begin_name output encoding end_name end_expr end_argument begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test file tokenizer end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name contents end_name begin_init begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert string contains end_name begin_argument_list begin_argument begin_expr begin_name contents end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert string not contains end_name begin_argument_list begin_argument begin_expr begin_name contents end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end test end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment set the delimiter that separates sql statements defaults to quot quot optional p for example set this to go and delimitertype to row for sybase ase or ms sql server p param delimiter the separator end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set delimiter end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name delimiter end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name delimiter end_name end_name begin_operator EQ end_operator begin_name delimiter end_name end_expr end_expr_stmt end_block 
 begin_comment set the url base for fileset param url base the base url end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set url base end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name url base end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name url base end_name end_name begin_operator EQ end_operator begin_name url base end_name end_expr end_expr_stmt end_block 
 begin_comment no need to keep track of bcc d addresses end_comment begin_comment sets the subject of the mail message actually sets the subject header param subj the subject of the mail message end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set subject end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name subj end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set header end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name subj end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test that returns true if we are using a sax 1 parser return true when a sax 1 parser is in use end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is sax 1 parser end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name xml reader end_name begin_operator UNP end_operator begin_name parser adapter end_name begin_operator RPAR end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a new token filter using the passed in reader for instantiation param reader a reader object providing the underlying stream return a new filter based on this configuration end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name reader end_name end_type begin_name chain end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name reader end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name token filter end_name end_type begin_name new filter end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name token filter end_name begin_argument_list begin_argument begin_expr begin_name reader end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name new filter end_name begin_operator DOT end_operator begin_name filters end_name end_name begin_operator EQ end_operator begin_name filters end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name new filter end_name begin_operator DOT end_operator begin_name tokenizer end_name end_name begin_operator EQ end_operator begin_name tokenizer end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name new filter end_name begin_operator DOT end_operator begin_name delim output end_name end_name begin_operator EQ end_operator begin_name delim output end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new filter end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name new filter end_name end_expr end_return end_block 
 begin_comment set the name of the directory for resources to be created we cannot control their names but we can say where they get created if not set the directory of the dest file is used param resource dir the directory in which to create resources end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set resource dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name resource dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name resource dir end_name end_name begin_operator EQ end_operator begin_name resource dir end_name end_expr end_expr_stmt end_block 
 begin_comment accessor to the xml catalog used in the task return xml catalog reference end_comment begin_type begin_specifier end_specifier begin_name entity resolver end_name end_type begin_name get entity resolver end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name xml catalog end_name end_expr end_return end_block 
 begin_comment gets the code folder name code attribute return the subfolder from which to check out files all subfolders will be searched as well see set folder name string folder name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get folder name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name folder name end_name end_expr end_return end_block 
 begin_comment get the classname of the definition return the name of the class of this definition end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get class name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name class name end_name end_expr end_return end_block 
 begin_comment if true emit html param enable a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set html end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name enable end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name html end_name begin_operator EQ end_operator begin_name enable end_name end_expr end_expr_stmt end_block 
 begin_comment return time to sleep return sleep time if below 0 then there is an error end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name get sleep time end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name long end_name begin_operator RPAR end_operator begin_name hours end_name begin_operator STAR end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_name minutes end_name begin_operator RPAR end_operator begin_operator STAR end_operator begin_operator PLUS end_operator begin_name seconds end_name begin_operator RPAR end_operator begin_operator STAR end_operator begin_operator PLUS end_operator begin_name milliseconds end_name end_expr end_return end_block 
 begin_comment set the ant type to compare against param s the type name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set type end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name type end_name begin_operator EQ end_operator begin_name s end_name end_expr end_expr_stmt end_block 
 begin_comment autoresponce behaviour valid options are y and n param response the auto response value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set autoresponse end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name response end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal auto response end_name end_name begin_argument_list begin_argument begin_expr begin_name response end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true suppress warning messages param nwarn the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set no warn end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name nwarn end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m nwarn end_name begin_operator EQ end_operator begin_name nwarn end_name end_expr end_expr_stmt end_block 
 begin_comment sets the name of a property in which the return code of the command should be stored only of interest if failonerror false since ant 1 5 param result property name of property end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set result property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name result property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name result property end_name end_name begin_operator EQ end_operator begin_name result property end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name incompatible with spawn end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment sets the lookahead grammar option param lookahead an code int code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set lookahead end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name lookahead end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name lookahead end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr begin_name lookahead end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment empty end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start test end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment the j unit setup method end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convert a color name to a color value param color name a string repr of the color return the color value todo refactor to use an enumerated attribute maybe end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name color end_name end_type begin_name get color by name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name color name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name color name end_name begin_operator EQ end_operator begin_call begin_name begin_name color name end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name color name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name color black end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name color end_name begin_operator DOT end_operator begin_name black end_name end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name color name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name color blue end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name color end_name begin_operator DOT end_operator begin_name blue end_name end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name color name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name color cyan end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name color end_name begin_operator DOT end_operator begin_name cyan end_name end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name color name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name color darkgray end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name color name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name color darkgrey end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name color end_name begin_operator DOT end_operator begin_name dark gray end_name end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name color name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name color gray end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name color name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name color grey end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name color end_name begin_operator DOT end_operator begin_name gray end_name end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name color name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name color lightgray end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name color name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name color lightgrey end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name color end_name begin_operator DOT end_operator begin_name light gray end_name end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name color name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name color green end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name color end_name begin_operator DOT end_operator begin_name green end_name end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name color name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name color magenta end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name color end_name begin_operator DOT end_operator begin_name magenta end_name end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name color name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name color orange end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name color end_name begin_operator DOT end_operator begin_name orange end_name end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name color name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name color pink end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name color end_name begin_operator DOT end_operator begin_name pink end_name end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name color name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name color red end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name color end_name begin_operator DOT end_operator begin_name red end_name end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name color name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name color white end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name color end_name begin_operator DOT end_operator begin_name white end_name end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name color name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name color yellow end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name color end_name begin_operator DOT end_operator begin_name yellow end_name end_name end_expr end_return end_block end_then end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if begin_return begin_expr begin_name begin_name color end_name begin_operator DOT end_operator begin_name black end_name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for asi extra field end_comment begin_specifier end_specifier begin_name asi extra field end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment the actual data to put into local file data without header id or length specifier return get the data since 1 1 end_comment begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name get local file data data end_name begin_parameter_list end_parameter_list begin_block begin_comment crc will be added later end_comment begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name data end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_call begin_name get local file data length end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip short end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get mode end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name data end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name link array end_name begin_init begin_expr begin_call begin_name get linked file end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip long end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name link array end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name data end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip short end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get user id end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name data end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip short end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get group id end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name data end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name link array end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name data end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name link array end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name crc end_name begin_operator DOT end_operator begin_name reset end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name crc end_name begin_operator DOT end_operator begin_name update end_name end_name begin_argument_list begin_argument begin_expr begin_name data end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name checksum end_name begin_init begin_expr begin_call begin_name begin_name crc end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_name begin_name data end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip long end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name checksum end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name data end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name data end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment set up the specified directory scanner against the specified project param ds a code file scanner code instance param p an ant code project code instance end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name setup directory scanner end_name begin_parameter_list begin_param begin_decl begin_type begin_name file scanner end_name end_type begin_name ds end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name setup directory scanner end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name ds end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal argument exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name pattern set end_name end_type begin_name ps end_name begin_init begin_expr begin_call begin_name merge patterns end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get data type name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name dir end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name ps end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ps end_name begin_operator DOT end_operator begin_name get include patterns end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set excludes end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ps end_name begin_operator DOT end_operator begin_name get exclude patterns end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name ds end_name begin_operator UNP end_operator begin_name selector scanner end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name selector scanner end_name end_type begin_name ss end_name begin_init begin_expr begin_operator LPAR end_operator begin_name selector scanner end_name begin_operator RPAR end_operator begin_name ds end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ss end_name begin_operator DOT end_operator begin_name set selectors end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get selectors end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name use default excludes end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name add default excludes end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set case sensitive end_name end_name begin_argument_list begin_argument begin_expr begin_name case sensitive end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a type selector entry on the type list param selector the selector to add since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add different end_name begin_parameter_list begin_param begin_decl begin_type begin_name different selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name add different end_name end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test invalid extra ops end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name wsdl failed end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the package name return the package s name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_comment concatenates the system boot class path in the order specified by the build sysclasspath property using the supplied value if build sysclasspath has not been set param def value the order first last only return the concatenated path end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name concat system boot classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name def value end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name concat special path end_name begin_argument_list begin_argument begin_expr begin_name def value end_name end_expr end_argument begin_argument begin_expr begin_name begin_name path end_name begin_operator DOT end_operator begin_name system boot classpath end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment calculate the checksum s throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name is condition end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name validate and execute end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name verify property end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set new property end_name begin_argument_list begin_argument begin_expr begin_name verify property end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name value end_name begin_operator QM end_operator begin_call begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_call begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment returns a list of type names known to the server return a reference to the server s type names end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name type names end_name end_type begin_name get type names end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name server end_name begin_operator DOT end_operator begin_name get type names end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment iterate through all nodes in the tree end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add node recursively end_name begin_parameter_list begin_param begin_decl begin_type begin_name node end_name end_type begin_name node end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name container end_name end_decl end_param end_parameter_list begin_block begin_comment set the prefix for this node to include its tag name end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name node prefix end_name begin_init begin_expr begin_name prefix end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get node type end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name begin_name node end_name begin_operator DOT end_operator begin_name text node end_name end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name prefix end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name node prefix end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name node prefix end_name begin_operator UNP end_operator begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get node name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment pass the container to the processing of this node end_comment begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name node object end_name begin_init begin_expr begin_call begin_name process node end_name begin_argument_list begin_argument begin_expr begin_name node end_name end_expr end_argument begin_argument begin_expr begin_name node prefix end_name end_expr end_argument begin_argument begin_expr begin_name container end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment now iterate through children end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name has child nodes end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name node list end_name end_type begin_name node children end_name begin_init begin_expr begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get child nodes end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name num children end_name begin_init begin_expr begin_call begin_name begin_name node children end_name begin_operator DOT end_operator begin_name get length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name num children end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_comment for each child pass the object added by end_comment begin_comment process node to its children in other word each end_comment begin_comment object can pass information along to its children end_comment begin_expr_stmt begin_expr begin_call begin_name add node recursively end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name node children end_name begin_operator DOT end_operator begin_name item end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name node prefix end_name end_expr end_argument begin_argument begin_expr begin_name node object end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test custom mapper end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect file contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name javac test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the property value return the property value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name value end_name end_expr end_return end_block 
 begin_comment performs the actual compilation param javah the calling javah task return true if the compilation was successful throws build exception if there is an error since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name compile end_name begin_parameter_list begin_param begin_decl begin_type begin_name javah end_name end_type begin_name javah end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name begin_init begin_expr begin_call begin_name setup kaffeh command end_name begin_argument_list begin_argument begin_expr begin_name javah end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name run command end_name end_name begin_argument_list begin_argument begin_expr begin_name javah end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_name e end_name end_expr end_throw end_block end_then end_if end_block end_catch end_try begin_return begin_expr end_expr end_return end_block 
 begin_comment set the name of the parent param name the parent name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set parent name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name parent name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment invalidate any in use iterators from the specified object param o the parent object end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name invalidate end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name o end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name set end_name end_type begin_name s end_name begin_init begin_expr begin_call begin_name set end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name o end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name s end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment actually does the file and possibly empty directory copies this is a good method for subclasses to override end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name do file operations end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name file copy map end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file copy map end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_call begin_name begin_name file copy map end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name dest dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name file copy map end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name from file end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name to files end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name string end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name file copy map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name from file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name to files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name to file end_name begin_init begin_expr begin_name begin_name to files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name from file end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name to file end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name from file end_name end_expr end_argument begin_argument begin_expr begin_name verbosity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name from file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name to file end_name end_expr end_argument begin_argument begin_expr begin_name verbosity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name filter set collection end_name end_type begin_name execution filters end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name filter set collection end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name filtering end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name execution filters end_name begin_operator DOT end_operator begin_name add filter set end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get global filter set end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name filter enum end_name begin_init begin_expr begin_call begin_name begin_name filter sets end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name filter enum end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name execution filters end_name begin_operator DOT end_operator begin_name add filter set end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name filter set end_name begin_operator RPAR end_operator begin_call begin_name begin_name filter enum end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name copy file end_name end_name begin_argument_list begin_argument begin_expr begin_name from file end_name end_expr end_argument begin_argument begin_expr begin_name to file end_name end_expr end_argument begin_argument begin_expr begin_name execution filters end_name end_expr end_argument begin_argument begin_expr begin_name filter chains end_name end_expr end_argument begin_argument begin_expr begin_name force overwrite end_name end_expr end_argument begin_argument begin_expr begin_name preserve last modified end_name end_expr end_argument begin_argument begin_expr begin_name input encoding end_name end_expr end_argument begin_argument begin_expr begin_name output encoding end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_name from file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name to file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get due to end_name begin_argument_list begin_argument begin_expr begin_name ioe end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name target file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name to file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name target file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name target file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name msg end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_name to file end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name failonerror end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_for end_block end_while end_block end_then end_if begin_if begin_condition begin_expr begin_name include empty end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name dir copy map end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name create count end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name dirs end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name string end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name dirs end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name d end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name dirs end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name mkdirs end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name create count end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block end_for end_block end_while begin_if begin_condition begin_expr begin_name create count end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name dir copy map end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_call begin_name begin_name dir copy map end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name create count end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name create count end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name dest dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name expect file contains end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name contains end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name content end_name begin_init begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name contains end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name content end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name content end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name contains end_name end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the local folder mapped to the given star team root folder of the operation there are two cases here depending on whether code root local folder code is defined if code root local folder code is defined it will be used to establish a root mapping otherwise the repository s default root folder will be used param starteamrootfolder root starteam folder initialized for the operation return the local folder corresponding to the root starteam folder see find root starteam folder end_comment begin_type begin_specifier end_specifier begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name get local root mapping end_name begin_parameter_list begin_param begin_decl begin_type begin_name folder end_name end_type begin_name starteamrootfolder end_name end_decl end_param end_parameter_list begin_block begin_comment set the local folder end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name localrootfolder end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name root local folder end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name localrootfolder end_name begin_operator EQ end_operator begin_name root local folder end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment either use default path or root local mapping end_comment begin_comment which is now embedded in the root folder end_comment begin_expr_stmt begin_expr begin_name localrootfolder end_name begin_operator EQ end_operator begin_call begin_name begin_name starteamrootfolder end_name begin_operator DOT end_operator begin_name get path fragment end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_return begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name begin_argument_list begin_argument begin_expr begin_name localrootfolder end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test encode end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name encode end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name encode end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name encode end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name encode end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name encode end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name encode end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name encode end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name encode end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name encode end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name encode end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name encode end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name encode end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name encode end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name encode end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name encode end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name encodedata end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name encodedata end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name project end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name directory scanner end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment maybe creates a nested classpath element return a path to be configured end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name compile classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name compile classpath end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name compile classpath end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name build exception end_name end_type begin_name one control end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_name one control message end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name close end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name closed end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name append end_name begin_operator UNP end_operator begin_name append properties end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set property from baos end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name property end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name closed end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test input handler inheritance end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name input handler end_name end_type begin_name ih end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name property file input handler end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set input handler end_name begin_argument_list begin_argument begin_expr begin_name ih end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name input handler checker end_name end_type begin_name ic end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name input handler checker end_name begin_argument_list begin_argument begin_expr begin_name ih end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add build listener end_name begin_argument_list begin_argument begin_expr begin_name ic end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name assertion failed error end_name end_type begin_name ae end_name begin_init begin_expr begin_call begin_name begin_name ic end_name begin_operator DOT end_operator begin_name get error end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ae end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_name ae end_name end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name remove build listener end_name begin_argument_list begin_argument begin_expr begin_name ic end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test string file end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the object s to be locked param objsel objects to be locked since ant 1 6 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set obj sel end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name objsel end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set obj select end_name begin_argument_list begin_argument begin_expr begin_name objsel end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name upload end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name from path end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name to ssh uri end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name j sch exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file end_name begin_init begin_expr begin_call begin_name parse uri end_name begin_argument_list begin_argument begin_expr begin_name to ssh uri end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name session end_name end_type begin_name session end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name session end_name begin_operator EQ end_operator begin_call begin_name open session end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name scp to message end_name end_type begin_name message end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name is sftp end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name message end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name scp to message end_name begin_argument_list begin_argument begin_expr begin_call begin_name get verbose end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name session end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name from path end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name message end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name scp to message by sftp end_name begin_argument_list begin_argument begin_expr begin_call begin_name get verbose end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name session end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name from path end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name set log listener end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name session end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name session end_name begin_operator DOT end_operator begin_name disconnect end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment sets the output stream to which this logger is to send its output param output the output stream for the logger must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output print stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment constructor for ccm check end_comment begin_specifier end_specifier begin_name ccm check end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test trim file end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name contents end_name begin_init begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name contents end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name contents end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert string contains end_name begin_argument_list begin_argument begin_expr begin_name contents end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set a task attribute param name the attribute name param value the attribute s string value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dynamic attribute end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name script def end_name end_type begin_name definition end_name begin_init begin_expr begin_call begin_name get script end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name definition end_name begin_operator DOT end_operator begin_name is attribute supported end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get task type end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the base directory to be scanned this is the directory which is scanned recursively all and characters are replaced by code file separator char code so the separator used need not match code file separator char code param basedir the base directory to scan end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set basedir end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name basedir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set basedir end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name basedir end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the project associated with this class loader param project the project instance end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set project end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name project end_name end_name begin_operator EQ end_operator begin_name project end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name project end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add build listener end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_specifier end_specifier begin_name size selector test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a lt socket gt condition param s a socket condition since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add socket end_name begin_parameter_list begin_param begin_decl begin_type begin_name socket end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name conditions end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name execute to string end_name begin_parameter_list begin_param begin_decl begin_type begin_name execute end_name end_type begin_name execute end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name string buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name describe command end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name new line end_name begin_init begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name variable array end_name begin_init begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name get environment end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name variable array end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name string buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name new line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name string buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name new line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name string buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name string buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name new line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name z end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name z end_name begin_operator LT end_operator begin_name begin_name variable array end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name z end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name string buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name new line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name string buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name string buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name variable array end_name begin_index begin_expr begin_name z end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name string buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment sets the label star team is to use for checkout defaults to the most recent file the label must exist in starteam or an exception will be thrown param label the label to be used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set label end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name label end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set label end_name begin_argument_list begin_argument begin_expr begin_name label end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment simple manifest with version 2 0 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name manifest exception end_name end_expr end_argument begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name manifest end_name end_type begin_name manifest end_name begin_init begin_expr begin_call begin_name get manifest end_name begin_argument_list begin_argument begin_expr begin_name expanded manifest end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name version end_name begin_init begin_expr begin_call begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name get manifest version end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name version end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the implementations of this services as an inputstream return an inputstream of the classname names encoded as utf 8 throws io exception if there is an error end_comment begin_type begin_specifier end_specifier begin_name input stream end_name end_type begin_name get as stream end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name array out end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name writer end_name end_type begin_name writer end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name provider iterator end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name provider end_name end_type begin_name provider end_name end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name array out end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name writer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name output stream writer end_name begin_argument_list begin_argument begin_expr begin_name array out end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name provider iterator end_name begin_operator EQ end_operator begin_call begin_name begin_name provider list end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name provider iterator end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name provider end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name provider end_name begin_operator RPAR end_operator begin_call begin_name begin_name provider iterator end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name provider end_name begin_operator DOT end_operator begin_name get class name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_operator UNP end_operator begin_call begin_name byte array input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name array out end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment empty no arg constructor end_comment begin_specifier end_specifier begin_name default input handler end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment implements base class abstract function to emit to the log an entry describing the parameters that will be used by this operation param starteamroot folder root folder in star team for the operation param targetroot folder root local folder for the operation whether specified by the user or not end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log operation description end_name begin_parameter_list begin_param begin_decl begin_type begin_name folder end_name end_type begin_name starteamroot folder end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name targetroot folder end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name is recursive end_name end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_operator EQT end_operator begin_call begin_name get root local folder end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_call begin_name begin_name targetroot folder end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name starteamroot folder end_name begin_operator DOT end_operator begin_name get folder hierarchy end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log includes end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log excludes end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name lock status end_name end_name begin_operator EQT end_operator begin_name begin_name item end_name begin_operator DOT end_operator begin_name lock type end_name begin_operator DOT end_operator begin_name unlocked end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name is forced end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment gets the date of the cvs entry return the date end_comment begin_type begin_specifier end_specifier begin_name date end_name end_type begin_name get date end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name date end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test logfile placement end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name begin_index end_index end_type begin_name log files end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name file end_name begin_index end_index end_name begin_block begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_block end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name log files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name begin_name log files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name log files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name log files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name begin_name log files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name log files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name shutdown end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name done end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name run end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_synchronized begin_expr begin_name this end_name end_expr begin_block begin_while begin_condition begin_expr begin_operator UNP end_operator begin_name done end_name end_expr end_condition begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name wait end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try end_block end_while end_block end_synchronized begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment the name location of where to create the cab file param cab file the location of the cab file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set cabfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name cab file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name cab file end_name end_name begin_operator EQ end_operator begin_name cab file end_name end_expr end_expr_stmt end_block 
 begin_comment returns the logging message this field will only be set for message logged events return the message associated with this event or code null code if no message has been set see build listener message logged build event end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get message end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name message end_name end_expr end_return end_block 
 begin_comment tells whether the end of the stream has been reached return true is the stream has been exhausted end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is finished end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name finished end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name do start test 2 end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument begin_argument begin_expr begin_name begin_name regexp matcher end_name begin_operator DOT end_operator begin_name match singleline end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument begin_argument begin_expr begin_name begin_name regexp matcher end_name begin_operator DOT end_operator begin_name match multiline end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment load type definitions as properties from a url param al the classloader to use param url the url to get the definitions from end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name load properties end_name begin_parameter_list begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name al end_name end_decl end_param begin_param begin_decl begin_type begin_name url end_name end_type begin_name url end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name is end_name begin_operator EQ end_operator begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name open stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name is end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name url end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name props end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name load end_name end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name keys end_name begin_init begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name keys end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name keys end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name classname end_name begin_operator EQ end_operator begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add definition end_name begin_argument_list begin_argument begin_expr begin_name al end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment set whether to stop the build if program cannot be started defaults to true param flag stop the build if program cannot be started since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fail if execution fails end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name flag end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name fail if exec fails end_name begin_operator EQ end_operator begin_name flag end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name incompatible with spawn end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment add any vendor specific files which should be included in the ejb jar param ejb files the hash table to be populated param dd prefix the prefix to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add vendor files end_name begin_parameter_list begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name ejb files end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name dd prefix end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name weblogic dd end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get config end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name descriptor dir end_name end_expr end_argument begin_argument begin_expr begin_name dd prefix end_name begin_operator PLUS end_operator begin_name wl dd end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name weblogic dd end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ejb files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name meta dir end_name begin_operator PLUS end_operator begin_name wl dd end_name end_expr end_argument begin_argument begin_expr begin_name weblogic dd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name weblogic dd end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_else end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name new cmp end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment the the weblogic cmp deployment descriptor end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name weblogic cmpdd end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get config end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name descriptor dir end_name end_expr end_argument begin_argument begin_expr begin_name dd prefix end_name begin_operator PLUS end_operator begin_name wl cmp dd end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name weblogic cmpdd end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ejb files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name meta dir end_name begin_operator PLUS end_operator begin_name wl cmp dd end_name end_expr end_argument begin_argument begin_expr begin_name weblogic cmpdd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_comment now that we have the weblogic descriptor we parse the file end_comment begin_comment to find other descriptors needed to deploy the bean end_comment begin_comment this could be the weblogic cmp rdbms xml or any other o r end_comment begin_comment mapping tool descriptors end_comment begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name ejb descriptor end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name ejb files end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name meta dir end_name begin_operator PLUS end_operator begin_name ejb dd end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name sax parser factory end_name end_type begin_name sax parser factory end_name begin_init begin_expr begin_call begin_name begin_name sax parser factory end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sax parser factory end_name begin_operator DOT end_operator begin_name set validating end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name sax parser end_name end_type begin_name sax parser end_name begin_init begin_expr begin_call begin_name begin_name sax parser factory end_name begin_operator DOT end_operator begin_name new sax parser end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name descriptor handler end_name end_type begin_name handler end_name begin_init begin_expr begin_call begin_name get weblogic descriptor handler end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ejb descriptor end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sax parser end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name input source end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name weblogic dd end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name handler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name ht end_name begin_init begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name get files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name ht end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ejb files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ht end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_else end_if end_block 
 begin_comment process a typical login if it differs use the read and write tasks explicitely end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name login end_name begin_parameter_list begin_param begin_decl begin_type begin_name ant r exec client end_name end_type begin_name rexec end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name add carriage return end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name rexec end_name begin_operator DOT end_operator begin_name send string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name rexec end_name begin_operator DOT end_operator begin_name wait for string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name rexec end_name begin_operator DOT end_operator begin_name send string end_name end_name begin_argument_list begin_argument begin_expr begin_name userid end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name rexec end_name begin_operator DOT end_operator begin_name wait for string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name rexec end_name begin_operator DOT end_operator begin_name send string end_name end_name begin_argument_list begin_argument begin_expr begin_name password end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the j unit setup method end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name destroy temp files end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name init test prop file end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name init build prop file end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr begin_name project file path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr begin_name value does not get overwritten property file key end_name end_expr end_argument begin_argument begin_expr begin_name value does not get overwritten property file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get global flag status return boolean containing status of global flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get global end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m global end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute retryable end_name begin_parameter_list begin_param begin_decl begin_type begin_name retry handler end_name end_type begin_name h end_name end_decl end_param begin_param begin_decl begin_type begin_name retryable end_name end_type begin_name r end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name simulated failures left end_name end_name begin_operator EQ end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name number of failures to simulate end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name execute retryable end_name end_name begin_argument_list begin_argument begin_expr begin_name h end_name end_expr end_argument begin_argument begin_expr begin_name r end_name end_expr end_argument begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the archive that holds this as a single element resource collection param a the archive as a single element resource collection end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name a end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name add configured end_name end_name begin_argument_list begin_argument begin_expr begin_name a end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name is filesystem only end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test a password end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test name not get name end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name j unit version helper end_name begin_operator DOT end_operator begin_name get test case name end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name foo 4 end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filter set end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name tmp end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name check end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name tmp end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_name tmp end_name end_expr end_argument begin_argument begin_expr begin_name check end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a new execute object param stream handler the stream handler used to handle the input and output streams of the subprocess param watchdog a watchdog for the subprocess or code null code to to disable a timeout for the subprocess end_comment begin_specifier end_specifier begin_name execute end_name begin_parameter_list begin_param begin_decl begin_type begin_name execute stream handler end_name end_type begin_name stream handler end_name end_decl end_param begin_param begin_decl begin_type begin_name execute watchdog end_name end_type begin_name watchdog end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set stream handler end_name begin_argument_list begin_argument begin_expr begin_name stream handler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name watchdog end_name end_name begin_operator EQ end_operator begin_name watchdog end_name end_expr end_expr_stmt begin_comment by default use the shell launcher for vms end_comment begin_comment end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name use vm launcher end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test non infinite recursive multiple on single line end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name filter set end_name end_type begin_name filters end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name filter set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name filters end_name begin_operator DOT end_operator begin_name set begin token end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name filters end_name begin_operator DOT end_operator begin_name set end token end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name filters end_name begin_operator DOT end_operator begin_name add filter end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name filters end_name begin_operator DOT end_operator begin_name add filter end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name filters end_name begin_operator DOT end_operator begin_name add filter end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name filters end_name begin_operator DOT end_operator begin_name add filter end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name filters end_name begin_operator DOT end_operator begin_name replace tokens end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name stream pumper end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name message level end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name din end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name message level end_name end_name begin_operator EQ end_operator begin_name message level end_name end_expr end_expr_stmt end_block 
 begin_comment set the permissions for the application run param permissions the permissions to use since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set permissions end_name begin_parameter_list begin_param begin_decl begin_type begin_name permissions end_name end_type begin_name permissions end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name perm end_name begin_operator EQ end_operator begin_name permissions end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test process destroyer end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 2 end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name process destroyer end_name end_type begin_name process destroyer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name process destroyer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name process end_name end_type begin_name process end_name begin_init begin_expr begin_call begin_name begin_name runtime end_name begin_operator DOT end_operator begin_name get runtime end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exec end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert false end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name process destroyer end_name begin_operator DOT end_operator begin_name is added as shutdown hook end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name process destroyer end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name process end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name process destroyer end_name begin_operator DOT end_operator begin_name is added as shutdown hook end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name process end_name begin_operator DOT end_operator begin_name destroy end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name process destroyer end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name process end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try begin_expr_stmt begin_expr begin_call begin_name assert false end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name process destroyer end_name begin_operator DOT end_operator begin_name is added as shutdown hook end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment get the next chained component helper return the next chained component helper end_comment begin_type begin_specifier end_specifier begin_name component helper end_name end_type begin_name get next end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name next end_name end_expr end_return end_block 
 begin_comment test file mode magic end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test modes end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name asi extra field end_name end_type begin_name a end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name asi extra field end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name set mode end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name get mode end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name set directory end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name get mode end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name set linked file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name get mode end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a code mapper code param mapper the code mapper code to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured mapper end_name begin_parameter_list begin_param begin_decl begin_type begin_name mapper end_name end_type begin_name mapper end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the dir mode of the archive fileset param p the project to use return the mode end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get dir mode end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name archive file set end_name begin_operator RPAR end_operator begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get dir mode end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_name dir mode end_name end_expr end_return end_block 
 begin_comment execute the length task end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name print stream end_name end_type begin_name ps end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name property end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator LPAR end_operator begin_name output stream end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name property output stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name property end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_operator LPAR end_operator begin_name output stream end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name log output stream end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name mode end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ps end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get length end_name begin_argument_list begin_argument begin_expr begin_name string end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get trim end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ps end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name each end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name mode end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name handle resources end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name each handler end_name begin_argument_list begin_argument begin_expr begin_name ps end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name all end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name mode end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name handle resources end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name all handler end_name begin_argument_list begin_argument begin_expr begin_name ps end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the host return the host end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get host end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name host end_name end_expr end_return end_block 
 begin_comment prompts a string param str the string return whether the string was prompted end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name prompt end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name str end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirector 11 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name test redirector 9 thru 12 end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add an arbitrary tokenizer param tokenizer the tokenizer to all only one allowed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name tokenizer end_name end_type begin_name tokenizer end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name tokenizer end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name tokenizer end_name end_name begin_operator EQ end_operator begin_name tokenizer end_name end_expr end_expr_stmt end_block 
 begin_comment get vob name return string containing vob name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get vob end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m vob end_name end_expr end_return end_block 
 begin_comment the outputfile to write the generated bnf documentation file to if not set the file is written with the same name as the java cc grammar file with a suffix html or txt param output file the name of the output file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set outputfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name output file end_name end_name begin_operator EQ end_operator begin_name output file end_name end_expr end_expr_stmt end_block 
 begin_comment tells whether we should filter out any deprecation messages of the compiler out param suppress deprecation a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set suppress deprecation end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name suppress deprecation end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name suppress deprecation end_name end_name begin_operator EQ end_operator begin_name suppress deprecation end_name end_expr end_expr_stmt end_block 
 begin_comment finds the resource with the given name a resource is some data images audio text etc that can be accessed by class code in a way that is independent of the location of the code param name the name of the resource for which a stream is required must not be code null code return a url for reading the resource or code null code if the resource could not be found or the caller doesn t have adequate privileges to get the resource end_comment begin_type begin_specifier end_specifier begin_name url end_name end_type begin_name get resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_comment we need to search the components of the path to see if end_comment begin_comment we can find the class we want end_comment begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name url end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name is parent first end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name url end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name parent end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get resource end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name get resource end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name url end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment try and load from this loader if the parent either didn t find end_comment begin_comment it or wasn t consulted end_comment begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name path components end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name url end_name begin_operator EQT end_operator end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name path component end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name url end_name begin_operator EQ end_operator begin_call begin_name get resource url end_name begin_argument_list begin_argument begin_expr begin_name path component end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name url end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while end_block end_else end_if begin_if begin_condition begin_expr begin_name url end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name is parent first end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment this loader was first but it didn t find it try the parent end_comment begin_if begin_condition begin_expr begin_name ignore base end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name url end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_call begin_name get root loader end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_call begin_name get root loader end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get resource end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name url end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name parent end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get resource end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name get resource end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name url end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name url end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name url end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test add filter end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the file to direct standard output from the command param output a file to which stdout should go end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name output end_name end_name begin_operator EQ end_operator begin_name output end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name characters end_name begin_parameter_list begin_param begin_decl begin_type begin_name char end_name end_type begin_name begin_name ch end_name begin_index end_index end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name start end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name length end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name debug end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument begin_argument begin_expr begin_name start end_name end_expr end_argument begin_argument begin_expr begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt end_block 
 begin_comment create a new jvm argument return an argument to be configured end_comment begin_type begin_specifier end_specifier begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name argument end_name end_name end_type begin_name create vm argument end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name vm command end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment the source safe project path param projectpath the new projectpath value ant attribute group required end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set project path end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name projectpath end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name projectpath end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name sos cmd end_name begin_operator DOT end_operator begin_name project prefix end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name project path end_name begin_operator EQ end_operator begin_name projectpath end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name project path end_name begin_operator EQ end_operator begin_name begin_name sos cmd end_name begin_operator DOT end_operator begin_name project prefix end_name end_name begin_operator PLUS end_operator begin_name projectpath end_name end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment receives and buffers log messages param message the message being logger end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add the entire command including optional executable to a list param list the list to add to since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add command to list end_name begin_parameter_list begin_param begin_decl begin_type begin_name list iterator end_name end_type begin_name list end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name executable end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name list end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name executable end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name add arguments to list end_name begin_argument_list begin_argument begin_expr begin_name list end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test correct task name bad attr end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment overridden not allowed to set the name of the resource param name not used throws build exception always end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test file set end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment empty implementation required by sub build listener interface param event ignored since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment support for nested lt param gt tags param parameter the parameter object end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add param end_name begin_parameter_list begin_param begin_decl begin_type begin_name parameter end_name end_type begin_name parameter end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name config parameter end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test close single bytes end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name write single bytes end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stream end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stream end_name begin_operator DOT end_operator begin_name assert invoked end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name stream end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_name ant type definition end_name end_type begin_name get definition end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name key end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name ant type definition end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment scans the remote directory storing internally the included files directories end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name scan end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name includes end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment no includes supplied so set it to matches all end_comment begin_expr_stmt begin_expr begin_name includes end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name includes end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name excludes end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name excludes end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr end_expr end_index end_name end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name files included end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name files not included end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name files excluded end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name dirs included end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name dirs not included end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name dirs excluded end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name cwd end_name begin_init begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name print working directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment always start from the current ftp working dir end_comment begin_expr_stmt begin_expr begin_call begin_name force remote sensitivity check end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check include patterns end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name clear caches end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name change working directory end_name end_name begin_argument_list begin_argument begin_expr begin_name cwd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment handles output send it the the new project if is present otherwise call the super class param output to handle the string output to output see task handle output string since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output to handle end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name new project end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name new project end_name begin_operator DOT end_operator begin_name demux output end_name end_name begin_argument_list begin_argument begin_expr begin_name output to handle end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name handle output end_name end_name begin_argument_list begin_argument begin_expr begin_name output to handle end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment make a copy of the unknown element and set it in the new project param new project the project to create the ue in return the copied ue end_comment begin_type begin_specifier end_specifier begin_name unknown element end_name end_type begin_name copy end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name new project end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name unknown element end_name end_type begin_name ret end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name unknown element end_name begin_argument_list begin_argument begin_expr begin_call begin_name get tag end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name set namespace end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get namespace end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name new project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name set q name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get q name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name set task type end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task type end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name set task name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get owning target end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name target end_name end_type begin_name t end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name target end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name set owning target end_name end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name set owning target end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get owning target end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name runtime configurable end_name end_type begin_name copy rc end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name runtime configurable end_name begin_argument_list begin_argument begin_expr begin_name ret end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name copy rc end_name begin_operator DOT end_operator begin_name set poly type end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get wrapper end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get poly type end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name map end_name end_type begin_name m end_name begin_init begin_expr begin_call begin_name get wrapper end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get attribute map end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name entry set end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name map end_name begin_operator DOT end_operator begin_name entry end_name end_name end_type begin_name entry end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name map end_name begin_operator DOT end_operator begin_name entry end_name end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name copy rc end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get key end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name copy rc end_name begin_operator DOT end_operator begin_name add text end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get wrapper end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get text end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name get wrapper end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get children end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name runtime configurable end_name end_type begin_name r end_name begin_init begin_expr begin_operator LPAR end_operator begin_name runtime configurable end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name unknown element end_name end_type begin_name ue child end_name begin_init begin_expr begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get proxy end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name unknown element end_name end_type begin_name copy child end_name begin_init begin_expr begin_call begin_name begin_name ue child end_name begin_operator DOT end_operator begin_name copy end_name end_name begin_argument_list begin_argument begin_expr begin_name new project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name copy rc end_name begin_operator DOT end_operator begin_name add child end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name copy child end_name begin_operator DOT end_operator begin_name get wrapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name add child end_name end_name begin_argument_list begin_argument begin_expr begin_name copy child end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name ret end_name end_expr end_return end_block 
 begin_comment construct a new code lead pipe input stream code to pull from the specified code piped output stream code using a circular buffer of the specified size param src the code piped output stream code source param size the size of the circular buffer throws io exception if there is an error end_comment begin_specifier end_specifier begin_name lead pipe input stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name piped output stream end_name end_type begin_name src end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name size end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set buffer size end_name begin_argument_list begin_argument begin_expr begin_name size end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the implicit build path creating it if code null code return the implicit build path end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name get buildpath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name buildpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name buildpath end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name buildpath end_name end_expr end_return end_block 
 begin_comment record symlinks throws build exception on error since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name record end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name file sets end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name handle error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name link file name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name handle error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_comment create a hashtable to group them by parent directory end_comment begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name by dir end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment get an iterator of file objects representing links canonical end_comment begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name litr end_name begin_init begin_expr begin_call begin_name find links end_name begin_argument_list begin_argument begin_expr begin_name file sets end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name litr end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name this link end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name litr end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name parent end_name begin_init begin_expr begin_call begin_name begin_name this link end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name v end_name begin_init begin_expr begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name begin_name by dir end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name v end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name v end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name by dir end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name v end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name this link end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment write a properties file in each directory end_comment begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name dirs end_name begin_init begin_expr begin_call begin_name begin_name by dir end_name begin_operator DOT end_operator begin_name key set end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name dirs end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dir end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name dirs end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name links in dir end_name begin_init begin_expr begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name begin_name by dir end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name links to store end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment fill up a properties object with link and resource names end_comment begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name dlnk end_name begin_init begin_expr begin_call begin_name begin_name links in dir end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name dlnk end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name lnk end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name dlnk end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name links to store end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name lnk end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name lnk end_name begin_operator DOT end_operator begin_name get canonical path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name handle error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_for begin_expr_stmt begin_expr begin_call begin_name write property file end_name begin_argument_list begin_argument begin_expr begin_name links to store end_name end_expr end_argument begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name set defaults end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment add a cc address element param address the email address end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add cc end_name begin_parameter_list begin_param begin_decl begin_type begin_name email address end_name end_type begin_name address end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cc list end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name address end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return a hash code value for this object end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name hash code end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name object hash code end_name begin_argument_list begin_argument begin_expr begin_name default value end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_call begin_name object hash code end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment factory method from base class this is overriden in child classes to return a specific selector class end_comment begin_type begin_specifier end_specifier begin_name base selector end_name end_type begin_name get instance end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name depend selector end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name build exception end_name end_type begin_name exactly one end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name attrs end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name exactly one end_name begin_argument_list begin_argument begin_expr begin_name attrs end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment adds a url resolver to download a library from a url to a local file param url the url resolver from which to download the library end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured url end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name url resolver end_name end_type begin_name url end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name resolvers end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the global flag param glob the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set global end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name glob end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m global end_name begin_operator EQ end_operator begin_name glob end_name end_expr end_expr_stmt end_block 
 begin_comment invoked by introspection helper for code set xxx path p code attribute setters param p the code project code for this path param path the code string code path definition end_comment begin_specifier end_specifier begin_name path end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name create path element end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set path end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment see j unit result formatter set system output string end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set system output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name system output end_name begin_operator EQ end_operator begin_name out end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment add files recursively defaults to false param recursive the boolean value for recursive end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set recursive end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name recursive end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal recursive end_name end_name begin_argument_list begin_argument begin_expr begin_name recursive end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment find out if the fileset wants to follow symbolic links return code boolean code indicating whether symbolic links should be followed since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is follow symlinks end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name is follow symlinks end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name follow symlinks end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add error end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name junit 4 end_name begin_operator UNP end_operator begin_name t end_name begin_operator UNP end_operator begin_name assertion failed error end_name end_expr end_condition begin_then begin_block begin_comment j unit 4 does not distinguish between errors and failures end_comment begin_comment even in the j unit 3 adapter end_comment begin_comment so we need to help it a bit to retain compatibility for j unit 3 tests end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name test listener end_name begin_operator DOT end_operator begin_name add failure end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name assertion failed error end_name begin_operator RPAR end_operator begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name junit 4 end_name begin_operator UNP end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment not strictly necessary but probably desirable end_comment begin_comment j unit 4 specific test gu is will show just failures end_comment begin_comment but ant s output shows failures vs errors end_comment begin_comment we would prefer to show failure for things that logically are end_comment begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name assertion failed error end_name end_type begin_name failure end_name begin_init begin_expr begin_name msg end_name begin_operator UNP end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name assertion failed error end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name assertion failed error end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment to compile on pre jdk 4 even though this should always succeed end_comment begin_decl_stmt begin_decl begin_type begin_name method end_name end_type begin_name init cause end_name begin_init begin_expr begin_call begin_name begin_name throwable end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get method end_name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name throwable end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name init cause end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name failure end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name t end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test listener end_name begin_operator DOT end_operator begin_name add failure end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name failure end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment rats end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment should not happen end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name test listener end_name begin_operator DOT end_operator begin_name add error end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name test listener end_name begin_operator DOT end_operator begin_name add error end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block 
 begin_comment set the name of the parameter param name the name of the doclet parameter end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment test the unless condition return true if there is no unless condition or there is a named property but it doesn t exist end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name test unless condition end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name unless condition end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name unless condition end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name unless condition end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_return end_block 
 begin_comment write this string to the telnet session param s the string to write param echo string if true log the string sent end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name send string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name echo string end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name output stream end_name end_type begin_name os end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name s end_name begin_operator PLUS end_operator begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name echo string end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment get the verbose level return the level end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get verbose end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name verbose end_name end_expr end_return end_block 
 begin_comment set the naming scheme used to determine the name of the generated jars from the deployment descriptor param naming scheme the naming scheme to be used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set naming end_name begin_parameter_list begin_param begin_decl begin_type begin_name naming scheme end_name end_type begin_name naming scheme end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name config end_name begin_operator DOT end_operator begin_name naming scheme end_name end_name begin_operator EQ end_operator begin_name naming scheme end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name config end_name begin_operator DOT end_operator begin_name naming scheme end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name naming scheme end_name begin_operator DOT end_operator begin_name basejarname end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name begin_name config end_name begin_operator DOT end_operator begin_name base jar name end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name config end_name begin_operator DOT end_operator begin_name naming scheme end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true mark object as obsolete param obsolete the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set obsolete end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name obsolete end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m obsolete end_name begin_operator EQ end_operator begin_name obsolete end_name end_expr end_expr_stmt end_block 
 begin_comment implement the user info interface param message ignored return true always end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name prompt passphrase end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert attr method end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name attr name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name method name end_name end_decl end_param begin_param begin_decl begin_type begin_name class end_name end_type begin_name method arg end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name arg end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name bad arg end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name method end_name end_type begin_name m end_name begin_init begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name get attribute method end_name end_name begin_argument_list begin_argument begin_expr begin_name attr name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert method end_name begin_argument_list begin_argument begin_expr begin_name m end_name end_expr end_argument begin_argument begin_expr begin_name method name end_name end_expr end_argument begin_argument begin_expr begin_name method arg end_name end_expr end_argument begin_argument begin_expr begin_name arg end_name end_expr end_argument begin_argument begin_expr begin_name bad arg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment p return the names of the directories which were selected out and therefore not ultimately included p p the names are relative to the base directory this involves performing a slow scan if one has not already been completed p return the names of the directories which were deselected see slow scan end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get deselected directories end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name slow scan end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name directories end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name dirs deselected end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dirs deselected end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name directories end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name directories end_name end_expr end_return end_block 
 begin_comment p return the names of the files which were selected out and therefore not ultimately included p p the names are relative to the base directory this involves performing a slow scan if one has not already been completed p return the names of the files which were deselected see slow scan end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get deselected files end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name slow scan end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name files deselected end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name files deselected end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name files end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name files end_name end_expr end_return end_block 
 begin_comment date representing the start of the range param from date the start date end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set from date end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name from date end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal from date end_name end_name begin_argument_list begin_argument begin_expr begin_name from date end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the host param host the host to connect to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set mailhost end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name host end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name host end_name end_name begin_operator EQ end_operator begin_name host end_name end_expr end_expr_stmt end_block 
 begin_comment set the project of this task calls the super class and sets the project on dhe default file set param project the project for this task see org apache tools ant project component set project end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set project end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name default set end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test non existent custom algorithm end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name no exc thrown end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name algo end_name begin_init begin_expr begin_call begin_name get algo name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name no exc thrown end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name no exc thrown end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name begin_operator UNP end_operator begin_name build exception end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no time out forked end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name begin_init begin_expr begin_call begin_name get commandline end_name begin_argument_list begin_argument begin_expr begin_name time out end_name begin_operator SLASH end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ej end_name begin_operator DOT end_operator begin_name set java command end_name end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ej end_name begin_operator DOT end_operator begin_name fork end_name end_name begin_argument_list begin_argument begin_expr begin_name cp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name ej end_name begin_operator DOT end_operator begin_name killed process end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name build finished end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment returns the vector of regular expressions which must be contained within a line read from the original stream in order for it to match this filter return the vector of regular expressions which must be contained within a line read from the original stream in order for it to match this filter the returned object is live in other words changes made to the returned object are mirrored in the filter end_comment begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name get regexps end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name regexps end_name end_expr end_return end_block 
 begin_name reverse dirs end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name basedir end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name dirs end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name basedir end_name end_name begin_operator EQ end_operator begin_name basedir end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dirs end_name end_name begin_operator EQ end_operator begin_name dirs end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name arrays end_name begin_operator DOT end_operator begin_name sort end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dirs end_name end_name end_expr end_argument begin_argument begin_expr begin_name reverse end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns a newly created document builder return a document builder throws build exception on error since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name document builder end_name end_type begin_name get document builder end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_return begin_expr begin_call begin_name get document builder factory end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name new document builder end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name parser configuration exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment learn whether to cache collections default is code true code return boolean cache flag end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is cache end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name cache end_name end_expr end_return end_block 
 begin_comment set the attribute type name param tn the type name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set type name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name tn end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m type name end_name begin_operator EQ end_operator begin_name tn end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test circular reference check end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name abstract file set end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get data type name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get data type name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_comment dummy 1 dummy 2 dummy 3 dummy 1 end_comment begin_decl_stmt begin_decl begin_type begin_name abstract file set end_name end_type begin_name f 1 end_name begin_init begin_expr begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name f 1 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f 1 end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name abstract file set end_name end_type begin_name f 2 end_name begin_init begin_expr begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name f 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f 2 end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name abstract file set end_name end_type begin_name f 3 end_name begin_init begin_expr begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name f 3 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f 3 end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f 1 end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f 1 end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_comment dummy 1 dummy 2 dummy 3 end_comment begin_comment which has the project s basedir as root end_comment begin_expr_stmt begin_expr begin_name f 1 end_name begin_operator EQ end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name f 1 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f 1 end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name f 2 end_name begin_operator EQ end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name f 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f 2 end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name f 3 end_name begin_operator EQ end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name f 3 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f 3 end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dir end_name begin_init begin_expr begin_call begin_name begin_name f 1 end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment fired when a target has finished this event will still be thrown if an error occurred during the build param event ignored see build event get exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment constructor of keep alive output stream param out an output stream value it shoudl be standard output end_comment begin_specifier end_specifier begin_name keep alive output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create an instance of this enumerated value based on the string value param value the value to use return an enumerated instance end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name cr lf end_name end_type begin_name new instance end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name cr lf end_name end_type begin_name c end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name cr lf end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name c end_name end_expr end_return end_block 
 begin_comment process included file param name path of the file relative to the directory of the fileset end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name account for included file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name files included end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name files excluded end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name is included end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is excluded end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name files included end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name files excluded end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name files not included end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block 
 begin_comment values for resolvemode ul li automatic am li li force af li li safe as li li theirs at li li yours ay li ul param resolvemode one of automatic force safe theirs yours end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set resolvemode end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name resolvemode end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name found end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name counter end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name counter end_name begin_operator LT end_operator begin_name begin_name resolve modes end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name counter end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name resolvemode end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name resolve modes end_name begin_index begin_expr begin_name counter end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name found end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name found end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name resolvemode end_name end_name begin_operator EQ end_operator begin_name resolvemode end_name end_expr end_expr_stmt end_block 
 begin_comment sets the classpath to be used when compiling the ejb stubs and skeletons param classpath the classpath to be used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_name classpath end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment run a script param exec name name of the script end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute script end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name exec name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get runner end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name execute script end_name begin_argument_list begin_argument begin_expr begin_name exec name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment executes the p 4 fstat task throws build exception if no files are specified end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name handler end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name f stat p 4 output handler end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name p 4 view end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name add cmd end_name begin_operator EQ end_operator begin_name p 4 view end_name end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name p 4 cmd opts end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name changelist end_name begin_operator GT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator LPAR end_operator begin_operator PLUS end_operator begin_name changelist end_name begin_operator RPAR end_operator begin_operator DP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name filelist end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name src files end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name file num end_name begin_operator EQ end_operator begin_name begin_name src files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name src files end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name src files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get basedir end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name src files end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name filelist end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name done file num end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name filelist end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_name cmd length end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name exec p 4 fstat end_name begin_argument_list begin_argument begin_expr begin_name filelist end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name filelist end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_call begin_name begin_name filelist end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name exec p 4 fstat end_name begin_argument_list begin_argument begin_expr begin_name filelist end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for begin_if begin_condition begin_expr begin_name show end_name begin_operator EQT end_operator begin_name show all end_name begin_operator UNP end_operator begin_name show end_name begin_operator EQT end_operator begin_name show existing end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name print res end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name get existing end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name existing header end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name show end_name begin_operator EQT end_operator begin_name show all end_name begin_operator UNP end_operator begin_name show end_name begin_operator EQT end_operator begin_name show non existing end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name print res end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name get non existing end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name nonexisting header end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment turn on xsd support in xerces return true on success false on failure end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name enable xerces schema validation end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name set feature end_name begin_argument_list begin_argument begin_expr begin_name begin_name xml constants end_name begin_operator DOT end_operator begin_name feature xsd end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment set the schema source for the doc end_comment begin_expr_stmt begin_expr begin_call begin_name set no namespace schema property end_name begin_argument_list begin_argument begin_expr begin_name begin_name xml constants end_name begin_operator DOT end_operator begin_name property no namespace schema location end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_catch end_try begin_return begin_expr end_expr end_return end_block 
 begin_comment this is a helper method that takes a selector and calls its is selected method on each file in the mirror testbed this variation is used for dependency checks and to get around the limitations in the touch task when running jdk 1 1 it returns a string of t s amd f s end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name mirror selection string end_name begin_parameter_list begin_param begin_decl begin_type begin_name file selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name mirrordir end_name end_expr end_argument begin_argument begin_expr begin_name mirrorfiles end_name end_expr end_argument begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment load the script from an external file optional param file the file containing the script source end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set src end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the nusers command param cmd containing the command line string with or without the nusers flag and value appended end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get nusers command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get nusers end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then begin_else begin_block begin_comment had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes this breaks clearcase end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag nusers end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get nusers end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test fullpath differs in case scanning insensitive end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name directory scanner end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set case sensitive end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment compare two objects param foo the first object param bar the second object return a negative integer zero or a positive integer as the first argument is less than equal to or greater than the second throws class cast exception if either argument is null end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name compare end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name foo end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name bar end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name die on circular reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name resource comparator end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator LPAR end_operator begin_name resource comparator end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name this end_name end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name resource compare end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_name foo end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_name bar end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment add a resource collection param c the resource collection to add end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name rc end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name rc end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fail fast end_name begin_operator DOT end_operator begin_name invalidate end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name coll end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set checked end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name j unit class loader test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test needs catalog end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test load a file end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment whether output and error files should be created even when empty defaults to true param create empty files code boolean code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set create empty files end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name create empty files end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name create empty files end_name end_name begin_operator EQ end_operator begin_name create empty files end_name end_expr end_expr_stmt end_block 
 begin_comment get a quot funnel quot code output stream code instance to write to this code output stream funneler code s underlying code output stream code return code output stream code throws io exception if unable to create the funnel end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name output stream end_name end_type begin_name get funnel instance end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name die if closed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name funnel end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name notify all end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_specifier end_specifier begin_name dispatch task test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructs an exception with the given descriptive message and a location in a file param message a description of or information about the exception should not be code null code param location the location in the project file where the error occurred must not be code null code end_comment begin_specifier end_specifier begin_name build exception end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param begin_param begin_decl begin_type begin_name location end_name end_type begin_name location end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name location end_name end_name begin_operator EQ end_operator begin_name location end_name end_expr end_expr_stmt end_block 
 begin_comment resets the buffer for the current thread end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name reset buffer info end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name current end_name begin_init begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name current thread end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name buffer info end_name end_type begin_name buffer info end_name begin_init begin_expr begin_operator LPAR end_operator begin_name buffer info end_name begin_operator RPAR end_operator begin_call begin_name begin_name buffers end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name current end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buffer info end_name begin_operator DOT end_operator begin_name buffer end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment shouldn t happen end_comment end_block end_catch end_try begin_expr_stmt begin_expr begin_name begin_name buffer info end_name begin_operator DOT end_operator begin_name buffer end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name buffer info end_name begin_operator DOT end_operator begin_name cr seen end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment works like clone but doesn t show up in the javadocs end_comment begin_type begin_specifier end_specifier begin_name cr lf end_name end_type begin_name new instance end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name new instance end_name begin_argument_list begin_argument begin_expr begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment no arg constructor end_comment begin_specifier end_specifier begin_name j unit test end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_specifier end_specifier begin_name antlr test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the start date param s the start date end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set start date end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name mystart date end_name begin_operator EQ end_operator begin_name s end_name end_expr end_expr_stmt end_block 
 begin_comment param message end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name last logged message end_name end_name begin_operator EQ end_operator begin_name message end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment returns the version of java this class is running under this number can be used for comparisions it will always be return the version of java as a number 10 x the major minor e g java 1 5 has a value of 15 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name get java version number end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name java version number end_name end_expr end_return end_block 
 begin_comment test content end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test content end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name asi extra field end_name end_type begin_name a end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name asi extra field end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name set mode end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name set user id end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name set group id end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name b end_name begin_init begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name get local file data data end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment crc manually calculated sorry end_comment begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name expect end_name begin_init begin_expr begin_block begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_expr end_expr begin_expr end_expr begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_comment crc end_comment begin_expr end_expr begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_comment mode end_comment begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_comment link length end_comment begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr end_block end_expr end_init end_decl end_decl_stmt begin_comment uid gid end_comment begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name expect end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name b end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name expect end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name i end_name end_expr end_argument begin_argument begin_expr begin_name begin_name expect end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name b end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name set linked file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name expect end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name byte end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_operator UNP end_operator begin_comment crc end_comment begin_expr end_expr begin_operator UNP end_operator begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_operator UNP end_operator begin_comment mode end_comment begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_comment link length end_comment begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_comment uid gid end_comment begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_operator UNP end_operator begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_operator UNP end_operator begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr begin_operator UNP end_operator begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr end_block end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name b end_name begin_operator EQ end_operator begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name get local file data data end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name expect end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name b end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name expect end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name i end_name end_expr end_argument begin_argument begin_expr begin_name begin_name expect end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name b end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name source file end_name begin_parameter_list end_parameter_list begin_block begin_comment empty end_comment end_block 
 begin_comment return the full pathname of the single entry in this fileset param p the project to use return the full path end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get fullpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name archive file set end_name begin_operator RPAR end_operator begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get fullpath end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_name fullpath end_name end_expr end_return end_block 
 begin_comment set the feature name param name the name to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name attribute name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name testrvname end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment writes the opening tag including all attributes corresponding to a dom element param element the dom element to write param out where to send the output param indent number of param indent with string that should be used to indent the corresponding tag throws io exception if an error happens while writing to the stream end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name open element end_name begin_parameter_list begin_param begin_decl begin_type begin_name element end_name end_type begin_name element end_name end_decl end_param begin_param begin_decl begin_type begin_name writer end_name end_type begin_name out end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name indent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name indent with end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name open element end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name indent end_name end_expr end_argument begin_argument begin_expr begin_name indent with end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the initial size of the memory for the underlying vm if javac is run externally ignored otherwise defaults to the standard vm memory setting examples 83886080 81920 k or 80 m param memory initial size string to pass to vm end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set memory initial size end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name memory initial size end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name memory initial size end_name end_name begin_operator EQ end_operator begin_name memory initial size end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has next end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name done end_name end_expr end_return end_block 
 begin_comment returns the name to use in logging messages return the name to use in logging messages end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get task name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name task name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the enumerated strings end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name normal end_name end_expr begin_operator UNP end_operator begin_expr begin_name row end_name end_expr end_block end_expr end_return end_block 
 begin_comment gets the list of allowable values return the values end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name time current end_name end_expr begin_operator UNP end_operator begin_expr begin_name time modified end_name end_expr begin_operator UNP end_operator begin_expr begin_name time updated end_name end_expr end_block end_expr end_return end_block 
 begin_comment write a project level message to the log with the given log level param message the text to log should not be code null code param msg level the log priority level to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name msg level end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name msg level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the unmodified original object this method should be called internally to get the quot real quot object the normal get method will do the replacement of unknown element this is similar with the jdni refs behavior end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name get real end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name key end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment process a line while in date state param line the line to process end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process date end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment the date format is using a format since 1 12 9 so we have end_comment begin_comment 1 12 9 date yyyy mm dd hh mm ss author name end_comment begin_comment 1 12 9 date yyyy mm dd hh mm ss z author name end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name end of date index end_name begin_init begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name date end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name end of date index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name start of author index end_name begin_init begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name end of date index end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name end of author index end_name begin_init begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name start of author index end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name author end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_name start of author index end_name end_expr end_argument begin_argument begin_expr begin_name end of author index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name status end_name begin_operator EQ end_operator begin_name get comment end_name end_expr end_expr_stmt begin_comment reset comment to empty here as we can accumulate multiple lines end_comment begin_comment in the process comment method end_comment begin_expr_stmt begin_expr begin_name comment end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment runs the testcase throws build exception in case of test failures or errors since ant 1 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name my loader end_name begin_init begin_expr begin_call begin_name begin_name j unit task end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get class loader end_name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name mirror loader end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name split junit end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name path end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name ant runtime classes end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get commandline end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get classpath end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name mirror loader end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name split loader end_name begin_argument_list begin_argument begin_expr begin_name my loader end_name end_expr end_argument begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name mirror loader end_name begin_operator EQ end_operator begin_name my loader end_name end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name delegate end_name begin_operator EQ end_operator begin_call begin_name create mirror end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name mirror loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name test lists end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name fork per test end_name begin_init begin_expr begin_call begin_name begin_name fork mode end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name fork mode end_name begin_operator DOT end_operator begin_name per test end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name fork per test end_name begin_operator UNP end_operator begin_call begin_name begin_name fork mode end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name fork mode end_name begin_operator DOT end_operator begin_name once end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name test lists end_name begin_operator DOT end_operator begin_name add all end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name execute or queue end_name begin_argument_list begin_argument begin_expr begin_call begin_name get individual tests end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name fork per test end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment fork mode get value equals fork mode per batch end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name count end_name begin_init begin_expr begin_call begin_name begin_name batch tests end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name count end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name batch test end_name end_type begin_name batchtest end_name begin_init begin_expr begin_operator LPAR end_operator begin_name batch test end_name begin_operator RPAR end_operator begin_call begin_name begin_name batch tests end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test lists end_name begin_operator DOT end_operator begin_name add all end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name execute or queue end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name batchtest end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name test lists end_name begin_operator DOT end_operator begin_name add all end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name execute or queue end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name fork per test end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name test lists end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name l end_name begin_init begin_expr begin_operator LPAR end_operator begin_name list end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name l end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name execute end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name j unit test end_name begin_operator RPAR end_operator begin_call begin_name begin_name l end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name execute end_name begin_argument_list begin_argument begin_expr begin_name l end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_while end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name delete class loader end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name mirror loader end_name begin_operator UNP end_operator begin_name split loader end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name split loader end_name begin_operator RPAR end_operator begin_name mirror loader end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name cleanup end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name delegate end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_type begin_name void end_name end_type begin_name raw print end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name len end_name begin_init begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name len end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name raw write end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name message logged end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment see build logger set error print stream print stream end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set error print stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name err end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set output print stream end_name begin_argument_list begin_argument begin_expr begin_name err end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructs an exception with the given descriptive message param msg description of or information about the exception end_comment begin_specifier end_specifier begin_name manifest exception end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment overrides the super version param r the reference to set end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set refid end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_comment not using the accessor in this case to avoid side effects end_comment begin_if begin_condition begin_expr begin_name url end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
