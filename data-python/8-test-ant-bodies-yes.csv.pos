 begin_comment verify the produced jar file by invoking the borland verify tool param source jar java io file representing the produced jar file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name verify borland jar v 4 end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name source jar end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name tools end_name begin_operator DOT end_operator begin_name ant end_name begin_operator DOT end_operator begin_name taskdefs end_name begin_operator DOT end_operator begin_name java end_name end_name end_type begin_name java task end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name source jar end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name args end_name begin_init begin_expr begin_name verify args end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name args end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_call begin_name begin_name source jar end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name java task end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name java end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java task end_name begin_operator DOT end_operator begin_name set task name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java task end_name begin_operator DOT end_operator begin_name set classname end_name end_name begin_argument_list begin_argument begin_expr begin_name verify end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name argument end_name end_name end_type begin_name arguments end_name begin_init begin_expr begin_call begin_name begin_name java task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name set line end_name end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name begin_init begin_expr begin_call begin_name get combined classpath end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name classpath end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name java task end_name begin_operator DOT end_operator begin_name set classpath end_name end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java task end_name begin_operator DOT end_operator begin_name set fork end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name verify end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name source jar end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java task end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_name verify end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment experimental will change end_comment begin_comment public hashtable get processed files end_comment begin_comment return processed files end_comment begin_comment end_comment begin_comment experimental will change import stack used to keep track of imported files error reporting should display the import path return the stack of import source objects end_comment begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name get import stack end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name import stack end_name end_expr end_return end_block 
 begin_comment return null if jar file doesn t contain a manifest the manifest otherwise since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_name manifest end_name end_type begin_name get manifest from jar end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name jar file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name zip file end_name end_type begin_name zf end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name zf end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name zip file end_name begin_argument_list begin_argument begin_expr begin_name jar file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment must not use get entry as well behaving applications end_comment begin_comment must accept the manifest in any capitalization end_comment begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name zf end_name begin_operator DOT end_operator begin_name entries end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name zip entry end_name end_type begin_name ze end_name begin_init begin_expr begin_operator LPAR end_operator begin_name zip entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name manifest name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name input stream reader end_name end_type begin_name isr end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zf end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list begin_argument begin_expr begin_name ze end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name get manifest end_name begin_argument_list begin_argument begin_expr begin_name isr end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if end_block end_while begin_return begin_expr end_expr end_return end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name zf end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name zf end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try end_block end_then end_if end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name parse emacs output end_name begin_parameter_list begin_param begin_decl begin_type begin_name buffered reader end_name end_type begin_name reader end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name parse standard output end_name begin_argument_list begin_argument begin_expr begin_name reader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment implement the user info interface noop param message ignored end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name show message end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param end_parameter_list begin_block begin_comment log message project msg debug end_comment end_block 
 begin_comment does this string match the xml nmtoken production param s the string to test return true if the string matches the xml nmtoken end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is nmtoken end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name length end_name begin_init begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name length end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is letter or digit end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name c end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name c end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name c end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name c end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_comment do the classloader manipulation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_comment gump friendly don t mess with the core loader if only classpath end_comment begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_name name end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name system loader ref end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name loader name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name name end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_name system loader ref end_name begin_operator DP end_operator begin_name name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name obj end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr begin_name loader name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name reset end_name end_expr end_condition begin_then begin_block begin_comment are any other references held can we close the loader end_comment begin_comment so it removes the locks on jars end_comment begin_expr_stmt begin_expr begin_name obj end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment a new one will be created end_comment end_block end_then end_if begin_if begin_condition begin_expr begin_name obj end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name obj end_name begin_operator UNP end_operator begin_name ant class loader end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name ant class loader end_name end_type begin_name acl end_name begin_init begin_expr begin_operator LPAR end_operator begin_name ant class loader end_name begin_operator RPAR end_operator begin_name obj end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name acl end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment construct a new class loader end_comment begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name parent end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name parent name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parent end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr begin_name parent name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name parent end_name begin_operator UNP end_operator begin_name class loader end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parent end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name parent end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parent end_name begin_operator EQ end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class loader end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment the core loader must be reverse end_comment begin_comment reverse true end_comment end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name parent end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name parent first end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment the param is parent first end_comment begin_expr_stmt begin_expr begin_name acl end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name ant class loader end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name class loader end_name begin_operator RPAR end_operator begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name classpath end_name end_expr end_argument begin_argument begin_expr begin_name parent first end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add reference end_name begin_argument_list begin_argument begin_expr begin_name loader name end_name end_expr end_argument begin_argument begin_expr begin_name acl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment this allows the core loader to load optional tasks end_comment begin_comment without delegating end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name acl end_name begin_operator DOT end_operator begin_name add loader package root end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set core loader end_name begin_argument_list begin_argument begin_expr begin_name acl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name classpath end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name list end_name begin_init begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name list end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name list end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name acl end_name begin_operator DOT end_operator begin_name add path element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name acl end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
