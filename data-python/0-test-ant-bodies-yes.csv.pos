 begin_comment concatenates a class path in the order specified by the build sysclasspath property using the supplied value if build sysclasspath has not been set end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name concat special path end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name def value end_name end_decl end_param begin_param begin_decl begin_type begin_name path end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name order end_name begin_init begin_expr begin_name def value end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name order end_name begin_operator EQ end_operator begin_name o end_name end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name order end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add existing end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name order end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add existing end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add existing end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name order end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment ignore don t trust anyone end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add existing end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment last don t trust the developer end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name order end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name order end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add existing end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add existing end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_else end_if begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment find a project component for a specific project creating it if it does not exist param project the project return the project component for a specific project end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name component helper end_name end_type begin_name get component helper end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name project end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name component helper end_name end_type begin_name ph end_name begin_init begin_expr begin_operator LPAR end_operator begin_name component helper end_name begin_operator RPAR end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get reference end_name end_name begin_argument_list begin_argument begin_expr begin_name component helper reference end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ph end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name ph end_name end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name ph end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name component helper end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ph end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr begin_name component helper reference end_name end_expr end_argument begin_argument begin_expr begin_name ph end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name ph end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name manifest end_name end_type begin_name get manifest end_name begin_parameter_list begin_param begin_decl begin_type begin_name reader end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name manifest end_name end_type begin_name new manifest end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name new manifest end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name manifest end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name manifest exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name manifest file end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_return begin_expr begin_name new manifest end_name end_expr end_return end_block 
 begin_comment execute the task by forking a new jvm the command will block until it finishes to know if the process was destroyed or not use the tt killed process tt method of the watchdog class param commandline the commandline for forked jvm param watchdog the watchdog in charge of cancelling the test if it exceeds a certain amount of time can be tt null tt return the result of running the jdepend throws build exception in case of error end_comment begin_comment jl comment extracted from j unit task and slightly modified end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name execute as forked end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline java end_name end_type begin_name commandline end_name end_decl end_param begin_param begin_decl begin_type begin_name execute watchdog end_name end_type begin_name watchdog end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name runtime classes end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add classpath entry end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment if not set auto create the class path from the project end_comment begin_expr_stmt begin_expr begin_call begin_name create classpath end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment not sure whether this test is needed but cost nothing to put end_comment begin_comment hope it will be reviewed by anybody competent end_comment begin_if begin_condition begin_expr begin_call begin_name get classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name create jvmarg end_name begin_argument_list begin_argument begin_expr begin_name commandline end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name create jvmarg end_name begin_argument_list begin_argument begin_expr begin_name commandline end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name include runtime end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name v end_name begin_init begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name get proc environment end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name s end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create classpath end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create path end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name runtime classes end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create classpath end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create path end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name runtime classes end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get output file end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment having a space between the file and its path causes commandline end_comment begin_comment to add quotes around the argument thus making j depend not taking end_comment begin_comment it into account thus we split it in two end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name output file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get sourcespath end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s p end_name begin_init begin_expr begin_call begin_name get sourcespath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name s p end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name s p end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment not necessary as j depend would fail but why loose end_comment begin_comment some time end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get classespath end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment this is the new way use classespath code is the end_comment begin_comment same for now end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name c p end_name begin_init begin_expr begin_call begin_name get classespath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name c p end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name c p end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment not necessary as j depend would fail but why loose end_comment begin_comment some time end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name execute end_name end_type begin_name execute end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name execute end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name log stream handler end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name watchdog end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name set commandline end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get dir end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name set working directory end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get dir end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name set ant run end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get output file end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get output file end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name describe command end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_return begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment make sure every property loaded from the goldfile was also read from the xml property we could try and test the other way but some other properties may get set in the xml property due to generic project task configuration end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name ensure properties end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name input file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name working dir end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name properties end_name end_type begin_name properties end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name xmlproperties end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get properties end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment every key identified by the properties must have been loaded end_comment begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name property key enum end_name begin_init begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name property names end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name property key enum end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name current key end_name begin_init begin_expr begin_call begin_name begin_name property key enum end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name assert msg end_name begin_init begin_expr begin_name msg end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name input file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name current key end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name property value end_name begin_init begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name current key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name xml value end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name xmlproperties end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name current key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name property value end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment the property is an id s thing either a property end_comment begin_comment or a path we need to make sure end_comment begin_comment that the object was created with the given id end_comment begin_comment we don t have an adequate way of testing the actual end_comment begin_comment value of the path object though end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name id end_name begin_init begin_expr begin_name current key end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name obj end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get references end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get end_name begin_argument_list begin_argument begin_expr begin_name id end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name obj end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_name assert msg end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name property value end_name begin_operator EQ end_operator begin_call begin_name begin_name property value end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name property value end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name property value end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name obj end_name begin_operator UNP end_operator begin_name path end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_name assert msg end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name obj end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name assert msg end_name end_expr end_argument begin_argument begin_expr begin_name property value end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name obj end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name property value end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment the property is the name of a file we are testing end_comment begin_comment a location attribute so we need to resolve the given end_comment begin_comment file name in the provided folder end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file name end_name begin_init begin_expr begin_call begin_name begin_name property value end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name property value end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name working dir end_name end_expr end_argument begin_argument begin_expr begin_name file name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name property value end_name begin_operator EQ end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name assert msg end_name end_expr end_argument begin_argument begin_expr begin_name property value end_name end_expr end_argument begin_argument begin_expr begin_name xml value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_while end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get file string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file reader end_name end_type begin_name reader end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name reader end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file reader end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name read fully end_name end_name begin_argument_list begin_argument begin_expr begin_name reader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name eye oh ex end_name end_decl end_param end_parameter_list begin_block end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name reader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment execute the task by forking a new jvm the command will block until it finishes to know if the process was destroyed or not use the tt killed process tt method of the watchdog class param commandline the commandline for forked jvm param watchdog the watchdog in charge of cancelling the test if it exceeds a certain amount of time can be tt null tt return the result of running the jdepend throws build exception in case of error end_comment begin_comment jl comment extracted from j unit task and slightly modified end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name execute as forked end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline java end_name end_type begin_name commandline end_name end_decl end_param begin_param begin_decl begin_type begin_name execute watchdog end_name end_type begin_name watchdog end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name runtime classes end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add classpath entry end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment if not set auto create the class path from the project end_comment begin_expr_stmt begin_expr begin_call begin_name create classpath end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment not sure whether this test is needed but cost nothing to put end_comment begin_comment hope it will be reviewed by anybody competent end_comment begin_if begin_condition begin_expr begin_call begin_name get classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name create jvmarg end_name begin_argument_list begin_argument begin_expr begin_name commandline end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name create jvmarg end_name begin_argument_list begin_argument begin_expr begin_name commandline end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name include runtime end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name v end_name begin_init begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name get proc environment end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name s end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create classpath end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create path end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name runtime classes end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create classpath end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create path end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name runtime classes end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get output file end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment having a space between the file and its path causes commandline end_comment begin_comment to add quotes around the argument thus making j depend not taking end_comment begin_comment it into account thus we split it in two end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name output file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get sourcespath end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s p end_name begin_init begin_expr begin_call begin_name get sourcespath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name s p end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name s p end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment not necessary as j depend would fail but why loose end_comment begin_comment some time end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get classespath end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment this is the new way use classespath code is the end_comment begin_comment same for now end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name c p end_name begin_init begin_expr begin_call begin_name get classespath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name c p end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name c p end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment not necessary as j depend would fail but why loose end_comment begin_comment some time end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name execute end_name end_type begin_name execute end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name execute end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name log stream handler end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name watchdog end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name set commandline end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get dir end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name set working directory end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get dir end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name set ant run end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get output file end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get output file end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name describe command end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_return begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
